Run started:2024-02-10 20:20:33.681357

Test results:
>> Issue: [B506:yaml_load] Use of unsafe yaml load. Allows instantiation of arbitrary objects. Consider yaml.safe_load().
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b506_yaml_load.html
   Location: .\config.py:7:17
6	        f =open('config.main.yaml')
7	        config = yaml.load(f.read())
8	        self.data = config

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\mod_calc\__init__.py:37:31
36	            try:
37	                result = float(eval(formel))
38	            except:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\mod_calc\__init__.py:50:67
49	            formel = re.sub('([a-zA-Z]|\,|\$|\`|\!|\@|\#|\$|\&|\{|\}|\[|\]|\~|\?|\<|\>|\|)',"",formel)
50	            filename = os.path.join(os.path.dirname(__file__), str(random.random())).replace(u'\\','/')
51	            f = open(filename, 'w')

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html
   Location: .\mod_calc\__init__.py:55:21
54	            f.close()
55	            result = getstatusoutput("bc --quiet --mathlib -- %s" % filename)
56	            os.unlink(filename)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\mod_fun\__init__.py:74:37
73	    def aendern(self, name, amount, item):
74	        keks = self.DBcursor.execute(u"SELECT nickname, count from kekse WHERE nickname like '%s' AND item =='%s' LIMIT 1" % (name, item)).fetchall()
75	        if(len(keks)>0 and len(keks[0]) > 1):

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\mod_fun\__init__.py:109:41
108	        elif len(params.args) == 0:
109	            keks = self.DBcursor.execute(u"SELECT `nickname`, `count` from kekse WHERE item=='%s' AND `count`>=1 ORDER BY `count` DESC LIMIT 10" % (name)).fetchall()
110	            if len(keks) <= 0:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\mod_nicknames\__init__.py:38:24
37	            csr = conn.cursor()
38	            csr.execute("select nickname from user where vorname LIKE '%"+params.args[0]+"%'")
39	            result = csr.fetchall()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\mod_nicknames\__init__.py:55:24
54	            csr = conn.cursor()
55	            csr.execute("select vorname from user where nickname LIKE '%"+params.args[0]+"%'")
56	            result = csr.fetchall()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\mod_nicknames\__init__.py:72:24
71	            csr = conn.cursor()
72	            csr.execute("select id from user where ((nickname LIKE '%"+params.args[0]+"%') AND (nickname LIKE '%"+params.args[1]+"%') AND (channel LIKE '%"+params.channel+"%'))")
73	            if csr.fetchall() > 0:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\mod_triggers\__init__.py:40:18
39	        try:
40	            sql = u"SELECT reaction FROM command_triggers where id = %s AND last_run <= datetime('now', '%s')" % (trigger_id, self.config['trigger_time'])
41	            trigger = self.DBcursor.execute(sql).fetchone()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\mod_triggers\__init__.py:70:30
69	    def update_last_run(self, trigger_id):
70	        self.DBcursor.execute(u"UPDATE command_triggers SET last_run = datetime('now') where id = %s" % trigger_id)
71	        self.DBconn.commit()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\mod_triggers\__init__.py:105:44
104	        if(len(params.args)>=1):
105	            trigger = self.DBcursor.execute(u"SELECT id, reaction, trigger, last_run from command_triggers WHERE trigger like '%"+params.follow+"%' or reaction like '%"+params.follow+"%' ORDER BY Random() LIMIT 1").fetchall()
106	            if(len(trigger)>0):

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\system\__init__.py:72:36
71	            try:
72	                msg = '[Eval] %s' % eval(params.follow,{"__builtins__":None},vars(math))
73	                self.parent.print_notice('eval("%s") erfolgreich ausgeführt' % params.follow)

--------------------------------------------------

Code scanned:
	Total lines of code: 1235
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 1
		Medium: 11
		High: 1
	Total issues (by confidence):
		Undefined: 0
		Low: 1
		Medium: 7
		High: 5
Files skipped (7):
	.\export_rss\__init__.py (syntax error while parsing AST from file)
	.\export_web\__init__.py (syntax error while parsing AST from file)
	.\facts\__init__.py (syntax error while parsing AST from file)
	.\generateFactRels.py (syntax error while parsing AST from file)
	.\mod_ddate\__init__.py (syntax error while parsing AST from file)
	.\mod_ddate\ddate.py (syntax error while parsing AST from file)
	.\pyChao.py (syntax error while parsing AST from file)
