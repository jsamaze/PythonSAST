Working... ---------------------------------------- 100% 0:00:03
Run started:2024-02-10 21:07:19.134732

Test results:
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\examples\user_location.py:47:12
46	        print("Using freegeoip.net to get geolocation.")
47	        r = requests.get('http://freegeoip.net/json/')
48	        try:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\setup.py:12:0
11	from pathlib import Path
12	from subprocess import call, DEVNULL, check_output, CalledProcessError
13	from tempfile import TemporaryFile

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\setup.py:41:17
40	    try:
41	        cflags = check_output(command).decode('utf-8').split()
42	    except FileNotFoundError:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\setup.py:53:19
52	        try:
53	            return call(command, stdin=c_file, stdout=DEVNULL, stderr=DEVNULL) == 0
54	        except FileNotFoundError:

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\slixmpp\componentxmpp.py:133:25
132	        handshake = ET.Element('{jabber:component:accept}handshake')
133	        handshake.text = hashlib.sha1(pre_hash).hexdigest().lower()
134	        self.send_xml(handshake)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\slixmpp\jid.py:427:8
426	        node, domain, resource = _parse_jid(value)
427	        assert not resource
428	        self._node = node

--------------------------------------------------
>> Issue: [B405:blacklist] Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b405-import-xml-etree
   Location: .\slixmpp\plugins\xep_0009\stanza\RPC.py:10:0
9	from slixmpp.xmlstream.stanzabase import ElementBase
10	from xml.etree import cElementTree as ET
11	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\slixmpp\plugins\xep_0045.py:237:4
236	
237	    def join_muc(self, room, nick, maxhistory="0", password='', wait=False, pstatus=None, pshow=None, pfrom=None):
238	        """ Join the specified room, requesting 'maxhistory' lines of history.
239	        """
240	        stanza = self.xmpp.make_presence(pto="%s/%s" % (room, nick), pstatus=pstatus, pshow=pshow, pfrom=pfrom)
241	        x = ET.Element('{http://jabber.org/protocol/muc}x')
242	        if password:
243	            passelement = ET.Element('{http://jabber.org/protocol/muc}password')
244	            passelement.text = password
245	            x.append(passelement)
246	        if maxhistory:
247	            history = ET.Element('{http://jabber.org/protocol/muc}history')
248	            if maxhistory ==  "0":
249	                history.attrib['maxchars'] = maxhistory
250	            else:
251	                history.attrib['maxstanzas'] = maxhistory
252	            x.append(history)
253	        stanza.append(x)
254	        if not wait:
255	            self.xmpp.send(stanza)
256	        else:
257	            #wait for our own room presence back
258	            expect = ET.Element("{%s}presence" % self.xmpp.default_ns, {'from':"%s/%s" % (room, nick)})
259	            self.xmpp.send(stanza, expect)
260	        self.rooms[room] = {}
261	        self.our_nicks[room] = nick
262	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\slixmpp\plugins\xep_0078\legacyauth.py:109:21
108	
109	            digest = hashlib.sha1(b'%s%s' % (stream_id, password)).hexdigest()
110	            iq['auth']['digest'] = digest

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\slixmpp\plugins\xep_0084\avatar.py:45:15
44	    def generate_id(self, data):
45	        return hashlib.sha1(data).hexdigest()
46	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\slixmpp\plugins\xep_0138.py:82:8
81	        sentactuallen = self.__socket.send(data)
82	        assert(sentactuallen == len(data))
83	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\slixmpp\plugins\xep_0153\vcard_avatar.py:109:27
108	            else:
109	                new_hash = hashlib.sha1(data).hexdigest()
110	            self.api['set_hash'](self.xmpp.boundjid, args=new_hash)

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\slixmpp\plugins\xep_0153\vcard_avatar.py:145:27
144	            else:
145	                new_hash = hashlib.sha1(data).hexdigest()
146	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\slixmpp\plugins\xep_0153\vcard_avatar.py:158:8
157	                return
158	        except: pass
159	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\slixmpp\plugins\xep_0231\bob.py:73:43
72	        if cid is None:
73	            cid = 'sha1+%s@bob.xmpp.org' % hashlib.sha1(data).hexdigest()
74	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\slixmpp\test\livesocket.py:67:8
66	            self.socket.close()
67	        except:
68	            pass
69	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\slixmpp\test\slixtest.py:295:4
294	
295	    def stream_start(self, mode='client', skip=True, header=None,
296	                           socket='mock', jid='tester@localhost/resource',
297	                           password='test', server='localhost',
298	                           port=5222, sasl_mech=None,
299	                           plugins=None, plugin_config={}):
300	        """
301	        Initialize an XMPP client or component using a dummy XML stream.
302	
303	        Arguments:
304	            mode     -- Either 'client' or 'component'. Defaults to 'client'.
305	            skip     -- Indicates if the first item in the sent queue (the
306	                        stream header) should be removed. Tests that wish
307	                        to test initializing the stream should set this to
308	                        False. Otherwise, the default of True should be used.
309	            socket   -- Either 'mock' or 'live' to indicate if the socket
310	                        should be a dummy, mock socket or a live, functioning
311	                        socket. Defaults to 'mock'.
312	            jid      -- The JID to use for the connection.
313	                        Defaults to 'tester@localhost/resource'.
314	            password -- The password to use for the connection.
315	                        Defaults to 'test'.
316	            server   -- The name of the XMPP server. Defaults to 'localhost'.
317	            port     -- The port to use when connecting to the server.
318	                        Defaults to 5222.
319	            plugins  -- List of plugins to register. By default, all plugins
320	                        are loaded.
321	        """
322	        if not plugin_config:
323	            plugin_config = {}
324	
325	        if mode == 'client':
326	            self.xmpp = ClientXMPP(jid, password,
327	                                   sasl_mech=sasl_mech,
328	                                   plugin_config=plugin_config)
329	        elif mode == 'component':
330	            self.xmpp = ComponentXMPP(jid, password,
331	                                      server, port,
332	                                      plugin_config=plugin_config)
333	        else:
334	            raise ValueError("Unknown XMPP connection mode.")
335	
336	        self.xmpp.connection_made(TestTransport(self.xmpp))
337	        self.xmpp.session_bind_event.set()
338	        # Remove unique ID prefix to make it easier to test
339	        self.xmpp._id_prefix = ''
340	        self.xmpp.default_lang = None
341	        self.xmpp.peer_default_lang = None
342	
343	        # Must have the stream header ready for xmpp.process() to work.
344	        if not header:
345	            header = self.xmpp.stream_header
346	
347	        self.xmpp.data_received(header)
348	
349	        if skip:
350	            self.xmpp.socket.next_sent()
351	            if mode == 'component':
352	                self.xmpp.socket.next_sent()
353	
354	
355	        if plugins is None:
356	            self.xmpp.register_plugins()
357	        else:
358	            for plugin in plugins:
359	                self.xmpp.register_plugin(plugin)
360	
361	        # Some plugins require messages to have ID values. Set
362	        # this to True in tests related to those plugins.
363	        self.xmpp.use_message_ids = False
364	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\slixmpp\thirdparty\gnupg.py:50:0
49	import socket
50	from subprocess import Popen
51	from subprocess import PIPE

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\slixmpp\thirdparty\gnupg.py:51:0
50	from subprocess import Popen
51	from subprocess import PIPE
52	import sys

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\slixmpp\thirdparty\gnupg.py:516:15
515	        logger.debug("%s", cmd)
516	        return Popen(cmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE)
517	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\slixmpp\util\sasl\mechanisms.py:250:36
249	
250	        self.cnonce = bytes(('%s' % random.random())[2:])
251	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\slixmpp\util\sasl\mechanisms.py:494:39
493	            self.nonce_count = 1
494	            self.cnonce = bytes('%s' % random.random())[2:]
495	            self.qops = data.get('qop', [b'auth'])

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\slixmpp\xmlstream\resolver.py:303:23
302	
303	            selected = random.randint(0, running_sum + 1)
304	            for running_sum in sums:

--------------------------------------------------
>> Issue: [B405:blacklist] Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b405-import-xml-etree
   Location: .\slixmpp\xmlstream\stanzabase.py:20:0
19	import weakref
20	from xml.etree import cElementTree as ET
21	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'user'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\live_multiple_streams.py:25:8
24	
25	        client1.stream_start(mode='client',
26	                             socket='live',
27	                             skip=True,
28	                             jid='user@localhost/test1',
29	                             password='user')
30	        client2.stream_start(mode='client',

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'user'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\live_multiple_streams.py:30:8
29	                             password='user')
30	        client2.stream_start(mode='client',
31	                             socket='live',
32	                             skip=True,
33	                             jid='user@localhost/test2',
34	                             password='user')
35	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'user'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\live_test.py:16:8
15	        """Test that we can interact with a live ClientXMPP instance."""
16	        self.stream_start(mode='client',
17	                          socket='live',
18	                          skip=False,
19	                          jid='user@localhost/test',
20	                          password='user')
21	

--------------------------------------------------

Code scanned:
	Total lines of code: 40839
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 19
		Medium: 1
		High: 7
	Total issues (by confidence):
		Undefined: 0
		Low: 1
		Medium: 5
		High: 21
Files skipped (6):
	.\examples\rpc_async.py (syntax error while parsing AST from file)
	.\slixmpp\plugins\xep_0009\remote.py (syntax error while parsing AST from file)
	.\slixmpp\plugins\xep_0065\proxy.py (syntax error while parsing AST from file)
	.\slixmpp\plugins\xep_0163.py (syntax error while parsing AST from file)
	.\slixmpp\xmlstream\handler\coroutine_callback.py (syntax error while parsing AST from file)
	.\slixmpp\xmlstream\xmlstream.py (syntax error while parsing AST from file)
