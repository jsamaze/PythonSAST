Run started:2024-02-10 21:17:51.130736

Test results:
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\example\login.py:12:13
11	app_id = ''
12	app_secret = ''
13	wx_login = WeixinLogin(app_id, app_secret)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\weixin\login.py:45:8
44	        url = "https://open.weixin.qq.com/connect/oauth2/authorize"
45	        assert scope in ["snsapi_base", "snsapi_userinfo"]
46	        data = dict()

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\weixin\mp.py:158:23
157	        char = string.ascii_letters + string.digits
158	        return "".join(random.choice(char) for _ in range(32))
159	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\weixin\mp.py:171:15
170	        s = "&".join("=".join(kv) for kv in raw if kv[1])
171	        sign = hashlib.sha1(s.encode("utf-8")).hexdigest().lower()
172	        return Map(sign=sign, timestamp=timestamp, noncestr=nonce_str, appId=self.app_id)

--------------------------------------------------
>> Issue: [B410:blacklist] Using etree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace etree with the equivalent defusedxml package.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b410-import-lxml
   Location: .\weixin\msg.py:24:4
23	try:
24	    from lxml import etree
25	except ImportError:

--------------------------------------------------
>> Issue: [B405:blacklist] Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b405-import-xml-etree
   Location: .\weixin\msg.py:26:4
25	except ImportError:
26	    from xml.etree import cElementTree as etree
27	except ImportError:

--------------------------------------------------
>> Issue: [B405:blacklist] Using ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b405-import-xml-etree
   Location: .\weixin\msg.py:28:4
27	except ImportError:
28	    from xml.etree import ElementTree as etree
29	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\weixin\msg.py:62:14
61	        s = ''.join(sorted(values))
62	        hsh = hashlib.sha1(s.encode("utf-8")).hexdigest()
63	        return signature == hsh

--------------------------------------------------
>> Issue: [B314:blacklist] Using xml.etree.ElementTree.fromstring to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.fromstring with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree
   Location: .\weixin\msg.py:67:15
66	        raw = {}
67	        root = etree.fromstring(content)
68	        for child in root:

--------------------------------------------------
>> Issue: [B410:blacklist] Using etree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace etree with the equivalent defusedxml package.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b410-import-lxml
   Location: .\weixin\pay.py:20:4
19	try:
20	    from lxml import etree
21	except ImportError:

--------------------------------------------------
>> Issue: [B405:blacklist] Using cElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace cElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b405-import-xml-etree
   Location: .\weixin\pay.py:22:4
21	except ImportError:
22	    from xml.etree import cElementTree as etree
23	except ImportError:

--------------------------------------------------
>> Issue: [B405:blacklist] Using ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b405-import-xml-etree
   Location: .\weixin\pay.py:24:4
23	except ImportError:
24	    from xml.etree import ElementTree as etree
25	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\weixin\pay.py:60:23
59	        char = string.ascii_letters + string.digits
60	        return "".join(random.choice(char) for _ in range(32))
61	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\weixin\pay.py:67:15
66	        s += "&key={0}".format(self.mch_key)
67	        return hashlib.md5(s.encode("utf-8")).hexdigest().upper()
68	

--------------------------------------------------
>> Issue: [B314:blacklist] Using xml.etree.ElementTree.fromstring to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.fromstring with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree
   Location: .\weixin\pay.py:82:15
81	        raw = {}
82	        root = etree.fromstring(content.encode("utf-8"))
83	        for child in root:

--------------------------------------------------

Code scanned:
	Total lines of code: 1232
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 10
		Medium: 2
		High: 3
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 1
		High: 14
Files skipped (2):
	.\example\mp.py (syntax error while parsing AST from file)
	.\example\msg.py (syntax error while parsing AST from file)
