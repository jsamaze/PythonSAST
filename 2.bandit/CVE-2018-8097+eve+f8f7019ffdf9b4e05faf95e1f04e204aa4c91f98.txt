Working... ---------------------------------------- 100% 0:00:02
Run started:2024-02-10 21:20:08.423126

Test results:
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\eve\io\mongo\media.py:84:8
83	            _file = self.fs(resource).get(_id)
84	        except:
85	            pass
86	        return _file

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\eve\io\mongo\mongo.py:724:16
723	                    del filter_[config.LAST_UPDATED]
724	                except:
725	                    pass
726	                return coll.find(filter_).count() == 0

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\eve\io\mongo\parser.py:134:37
133	            if expr:
134	                self.current_value = eval(node.func.id + expr)
135	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\eve\methods\common.py:136:4
135	        document = serialize(document, resource)
136	    except:
137	        pass
138	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\eve\methods\common.py:1016:12
1015	                del(document[auth_field])
1016	            except:
1017	                # 'auth_field' value has not been set by the auth class.
1018	                pass
1019	    return document

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\eve\tests\__init__.py:451:24
450	                'prog': i,
451	                'role': random.choice(schema['role']['allowed']),
452	                'rows': self.random_rows(random.randint(0, 5)),

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\eve\tests\__init__.py:452:41
451	                'role': random.choice(schema['role']['allowed']),
452	                'rows': self.random_rows(random.randint(0, 5)),
453	                'alist': self.random_list(random.randint(0, 5)),

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\eve\tests\__init__.py:453:42
452	                'rows': self.random_rows(random.randint(0, 5)),
453	                'alist': self.random_list(random.randint(0, 5)),
454	                'location': {

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\eve\tests\__init__.py:459:25
458	                'born': datetime.today() + timedelta(
459	                    days=random.randint(-10, 10)),
460	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\eve\tests\__init__.py:510:34
509	                    'title': ("Hypercube " + self.random_string(2) +
510	                              str(random.randint(100, 1000)))
511	                }

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\eve\tests\__init__.py:516:24
515	    def random_string(self, num):
516	        return (''.join(random.choice(string.ascii_uppercase)
517	                        for x in range(num)))

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\eve\tests\__init__.py:522:45
521	        for i in range(num):
522	            alist.append(['string' + str(i), random.randint(1000, 9999)])
523	        return alist

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\eve\tests\__init__.py:532:29
531	                    'sku': self.random_string(schema['sku']['maxlength']),
532	                    'price': random.randint(100, 1000),
533	                }

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\eve\tests\auth.py:21:60
20	        self.set_request_auth_value(self.request_auth_value)
21	        return username in ('admin', 'alt') and password == 'secret' and  \
22	            ('admin' in allowed_roles if allowed_roles else True)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'test_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\eve\tests\auth.py:31:24
30	    def check_auth(self, token, allowed_roles, resource, method):
31	        return token == 'test_token' and ('admin' in allowed_roles if
32	                                          allowed_roles else True)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'bad_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\eve\tests\io\flask_pymongo.py:42:24
41	        self.app.config['MONGO1_USERNAME'] = 'bad_username'
42	        self.app.config['MONGO1_PASSWORD'] = 'bad_password'
43	        self.assertRaises(OperationFailure, self._pymongo_instance)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\eve\tests\methods\post.py:356:8
355	        self.assert200(status)
356	        assert isinstance(r["decimal_number"], str_type)
357	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'test_pw'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\eve\tests\test_settings.py:8:35
7	MONGO_USERNAME = MONGO1_USERNAME = 'test_user'
8	MONGO_PASSWORD = MONGO1_PASSWORD = 'test_pw'
9	MONGO_DBNAME, MONGO1_DBNAME = 'eve_test', 'eve_test1'

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\eve\tests\utils.py:172:29
171	        with self.app.test_request_context():
172	            self.assertEqual(hashlib.sha1(challenge).hexdigest(),
173	                             document_etag(test))

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\eve\tests\utils.py:181:29
180	        with self.app.test_request_context():
181	            self.assertEqual(hashlib.sha1(challenge).hexdigest(),
182	                             document_etag(test, ignore_fields))

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\eve\tests\utils.py:190:29
189	        with self.app.test_request_context():
190	            self.assertEqual(hashlib.sha1(challenge).hexdigest(),
191	                             document_etag(test, ignore_fields))

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\eve\tests\utils.py:199:29
198	        with self.app.test_request_context():
199	            self.assertEqual(hashlib.sha1(challenge).hexdigest(),
200	                             document_etag(test, ignore_fields))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\eve\tests\utils.py:293:8
292	    def __call__(self, *args):
293	        assert self.__check()
294	        # In some method the arguments are changed after the events

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\eve\utils.py:145:8
144	        r.max_results = int(float(args[config.QUERY_MAX_RESULTS]))
145	        assert r.max_results > 0
146	    except (ValueError, werkzeug.exceptions.BadRequestKeyError,

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\eve\utils.py:332:8
331	
332	    h = hashlib.sha1()
333	    json_encoder = app.data.json_encoder_class()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\eve\versioning.py:282:12
281	            version = int(version)
282	            assert version > 0
283	        except (ValueError, BadRequestKeyError, AssertionError):

--------------------------------------------------

Code scanned:
	Total lines of code: 16325
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 20
		Medium: 1
		High: 5
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 4
		High: 22
Files skipped (1):
	.\docs\conf.py (syntax error while parsing AST from file)
