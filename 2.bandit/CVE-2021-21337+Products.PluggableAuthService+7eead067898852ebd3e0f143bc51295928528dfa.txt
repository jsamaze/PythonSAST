Working... ---------------------------------------- 100% 0:00:02
Run started:2024-02-10 21:56:01.823699

Test results:
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\src\Products\PluggableAuthService\PluggableAuthService.py:951:12
950	                del container.__allow_groups__
951	            except:  # noqa
952	                pass
953	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\src\Products\PluggableAuthService\PluggableAuthService.py:1114:12
1113	                del resp._unauthorized
1114	            except:  # noqa
1115	                pass
1116	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\src\Products\PluggableAuthService\PluggableAuthService.py:1285:12
1284	                del self.resp._unauthorized
1285	            except:  # noqa
1286	                pass
1287	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\src\Products\PluggableAuthService\PluggableAuthService.py:1290:8
1289	            del self.resp
1290	        except:  # noqa
1291	            pass
1292	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\src\Products\PluggableAuthService\plugins\ZODBUserManager.py:359:8
358	        # Make sure we did not lose any users.
359	        assert(len(self._login_to_userid.keys())
360	               == len(new_login_to_userid.keys()))
361	        # Empty the main cache.

--------------------------------------------------
>> Issue: [B408:blacklist] Using parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parseString with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: .\src\Products\PluggableAuthService\plugins\exportimport.py:19:0
18	import sys
19	from xml.dom.minidom import parseString
20	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: .\src\Products\PluggableAuthService\plugins\exportimport.py:92:18
91	
92	            dom = parseString(data)
93	            root = dom.firstChild

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\src\Products\PluggableAuthService\plugins\exportimport.py:94:12
93	            root = dom.firstChild
94	            assert root.tagName == self._ROOT_TAGNAME
95	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'b:ar'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_CookieAuthHelper.py:102:18
101	        response = FauxCookieResponse()
102	        request = FauxSettableRequest(__ac_name='foo',
103	                                      __ac_password='b:ar',
104	                                      RESPONSE=response)
105	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bar'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_CookieAuthHelper.py:179:18
178	        response = FauxCookieResponse()
179	        request = FauxSettableRequest(__ac_name='foo', __ac_password='bar',
180	                                      RESPONSE=response)
181	        request.form['came_from'] = ''

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bar'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_InlineAuthHelper.py:80:18
79	        response = FauxInlineResponse()
80	        request = FauxSettableRequest(__ac_name='foo',
81	                                      __ac_password='bar',
82	                                      RESPONSE=response)
83	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ScriptablePlugin.py:42:8
41	            return IFaux
42	        assert name == 'IFauxTwo'
43	        return IFauxTwo

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'deadbeef'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBGroupManager.py:339:17
338	        # Works with a POST + CSRF token
339	        req.form['csrf_token'] = 'deadbeef'
340	        req.SESSION['_csrft_'] = 'deadbeef'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'deadbeef'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBGroupManager.py:366:17
365	        # Works with a POST + CSRF token
366	        req.form['csrf_token'] = 'deadbeef'
367	        req.SESSION['_csrft_'] = 'deadbeef'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'deadbeef'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBGroupManager.py:390:17
389	        # Works with a POST + CSRF token
390	        req.form['csrf_token'] = 'deadbeef'
391	        req.SESSION['_csrft_'] = 'deadbeef'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'deadbeef'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBRoleManager.py:511:17
510	
511	        req.form['csrf_token'] = 'deadbeef'
512	        req.SESSION['_csrft_'] = 'deadbeef'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'deadbeef'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBRoleManager.py:538:17
537	
538	        req.form['csrf_token'] = 'deadbeef'
539	        req.SESSION['_csrft_'] = 'deadbeef'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'deadbeef'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBRoleManager.py:563:17
562	
563	        req.form['csrf_token'] = 'deadbeef'
564	        req.SESSION['_csrft_'] = 'deadbeef'

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBUserManager.py:373:23
372	
373	        old_password = sha(b'old_password').hexdigest()
374	        zum._user_passwords['old_user'] = old_password

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBUserManager.py:527:19
526	        USER_ID = 'not_yet_encrypted'
527	        PASSWORD = 'password'
528	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBUserManager.py:544:19
543	        USER_ID = 'already_encrypted'
544	        PASSWORD = 'password'
545	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBUserManager.py:560:19
559	        USER_ID = 'not_yet_encrypted'
560	        PASSWORD = 'password'
561	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBUserManager.py:575:19
574	        USER_ID = 'already_encrypted'
575	        PASSWORD = 'password'
576	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'deadbeef'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBUserManager.py:616:17
615	        req.SESSION = {'_csrft_': 'deadbeef'}
616	        req.form['csrf_token'] = 'deadbeef'
617	        newSecurityManager(None, FauxUser('user1'))

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBUserManager.py:636:19
635	        USER_ID = 'testuser'
636	        PASSWORD = 'password'
637	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'deadbeef'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBUserManager.py:655:17
654	        # Works with a POST + CSRF toekn
655	        req.form['csrf_token'] = 'deadbeef'
656	        req.SESSION['_csrft_'] = 'deadbeef'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBUserManager.py:676:19
675	        USER_ID = 'testuser'
676	        PASSWORD = 'password'
677	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'deadbeef'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBUserManager.py:696:21
695	            # Works with a POST + CSRF toekn
696	            req.form['csrf_token'] = 'deadbeef'
697	            req.SESSION['_csrft_'] = 'deadbeef'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'deadbeef'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\plugins\tests\test_ZODBUserManager.py:720:17
719	
720	        req.form['csrf_token'] = 'deadbeef'
721	        req.SESSION['_csrft_'] = 'deadbeef'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\tests\test_MoreCaching.py:246:19
245	        user_id = 'test_user_2_'
246	        password = 'secret'
247	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\tests\test_MoreCaching.py:263:19
262	        user_id = 'test_user_2_'
263	        password = 'secret'
264	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\tests\test_MoreCaching.py:272:19
271	        user_id = 'test_user_2_'
272	        password = 'secret'
273	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\tests\test_MoreCaching.py:283:19
282	        user_id = 'test_user_2_'
283	        password = 'secret'
284	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\tests\test_MoreCaching.py:298:19
297	        user_id = 'test_user_2_'
298	        password = 'secret'
299	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\src\Products\PluggableAuthService\tests\test_UserFolder.py:212:8
211	
212	        assert tinyFolderOver.maxlistusers == 15
213	        assert tinyFolderUnder.maxlistusers == 15

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\src\Products\PluggableAuthService\tests\test_UserFolder.py:213:8
212	        assert tinyFolderOver.maxlistusers == 15
213	        assert tinyFolderUnder.maxlistusers == 15
214	        assert len(tinyFolderOver.user_names()) == 20

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\src\Products\PluggableAuthService\tests\test_UserFolder.py:214:8
213	        assert tinyFolderUnder.maxlistusers == 15
214	        assert len(tinyFolderOver.user_names()) == 20
215	        assert len(tinyFolderUnder.user_names()) == 10

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\src\Products\PluggableAuthService\tests\test_UserFolder.py:215:8
214	        assert len(tinyFolderOver.user_names()) == 20
215	        assert len(tinyFolderUnder.user_names()) == 10
216	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\tests\test_UserFolder.py:230:19
229	        USER_ID = 'not_yet_encrypted'
230	        PASSWORD = 'password'
231	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\tests\test_UserFolder.py:246:19
245	        USER_ID = 'already_encrypted'
246	        PASSWORD = 'password'
247	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\src\Products\PluggableAuthService\tests\test_events.py:98:4
97	
98	    def _makeOne(self, principal=None, password='password'):
99	        if principal is None:
100	            principal = DummyPrincipal()
101	        return self._getTargetClass()(principal, password)
102	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'deadbeef'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\tests\test_utils.py:164:21
163	        request = _makeRequestWSession()
164	        request.form['csrf_token'] = 'deadbeef'
165	        self.assertRaises(Forbidden, self._callFUT, request)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'deadbeef'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\tests\test_utils.py:169:21
168	        request = _makeRequestWSession()
169	        request.form['csrf_token'] = 'deadbeef'
170	        self.assertFalse(self._callFUT(request, raises=False))

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'bab3l0f'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\tests\test_utils.py:184:21
183	        request = _makeRequestWSession(_csrft_='deadbeef')
184	        request.form['csrf_token'] = 'bab3l0f'
185	        self.assertRaises(Forbidden, self._callFUT, request)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'bab3l0f'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\tests\test_utils.py:189:21
188	        request = _makeRequestWSession(_csrft_='deadbeef')
189	        request.form['csrf_token'] = 'bab3l0f'
190	        self.assertFalse(self._callFUT(request, raises=False))

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'deadbeef'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\tests\test_utils.py:194:21
193	        request = _makeRequestWSession(_csrft_='deadbeef')
194	        request.form['csrf_token'] = 'deadbeef'
195	        self.assertTrue(self._callFUT(request))

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'deadbeef'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\tests\test_utils.py:257:17
256	        req = _makeRequestWSession(_csrft_='deadbeef')
257	        req.form['csrf_token'] = 'deadbeef'
258	        self.assertEqual(wrapped(foo=None, bar=None, REQUEST=req), 42)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'deadbeef'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\src\Products\PluggableAuthService\tests\test_utils.py:274:17
273	        req = _makeRequestWSession(_csrft_='deadbeef')
274	        req.form['csrf_token'] = 'deadbeef'
275	        self.assertEqual(wrapped(foo=None, bar=None, REQUEST=req), 42)

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\src\Products\PluggableAuthService\tests\test_utils.py:281:13
280	
281	    hasher = sha()
282	    items = sorted(items)

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\src\Products\PluggableAuthService\utils.py:86:15
85	    """
86	    keywords = sha1()
87	    for k, v in sorted(kw.items()):

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'csrf_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\src\Products\PluggableAuthService\utils.py:108:0
107	
108	def checkCSRFToken(request, token='csrf_token', raises=True):
109	    """ Check CSRF token in session against token formdata.
110	
111	    If the values don't match, and 'raises' is True, raise a Forbidden.
112	
113	    If the values don't match, and 'raises' is False, return False.
114	
115	    If the values match, return True.
116	    """
117	    if getattr(request, 'SESSION', None) is None:
118	        # Sessioning is not available at all, just give up
119	        logger.warning(
120	            'Built-in CSRF check disabled - sessioning not available')
121	        return True
122	
123	    if request.form.get(token) != getCSRFToken(request):
124	        if raises:
125	            raise Forbidden('incorrect CSRF token')
126	        return False
127	    return True
128	

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\src\Products\PluggableAuthService\utils.py:187:4
186	    g['wrapped'] = wrapped
187	    exec('\n'.join(lines), g, l_copy)
188	

--------------------------------------------------

Code scanned:
	Total lines of code: 12941
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 47
		Medium: 2
		High: 3
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 35
		High: 17
Files skipped (0):
