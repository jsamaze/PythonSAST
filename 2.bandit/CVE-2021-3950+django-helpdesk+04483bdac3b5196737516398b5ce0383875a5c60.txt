Working... ---------------------------------------- 100% 0:00:01
Run started:2024-02-10 22:09:24.603597

Test results:
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '_crkn1+fnzu5$vns_-d+^ayiq%z4k*s!!ag0!mfy36(y!vrazd'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\demo\demodesk\config\settings.py:21:13
20	# SECURITY WARNING: keep the secret key used in production secret!
21	SECRET_KEY = '_crkn1+fnzu5$vns_-d+^ayiq%z4k*s!!ag0!mfy36(y!vrazd'
22	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\helpdesk\migrations\0002_populate_usersettings.py:11:8
10	    try:
11	        import pickle
12	    except ImportError:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with cPickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\helpdesk\migrations\0002_populate_usersettings.py:13:8
12	    except ImportError:
13	        import cPickle as pickle
14	    from helpdesk.query import b64encode

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\helpdesk\migrations\0019_ticket_secret_key.py:11:28
10	    for ticket in Ticket.objects.using(db_alias).all():
11	        ticket.secret_key = ''
12	        ticket.save()

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\helpdesk\migrations\0020_depickle_user_settings.py:9:8
8	    try:
9	        import pickle
10	    except ImportError:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with cPickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\helpdesk\migrations\0020_depickle_user_settings.py:11:8
10	    except ImportError:
11	        import cPickle as pickle
12	    try:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\helpdesk\models.py:59:11
58	
59	    return mark_safe(
60	        markdown(
61	            text,
62	            extensions=[
63	                EscapeHtml(), 'markdown.extensions.nl2br',
64	                'markdown.extensions.fenced_code'
65	            ]
66	        )
67	    )
68	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\helpdesk\models.py:59:11
58	
59	    return mark_safe(
60	        markdown(
61	            text,
62	            extensions=[
63	                EscapeHtml(), 'markdown.extensions.nl2br',
64	                'markdown.extensions.fenced_code'
65	            ]
66	        )
67	    )
68	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\helpdesk\models.py:1076:8
1075	        """
1076	        assert NotImplementedError(
1077	            "This method is to be implemented by Attachment classes"
1078	        )
1079	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\helpdesk\templated_email.py:83:29
82	    if 'comment' in context:
83	        context['comment'] = mark_safe(context['comment'].replace('\r\n', '<br>'))
84	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\helpdesk\templated_email.py:83:29
82	    if 'comment' in context:
83	        context['comment'] = mark_safe(context['comment'].replace('\r\n', '<br>'))
84	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\helpdesk\templatetags\ticket_to_link.py:42:11
41	                text[:match.start() + 1], url, style, match.groups()[0], text[match.end():])
42	    return mark_safe(text)
43	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\helpdesk\templatetags\ticket_to_link.py:42:11
41	                text[:match.start() + 1], url, style, match.groups()[0], text[match.end():])
42	    return mark_safe(text)
43	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\helpdesk\tests\helpers.py:10:0
9	
10	def get_user(username='helpdesk.staff',
11	             password='password',
12	             is_staff=False,
13	             is_superuser=False):
14	    try:
15	        user = User.objects.get(username=username)
16	    except User.DoesNotExist:
17	        user = User.objects.create_user(username=username,
18	                                        password=password,
19	                                        email='%s@example.com' % username)
20	        user.is_staff = is_staff
21	        user.is_superuser = is_superuser
22	        user.save()
23	    else:
24	        user.set_password(password)
25	        user.save()
26	    return user
27	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\helpdesk\tests\test_get_email.py:58:8
57	        # title got truncated because of max_lengh of the model.title field
58	        assert ticket.title == (
59	            "Attachment without body - and a loooooooooooooooooooooooooooooooooo"
60	            "ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo"
61	            "ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo..."
62	        )
63	        self.assertEqual(ticket.description, "")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\helpdesk\tests\test_get_email.py:120:8
119	        self.assertIn("This is email body", ticket.description)
120	        assert "Hello there!" not in ticket.description, ticket.description
121	        assert FollowUp.objects.filter(ticket=ticket).count() == 1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\helpdesk\tests\test_get_email.py:121:8
120	        assert "Hello there!" not in ticket.description, ticket.description
121	        assert FollowUp.objects.filter(ticket=ticket).count() == 1
122	        assert "Hello there!" in FollowUp.objects.filter(ticket=ticket).first().comment

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\helpdesk\tests\test_get_email.py:122:8
121	        assert FollowUp.objects.filter(ticket=ticket).count() == 1
122	        assert "Hello there!" in FollowUp.objects.filter(ticket=ticket).first().comment
123	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_kb.py:51:8
50	        self.assertContains(response, 'Create New Ticket Queue:')
51	        self.client.login(username=self.user.get_username(), password='password')
52	        response = self.client.get(reverse('helpdesk:kb_category', args=("test_cat", )))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_kb.py:65:8
64	    def test_kb_vote(self):
65	        self.client.login(username=self.user.get_username(), password='password')
66	        response = self.client.get(reverse('helpdesk:kb_vote', args=(self.kbitem1.pk,)) + "?vote=up")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_navigation.py:28:8
27	
28	        self.client.login(username=get_staff_user().get_username(), password='password')
29	        self.assertRaises(NoReverseMatch, reverse, 'helpdesk:kb_index')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'gouda'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_navigation.py:77:15
76	
77	        user = User.objects.create_user(username='henry.wensleydale', password='gouda', email='wensleydale@example.com')
78	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'gouda'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_navigation.py:81:8
80	
81	        self.client.login(username=user.username, password='gouda')
82	        response = self.client.get(reverse('helpdesk:dashboard'), follow=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'gouda'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_navigation.py:92:30
91	        super().setUp()
92	        self.non_staff_user = User.objects.create_user(username='henry.wensleydale', password='gouda', email='wensleydale@example.com')
93	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_navigation.py:108:8
107	        user = get_staff_user()
108	        self.client.login(username=user.username, password='password')
109	        response = self.client.get(reverse('helpdesk:dashboard'), follow=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_navigation.py:128:8
127	        user = get_staff_user()
128	        self.client.login(username=user.username, password='password')
129	        response = self.client.get(reverse('helpdesk:rss_unassigned'), follow=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_navigation.py:137:8
136	        user = self.non_staff_user
137	        self.client.login(username=user.username, password='password')
138	        queue = Queue.objects.create(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'gouda'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_navigation.py:168:15
167	
168	        user = User.objects.create_user(username='henry.wensleydale', password='gouda', email='wensleydale@example.com')
169	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'gouda'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_navigation.py:172:8
171	
172	        self.client.login(username=user.username, password='gouda')
173	        response = self.client.get(reverse('helpdesk:dashboard'), follow=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'frog'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_navigation.py:179:15
178	
179	        user = User.objects.create_user(username='terry.milton', password='frog', email='milton@example.com')
180	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'frog'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_navigation.py:183:8
182	
183	        self.client.login(username=user.username, password='frog')
184	        response = self.client.get(reverse('helpdesk:dashboard'), follow=True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_navigation.py:221:8
220	    def assertUserRedirectedToView(self, user, view_name):
221	        self.client.login(username=user.username, password='password')
222	        response = self.client.get(reverse('helpdesk:home'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'gouda'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_navigation.py:264:15
263	
264	        user = User.objects.create_user(username='henry.wensleydale', password='gouda', email='wensleydale@example.com')
265	        ticket = create_ticket()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'superuser'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_per_queue_staff_permission.py:97:8
96	        # Superuser
97	        self.client.login(username='superuser', password='superuser')
98	        response = self.client.get(reverse('helpdesk:dashboard'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'superuser'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_per_queue_staff_permission.py:139:8
138	        # Superuser
139	        self.client.login(username='superuser', password='superuser')
140	        response = self.client.get(reverse('helpdesk:report_index'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'superuser'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_per_queue_staff_permission.py:187:8
186	        # Superuser
187	        self.client.login(username='superuser', password='superuser')
188	        response = self.client.get(reverse('helpdesk:list'))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'superuser'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_per_queue_staff_permission.py:235:8
234	        # Superuser
235	        self.client.login(username='superuser', password='superuser')
236	        response = self.client.get(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pass'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_query.py:56:8
55	        self.user.save()
56	        self.client.login(username='User_1', password='pass')
57	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_savequery.py:17:8
16	        url = reverse('helpdesk:savequery')
17	        self.client.login(username=get_user(is_staff=True).get_username(),
18	                          password='password')
19	        response = self.client.post(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pass'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_ticket_actions.py:58:8
57	        self.user.save()
58	        self.client.login(username='User_1', password='pass')
59	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'pass'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\helpdesk\tests\test_usersettings.py:25:8
24	        self.user.save()
25	        self.client.login(username='User_1', password='pass')
26	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'wowdonotusethisfakesecuritykeyyouneedarealsecure1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\quicktest.py:83:8
82	
83	        settings.configure(
84	            DEBUG=True,
85	            TIME_ZONE='UTC',
86	            DATABASES={
87	                'default': {
88	                    'ENGINE': 'django.db.backends.sqlite3',
89	                    'NAME': os.path.join(self.DIRNAME, 'database.db'),
90	                    'USER': '',
91	                    'PASSWORD': '',
92	                    'HOST': '',
93	                    'PORT': '',
94	                }
95	            },
96	            INSTALLED_APPS=self.INSTALLED_APPS,
97	            MIDDLEWARE=self.MIDDLEWARE,
98	            ROOT_URLCONF='helpdesk.tests.urls',
99	            STATIC_URL='/static/',
100	            LOGIN_URL='/helpdesk/login/',
101	            TEMPLATES=self.TEMPLATES,
102	            SITE_ID=1,
103	            SECRET_KEY='wowdonotusethisfakesecuritykeyyouneedarealsecure1',
104	            ## The following settings disable teams
105	            HELPDESK_TEAMS_MODEL = 'auth.User',
106	            HELPDESK_TEAMS_MIGRATION_DEPENDENCIES = [],
107	            HELPDESK_KBITEM_TEAM_GETTER = lambda _: None
108	        )
109	

--------------------------------------------------

Code scanned:
	Total lines of code: 10106
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 36
		Medium: 6
		High: 0
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 27
		High: 15
Files skipped (0):
