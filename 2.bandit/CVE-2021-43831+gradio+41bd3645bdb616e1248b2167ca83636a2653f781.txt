Working... ---------------------------------------- 100% 0:00:01
Run started:2024-02-10 22:22:12.482825

Test results:
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\demo\chatbot\run.py:7:19
6	    if message.startswith("How many"):
7	        response = random.randint(1,10)
8	    elif message.startswith("How"):

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\demo\chatbot\run.py:9:19
8	    elif message.startswith("How"):
9	        response = random.choice(["Great", "Good", "Okay", "Bad"])
10	    elif message.startswith("Where"):

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\demo\chatbot\run.py:11:19
10	    elif message.startswith("Where"):
11	        response = random.choice(["Here", "There", "Somewhere"])
12	    else:

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: .\demo\digit_classifier\run.py:7:0
6	
7	urlretrieve("https://gr-models.s3-us-west-2.amazonaws.com/mnist-model.h5", "mnist-model.h5")
8	model = tf.keras.models.load_model("mnist-model.h5")

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\demo\fraud_detector\run.py:7:21
6	def fraud_detector(card_activity, categories, sensitivity):
7	    activity_range = random.randint(0, 100)
8	    drop_columns = [column for column in ["retail", "food", "other"] if column not in categories]

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\demo\image_classifier\run.py:8:11
7	# Download human-readable labels for ImageNet.
8	response = requests.get("https://git.io/JJkYN")
9	labels = response.text.split("\n")

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\demo\image_classifier_2\run.py:10:11
9	# Download human-readable labels for ImageNet.
10	response = requests.get("https://git.io/JJkYN")
11	labels = response.text.split("\n")

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\demo\image_classifier_interpretation\run.py:8:11
7	# Download human-readable labels for ImageNet.
8	response = requests.get("https://git.io/JJkYN")
9	labels = response.text.split("\n")

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: '[CLS]'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\demo\question_answer\files\utils.py:152:0
151	
152	def squad_examples_to_features(example, tokenizer, max_seq_length,
153	                                 doc_stride, max_query_length,cls_token_at_end=False,
154	                                 cls_token='[CLS]', sep_token='[SEP]', pad_token=0,
155	                                 sequence_a_segment_id=0, sequence_b_segment_id=1,
156	                                 cls_token_segment_id=0, pad_token_segment_id=0,
157	                                 mask_padding_with_zero=True):
158	    """Loads a data file into a list of `InputBatch`s."""
159	
160	    unique_id = 1000000000
161	    # cnt_pos, cnt_neg = 0, 0
162	    # max_N, max_M = 1024, 1024
163	    # f = np.zeros((max_N, max_M), dtype=np.float32)
164	    example_index = 0
165	    features = []
166	    # if example_index % 100 == 0:
167	    #     logger.info('Converting %s/%s pos %s neg %s', example_index, len(examples), cnt_pos, cnt_neg)
168	
169	    query_tokens = tokenizer.tokenize(example.question_text)
170	
171	    if len(query_tokens) > max_query_length:
172	        query_tokens = query_tokens[0:max_query_length]
173	
174	    tok_to_orig_index = []
175	    orig_to_tok_index = []
176	    all_doc_tokens = []
177	    for (i, token) in enumerate(example.doc_tokens):
178	        orig_to_tok_index.append(len(all_doc_tokens))
179	        sub_tokens = tokenizer.tokenize(token)
180	        for sub_token in sub_tokens:
181	            tok_to_orig_index.append(i)
182	            all_doc_tokens.append(sub_token)
183	
184	    # The -3 accounts for [CLS], [SEP] and [SEP]
185	    max_tokens_for_doc = max_seq_length - len(query_tokens) - 3
186	
187	    # We can have documents that are longer than the maximum sequence length.
188	    # To deal with this we do a sliding window approach, where we take chunks
189	    # of the up to our max length with a stride of `doc_stride`.
190	    _DocSpan = collections.namedtuple(  # pylint: disable=invalid-name
191	        "DocSpan", ["start", "length"])
192	    doc_spans = []
193	    start_offset = 0
194	    while start_offset < len(all_doc_tokens):
195	        length = len(all_doc_tokens) - start_offset
196	        if length > max_tokens_for_doc:
197	            length = max_tokens_for_doc
198	        doc_spans.append(_DocSpan(start=start_offset, length=length))
199	        if start_offset + length == len(all_doc_tokens):
200	            break
201	        start_offset += min(length, doc_stride)
202	
203	    for (doc_span_index, doc_span) in enumerate(doc_spans):
204	        tokens = []
205	        token_to_orig_map = {}
206	        token_is_max_context = {}
207	        segment_ids = []
208	
209	        # CLS token at the beginning
210	        if not cls_token_at_end:
211	            tokens.append(cls_token)
212	            segment_ids.append(cls_token_segment_id)
213	
214	        # Query
215	        for token in query_tokens:
216	            tokens.append(token)
217	            segment_ids.append(sequence_a_segment_id)
218	
219	        # SEP token
220	        tokens.append(sep_token)
221	        segment_ids.append(sequence_a_segment_id)
222	
223	        # Paragraph
224	        for i in range(doc_span.length):
225	            split_token_index = doc_span.start + i
226	            token_to_orig_map[len(tokens)] = tok_to_orig_index[split_token_index]
227	
228	            is_max_context = _check_is_max_context(doc_spans, doc_span_index,
229	                                                    split_token_index)
230	            token_is_max_context[len(tokens)] = is_max_context
231	            tokens.append(all_doc_tokens[split_token_index])
232	            segment_ids.append(sequence_b_segment_id)
233	        paragraph_len = doc_span.length
234	
235	        # SEP token
236	        tokens.append(sep_token)
237	        segment_ids.append(sequence_b_segment_id)
238	
239	        # CLS token at the end
240	        if cls_token_at_end:
241	            tokens.append(cls_token)
242	            segment_ids.append(cls_token_segment_id)
243	
244	        input_ids = tokenizer.convert_tokens_to_ids(tokens)
245	
246	        # The mask has 1 for real tokens and 0 for padding tokens. Only real
247	        # tokens are attended to.
248	        input_mask = [1 if mask_padding_with_zero else 0] * len(input_ids)
249	
250	        # Zero-pad up to the sequence length.
251	        while len(input_ids) < max_seq_length:
252	            input_ids.append(pad_token)
253	            input_mask.append(0 if mask_padding_with_zero else 1)
254	            segment_ids.append(pad_token_segment_id)
255	
256	        assert len(input_ids) == max_seq_length
257	        assert len(input_mask) == max_seq_length
258	        assert len(segment_ids) == max_seq_length
259	
260	        start_position = None
261	        end_position = None
262	
263	        features.append(
264	            InputFeatures(
265	                unique_id=unique_id,
266	                example_index=example_index,
267	                doc_span_index=doc_span_index,
268	                tokens=tokens,
269	                token_to_orig_map=token_to_orig_map,
270	                token_is_max_context=token_is_max_context,
271	                input_ids=input_ids,
272	                input_mask=input_mask,
273	                segment_ids=segment_ids,
274	                paragraph_len=paragraph_len,
275	                start_position=start_position,
276	                end_position=end_position))
277	        unique_id += 1
278	
279	    return features
280	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\demo\question_answer\files\utils.py:256:8
255	
256	        assert len(input_ids) == max_seq_length
257	        assert len(input_mask) == max_seq_length

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\demo\question_answer\files\utils.py:257:8
256	        assert len(input_ids) == max_seq_length
257	        assert len(input_mask) == max_seq_length
258	        assert len(segment_ids) == max_seq_length

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\demo\question_answer\files\utils.py:258:8
257	        assert len(input_mask) == max_seq_length
258	        assert len(segment_ids) == max_seq_length
259	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\demo\question_answer\files\utils.py:500:4
499	
500	    assert len(nbest) >= 1
501	

--------------------------------------------------
>> Issue: [B413:blacklist] The pyCrypto library and its module AES are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b413-import-pycrypto
   Location: .\gradio\encryptor.py:1:0
1	from Crypto.Cipher import AES
2	from Crypto.Hash import SHA256
3	from Crypto import Random

--------------------------------------------------
>> Issue: [B413:blacklist] The pyCrypto library and its module SHA256 are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b413-import-pycrypto
   Location: .\gradio\encryptor.py:2:0
1	from Crypto.Cipher import AES
2	from Crypto.Hash import SHA256
3	from Crypto import Random

--------------------------------------------------
>> Issue: [B413:blacklist] The pyCrypto library and its module Random are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b413-import-pycrypto
   Location: .\gradio\encryptor.py:3:0
2	from Crypto.Hash import SHA256
3	from Crypto import Random
4	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gradio\external.py:21:4
20	    response = requests.request("GET", api_url,  headers=headers)
21	    assert response.status_code == 200, "Invalid model name or src"
22	    p = response.json().get('pipeline_tag')

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gradio\external.py:171:8
170	        tokens = name.split("/")  # Separate the source (e.g. "huggingface") from the repo name (e.g. "google/vit-base-patch16-224")
171	        assert len(tokens) > 1, "Either `src` parameter must be provided, or `name` must be formatted as \{src\}/\{repo name\}"
172	        src = tokens[0]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gradio\external.py:174:4
173	        name = "/".join(tokens[1:])
174	    assert src.lower() in repos, "parameter: src must be one of {}".format(repos.keys())
175	    interface_info = repos[src](name, api_key, alias)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\gradio\external.py:196:8
195	
196	    r = requests.get(iframe_url)
197	    result = re.search('window.config =(.*?);\n', r.text) # some basic regex to extract the config

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\gradio\external.py:204:19
203	        data = json.dumps({"data": data})
204	        response = requests.post(api_url, headers=headers, data=data)
205	        result = json.loads(response.content.decode("utf-8"))

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\gradio\interface.py:657:16
656	            if self.share_url:
657	                requests.get("{}/shutdown".format(self.share_url))
658	                print("Closing Gradio server on port {}...".format(self.server_port))

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\gradio\interface.py:660:16
659	            elif self.local_url:
660	                requests.get("{}shutdown".format(self.local_url))
661	                print("Closing Gradio server on port {}...".format(self.server_port))

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gradio\interface.py:708:28
707	    # Only show tip every other use.
708	    if not(io.show_tips) or random.random() < 0.5:
709	        return

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gradio\interface.py:710:10
709	        return
710	    print(random.choice(strings.en.TIPS))
711	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gradio\interface.py:727:4
726	                j.write(json.dumps(launches))
727	    except:
728	        pass
729	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\gradio\networking.py:415:27
414	                queue.start_job(hash)
415	                response = requests.post(
416	                    path_to_local_server + "/api/" + task_type + "/", json=input_data)
417	                if response.status_code == 200:

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: .\gradio\networking.py:482:14
481	        )
482	        res = urllib.request.urlopen(req, timeout=10)
483	        return res

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\gradio\processing_utils.py:26:15
25	    try:
26	        return requests.get(path).content
27	    except (requests.exceptions.MissingSchema, requests.exceptions.InvalidSchema):

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\gradio\processing_utils.py:34:8
33	    try:
34	        requests.get(path)
35	        return encode_url_to_base64(path, type, ext, header)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\gradio\processing_utils.py:52:38
51	def encode_url_to_base64(url, type="image", ext=None, header=True):
52	    encoded_string = base64.b64encode(requests.get(url).content)
53	    base64_str = str(encoded_string, 'utf-8')

--------------------------------------------------
>> Issue: [B507:ssh_no_host_key_verification] Paramiko call with policy set to automatically trust the unknown host key.
   Severity: High   Confidence: Medium
   CWE: CWE-295 (https://cwe.mitre.org/data/definitions/295.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b507_ssh_no_host_key_verification.html
   Location: .\gradio\tunneling.py:64:4
63	    # client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
64	    client.set_missing_host_key_policy(paramiko.WarningPolicy())
65	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\gradio\utils.py:16:29
15	        current_pkg_version = pkg_resources.require("gradio")[0].version
16	        latest_pkg_version = requests.get(url=PKG_VERSION_URL).json()["version"]
17	        if StrictVersion(latest_pkg_version) > StrictVersion(current_pkg_version):

--------------------------------------------------
>> Issue: [B701:jinja2_autoescape_false] By default, jinja2 sets autoescape to False. Consider using autoescape=True or use the select_autoescape function to mitigate XSS vulnerabilities.
   Severity: High   Confidence: High
   CWE: CWE-94 (https://cwe.mitre.org/data/definitions/94.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b701_jinja2_autoescape_false.html
   Location: .\render_readme.py:37:18
36	
37	readme_template = Environment(loader=GuidesLoader("guides")).get_template(README_TEMPLATE)
38	output_readme = readme_template.render(code=code, demos=demos)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\test\test_demos.py:28:12
27	        try:
28	            requests.get(url)
29	            print("Interface connected.")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'correct_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\test\test_networking.py:118:51
117	    def test_post_login(self):
118	        response = self.client.post('/login', data=dict(username="test", password="correct_password"))
119	        self.assertEqual(response.status_code, 302)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'incorrect_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\test\test_networking.py:120:51
119	        self.assertEqual(response.status_code, 302)
120	        response = self.client.post('/login', data=dict(username="test", password="incorrect_password"))
121	        self.assertEqual(response.status_code, 401) 

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\test\test_processing_utils.py:101:12
100	            y = gr.processing_utils._convert(x, dtype_out)
101	            assert y.dtype == np.dtype(dtype_out)
102	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\test\test_processing_utils.py:109:12
108	            y = gr.processing_utils._convert(x, np.floating)
109	            assert y.dtype == x.dtype
110	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\test\test_utils.py:79:8
78	        mock_get_ipython.return_value = None
79	        assert colab_check() is False
80	        

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\test\test_utils.py:84:8
83	        mock_get_ipython.side_effect = ImportError()
84	        assert ipython_check() is False
85	    

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\test\test_utils.py:89:8
88	        mock_get_ipython.return_value = None
89	        assert ipython_check() is False
90	        

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\website\demos\map_demos.py:2:0
1	import os, sys
2	import subprocess
3	from jinja2 import Template

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\website\demos\map_demos.py:25:8
24	    if os.path.exists(requirements_file):
25	        subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", requirements_file]) 
26	    setup_file = os.path.join(demo_folder, "setup.sh")

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\website\demos\map_demos.py:28:8
27	    if os.path.exists(setup_file):
28	        subprocess.check_call(["sh", setup_file]) 
29	    demo_port_sets.append((demo_name, port))

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\website\demos\map_demos.py:28:8
27	    if os.path.exists(setup_file):
28	        subprocess.check_call(["sh", setup_file]) 
29	    demo_port_sets.append((demo_name, port))

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\website\demos\run_demos.py:8:0
7	import threading
8	import subprocess
9	

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\website\demos\run_demos.py:28:4
27	        file.write(filedata)
28	    subprocess.call(f"python run.py", shell=True)
29	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\website\demos\run_demos.py:37:12
36	    for demo_name, _ in demo_port_sets:
37	        r = requests.head(f"http://localhost:80/demo/{demo_name}/")
38	        if r.status_code != 200:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\website\homepage\render_html.py:31:31
30	        tweets = json.load(tweets_file)
31	    star_count = "{:,}".format(requests.get("https://api.github.com/repos/gradio-app/gradio"
32	        ).json()["stargazers_count"])
33	    with open("src/index_template.html", encoding='utf-8') as template_file:

--------------------------------------------------

Code scanned:
	Total lines of code: 7809
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 27
		Medium: 17
		High: 6
	Total issues (by confidence):
		Undefined: 0
		Low: 15
		Medium: 4
		High: 31
Files skipped (0):
