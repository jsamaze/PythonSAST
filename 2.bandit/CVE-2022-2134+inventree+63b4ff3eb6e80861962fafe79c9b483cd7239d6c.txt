Working... ---------------------------------------- 100% 0:00:06
Run started:2024-02-10 22:30:45.076051

Test results:
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'mypassword'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\InvenTree\api_tester.py:22:15
21	    username = 'testuser'
22	    password = 'mypassword'
23	    email = 'test@testing.com'

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: .\InvenTree\InvenTree\exchange.py:44:23
43	            context = ssl.create_default_context(cafile=certifi.where())
44	            response = urlopen(url, timeout=5, context=context)
45	            return response.read()

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\InvenTree\InvenTree\metadata.py:143:28
142	                                default = default()
143	                            except Exception:
144	                                continue
145	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\InvenTree\middleware.py:36:8
35	
36	        assert hasattr(request, 'user')
37	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\InvenTree\InvenTree\serializers.py:100:24
99	                            value = value()
100	                        except Exception:
101	                            continue
102	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\InvenTree\InvenTree\serializers.py:130:24
129	                            value = value()
130	                        except Exception:
131	                            continue
132	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\InvenTree\serializers.py:418:12
417	                model_fields = self.TARGET_MODEL.get_import_fields()
418	            except Exception:
419	                pass
420	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\InvenTree\InvenTree\settings.py:138:27
137	            options = string.digits + string.ascii_letters + string.punctuation
138	            key = ''.join([random.choice(options) for i in range(100)])
139	            f.write(key)

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\InvenTree\InvenTree\tasks.py:119:28
118	                if not _func:
119	                    _func = eval(func)  # pragma: no cover
120	            except NameError:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\InvenTree\InvenTree\tasks.py:201:15
200	
201	    response = requests.get('https://api.github.com/repos/inventree/inventree/releases/latest')
202	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'test_pass'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\InvenTree\test_views.py:14:15
13	    username = 'test_user'
14	    password = 'test_pass'
15	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\InvenTree\InvenTree\tests.py:389:8
388	
389	        import subprocess
390	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\InvenTree\tests.py:393:19
392	
393	        hash = str(subprocess.check_output('git rev-parse --short HEAD'.split()), 'utf-8').strip()
394	        self.assertEqual(hash, version.inventreeCommitHash())

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\InvenTree\tests.py:396:16
395	
396	        d = str(subprocess.check_output('git show -s --format=%ci'.split()), 'utf-8').strip().split(' ')[0]
397	        self.assertEqual(d, version.inventreeCommitDate())

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\InvenTree\InvenTree\version.py:8:0
7	import re
8	import subprocess
9	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\InvenTree\version.py:101:19
100	    try:
101	        return str(subprocess.check_output('git rev-parse --short HEAD'.split()), 'utf-8').strip()
102	    except Exception:  # pragma: no cover

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\InvenTree\version.py:115:16
114	    try:
115	        d = str(subprocess.check_output('git show -s --format=%ci'.split()), 'utf-8').strip()
116	        return d.split(' ')[0]

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\build\api.py:241:8
240	            ctx['build'] = Build.objects.get(pk=self.kwargs.get('pk', None))
241	        except Exception:
242	            pass
243	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\build\api.py:261:8
260	            ctx['build'] = Build.objects.get(pk=self.kwargs.get('pk', None))
261	        except Exception:
262	            pass
263	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\build\models.py:1250:12
1249	                thumb_url = self.stock_item.part.image.thumbnail.url
1250	            except Exception:
1251	                pass
1252	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\build\models.py:1256:12
1255	                thumb_url = self.bom_item.sub_part.image.thumbnail.url
1256	            except Exception:
1257	                pass
1258	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\common\apps.py:30:8
29	                common.models.InvenTreeSetting.set_setting('SERVER_RESTART_REQUIRED', False, None)
30	        except Exception:
31	            pass

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\common\models.py:643:12
642	                return model_class.get_api_url()
643	            except Exception:
644	                pass
645	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\common\models.py:1779:17
1778	    # Token
1779	    TOKEN_NAME = "Token"
1780	    VERIFICATION_METHOD = VerificationMethod.NONE

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Incorrect token in header.'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\common\models.py:1783:26
1782	    MESSAGE_OK = "Message was received."
1783	    MESSAGE_TOKEN_ERROR = "Incorrect token in header."
1784	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\InvenTree\common\test_notifications.py:130:8
129	        super().setUp()
130	        self.client.login(username=self.user.username, password='password')
131	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'hunter42'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\InvenTree\common\tests.py:223:12
222	        for idx in range(5):
223	            get_user_model().objects.create(
224	                username=f"User_{idx}",
225	                password="hunter42",
226	                email="email@dot.com",
227	            )
228	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:610:8
609	        response = self.client.get(self.url)
610	        assert response.status_code == HTTPStatus.METHOD_NOT_ALLOWED
611	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:619:8
618	
619	        assert response.status_code == HTTPStatus.FORBIDDEN
620	        assert (

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:620:8
619	        assert response.status_code == HTTPStatus.FORBIDDEN
620	        assert (
621	            json.loads(response.content)['detail'] == WebhookView.model_class.MESSAGE_TOKEN_ERROR
622	        )
623	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:632:8
631	
632	        assert response.status_code == HTTPStatus.FORBIDDEN
633	        assert (json.loads(response.content)['detail'] == WebhookView.model_class.MESSAGE_TOKEN_ERROR)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:633:8
632	        assert response.status_code == HTTPStatus.FORBIDDEN
633	        assert (json.loads(response.content)['detail'] == WebhookView.model_class.MESSAGE_TOKEN_ERROR)
634	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:642:8
641	
642	        assert response.status_code == HTTPStatus.NOT_FOUND
643	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:653:8
652	
653	        assert response.status_code == HTTPStatus.NOT_ACCEPTABLE
654	        assert (

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:654:8
653	        assert response.status_code == HTTPStatus.NOT_ACCEPTABLE
654	        assert (
655	            json.loads(response.content)['detail'] == 'Expecting property name enclosed in double quotes'
656	        )
657	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\common\tests.py:661:34
660	        # delete token
661	        self.endpoint_def.token = ''
662	        self.endpoint_def.save()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:670:8
669	
670	        assert response.status_code == HTTPStatus.OK
671	        assert str(response.content, 'utf-8') == WebhookView.model_class.MESSAGE_OK

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:671:8
670	        assert response.status_code == HTTPStatus.OK
671	        assert str(response.content, 'utf-8') == WebhookView.model_class.MESSAGE_OK
672	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\common\tests.py:676:34
675	        # delete token
676	        self.endpoint_def.token = ''
677	        self.endpoint_def.secret = '123abc'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '123abc'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\common\tests.py:677:35
676	        self.endpoint_def.token = ''
677	        self.endpoint_def.secret = '123abc'
678	        self.endpoint_def.save()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:686:8
685	
686	        assert response.status_code == HTTPStatus.FORBIDDEN
687	        assert (json.loads(response.content)['detail'] == WebhookView.model_class.MESSAGE_TOKEN_ERROR)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:687:8
686	        assert response.status_code == HTTPStatus.FORBIDDEN
687	        assert (json.loads(response.content)['detail'] == WebhookView.model_class.MESSAGE_TOKEN_ERROR)
688	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\common\tests.py:692:34
691	        # delete token
692	        self.endpoint_def.token = ''
693	        self.endpoint_def.secret = '123abc'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '123abc'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\common\tests.py:693:35
692	        self.endpoint_def.token = ''
693	        self.endpoint_def.secret = '123abc'
694	        self.endpoint_def.save()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:703:8
702	
703	        assert response.status_code == HTTPStatus.OK
704	        assert str(response.content, 'utf-8') == WebhookView.model_class.MESSAGE_OK

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:704:8
703	        assert response.status_code == HTTPStatus.OK
704	        assert str(response.content, 'utf-8') == WebhookView.model_class.MESSAGE_OK
705	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:718:8
717	
718	        assert response.status_code == HTTPStatus.OK
719	        assert str(response.content, 'utf-8') == WebhookView.model_class.MESSAGE_OK

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:719:8
718	        assert response.status_code == HTTPStatus.OK
719	        assert str(response.content, 'utf-8') == WebhookView.model_class.MESSAGE_OK
720	        message = WebhookMessage.objects.get()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:721:8
720	        message = WebhookMessage.objects.get()
721	        assert message.body == {"this": "is a message"}
722	

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:18:8
17	    if not TESTING:  # pragma: no cover
18	        os.system('cls' if os.name == 'nt' else 'clear')
19	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:48:34
47	        # Grab the manufacturer ID from the part
48	        response = cursor.execute(f"SELECT manufacturer_id FROM part_supplierpart WHERE id={supplier_part_id};")
49	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:67:34
66	        # Now extract the "name" for the manufacturer
67	        response = cursor.execute(f"SELECT name from company_company where id={manufacturer_id};")
68	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:75:34
74	
75	        response = cursor.execute("UPDATE part_supplierpart SET manufacturer_name='{name}' WHERE id={ID};".format(name=name, ID=supplier_part_id))
76	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:103:16
102	
103	        query = "SELECT manufacturer_name from part_supplierpart where id={ID};".format(ID=part_id)
104	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:115:30
114	
115	    response = cursor.execute(f'select id, "MPN" from part_supplierpart;')
116	    supplier_parts = cursor.fetchall()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:147:20
146	
147	            query = f"update part_supplierpart set manufacturer_id={manufacturer_id} where id={part_id};"
148	            result = cursor.execute(query)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:158:20
157	
158	            query = f"update part_supplierpart set manufacturer_id={manufacturer_id} where id={part_id};"
159	            result = cursor.execute(query)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:185:23
184	        # Update SupplierPart object in the database
185	        cursor.execute(f"update part_supplierpart set manufacturer_id={manufacturer.pk} where id={part_id};")
186	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:275:39
274	                        # Ensure the company is designated as a manufacturer
275	                        cursor.execute(f"update company_company set is_manufacturer=true where id={company_id};")
276	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:278:39
277	                        # Link the company to the part
278	                        cursor.execute(f"update part_supplierpart set manufacturer_id={company_id} where id={part_id};")
279	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0026_auto_20201110_1011.py:68:34
67	        # Copy the 'cost' field across to the 'price' field
68	        response = cursor.execute(f'UPDATE part_supplierpricebreak set price={cost} where id={pk};')
69	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0026_auto_20201110_1011.py:74:34
73	        # Update the currency code
74	        response = cursor.execute(f"UPDATE part_supplierpricebreak set price_currency= '{currency_code}' where id={pk};")
75	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0026_auto_20201110_1011.py:94:30
93	    # Extract a list of currency codes which are in use
94	    response = cursor.execute(f'SELECT id, price, price_currency from part_supplierpricebreak;')
95	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0026_auto_20201110_1011.py:106:34
105	        # Copy the 'price' field back into the 'cost' field
106	        response = cursor.execute(f'UPDATE part_supplierpricebreak set cost={price} where id={pk};')
107	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0026_auto_20201110_1011.py:113:34
112	    for code in codes_in_use:
113	        response = cursor.execute(f"SELECT id, suffix from common_currency where suffix='{code}';")
114	        row = cursor.fetchone()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0026_auto_20201110_1011.py:128:20
127	            # Construct a query to create a new Currency object
128	            query = f'INSERT into common_currency (symbol, suffix, description, value, base) VALUES ("$", "{code}", "{description}", 1.0, False);'
129	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0026_auto_20201110_1011.py:141:34
140	
141	        response = cursor.execute(f"UPDATE part_supplierpricebreak set currency_id={pk} where price_currency='{suffix}';")
142	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\InvenTree\company\views.py:124:19
123	        # Download the file
124	        response = requests.get(url, stream=True)
125	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\InvenTree\label\api.py:367:16
366	                    filters = InvenTree.helpers.validateFilterString(label.filters)
367	                except Exception:  # pragma: no cover
368	                    # Skip if there was an error validating the filters...
369	                    continue
370	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\InvenTree\label\apps.py:20:10
19	    """Calculate the MD5 hash of a file."""
20	    md5 = hashlib.md5()
21	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\label\apps.py:44:12
43	            from .models import StockLocationLabel
44	            assert bool(StockLocationLabel is not None)
45	        except AppRegistryNotReady:  # pragma: no cover

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\order\api.py:301:8
300	            context['order'] = models.PurchaseOrder.objects.get(pk=self.kwargs.get('pk', None))
301	        except Exception:
302	            pass
303	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\order\api.py:863:8
862	            ctx['order'] = models.SalesOrder.objects.get(pk=self.kwargs.get('pk', None))
863	        except Exception:
864	            pass
865	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\order\api.py:1056:8
1055	            )
1056	        except Exception:
1057	            pass
1058	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\part\api.py:616:8
615	            ctx['part'] = Part.objects.get(pk=self.kwargs.get('pk', None))
616	        except Exception:
617	            pass
618	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\part\migrations\0056_auto_20201110_1125.py:69:34
68	        # Copy the 'cost' field across to the 'price' field
69	        response = cursor.execute(f'UPDATE part_partsellpricebreak set price={cost} where id={pk};')
70	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\part\migrations\0056_auto_20201110_1125.py:75:34
74	        # Update the currency code
75	        response = cursor.execute(f"UPDATE part_partsellpricebreak set price_currency='{currency_code}' where id={pk};")
76	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\part\migrations\0056_auto_20201110_1125.py:95:30
94	    # Extract a list of currency codes which are in use
95	    response = cursor.execute(f'SELECT id, price, price_currency from part_partsellpricebreak;')
96	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\part\migrations\0056_auto_20201110_1125.py:107:34
106	        # Copy the 'price' field back into the 'cost' field
107	        response = cursor.execute(f'UPDATE part_partsellpricebreak set cost={price} where id={pk};')
108	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\part\migrations\0056_auto_20201110_1125.py:114:34
113	    for code in codes_in_use:
114	        response = cursor.execute(f"SELECT id, suffix from common_currency where suffix='{code}';")
115	        row = cursor.fetchone()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\part\migrations\0056_auto_20201110_1125.py:129:20
128	            # Construct a query to create a new Currency object
129	            query = f"INSERT into common_currency (symbol, suffix, description, value, base) VALUES ('$', '{code}', '{description}', 1.0, False);"
130	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\part\migrations\0056_auto_20201110_1125.py:142:34
141	
142	        response = cursor.execute(f"UPDATE part_partsellpricebreak set currency_id={pk} where price_currency='{suffix}';")
143	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\part\models.py:614:8
613	            latest = int(latest)
614	        except Exception:
615	            pass
616	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\InvenTree\part\models.py:1513:22
1512	        """
1513	        result_hash = hashlib.md5(str(self.id).encode())
1514	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\InvenTree\part\models.py:2641:22
2640	        # Seed the hash with the ID of this BOM item
2641	        result_hash = hashlib.md5(str(self.id).encode())
2642	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\part\serializers.py:875:12
874	                    return None
875	            except Exception:
876	                pass
877	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\part\templatetags\inventree_extras.py:356:11
355	
356	    return mark_safe(html)
357	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\part\templatetags\inventree_extras.py:356:11
355	
356	    return mark_safe(html)
357	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\part\templatetags\inventree_extras.py:461:11
460	    ref_url = reverse(url_name, kwargs={'pk': pk})
461	    return mark_safe(f'<b><a href="{ref_url}">{ref}</a></b>')
462	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\part\templatetags\inventree_extras.py:461:11
460	    ref_url = reverse(url_name, kwargs={'pk': pk})
461	    return mark_safe(f'<b><a href="{ref_url}">{ref}</a></b>')
462	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\part\templatetags\status_codes.py:15:11
14	    """Render a PurchaseOrder status label."""
15	    return mark_safe(PurchaseOrderStatus.render(key, large=kwargs.get('large', False)))
16	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\part\templatetags\status_codes.py:15:11
14	    """Render a PurchaseOrder status label."""
15	    return mark_safe(PurchaseOrderStatus.render(key, large=kwargs.get('large', False)))
16	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\part\templatetags\status_codes.py:21:11
20	    """Render a SalesOrder status label."""
21	    return mark_safe(SalesOrderStatus.render(key, large=kwargs.get('large', False)))
22	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\part\templatetags\status_codes.py:21:11
20	    """Render a SalesOrder status label."""
21	    return mark_safe(SalesOrderStatus.render(key, large=kwargs.get('large', False)))
22	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\part\templatetags\status_codes.py:27:11
26	    """Render a StockItem status label."""
27	    return mark_safe(StockStatus.render(key, large=kwargs.get('large', False)))
28	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\part\templatetags\status_codes.py:27:11
26	    """Render a StockItem status label."""
27	    return mark_safe(StockStatus.render(key, large=kwargs.get('large', False)))
28	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\part\templatetags\status_codes.py:33:11
32	    """Render the text value of a StockItem status value"""
33	    return mark_safe(StockStatus.text(key))
34	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\part\templatetags\status_codes.py:33:11
32	    """Render the text value of a StockItem status value"""
33	    return mark_safe(StockStatus.text(key))
34	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\part\templatetags\status_codes.py:39:11
38	    """Render a Build status label."""
39	    return mark_safe(BuildStatus.render(key, large=kwargs.get('large', False)))

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\part\templatetags\status_codes.py:39:11
38	    """Render a Build status label."""
39	    return mark_safe(BuildStatus.render(key, large=kwargs.get('large', False)))

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\part\test_part.py:194:8
193	            self.assertTrue(False)  # pragma: no cover
194	        except Exception:
195	            pass
196	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\InvenTree\part\views.py:516:19
515	        # Download the file
516	        response = requests.get(url, stream=True)
517	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\plugin\apps.py:42:20
41	                            registry.install_plugin_file()
42	                    except Exception:  # pragma: no cover
43	                        pass
44	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\InvenTree\plugin\base\barcodes\mixins.py:25:18
24	
25	    result_hash = hashlib.md5(str(barcode_data).encode())
26	    return str(result_hash.hexdigest())

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Bearer'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\plugin\base\integration\mixins.py:372:16
371	
372	    API_TOKEN = 'Bearer'
373	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'API_TOKEN'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\plugin\base\integration\test_mixins.py:191:32
190	            API_URL_SETTING = 'API_URL'
191	            API_TOKEN_SETTING = 'API_TOKEN'
192	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\InvenTree\plugin\helpers.py:8:0
7	import pkgutil
8	import subprocess
9	import sysconfig

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\plugin\helpers.py:109:25
108	        try:
109	            output = str(subprocess.check_output(command, cwd=os.path.dirname(settings.BASE_DIR)), 'utf-8')[1:-1]
110	            if output:

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\InvenTree\plugin\helpers.py:128:21
127	    try:
128	        output = str(subprocess.check_output(['git', '--version'], cwd=os.path.dirname(settings.BASE_DIR)), 'utf-8')
129	    except subprocess.CalledProcessError:  # pragma: no cover

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\plugin\helpers.py:128:21
127	    try:
128	        output = str(subprocess.check_output(['git', '--version'], cwd=os.path.dirname(settings.BASE_DIR)), 'utf-8')
129	    except subprocess.CalledProcessError:  # pragma: no cover

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\InvenTree\plugin\registry.py:11:0
10	import pathlib
11	import subprocess
12	from importlib import metadata, reload

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\InvenTree\plugin\registry.py:226:25
225	        try:
226	            output = str(subprocess.check_output(['pip', 'install', '-U', '-r', settings.PLUGIN_FILE], cwd=os.path.dirname(settings.BASE_DIR)), 'utf-8')
227	        except subprocess.CalledProcessError as error:  # pragma: no cover

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\plugin\registry.py:226:25
225	        try:
226	            output = str(subprocess.check_output(['pip', 'install', '-U', '-r', settings.PLUGIN_FILE], cwd=os.path.dirname(settings.BASE_DIR)), 'utf-8')
227	        except subprocess.CalledProcessError as error:  # pragma: no cover

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\plugin\registry.py:528:20
527	                        admin.site.unregister(model)
528	                    except Exception:  # pragma: no cover
529	                        pass
530	                    models += [model._meta.model_name]

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'API_TOKEN'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\plugin\samples\integration\api_caller.py:23:24
22	    API_URL_SETTING = 'API_URL'
23	    API_TOKEN_SETTING = 'API_TOKEN'
24	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\plugin\samples\integration\custom_panel_sample.py:116:12
115	                    })
116	            except Exception:  # pragma: no cover
117	                pass
118	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\InvenTree\plugin\serializers.py:4:0
3	import os
4	import subprocess
5	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\plugin\serializers.py:147:21
146	        try:
147	            result = subprocess.check_output(command, cwd=os.path.dirname(settings.BASE_DIR))
148	            ret['result'] = str(result, 'utf-8')

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\InvenTree\report\api.py:310:16
309	                    filters = InvenTree.helpers.validateFilterString(report.filters)
310	                except Exception:
311	                    continue
312	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\InvenTree\report\api.py:565:16
564	                    filters = InvenTree.helpers.validateFilterString(report.filters)
565	                except Exception:
566	                    continue
567	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\InvenTree\report\api.py:644:16
643	                    filters = InvenTree.helpers.validateFilterString(report.filters)
644	                except Exception:
645	                    continue
646	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\report\apps.py:78:12
77	
78	            except Exception:
79	                pass
80	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\report\templatetags\report.py:115:11
114	
115	    return mark_safe(f'<a href="{url}">{text}</a>')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\report\templatetags\report.py:115:11
114	
115	    return mark_safe(f'<a href="{url}">{text}</a>')

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:104:8
103	            context['item'] = StockItem.objects.get(pk=self.kwargs.get('pk', None))
104	        except Exception:
105	            pass
106	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:842:12
841	                    queryset = queryset.filter(part__tree_id=part.tree_id)
842	            except Exception:
843	                pass
844	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:1156:8
1155	            kwargs['user_detail'] = str2bool(self.request.query_params.get('user_detail', False))
1156	        except Exception:
1157	            pass
1158	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:1198:8
1197	            kwargs['item_detail'] = str2bool(self.request.query_params.get('item_detail', False))
1198	        except Exception:
1199	            pass
1200	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:1203:8
1202	            kwargs['user_detail'] = str2bool(self.request.query_params.get('user_detail', False))
1203	        except Exception:
1204	            pass
1205	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:1231:16
1230	                    deltas['part_detail'] = serializer.data
1231	                except Exception:
1232	                    pass
1233	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:1240:16
1239	                    deltas['location_detail'] = serializer.data
1240	                except Exception:
1241	                    pass
1242	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:1249:16
1248	                    deltas['stockitem_detail'] = serializer.data
1249	                except Exception:
1250	                    pass
1251	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:1258:16
1257	                    deltas['customer_detail'] = serializer.data
1258	                except Exception:
1259	                    pass
1260	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:1267:16
1266	                    deltas['purchaseorder_detail'] = serializer.data
1267	                except Exception:
1268	                    pass
1269	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\tests.py:442:12
441	                )
442	            except Exception:
443	                pass
444	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\users\admin.py:191:30
190	        if warning_message:
191	            warning_message = mark_safe(_(f'The following users are members of multiple groups:'
192	                                          f'{warning_message}'))
193	            messages.add_message(request, messages.WARNING, warning_message)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\users\admin.py:191:30
190	        if warning_message:
191	            warning_message = mark_safe(_(f'The following users are members of multiple groups:'
192	                                          f'{warning_message}'))
193	            messages.add_message(request, messages.WARNING, warning_message)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\users\models.py:569:8
568	            owners.append(cls.objects.get(owner_id=user.pk, owner_type=user_type))
569	        except Exception:  # pragma: no cover
570	            pass
571	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\users\models.py:576:12
575	                owners.append(owner)
576	            except Exception:  # pragma: no cover
577	                pass
578	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\InvenTree\users\test_migrations.py:18:8
17	
18	        User.objects.create(
19	            username='fred',
20	            email='fred@fred.com',
21	            password='password'
22	        )
23	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\InvenTree\users\test_migrations.py:24:8
23	
24	        User.objects.create(
25	            username='brad',
26	            email='brad@fred.com',
27	            password='password'
28	        )
29	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\ci\check_api_endpoint.py:12:11
11	
12	response = requests.get(url)
13	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\ci\check_api_endpoint.py:14:0
13	
14	assert(response.status_code == 200)
15	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\ci\check_api_endpoint.py:28:4
27	for key in required_keys:
28	    assert(key in data)
29	    print(f"- Found key '{key}'")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\ci\check_api_endpoint.py:32:0
31	# Check that the worker is running
32	assert(data['worker_running'])
33	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\ci\check_locale_files.py:3:0
2	
3	import subprocess
4	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\ci\check_locale_files.py:10:7
9	
10	proc = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
11	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\ci\check_migration_files.py:3:0
2	
3	import subprocess
4	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\ci\check_migration_files.py:10:7
9	
10	proc = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
11	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\ci\version_check.py:24:15
23	
24	    response = requests.get('https://api.github.com/repos/inventree/inventree/releases')
25	

--------------------------------------------------

Code scanned:
	Total lines of code: 49553
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 96
		Medium: 49
		High: 5
	Total issues (by confidence):
		Undefined: 0
		Low: 10
		Medium: 35
		High: 105
Files skipped (0):
