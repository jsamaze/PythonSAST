Working... ---------------------------------------- 100% 0:00:12
Run started:2024-02-10 22:36:06.690947

Test results:
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\.github\helper\documentation.py:31:12
30		pr = sys.argv[1]
31		response = requests.get("https://api.github.com/repos/frappe/frappe/pulls/{}".format(pr))
32	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\.github\helper\roulette.py:5:0
4	import shlex
5	import subprocess
6	import sys

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\.github\helper\roulette.py:12:11
11	    command = shlex.split(command)
12	    return subprocess.check_output(command, shell=shell, encoding="utf8").strip()
13	

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\.github\helper\semgrep_rules\security.py:3:1
2		# ruleid: frappe-codeinjection-eval
3		eval(input)
4	

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\.github\helper\semgrep_rules\security.py:6:0
5	# ok: frappe-codeinjection-eval
6	eval("1 + 1")

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\frappe\__init__.py:1673:8
1672		eval_globals.update(whitelisted_globals)
1673		return eval(code, eval_globals, eval_locals)
1674	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\__init__.py:1741:1
1740			param = param.encode(encoding)
1741		except Exception:
1742			pass
1743		return param

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\__init__.py:1749:1
1748			param = param.decode(encoding)
1749		except Exception:
1750			pass
1751		return param

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: .\frappe\app.py:313:12
312	
313		run_simple('0.0.0.0', int(port), application,
314			use_reloader=False if in_test_env else not no_reload,
315			use_debugger=not in_test_env,
316			use_evalex=not in_test_env,
317			threaded=not no_threading)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\boot.py:137:41
136		# get pages or reports set on custom role
137		pages_with_custom_roles = frappe.db.sql("""
138			select
139				`tabCustom Role`.{field} as name,
140				`tabCustom Role`.modified,
141				`tabCustom Role`.ref_doctype,
142				{column}
143			from `tabCustom Role`, `tabHas Role`, `tab{parent}`
144			where
145				`tabHas Role`.parent = `tabCustom Role`.name
146				and `tab{parent}`.name = `tabCustom Role`.{field}
147				and `tabCustom Role`.{field} is not null
148				and `tabHas Role`.role in ({roles})
149		""".format(field=parent.lower(), parent=parent, column=column,
150			roles = ', '.join(['%s']*len(roles))), roles, as_dict=1)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\boot.py:155:43
154	
155		pages_with_standard_roles = frappe.db.sql("""
156			select distinct
157				`tab{parent}`.name as name,
158				`tab{parent}`.modified,
159				{column}
160			from `tabHas Role`, `tab{parent}`
161			where
162				`tabHas Role`.role in ({roles})
163				and `tabHas Role`.parent = `tab{parent}`.name
164				and `tab{parent}`.`name` not in (
165					select `tabCustom Role`.{field} from `tabCustom Role`
166					where `tabCustom Role`.{field} is not null)
167				{condition}
168			""".format(parent=parent, column=column, roles = ', '.join(['%s']*len(roles)),
169				field=parent.lower(), condition="and `tabReport`.disabled=0" if parent == "Report" else ""),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\boot.py:180:38
179		if parent =="Page":
180			pages_with_no_roles = frappe.db.sql("""
181				select
182					`tab{parent}`.name, `tab{parent}`.modified, {column}
183				from `tab{parent}`
184				where
185					(select count(*) from `tabHas Role`
186					where `tabHas Role`.parent=`tab{parent}`.`name`) = 0
187			""".format(parent=parent, column=column), as_dict=1)
188	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\build.py:33:6
32		local_filename = os.path.join(prefix, filename)
33		with get(url, stream=True, allow_redirects=True) as r:
34			r.raise_for_status()

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\build.py:63:2
62		if missing_assets:
63			from subprocess import check_call
64			from shlex import split

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\build.py:70:2
69			)
70			check_call(command, cwd=os.path.join("..", "apps", "frappe"))
71	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\build.py:74:1
73	def get_assets_link(frappe_head):
74		from subprocess import getoutput
75		from requests import head

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\build.py:89:8
88	
89		if not head(url):
90			raise ValueError("URL {0} doesn't exist".format(url))

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\build.py:101:1
100		from simple_chalk import green
101		from subprocess import getoutput
102		from tempfile import mkdtemp

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\build.py:146:3
145					shutil.rmtree(os.path.dirname(assets_archive))
146				except Exception:
147					pass
148	

--------------------------------------------------
>> Issue: [B306:blacklist] Use of insecure and deprecated function (mktemp).
   Severity: Medium   Confidence: High
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b306-mktemp-q
   Location: .\frappe\build.py:169:19
168		while True:
169			temp_link_name = tempfile.mktemp(dir=link_dir)
170	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\build.py:264:1
263			safe_max_old_space_size = max(1024, int(total_memory * 0.75))
264		except Exception:
265			pass
266	

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html
   Location: .\frappe\build.py:470:5
469						css_path = os.path.join(path, "public", "css", fname.rsplit(".", 1)[0] + ".css")
470						os.system("lessc {0} > {1}".format(fpath, css_path))

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\chat\util\util.py:40:2
39				arg = json.loads(arg)
40			except Exception:
41				pass
42	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\chat\util\util.py:105:10
104		if not emojis:
105			resp  = requests.get('http://git.io/frappe-emoji')
106			if resp.ok:

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\frappe\commands\__init__.py:68:8
67			stderr=None if output else subprocess.PIPE,
68			shell=shell,
69			cwd=cwd,
70			env=env
71		)
72	
73		return_ = proc.wait()
74	
75		if return_ and raise_err:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\commands\scheduler.py:14:1
13			enable_scheduler = cint(frappe.db.get_single_value("System Settings", "enable_scheduler")) and True or False
14		except:
15			pass
16		finally:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\commands\utils.py:5:0
4	import os
5	import subprocess
6	import sys

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\frappe\commands\utils.py:151:12
150					try:
151						args = eval(args)
152					except NameError:

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\frappe\commands\utils.py:158:13
157				if kwargs:
158					kwargs = eval(kwargs)
159				else:

--------------------------------------------------
>> Issue: [B606:start_process_with_no_shell] Starting a process without a shell.
   Severity: Low   Confidence: Medium
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b606_start_process_with_no_shell.html
   Location: .\frappe\commands\utils.py:393:1
392		mysql = find_executable('mysql')
393		os.execv(mysql, [
394			mysql,
395			'-u', frappe.conf.db_name,
396			'-p'+frappe.conf.db_password,
397			frappe.conf.db_name,
398			'-h', frappe.conf.db_host or "localhost",
399			'--pager=less -SFX',
400			'--safe-updates',
401			"-A"])
402	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\commands\utils.py:414:1
413		psql = find_executable('psql')
414		subprocess.run([ psql, '-d', frappe.conf.db_name])
415	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\commands\utils.py:420:49
419	def jupyter(context):
420		installed_packages = (r.split('==')[0] for r in subprocess.check_output([sys.executable, '-m', 'pip', 'freeze'], encoding='utf8'))
421	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\commands\utils.py:423:2
422		if 'jupyter' not in installed_packages:
423			subprocess.check_output([sys.executable, '-m', 'pip', 'install', 'jupyter'])
424	

--------------------------------------------------
>> Issue: [B606:start_process_with_no_shell] Starting a process without a shell.
   Severity: Low   Confidence: Medium
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b606_start_process_with_no_shell.html
   Location: .\frappe\commands\utils.py:448:1
447		'''.format(site=site, sites_path=sites_path))
448		os.execv('{0}/jupyter'.format(bin_path), [
449			'{0}/jupyter'.format(bin_path),
450			'notebook',
451			jupyter_notebooks_path,
452		])
453	

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\frappe\commands\utils.py:737:1
736		# fetch
737		subprocess.check_output(['git', 'fetch', remote, branch], cwd = app_path)
738	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\commands\utils.py:737:1
736		# fetch
737		subprocess.check_output(['git', 'fetch', remote, branch], cwd = app_path)
738	

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\frappe\commands\utils.py:740:4
739		# get diff
740		if subprocess.check_output(['git', 'diff', '{0}..{1}/{0}'.format(branch, remote)], cwd = app_path):
741			print('Updates found for {0}'.format(app))

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\commands\utils.py:740:4
739		# get diff
740		if subprocess.check_output(['git', 'diff', '{0}..{1}/{0}'.format(branch, remote)], cwd = app_path):
741			print('Updates found for {0}'.format(app))

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\commands\utils.py:745:3
744				import shlex
745				subprocess.check_output(shlex.split('bench update --no-backup'), cwd = '..')
746			else:

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\frappe\commands\utils.py:748:3
747				updated = False
748				subprocess.check_output(['git', 'pull', '--rebase', remote, branch],
749					cwd = app_path)
750				# find all sites with that app

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\commands\utils.py:748:3
747				updated = False
748				subprocess.check_output(['git', 'pull', '--rebase', remote, branch],
749					cwd = app_path)
750				# find all sites with that app

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\frappe\commands\utils.py:756:5
755						updated = True
756						subprocess.check_output(['bench', '--site', site, 'clear-cache'], cwd = '..')
757						if migrate:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\commands\utils.py:756:5
755						updated = True
756						subprocess.check_output(['bench', '--site', site, 'clear-cache'], cwd = '..')
757						if migrate:

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\frappe\commands\utils.py:758:6
757						if migrate:
758							subprocess.check_output(['bench', '--site', site, 'migrate'], cwd = '..')
759					frappe.destroy()

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\commands\utils.py:758:6
757						if migrate:
758							subprocess.check_output(['bench', '--site', site, 'migrate'], cwd = '..')
759					frappe.destroy()

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\frappe\commands\utils.py:762:4
761				if updated or restart:
762					subprocess.check_output(['bench', 'restart'], cwd = '..')
763		else:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\commands\utils.py:762:4
761				if updated or restart:
762					subprocess.check_output(['bench', 'restart'], cwd = '..')
763		else:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\config\__init__.py:46:13
45		empty_tables = set(r[0] for r in frappe.db.multisql({
46			"mariadb": """
47				SELECT table_name
48				FROM information_schema.tables
49				WHERE table_rows = 0 and table_schema = "{}"
50				""".format(frappe.conf.db_name),
51			"postgres": """

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\contacts\doctype\address\address.py:87:26
86		if preferred_key in ['is_shipping_address', 'is_primary_address']:
87			address = frappe.db.sql(""" SELECT
88					addr.name
89				FROM
90					`tabAddress` addr, `tabDynamic Link` dl
91				WHERE
92					dl.parent = addr.name and dl.link_doctype = %s and
93					dl.link_name = %s and ifnull(addr.disabled, 0) = 0 and
94					%s = %s
95				""" % ('%s', '%s', preferred_key, '%s'), (doctype, name, 1), as_dict=1)
96	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\contacts\doctype\address\address.py:108:21
107	
108		out = frappe.db.sql(""" SELECT
109				addr.name, addr.%s
110			FROM
111				`tabAddress` addr, `tabDynamic Link` dl
112			WHERE
113				dl.parent = addr.name and dl.link_doctype = %s and
114				dl.link_name = %s and ifnull(addr.disabled, 0) = 0
115			""" %(sort_key, '%s', '%s'), (doctype, name))
116	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\contacts\doctype\address\address.py:236:22
235	
236		return frappe.db.sql("""select
237				`tabAddress`.name, `tabAddress`.city, `tabAddress`.country
238			from
239				`tabAddress`, `tabDynamic Link`
240			where
241				`tabDynamic Link`.parent = `tabAddress`.name and
242				`tabDynamic Link`.parenttype = 'Address' and
243				`tabDynamic Link`.link_doctype = %(link_doctype)s and
244				`tabDynamic Link`.link_name = %(link_name)s and
245				ifnull(`tabAddress`.disabled, 0) = 0 and
246				({search_condition})
247				{mcond} {condition}
248			order by
249				if(locate(%(_txt)s, `tabAddress`.name), locate(%(_txt)s, `tabAddress`.name), 99999),
250				`tabAddress`.idx desc, `tabAddress`.name
251			limit %(start)s, %(page_len)s """.format(
252				mcond=get_match_cond(doctype),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\contacts\doctype\contact\contact.py:207:22
206	
207		return frappe.db.sql("""select
208				`tabContact`.name, `tabContact`.first_name, `tabContact`.last_name
209			from
210				`tabContact`, `tabDynamic Link`
211			where
212				`tabDynamic Link`.parent = `tabContact`.name and
213				`tabDynamic Link`.parenttype = 'Contact' and
214				`tabDynamic Link`.link_doctype = %(link_doctype)s and
215				`tabDynamic Link`.link_name = %(link_name)s and
216				`tabContact`.`{key}` like %(txt)s
217				{mcond}
218			order by
219				if(locate(%(_txt)s, `tabContact`.name), locate(%(_txt)s, `tabContact`.name), 99999),
220				`tabContact`.idx desc, `tabContact`.name
221			limit %(start)s, %(page_len)s """.format(mcond=get_match_cond(doctype), key=searchfield), {
222				'txt': '%' + txt + '%',

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\core\doctype\access_log\test_access_log.py:158:13
157			try:
158				request = requests.post(private_file_link, headers=self.header)
159				last_doc = frappe.get_last_doc('Access Log')

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\activity_log\activity_log.py:49:15
48	
49		frappe.db.sql("""delete from `tabActivity Log` where \
50			creation< (NOW() - INTERVAL '{0}' DAY)""".format(days))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\data_export\exporter.py:303:46
302					for c in self.child_doctypes:
303						for ci, child in enumerate(frappe.db.sql("""select * from `tab{0}`
304							where parent=%s and parentfield=%s order by idx""".format(c['doctype']),
305							(doc.name, c['parentfield']), as_dict=1)):

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\core\doctype\data_import_legacy\importer.py:244:7
243			try:
244				r = requests.get(url)
245				is_valid = True if r.status_code == 200 else False

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\core\doctype\data_import_legacy\importer.py:246:2
245				is_valid = True if r.status_code == 200 else False
246			except Exception:
247				pass
248	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\data_import_legacy\importer.py:259:24
258	
259			files = frappe.db.sql("""Select name from `tabFile` where attached_to_doctype='{doctype}' and
260				attached_to_name='{docname}' and (file_url='{file_url}' or thumbnail_url='{file_url}')""".format(
261					doctype=doctype,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\data_import_legacy\importer.py:542:17
541			if p:
542				frappe.db.sql("""delete from `tab{0}` where parent=%s""".format(doctype), p)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\doctype\doctype.py:419:62
418			# check if atleast 1 record exists
419			if not (frappe.db.table_exists(self.name) and frappe.db.sql("select name from `tab{}` limit 1".format(self.name))):
420				return

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\doctype\doctype.py:800:42
799				if not d.get("__islocal") and frappe.db.has_column(d.parent, d.fieldname):
800					has_non_unique_values = frappe.db.sql("""select `{fieldname}`, count(*)
801						from `tab{doctype}` where ifnull(`{fieldname}`, '') != ''
802						group by `{fieldname}` having count(*) > 1 limit 1""".format(
803						doctype=d.parent, fieldname=d.fieldname))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\domain\domain.py:113:17
112				# enable
113				frappe.db.sql('''update `tabPortal Menu Item` set enabled=1
114					where route in ({0})'''.format(', '.join(['"{0}"'.format(d) for d in self.data.allow_sidebar_items])))
115	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\domain\domain.py:121:17
120				# enable
121				frappe.db.sql('''update `tabPortal Menu Item` set enabled=0
122					where route in ({0})'''.format(', '.join(['"{0}"'.format(d) for d in self.data.remove_sidebar_items])))

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\core\doctype\file\file.py:702:5
701		file_url = frappe.utils.get_url(file_url)
702		r = requests.get(file_url, stream=True)
703		try:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\log_settings\log_settings.py:17:16
16		def clear_error_logs(self):
17			frappe.db.sql(""" DELETE FROM `tabError Log`
18				WHERE `creation` < (NOW() - INTERVAL '{0}' DAY)
19			""".format(self.clear_error_log_after))
20	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\page\page.py:28:24
27				if frappe.db.exists('Page',self.name):
28					cnt = frappe.db.sql("""select name from tabPage
29						where name like "%s-%%" order by name desc limit 1""" % self.name)
30					if cnt:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\core\doctype\server_script\test_server_script.py:99:13
98		def test_api(self):
99			response = requests.post(get_site_url(frappe.local.site) + "/api/method/test_server_script")
100			self.assertEqual(response.status_code, 200)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\core\doctype\sms_settings\sms_settings.py:120:13
119		if use_post:
120			response = requests.post(gateway_url, **kwargs)
121		else:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\core\doctype\sms_settings\sms_settings.py:122:13
121		else:
122			response = requests.get(gateway_url, **kwargs)
123		response.raise_for_status()

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\core\doctype\system_settings\system_settings.py:21:33
20			elif not enable_password_policy:
21				self.minimum_password_score = ""
22	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\transaction_log\transaction_log.py:19:4
18				prev_hash = frappe.db.sql(
19					"SELECT `chaining_hash` FROM `tabTransaction Log` WHERE `row_index` = '{0}'".format(index - 1))
20				if prev_hash:

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\core\doctype\user\user.py:63:22
62			self.__new_password = self.new_password
63			self.new_password = ""
64	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\user\user.py:200:27
199	
200			return len(frappe.db.sql("""select name
201				from `tabRole` where desk_access=1
202					and name in ({0}) limit 1""".format(', '.join(['%s'] * len(self.roles))),
203					[d.role for d in self.roles]))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\user\user.py:391:18
390				for field in has_fields:
391					frappe.db.sql("""UPDATE `%s`
392						SET `%s` = %s
393						WHERE `%s` = %s""" %
394						(tab, field, '%s', field, '%s'), (new_name, old_name))
395	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\core\doctype\user\user.py:800:31
799		redirect_url = user_doc.redirect_url
800		user_doc.reset_password_key = ''
801		user_doc.redirect_url = ''

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\user\user.py:886:22
885		txt = "%{}%".format(txt)
886		return frappe.db.sql("""SELECT `name`, CONCAT_WS(' ', first_name, middle_name, last_name)
887			FROM `tabUser`
888			WHERE `enabled`=1
889				{user_type_condition}
890				AND `docstatus` < 2
891				AND `name` NOT IN ({standard_users})
892				AND ({key} LIKE %(txt)s
893					OR CONCAT_WS(' ', first_name, middle_name, last_name) LIKE %(txt)s)
894				{fcond} {mcond}
895			ORDER BY
896				CASE WHEN `name` LIKE %(txt)s THEN 0 ELSE 1 END,
897				CASE WHEN concat_ws(' ', first_name, middle_name, last_name) LIKE %(txt)s
898					THEN 0 ELSE 1 END,
899				NAME asc
900			LIMIT %(page_len)s OFFSET %(start)s
901		""".format(
902				user_type_condition = user_type_condition,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\user\user.py:913:26
912		"""Returns total no. of system users"""
913		return flt(frappe.db.sql('''SELECT SUM(`simultaneous_sessions`)
914			FROM `tabUser`
915			WHERE `enabled` = 1
916			AND `user_type` = 'System User'
917			AND `name` NOT IN ({})'''.format(", ".join(["%s"]*len(STANDARD_USERS))), STANDARD_USERS)[0][0])
918	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\user\user.py:931:35
930	
931		system_users = frappe.db.sql_list("""select name from `tabUser`
932			where enabled=1 and user_type != 'Website User'
933			and name not in ({}) {}""".format(", ".join(["%s"]*len(exclude_users)), limit_cond),
934			exclude_users)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\user\user.py:940:22
939		"""Returns No. of system users who logged in, in the last 3 days"""
940		return frappe.db.sql("""select count(*) from `tabUser`
941			where enabled = 1 and user_type != 'Website User'
942			and name not in ({})
943			and hour(timediff(now(), last_active)) < 72""".format(", ".join(["%s"]*len(STANDARD_USERS))), STANDARD_USERS)[0][0]
944	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\report\transaction_log_report\transaction_log_report.py:22:33
21			if row_index > 1:
22				previous_hash = frappe.db.sql("SELECT chaining_hash FROM `tabTransaction Log` WHERE row_index = {0}".format(row_index - 1))
23				if not previous_hash:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\custom\doctype\custom_field\custom_field.py:114:16
113		if df.fieldname in frappe.db.get_table_columns(doctype) and \
114			frappe.db.sql("""select count(*) from `tab{doctype}`
115				where ifnull({fieldname},'')!=''""".format(doctype=doctype, fieldname=df.fieldname))[0][0]:
116	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\custom\doctype\customize_form\customize_form.py:426:24
425				fieldname = df.fieldname
426				docs = frappe.db.sql('''
427					SELECT name, {fieldname}, LENGTH({fieldname}) AS len
428					FROM `tab{doctype}`
429					WHERE LENGTH({fieldname}) > {max_length}
430				'''.format(
431					fieldname=fieldname,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:494:16
493			else:
494				r = self.sql("""select field, value
495					from `tabSingles` where field in (%s) and doctype=%s"""
496						% (', '.join(['%s'] * len(fields)), '%s'),
497						tuple(fields) + (doctype,), as_dict=False, debug=debug)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:595:15
594	
595			r = self.sql("select {fields} from `tab{doctype}` {where} {conditions} {order_by} {for_update}"
596				.format(
597					for_update = 'for update' if for_update else '',

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:663:13
662	
663					self.sql("""update `tab{0}`
664						set {1} where name=%(name)s""".format(dt, ', '.join(set_values)),
665						values, debug=debug)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:669:12
668				keys = list(to_update)
669				self.sql('''
670					delete from `tabSingles`
671					where field in ({0}) and
672						doctype=%s'''.format(', '.join(['%s']*len(keys))),
673						list(keys) + [dt], debug=debug)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:691:11
690			modified = now()
691			self.sql("""update `tab{doctype}` set `modified`=%s
692				where name=%s""".format(doctype=doctype), (modified, docname))
693			return modified

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:805:18
804			"""Returns True if atleast one row exists."""
805			return self.sql("select name from `tab{doctype}` limit 1".format(doctype=doctype))
806	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:838:20
837				conditions, filters = self.build_conditions(filters)
838				count = self.sql("""select count(*)
839					from `tab%s` where %s""" % (dt, conditions), filters, debug=debug)[0][0]
840				return count

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:842:20
841			else:
842				count = self.sql("""select count(*)
843					from `tab%s`""" % (dt,))[0][0]
844	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:872:18
871	
872			return self.sql("""select count(name) from `tab{doctype}`
873				where creation >= %s""".format(doctype=doctype),
874				now_datetime() - relativedelta(minutes=minutes))[0][0]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:902:18
901		def get_column_type(self, doctype, column):
902			return self.sql('''SELECT column_type FROM INFORMATION_SCHEMA.COLUMNS
903				WHERE table_name = 'tab{0}' AND column_name = '{1}' '''.format(doctype, column))[0][0]
904	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:949:24
948				lft, rgt = node_location_indexes
949				return self.sql_list('''select name from `tab{doctype}`
950					where lft > {lft} and rgt < {rgt}'''.format(doctype=doctype, lft=lft, rgt=rgt))
951			else:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:966:19
965				conditions, values = self.build_conditions(conditions)
966				return self.sql("DELETE FROM `tab{doctype}` where {conditions}".format(
967					doctype=doctype,

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html
   Location: .\frappe\database\db_manager.py:92:2
91			)
92			os.system(command)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\mariadb\database.py:236:18
235			"""Returns list of column and its description"""
236			return self.sql('''select
237				column_name as 'name',
238				column_type as 'type',
239				column_default as 'default',
240				column_key = 'MUL' as 'index',
241				column_key = 'UNI' as 'unique'
242				from information_schema.columns
243				where table_name = '{table_name}' '''.format(table_name=table_name), as_dict=1)
244	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\postgres\database.py:107:33
106		def get_tables(self):
107			return [d[0] for d in self.sql("""select table_name
108				from information_schema.tables
109				where table_catalog='{0}'
110					and table_type = 'BASE TABLE'
111					and table_schema='{1}'""".format(frappe.conf.db_name, frappe.conf.get("db_schema", "public")))]
112	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\postgres\database.py:222:17
221			"""
222			res = self.sql("select issingle from `tabDocType` where name='{}'".format(doctype))
223			if not res:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\postgres\database.py:238:9
237				key = '", "'.join(key)
238			return 'ON CONFLICT ("{key}") DO UPDATE SET '.format(
239				key=key

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\postgres\database.py:246:18
245		def has_index(self, table_name, index_name):
246			return self.sql("""SELECT 1 FROM pg_indexes WHERE tablename='{table_name}'
247				and indexname='{index_name}' limit 1""".format(table_name=table_name, index_name=index_name))
248	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\postgres\database.py:278:18
277			# pylint: disable=W1401
278			return self.sql('''
279				SELECT a.column_name AS name,
280				CASE LOWER(a.data_type)
281					WHEN 'character varying' THEN CONCAT('varchar(', a.character_maximum_length ,')')
282					WHEN 'timestamp without time zone' THEN 'timestamp'
283					ELSE a.data_type
284				END AS type,
285				COUNT(b.indexdef) AS Index,
286				SPLIT_PART(COALESCE(a.column_default, NULL), '::', 1) AS default,
287				BOOL_OR(b.unique) AS unique
288				FROM information_schema.columns a
289				LEFT JOIN
290					(SELECT indexdef, tablename, indexdef LIKE '%UNIQUE INDEX%' AS unique
291						FROM pg_indexes
292						WHERE tablename='{table_name}') b
293						ON SUBSTRING(b.indexdef, '\(.*\)') LIKE CONCAT('%', a.column_name, '%')
294				WHERE a.table_name = '{table_name}'
295				GROUP BY a.column_name, a.data_type, a.column_default, a.character_maximum_length;'''
296				.format(table_name=table_name), as_dict=1)
297	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\database\postgres\setup_db.py:39:1
38		from shutil import which
39		from subprocess import run, PIPE
40	

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\frappe\database\postgres\setup_db.py:67:16
66	
67		restore_proc = run(command, env=subprocess_env, shell=True, stdout=PIPE)
68	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\schema.py:133:33
132							# check for truncation
133							max_length = frappe.db.sql("""SELECT MAX(CHAR_LENGTH(`{fieldname}`)) FROM `tab{doctype}`"""
134								.format(fieldname=col.fieldname, doctype=self.doctype))
135	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\defaults.py:192:15
191	
192		frappe.db.sql("""delete from tabDefaultValue where {0}""".format(" and ".join(conditions)),
193			tuple(values))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\doctype\bulk_update\bulk_update.py:26:2
25		docnames = frappe.db.sql_list(
26			'''select name from `tab{0}`{1} limit 0, {2}'''.format(doctype, condition, limit)
27		)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\desk\doctype\desktop_icon\desktop_icon.py:141:10
140				module_icon = frappe._dict()
141				opts = random.choice(palette)
142				module_icon.color = opts[0]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\doctype\event\event.py:180:24
179	
180		events = frappe.db.sql("""
181			SELECT `tabEvent`.name,
182					`tabEvent`.subject,
183					`tabEvent`.description,
184					`tabEvent`.color,
185					`tabEvent`.starts_on,
186					`tabEvent`.ends_on,
187					`tabEvent`.owner,
188					`tabEvent`.all_day,
189					`tabEvent`.event_type,
190					`tabEvent`.repeat_this_event,
191					`tabEvent`.repeat_on,
192					`tabEvent`.repeat_till,
193					`tabEvent`.monday,
194					`tabEvent`.tuesday,
195					`tabEvent`.wednesday,
196					`tabEvent`.thursday,
197					`tabEvent`.friday,
198					`tabEvent`.saturday,
199					`tabEvent`.sunday
200			FROM {tables}
201			WHERE (
202					(
203						(date(`tabEvent`.starts_on) BETWEEN date(%(start)s) AND date(%(end)s))
204						OR (date(`tabEvent`.ends_on) BETWEEN date(%(start)s) AND date(%(end)s))
205						OR (
206							date(`tabEvent`.starts_on) <= date(%(start)s)
207							AND date(`tabEvent`.ends_on) >= date(%(end)s)
208						)
209					)
210					OR (
211						date(`tabEvent`.starts_on) <= date(%(start)s)
212						AND `tabEvent`.repeat_this_event=1
213						AND coalesce(`tabEvent`.repeat_till, '3000-01-01') > date(%(start)s)
214					)
215				)
216			{reminder_condition}
217			{filter_condition}
218			AND (
219					`tabEvent`.event_type='Public'
220					OR `tabEvent`.owner=%(user)s
221					OR EXISTS(
222						SELECT `tabDocShare`.name
223						FROM `tabDocShare`
224						WHERE `tabDocShare`.share_doctype='Event'
225							AND `tabDocShare`.share_name=`tabEvent`.name
226							AND `tabDocShare`.user=%(user)s
227					)
228				)
229			AND `tabEvent`.status='Open'
230			ORDER BY `tabEvent`.starts_on""".format(
231				tables=", ".join(tables),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\doctype\number_card\number_card.py:165:2
164		return frappe.db.sql(
165			'''select
166				`tabNumber Card`.name, `tabNumber Card`.label, `tabNumber Card`.document_type
167			from
168				`tabNumber Card`
169			where
170				{conditions} and
171				(`tabNumber Card`.owner = '{user}' or
172				`tabNumber Card`.is_public = 1)
173				{search_conditions}
174		'''.format(
175			filters=filters,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\doctype\tag\tag.py:16:16
15		try:
16			frappe.db.sql("select `_user_tags` from `tab%s` limit 1" % dt)
17		except Exception as e:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\doctype\tag\tag.py:48:22
47	
48		return frappe.db.sql("""SELECT name
49			FROM `tab{0}`
50			WHERE _user_tags LIKE '%{1}%'""".format(doctype, tag))
51	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\doctype\tag\tag.py:99:17
98			try:
99				frappe.db.sql("update `tab%s` set _user_tags=%s where name=%s" % \
100					(self.dt,'%s','%s'), (tags , dn))
101				doc= frappe.get_doc(self.dt, dn)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\form\load.py:206:9
205		# communications linked to reference_doctype
206		part1 = '''
207			SELECT {fields}
208			FROM `tabCommunication` as C
209			WHERE C.communication_type IN ('Communication', 'Feedback')
210			AND (C.reference_doctype = %(doctype)s AND C.reference_name = %(name)s)
211			{conditions}
212		'''.format(fields=fields, conditions=conditions)
213	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\form\load.py:215:9
214		# communications linked in Timeline Links
215		part2 = '''
216			SELECT {fields}
217			FROM `tabCommunication` as C
218			INNER JOIN `tabCommunication Link` ON C.name=`tabCommunication Link`.parent
219			WHERE C.communication_type IN ('Communication', 'Feedback')
220			AND `tabCommunication Link`.link_doctype = %(doctype)s AND `tabCommunication Link`.link_name = %(name)s
221			{conditions}
222		'''.format(fields=fields, conditions=conditions)
223	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\form\load.py:224:32
223	
224		communications = frappe.db.sql('''
225			SELECT *
226			FROM (({part1}) UNION ({part2})) AS combined
227			{group_by}
228			ORDER BY creation DESC
229			LIMIT %(limit)s
230			OFFSET %(start)s
231		'''.format(part1=part1, part2=part2, group_by=(group_by or '')), dict(
232			doctype=doctype,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\form\utils.py:45:32
44				try:
45					fetch_value = frappe.db.sql("select %s from `tab%s` where name=%s"
46						% (fetch, options, '%s'), (value,))[0]
47				except Exception as e:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\listview.py:34:23
33			subquery_condition = ' and `tabToDo`.reference_name in ({subquery})'.format(subquery = subquery)
34			return frappe.db.sql("""select `tabToDo`.owner as name, count(*) as count
35				from
36					`tabToDo`, `tabUser`
37				where
38					`tabToDo`.status!='Cancelled' and
39					`tabToDo`.owner = `tabUser`.name and
40					`tabUser`.user_type = 'System User'
41					{subquery_condition}
42				group by
43					`tabToDo`.owner
44				order by
45					count desc
46				limit 50""".format(subquery_condition = subquery_condition), as_dict=True)
47		else:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\page\activity\activity.py:15:24
14	
15		result = frappe.db.sql("""select X.*
16			from (select name, owner, modified, creation, seen, comment_type,
17					reference_doctype, reference_name, '' as link_doctype, '' as link_name, subject,
18					communication_type, communication_medium, content
19				from
20					`tabCommunication`
21				where
22					communication_type = 'Communication'
23					and communication_medium != 'Email'
24					and {match_conditions_communication}
25			UNION
26				select name, owner, modified, creation, '0', 'Updated',
27					reference_doctype, reference_name, link_doctype, link_name, subject,
28					'Comment', '', content
29				from
30					`tabActivity Log`
31			UNION
32				select name, owner, modified, creation, '0', comment_type,
33					reference_doctype, reference_name, link_doctype, link_name, '',
34					'Comment', '', content
35				from
36					`tabComment`
37				where
38					{match_conditions_comment}
39			) X
40			order by X.creation DESC
41			LIMIT %(page_length)s
42			OFFSET %(start)s"""
43			.format(match_conditions_comment = match_conditions_comment,
44				match_conditions_communication = match_conditions_communication), {

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\page\user_profile\user_profile.py:12:27
11	
12		return dict(frappe.db.sql("""select unix_timestamp(date(creation)), sum(points)
13			from `tabEnergy Point Log`
14			where
15				date(creation) > subdate('{date}', interval 1 year) and
16				date(creation) < subdate('{date}', interval -1 year) and
17				user = %s and
18				type != 'Review'
19			group by date(creation)
20			order by creation asc""".format(date = date), user))
21	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\report_dump.py:38:50
37				args['conditions'].append(modified_table + "modified > '" + last_modified[d] + "'")
38				out[dt]["modified_names"] = frappe.db.sql_list("""select %sname from %s
39					where %smodified > %s""" % (modified_table, table, modified_table, "%s"), last_modified[d])
40	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\report_dump.py:48:52
47	
48			out[dt]["data"] = [list(t) for t in frappe.db.sql("""select %s from %s %s %s""" \
49				% (",".join(args["columns"]), table, conditions, order_by))]
50	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\report_dump.py:56:22
55	
56			tmp = frappe.db.sql("""select `modified`
57				from %s order by modified desc limit 1""" % modified_table)
58			out[dt]["last_modified"] = tmp and tmp[0][0] or ""

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\email\doctype\email_account\email_account.py:151:2
150				return frappe.db.get_value("Email Domain", domain[1], fields, as_dict=True)
151			except Exception:
152				pass
153	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\email\doctype\email_account\email_account.py:413:25
412				# https://stackoverflow.com/a/18367248
413				names = frappe.db.sql("""SELECT DISTINCT `name`, `creation` FROM `tabCommunication`
414					WHERE `message_id`='{message_id}'
415					ORDER BY `creation` DESC LIMIT 1""".format(
416						message_id=email.message_id

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\email\doctype\email_account\email_account.py:697:24
696	
697			flags = frappe.db.sql("""select name, communication, uid, action from
698				`tabEmail Flag Queue` where is_completed=0 and email_account={email_account}
699				""".format(email_account=frappe.db.escape(self.name)), as_dict=True)
700	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\email\doctype\email_account\email_account.py:720:17
719				docnames = ",".join([ "'%s'"%flag.get("name") for flag in flags ])
720				frappe.db.sql(""" update `tabEmail Flag Queue` set is_completed=1
721					where name in ({docnames})""".format(docnames=docnames))
722	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\email\doctype\email_account\email_account.py:728:16
727	
728			frappe.db.sql(""" update `tabCommunication` set seen={seen}
729				where name in ({docnames})""".format(docnames=docnames, seen=seen))
730	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\email\doctype\email_domain\email_domain.py:57:4
56							test.quit()
57					except Exception:
58						pass
59	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\email\doctype\newsletter\newsletter.py:262:23
261		if email_group_list:
262			return frappe.db.sql('''SELECT n.name, n.subject, n.message, n.modified
263				FROM `tabNewsletter` n, `tabNewsletter Email Group` neg
264				WHERE n.name = neg.parent
265				AND n.email_sent=1
266				AND n.published=1
267				AND neg.email_group in ({0})
268				ORDER BY n.modified DESC LIMIT {1} OFFSET {2}
269				'''.format(','.join(['%s'] * len(email_group_list)),
270						limit_page_length, limit_start), email_group_list, as_dict=1)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\email\doctype\newsletter\test_newsletter.py:52:19
51			name = self.send_newsletter()
52			to_unsubscribe = choice(emails)
53			group = frappe.get_all("Newsletter Email Group", filters={"parent": name}, fields=["email_group"])

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\email\queue.py:595:35
594	
595		email_queues = frappe.db.sql_list("""SELECT `name` FROM `tabEmail Queue`
596			WHERE `priority`=0 AND `modified` < (NOW() - INTERVAL '{0}' DAY)""".format(days))
597	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\email\queue.py:599:16
598		if email_queues:
599			frappe.db.sql("""DELETE FROM `tabEmail Queue` WHERE `name` IN ({0})""".format(
600				','.join(['%s']*len(email_queues)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\email\queue.py:603:16
602	
603			frappe.db.sql("""DELETE FROM `tabEmail Queue Recipient` WHERE `parent` IN ({0})""".format(
604				','.join(['%s']*len(email_queues)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\email\receive.py:321:3
320					incoming_mail = Email(b'\n'.join(self.pop.top(msg_num, 5)[1]))
321				except:
322					pass
323	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\frappe\email\receive.py:346:3
345					self.imap.uid('STORE', uid, op, '(\\SEEN)')
346				except Exception:
347					continue
348	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\event_streaming\doctype\event_consumer\event_consumer.py:63:13
62		def get_consumer_status(self):
63			response = requests.get(self.callback_url)
64			if response.status_code != 200:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\event_streaming\doctype\event_producer\event_producer.py:163:9
162			while retry > 0:
163				res = requests.get(self.producer_url)
164				if res.status_code == 200:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\event_streaming\doctype\event_producer\event_producer.py:193:12
192		"""Fetch data from producer node."""
193		response = requests.get(get_url())
194		if response.status_code == 200:

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'admin'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\frappe\event_streaming\doctype\event_producer\test_event_producer.py:418:17
417		producer_doc = frappe.get_doc('Event Producer', producer_url)
418		producer_site = FrappeClient(
419			url=producer_doc.producer_url,
420			username='Administrator',
421			password='admin',
422			verify=False
423		)
424		return producer_site

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'admin'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\frappe\event_streaming\doctype\event_producer\test_event_producer.py:434:9
433		def _connect():
434			return FrappeClient(
435				url=producer_url,
436				username='Administrator',
437				password='admin',
438				verify=False
439			)
440		try:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\frappeclient.py:353:8
352		def get_request(self, params):
353			res = requests.get(self.url, params=self.preprocess(params), headers=self.headers, verify=self.verify)
354			res = self.post_process(res)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\frappeclient.py:358:8
357		def post_request(self, data):
358			res = requests.post(self.url, data=self.preprocess(data), headers=self.headers, verify=self.verify)
359			res = self.post_process(res)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\frappeclient.py:366:8
365		def get(self, url, params, verify):
366			res = requests.get(url, params=params, headers=self.headers, verify=verify)
367			return res

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\frappeclient.py:369:8
368		def post(self, url, data, verify):
369			res = requests.post(url, data=data, headers=self.headers, verify=verify)
370			return res

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\frappeclient.py:372:8
371		def put(self, url, data, verify):
372			res = requests.put(url, data=data, headers=self.headers, verify=verify)
373			return res

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\geo\utils.py:68:26
67			try:
68				coords = frappe.db.sql('''SELECT name, location FROM `tab{}`  WHERE {}'''.format(doctype, filters_sql), as_dict=True)
69			except InternalError:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\geo\utils.py:81:26
80			try:
81				coords = frappe.db.sql('''SELECT name, latitude, longitude FROM `tab{}`  WHERE {}'''.format(doctype, filters_sql), as_dict=True)
82			except InternalError:

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\frappe\installer.py:42:18
41			import hashlib
42			db_name = "_" + hashlib.sha1(site.encode()).hexdigest()[:16]
43	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\installer.py:455:1
454	def extract_sql_gzip(sql_gz_path):
455		import subprocess
456	

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\frappe\installer.py:462:2
461			cmd = 'gzip -dvf < {0} > {1}'.format(original_file, decompressed_file)
462			subprocess.check_call(cmd, shell=True)
463		except:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\installer.py:471:1
470		import shutil
471		import subprocess
472		from frappe.utils import get_bench_relative_path

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\frappe\installer.py:489:3
488			if file_path.endswith(".tar"):
489				subprocess.check_output(['tar', 'xvf', tar_path, '--strip', '2'], cwd=abs_site_path)
490			elif file_path.endswith(".tgz"):

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\installer.py:489:3
488			if file_path.endswith(".tar"):
489				subprocess.check_output(['tar', 'xvf', tar_path, '--strip', '2'], cwd=abs_site_path)
490			elif file_path.endswith(".tgz"):

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\frappe\installer.py:491:3
490			elif file_path.endswith(".tgz"):
491				subprocess.check_output(['tar', 'zxvf', tar_path, '--strip', '2'], cwd=abs_site_path)
492		except:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\installer.py:491:3
490			elif file_path.endswith(".tgz"):
491				subprocess.check_output(['tar', 'zxvf', tar_path, '--strip', '2'], cwd=abs_site_path)
492		except:

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Eastern_43A1W'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\integrations\doctype\connected_app\test_connected_app.py:70:23
69			self.user_name = 'test-connected-app@example.com'
70			self.user_password = 'Eastern_43A1W'
71	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\doctype\google_calendar\google_calendar.py:86:7
85			try:
86				r = requests.post(get_auth_url(), data=data).json()
87			except requests.exceptions.HTTPError:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\doctype\google_calendar\google_calendar.py:116:7
115				}
116				r = requests.post(get_auth_url(), data=data).json()
117	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\doctype\google_contacts\google_contacts.py:44:7
43			try:
44				r = requests.post(get_auth_url(), data=data).json()
45			except requests.exceptions.HTTPError:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\doctype\google_contacts\google_contacts.py:75:7
74				}
75				r = requests.post(get_auth_url(), data=data).json()
76	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\doctype\google_drive\google_drive.py:52:7
51			try:
52				r = requests.post(get_auth_url(), data=data).json()
53			except requests.exceptions.HTTPError:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\doctype\google_drive\google_drive.py:84:7
83				}
84				r = requests.post(get_auth_url(), data=data).json()
85	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\doctype\paytm_settings\paytm_settings.py:120:12
119	
120		response = requests.post(url, data = post_data, headers = {"Content-type": "application/json"}).json()
121		finalize_request(order_id, response)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\doctype\slack_webhook_url\slack_webhook_url.py:44:5
43		data = {"text": message, "attachments": attachments}
44		r = requests.post(slack_url, data=json.dumps(data))
45	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'bearer'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\integrations\doctype\token_cache\token_cache.py:33:51
32			# 'Bearer' or 'MAC'
33			token_type = token_type.title() if token_type == 'bearer' else token_type.upper()
34	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'X-Frappe-Webhook-Signature'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\integrations\doctype\webhook\webhook.py:23:24
22	
23	WEBHOOK_SECRET_HEADER = "X-Frappe-Webhook-Signature"
24	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\frappe_providers\frappecloud.py:12:11
11		request_url = "https://{}/api/method/press.api.script".format(remote_site)
12		request = requests.get(request_url)
13	

--------------------------------------------------
>> Issue: [B606:start_process_with_no_shell] Starting a process without a shell.
   Severity: Low   Confidence: Medium
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b606_start_process_with_no_shell.html
   Location: .\frappe\integrations\frappe_providers\frappecloud.py:29:1
28		print("Site Migrator stored at {}".format(script.name))
29		os.execv(py, [py, script.name, local_site])

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\__init__.py:155:16
154	
155			frappe.db.sql("""
156				DELETE FROM `tabDocField`
157				WHERE parent='%s' AND fieldname IN (%s)
158			""" % (dt, ", ".join(["'{}'".format(f) for f in fields])))
159	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\__init__.py:165:17
164			if frappe.db.get_value("DocType", dt, "issingle"):
165				frappe.db.sql("""
166					DELETE FROM `tabSingles`
167					WHERE doctype='%s' AND field IN (%s)
168				""" % (dt, ", ".join(["'{}'".format(f) for f in fields])))
169			else:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\__init__.py:172:17
171						"mariadb": "DESC `tab%s`" % dt,
172						"postgres": """
173							SELECT
174	 							COLUMN_NAME
175							FROM
176	 							information_schema.COLUMNS
177							WHERE
178	 							TABLE_NAME = 'tab%s';
179						""" % dt,
180					})

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\base_document.py:357:17
356			try:
357				frappe.db.sql("""INSERT INTO `tab{doctype}` ({columns})
358						VALUES ({values})""".format(
359						doctype = self.doctype,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\base_document.py:400:17
399			try:
400				frappe.db.sql("""UPDATE `tab{doctype}`
401					SET {values} WHERE `name`=%s""".format(
402						doctype = self.doctype,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\db_query.py:137:10
136	
137			query = """select %(fields)s
138				from %(tables)s
139				%(conditions)s
140				%(group_by)s
141				%(order_by)s
142				%(limit)s""" % args
143	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\delete_doc.py:169:16
168		else:
169			frappe.db.sql("delete from `tab{0}` where `name`=%s".format(doctype), name)
170	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\delete_doc.py:196:17
195			if t not in ignore_doctypes:
196				frappe.db.sql("delete from `tab%s` where parenttype=%s and parent = %s" % (t, '%s', '%s'), (doctype, name))
197	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\delete_doc.py:285:31
284				df["table"] = ", `parent`, `parenttype`, `idx`" if meta.istable else ""
285				for refdoc in frappe.db.sql("""select `name`, `docstatus` {table} from `tab{parent}` where
286					{options}=%s and {fieldname}=%s""".format(**df), (doc.doctype, doc.name), as_dict=True):
287	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\docfield.py:41:16
40			frappe.db.begin()
41			frappe.db.sql("""update `tab%s` set parentfield=%s where parentfield=%s""" \
42				% (f['options'], '%s', '%s'), (new, f['fieldname']))
43			frappe.db.commit()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\document.py:384:32
383				# select rows that do not match the ones in the document
384				deleted_rows = frappe.db.sql("""select name from `tab{0}` where parent=%s
385					and parenttype=%s and parentfield=%s
386					and name not in ({1})""".format(df.options, ','.join(['%s'] * len(rows))),
387						[self.name, self.doctype, fieldname] + rows)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\document.py:390:18
389					# delete rows that do not match the ones in the document
390					frappe.db.sql("""delete from `tab{0}` where name in ({1})""".format(df.options,
391						','.join(['%s'] * len(deleted_rows))), tuple(row[0] for row in deleted_rows))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\document.py:395:17
394				# no rows found, delete all rows
395				frappe.db.sql("""delete from `tab{0}` where parent=%s
396					and parenttype=%s and parentfield=%s""".format(df.options),
397					(self.name, self.doctype, fieldname))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\document.py:708:24
707				else:
708					tmp = frappe.db.sql("""select modified, docstatus from `tab{0}`
709						where name = %s for update""".format(self.doctype), self.name, as_dict=True)
710	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\dynamic_links.py:46:32
45					try:
46						links = frappe.db.sql_list("""select distinct {options} from `tab{parent}`""".format(**df))
47						for doctype in links:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\naming.py:260:23
259		if exists:
260			last = frappe.db.sql("""SELECT `{fieldname}` FROM `tab{doctype}`
261				WHERE `{fieldname}` {regex_character} %s
262				ORDER BY length({fieldname}) DESC,
263				`{fieldname}` DESC LIMIT 1""".format(
264					doctype=doctype,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:148:39
147		linked_doctypes = set([d.parent for d in link_fields if not d.issingle])
148		user_settings_details = frappe.db.sql('''SELECT `user`, `doctype`, `data`
149				FROM `__UserSettings`
150				WHERE `data` like %s
151				AND `doctype` IN ('{doctypes}')'''.format(doctypes="', '".join(linked_doctypes)), (old), as_dict=1)
152	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:184:15
183		# rename the doc
184		frappe.db.sql("UPDATE `tab{0}` SET `name`={1} WHERE `name`={1}".format(doctype, '%s'), (new, old))
185		update_autoname_field(doctype, new, meta)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:193:17
192			if field and field[0] == "field":
193				frappe.db.sql("UPDATE `tab{0}` SET `{1}`={2} WHERE `name`={2}".format(doctype, field[1], '%s'), (new, new))
194	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:197:24
196		# using for update so that it gets locked and someone else cannot edit it while this rename is going on!
197		exists = frappe.db.sql("select name from `tab{doctype}` where name=%s for update".format(doctype=doctype), new)
198		exists = exists[0][0] if exists else None

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:239:16
238		for df in meta.get_table_fields():
239			frappe.db.sql("update `tab%s` set parent=%s where parent=%s" \
240				% (df.options, '%s', '%s'), (new, old))
241	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:347:31
346		# get link fields from tabDocField
347		select_fields = frappe.db.sql("""
348			select parent, fieldname,
349				(select issingle from tabDocType dt
350				where dt.name = df.parent) as issingle
351			from tabDocField df
352			where
353				df.parent != %s and df.fieldtype = 'Select' and
354				df.options like {0} """.format(frappe.db.escape('%' + old + '%')), (new,), as_dict=1)
355	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:357:38
356		# get link fields from tabCustom Field
357		custom_select_fields = frappe.db.sql("""
358			select dt as parent, fieldname,
359				(select issingle from tabDocType dt
360				where dt.name = df.dt) as issingle
361			from `tabCustom Field` df
362			where
363				df.dt != %s and df.fieldtype = 'Select' and
364				df.options like {0} """ .format(frappe.db.escape('%' + old + '%')), (new,), as_dict=1)
365	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:370:47
369		# remove fields whose options have been changed using property setter
370		property_setter_select_fields = frappe.db.sql("""
371			select ps.doc_type as parent, ps.field_name as fieldname,
372				(select issingle from tabDocType dt
373				where dt.name = ps.doc_type) as issingle
374			from `tabProperty Setter` ps
375			where
376				ps.doc_type != %s and
377				ps.property_type='options' and
378				ps.field_name is not null and
379				ps.value like {0} """.format(frappe.db.escape('%' + old + '%')), (new,), as_dict=1)
380	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:386:15
385	def update_select_field_values(old, new):
386		frappe.db.sql("""
387			update `tabDocField` set options=replace(options, %s, %s)
388			where
389				parent != %s and fieldtype = 'Select' and
390				(options like {0} or options like {1})"""
391				.format(frappe.db.escape('%' + '\n' + old + '%'), frappe.db.escape('%' + old + '\n' + '%')), (old, new, new))
392	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:393:15
392	
393		frappe.db.sql("""
394			update `tabCustom Field` set options=replace(options, %s, %s)
395			where
396				dt != %s and fieldtype = 'Select' and
397				(options like {0} or options like {1})"""
398				.format(frappe.db.escape('%' + '\n' + old + '%'), frappe.db.escape('%' + old + '\n' + '%')), (old, new, new))
399	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:400:15
399	
400		frappe.db.sql("""
401			update `tabProperty Setter` set value=replace(value, %s, %s)
402			where
403				doc_type != %s and field_name is not null and
404				property='options' and
405				(value like {0} or value like {1})"""
406				.format(frappe.db.escape('%' + '\n' + old + '%'), frappe.db.escape('%' + old + '\n' + '%')), (old, new, new))
407	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:442:16
441		for doctype in child_doctypes:
442			frappe.db.sql(f"update `tab{doctype}` set parenttype=%s where parenttype=%s", (new, old))
443	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:456:17
455				parent = df.parent if df.parent != new else old
456				frappe.db.sql("""update `tab{parent}` set {fieldname}=%s
457					where {options}=%s and {fieldname}=%s""".format(parent = parent,
458						fieldname=df.fieldname, options=df.options), (new, doctype, old))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\utils\__init__.py:38:15
37	
38		frappe.db.sql("""update `tab%s` set `is_default`=0
39			where `%s`=%s and name!=%s""" % (doc.doctype, key, "%s", "%s"),
40			(doc.get(key), doc.name))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\utils\link_count.py:45:19
44					try:
45						frappe.db.sql('update `tab{0}` set idx = idx + {1} where name=%s'.format(key[0], count),
46							key[1], auto_commit=1)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\utils\rename_field.py:29:16
28			# change parentfield of table mentioned in options
29			frappe.db.sql("""update `tab%s` set parentfield=%s
30				where parentfield=%s""" % (new_field.options.split("\n")[0], "%s", "%s"),
31				(new_fieldname, old_fieldname))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\utils\rename_field.py:40:17
39				# copy field value
40				frappe.db.sql("""update `tab%s` set `%s`=`%s`""" % \
41					(doctype, new_fieldname, old_fieldname))
42	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\utils\rename_field.py:132:17
131			if columns_modified:
132				frappe.db.sql("""update `tabDefaultValue` set defvalue=%s
133					where defkey=%s""" % ('%s', '%s'), (json.dumps(new_columns), key))
134	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\modules\import_file.py:79:19
78					else:
79						frappe.db.sql("update `tab%s` set modified=%s where name=%s" % \
80							(doc['doctype'], '%s', '%s'),
81							(original_modified, doc['name']))

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\frappe\modules\patch_handler.py:89:5
88					if patchmodule.startswith("execute:"):
89						exec(patchmodule.split("execute:")[1],globals())
90					else:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\modules\utils.py:119:18
118				if custom_doctype != 'Custom Field':
119					frappe.db.sql('delete from `tab{0}` where `{1}` =%s'.format(
120						custom_doctype, doctype_fieldname), doc_type)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'Bearer'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\frappe\oauth.py:60:2
59								   default_token_type=bearer)
60			ResourceEndpoint.__init__(self, default_token='Bearer',
61									  token_types={'Bearer': bearer})
62			RevocationEndpoint.__init__(self, request_validator)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'access_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\oauth.py:257:24
256	
257			if token_type_hint == "access_token":
258				otoken = frappe.db.set_value("OAuth Bearer Token", token, 'status', 'Revoked')

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'refresh_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\oauth.py:259:26
258				otoken = frappe.db.set_value("OAuth Bearer Token", token, 'status', 'Revoked')
259			elif token_type_hint == "refresh_token":
260				otoken = frappe.db.set_value("OAuth Bearer Token", {"refresh_token": token}, 'status', 'Revoked')

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v10_0\refactor_social_login_keys.py:111:9
110	
111		query = """INSERT INTO `tabUser Social Login` (`{source_cols}`)
112			VALUES ({values})
113		""".format(
114			source_cols = "`, `".join(source_cols),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v11_0\delete_duplicate_user_permissions.py:11:16
10		for record in duplicateRecords:
11			frappe.db.sql("""delete from `tabUser Permission`
12				where allow=%s and user=%s and for_value=%s limit {0}"""
13				.format(record.count - 1), (record.allow, record.user, record.for_value))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v11_0\update_list_user_settings.py:12:27
11			# get user_settings for each user
12			settings = frappe.db.sql("select * from `__UserSettings` \
13				where user={0}".format(frappe.db.escape(user.user)), as_dict=True)
14	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v12_0\move_email_and_phone_to_child_table.py:70:17
69			if email_values and (count%10000 == 0 or count == len(contact_details)-1):
70				frappe.db.sql("""
71					INSERT INTO `tabContact Email`
72						(`idx`, `name`, `email_id`, `parentfield`, `parenttype`, `parent`, `is_primary`, `creation`,
73						`modified`, `modified_by`)
74					VALUES {}
75				""".format(", ".join(['%s'] * len(email_values))), tuple(email_values))
76	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v12_0\move_email_and_phone_to_child_table.py:80:17
79			if phone_values and (count%10000 == 0 or count == len(contact_details)-1):
80				frappe.db.sql("""
81					INSERT INTO `tabContact Phone`
82						(`idx`, `name`, `phone`, `parentfield`, `parenttype`, `parent`, `is_primary_phone`, `is_primary_mobile_no`, `creation`,
83						`modified`, `modified_by`)
84					VALUES {}
85				""".format(", ".join(['%s'] * len(phone_values))), tuple(phone_values))
86	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v12_0\move_timeline_links_to_dynamic_links.py:35:17
34			if values and (count % 10000 == 0 or count == len(communications) - 1):
35				frappe.db.sql("""
36					INSERT INTO `tabCommunication Link`
37						(`idx`, `name`, `parentfield`, `parenttype`, `parent`, `link_doctype`, `link_name`, `creation`,
38						`modified`, `modified_by`)
39					VALUES {0}
40				""".format(", ".join([d for d in values])))
41	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\frappe\patches\v12_0\rename_uploaded_files_with_proper_name.py:23:2
22				}, update_modified=False)
23			except Exception:
24				continue
25	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v12_0\replace_null_values_in_tables.py:19:17
18			if update_column_table_map.get(table) and frappe.db.exists("DocType", re.sub('^tab', '', table)):
19				frappe.db.sql("""UPDATE `{table}` SET {columns}"""
20					.format(table=table, columns=", ".join(update_column_table_map.get(table))))
21	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v12_0\setup_tags.py:18:34
17	
18			for _user_tags in frappe.db.sql("select `name`, `_user_tags` from `tab{0}`".format(doctype.name), as_dict=True):
19				if not _user_tags.get("_user_tags"):

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v13_0\set_unique_for_page_view.py:6:15
5		site_url = frappe.utils.get_site_url(frappe.local.site)
6		frappe.db.sql("""UPDATE `tabWeb Page View` set is_unique=1 where referrer LIKE '%{0}%'""".format(site_url))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v13_0\update_date_filters_in_user_settings.py:9:32
8		for user in users:
9			user_settings = frappe.db.sql('''
10				select
11					* from `__UserSettings`
12				where
13					user="{user}"
14			'''.format(user = user.user), as_dict=True)
15	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v4_0\create_custom_field_for_owner_match.py:37:16
36	
37			frappe.db.sql("""update `tab{doctype}` set `{fieldname}`=owner""".format(doctype=dt,
38				fieldname=fieldname))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v4_0\fix_attach_field_file_url.py:12:16
11		for doctype, fieldname in attach_fields:
12			frappe.db.sql("""update `tab{doctype}` set `{fieldname}`=concat("/", `{fieldname}`)
13				where `{fieldname}` like 'files/%'""".format(doctype=doctype, fieldname=fieldname))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v4_0\remove_old_parent.py:9:16
8		for doctype in frappe.db.sql_list("""select name from `tabDocType` where istable=1"""):
9			frappe.db.sql("""delete from `tab{0}` where parent like "old_par%:%" """.format(doctype))
10		frappe.db.sql("""delete from `tabDocField` where parent="0" """)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\patches\v4_0\set_todo_checked_as_closed.py:8:1
7			frappe.db.sql("""update tabToDo set status = if(ifnull(checked,0)=0, 'Open', 'Closed')""")
8		except:
9			pass

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\patches\v5_0\convert_to_barracuda_and_utf8mb4.py:13:2
12				frappe.db.sql_ddl("""alter table `{0}` CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci""".format(table))
13			except:
14				# if row size gets too large, let it be old charset!
15				pass
16	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v5_0\fix_null_date_datetime.py:10:18
9				if field["Type"] == "date":
10					frappe.db.sql("""update `{table}` set `{fieldname}`=null where `{fieldname}`='0000-00-00'""".format(
11						table=table, fieldname=field["Field"]))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v5_0\fix_null_date_datetime.py:15:18
14				elif field["Type"] == "datetime(6)":
15					frappe.db.sql("""update `{table}` set `{fieldname}`=null where `{fieldname}`='0000-00-00 00:00:00.000000'""".format(
16						table=table, fieldname=field["Field"]))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v5_2\change_checks_to_not_null.py:27:18
26					# set 0
27					frappe.db.sql("""update `{table}` set `{column}`=0 where `{column}` is null"""\
28						.format(table=table, column=fieldname))
29					frappe.db.commit()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v6_16\feed_doc_owner.py:20:16
19	
20			frappe.db.sql("""update `tabCommunication`
21				set reference_owner=%(owner)s
22				where
23					reference_doctype=%(doctype)s
24					and reference_name=%(name)s
25					and (reference_owner is null or reference_owner = '')""".format(doctype=doctype), {
26						"doctype": doctype,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v6_19\comment_feed_communication.py:35:15
34		# comments
35		frappe.db.sql("""insert ignore into `tabCommunication` (
36				subject,
37				content,
38				sender,
39				sender_full_name,
40				comment_type,
41				communication_date,
42				reference_doctype,
43				reference_name,
44				{to_fields}
45	
46				name,
47				user,
48				owner,
49				creation,
50				modified_by,
51				modified,
52				status,
53				sent_or_received,
54				communication_type,
55				seen
56			)
57			select
58				substring(comment, 1, 100) as subject,
59				comment as content,
60				comment_by as sender,
61				comment_by_fullname as sender_full_name,
62				comment_type,
63				ifnull(timestamp(comment_date, comment_time), creation) as communication_date,
64				comment_doctype as reference_doctype,
65				comment_docname as reference_name,
66				{from_fields}
67	
68				name,
69				owner as user,
70				owner,
71				creation,
72				modified_by,
73				modified,
74				'Linked' as status,
75				'Sent' as sent_or_received,
76				'Comment' as communication_type,
77				1 as seen
78			from `tabComment` where comment_doctype is not null and comment_doctype not in ('Message', 'My Company')"""
79				.format(to_fields=to_fields, from_fields=from_fields))
80	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v6_19\comment_feed_communication.py:82:15
81		# chat and assignment notifications
82		frappe.db.sql("""insert ignore into `tabCommunication` (
83				subject,
84				content,
85				sender,
86				sender_full_name,
87				comment_type,
88				communication_date,
89				reference_doctype,
90				reference_name,
91				{to_fields}
92	
93				name,
94				user,
95				owner,
96				creation,
97				modified_by,
98				modified,
99				status,
100				sent_or_received,
101				communication_type,
102				seen
103			)
104			select
105				case
106					when parenttype='Assignment' then %(assignment)s
107					else substring(comment, 1, 100)
108					end
109					as subject,
110				comment as content,
111				comment_by as sender,
112				comment_by_fullname as sender_full_name,
113				comment_type,
114				ifnull(timestamp(comment_date, comment_time), creation) as communication_date,
115				'User' as reference_doctype,
116				comment_docname as reference_name,
117				{from_fields}
118	
119				name,
120				owner as user,
121				owner,
122				creation,
123				modified_by,
124				modified,
125				'Linked' as status,
126				'Sent' as sent_or_received,
127				case
128					when parenttype='Assignment' then 'Notification'
129					else 'Chat'
130					end
131					as communication_type,
132				1 as seen
133			from `tabComment` where comment_doctype in ('Message', 'My Company')"""
134				.format(to_fields=to_fields, from_fields=from_fields), {"assignment": _("Assignment")})
135	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v6_4\reduce_varchar_length.py:17:30
16	
17				max_length = frappe.db.sql("""select max(char_length(`{fieldname}`)) from `tab{doctype}`"""\
18					.format(fieldname=fieldname, doctype=doctype))
19	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v6_6\fix_file_url.py:35:17
34			else:
35				frappe.db.sql("""update `tab{doctype}` set `{fieldname}`=concat("/", `{fieldname}`)
36					where `{fieldname}` like 'files/%'""".format(doctype=doctype, fieldname=fieldname))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v6_9\int_float_not_null.py:17:17
16	
17				frappe.db.sql("""update `tab{doctype}` set `{fieldname}`=0 where `{fieldname}` is null"""\
18					.format(doctype=doctype, fieldname=fieldname))
19	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v7_0\re_route.py:19:17
18			try:
19				frappe.db.sql("""update ignore `tab{0}` set route = concat(ifnull(parent_website_route, ""),
20					if(ifnull(parent_website_route, "")="", "", "/"), page_name) {1}""".format(d, condition))
21	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v7_0\update_auth.py:32:27
31				else:
32					for d in frappe.db.sql('''select name, `{fieldname}` from `tab{doctype}`
33						where `{fieldname}` is not null'''.format(fieldname=df.fieldname, doctype=doctype), as_dict=True):
34	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v7_0\update_auth.py:37:18
36	
37					frappe.db.sql('''update `tab{doctype}` set `{fieldname}`=repeat("*", char_length(`{fieldname}`))'''
38						.format(doctype=doctype, fieldname=df.fieldname))
39	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\patches\v7_1\refactor_integration_broker.py:51:2
50	
51			except Exception:
52				pass

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\patches\v7_2\set_in_standard_filter_property.py:19:2
18				pass
19			except Exception:
20				pass

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\patches\v8_0\drop_unwanted_indexes.py:16:2
15				frappe.db.sql("drop index {0} on `tabCommunication`".format(k))
16			except:
17				pass

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\patches\v8_0\install_new_build_system_requirements.py:2:0
1	from __future__ import print_function, unicode_literals
2	from subprocess import Popen, call, PIPE
3	

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\frappe\patches\v8_0\install_new_build_system_requirements.py:6:8
5	    # update nodejs version if brew exists
6	    p = Popen(['which', 'brew'], stdout=PIPE, stderr=PIPE)
7	    output, err = p.communicate()

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\patches\v8_0\install_new_build_system_requirements.py:6:8
5	    # update nodejs version if brew exists
6	    p = Popen(['which', 'brew'], stdout=PIPE, stderr=PIPE)
7	    output, err = p.communicate()

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\frappe\patches\v8_0\install_new_build_system_requirements.py:9:8
8	    if output:
9	        call(['brew', 'upgrade', 'node'])
10	    else:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\patches\v8_0\install_new_build_system_requirements.py:9:8
8	    if output:
9	        call(['brew', 'upgrade', 'node'])
10	    else:

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\frappe\patches\v8_0\install_new_build_system_requirements.py:13:4
12	
13	    call([
14	        'npm', 'install',
15	        'babel-core',
16	        'less',
17	        'chokidar',
18	        'babel-preset-es2015',
19	        'babel-preset-es2016',
20	        'babel-preset-es2017',
21	        'babel-preset-babili'
22	    ])

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\patches\v8_0\install_new_build_system_requirements.py:13:4
12	
13	    call([
14	        'npm', 'install',
15	        'babel-core',
16	        'less',
17	        'chokidar',
18	        'babel-preset-es2015',
19	        'babel-preset-es2016',
20	        'babel-preset-es2017',
21	        'babel-preset-babili'
22	    ])

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\frappe\patches\v8_0\rename_listsettings_to_usersettings.py:12:3
11					data = json.loads(us.data)
12				except:
13					continue
14	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\patches\v8_0\rename_page_role_to_has_role.py:29:3
28						row.db_update()
29				except:
30					pass
31	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\permissions.py:460:15
459	
460		frappe.db.sql("""
461			update `tabCustom DocPerm`
462			set `{0}`=%s where name=%s""".format(ptype), (value, name))
463		if validate:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\recorder.py:66:1
65					}
66		except Exception:
67			pass
68	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\search\website_search.py:60:2
59				return frappe._dict(title=title, content=text_content, path=route)
60			except Exception:
61				pass
62			finally:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\sessions.py:71:27
70	
71		return frappe.db.sql_list("""
72			SELECT `sid` FROM `tabSessions`
73			WHERE user=%(user)s
74			AND device in %(device)s
75			{condition}
76			ORDER BY `lastupdate` DESC
77			LIMIT 100 OFFSET {offset}""".format(condition=condition, offset=offset),
78			{"user": user, "device": device})

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\frappe\sessions.py:316:23
315			if rec:
316				data = frappe._dict(eval(rec and rec[0][1] or '{}'))
317				data.user = rec[0][0]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\social\doctype\energy_point_log\energy_point_log.py:233:30
232	
233		points_list =  frappe.db.sql("""
234			SELECT
235				SUM(CASE WHEN `type` != 'Review' THEN `points` ELSE 0 END) AS energy_points,
236				SUM(CASE WHEN `type` = 'Review' THEN `points` ELSE 0 END) AS review_points,
237				SUM(CASE
238					WHEN `type`='Review' AND `points` < 0 {given_points_condition}
239					THEN ABS(`points`)
240					ELSE 0
241				END) as given_points,
242				`user`
243			FROM `tabEnergy Point Log`
244			{conditions}
245			GROUP BY `user`
246			ORDER BY `energy_points` DESC
247		""".format(
248			conditions=conditions,

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\social\doctype\post\post.py:47:9
46		try:
47			page = requests.get(url)
48		except (requests.exceptions.MissingSchema, requests.exceptions.ConnectionError):

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\test_runner.py:169:34
168			if force:
169				for name in frappe.db.sql_list("select name from `tab%s`" % doctype):
170					frappe.delete_doc(doctype, name, force=True)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_api.py:156:8
155			header = {"Authorization": "token {}:{}".format(api_key, generated_secret)}
156			res = requests.post(get_url() + "/api/method/frappe.auth.get_logged_user", headers=header)
157	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_api.py:163:8
162			header = {"Authorization": "Basic {}".format(base64.b64encode(frappe.safe_encode("{}:{}".format(api_key, generated_secret))).decode())}
163			res = requests.post(get_url() + "/api/method/frappe.auth.get_logged_user", headers=header)
164			self.assertEqual(res.status_code, 200)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'ksk&93nxoe3os'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_api.py:168:15
167			# Valid api key, invalid api secret
168			api_secret = "ksk&93nxoe3os"
169			header = {"Authorization": "token {}:{}".format(api_key, api_secret)}

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_api.py:170:8
169			header = {"Authorization": "token {}:{}".format(api_key, api_secret)}
170			res = requests.post(get_url() + "/api/method/frappe.auth.get_logged_user", headers=header)
171			self.assertEqual(res.status_code, 403)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'ksk&93nxoe3os'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_api.py:176:15
175			api_key = "@3djdk3kld"
176			api_secret = "ksk&93nxoe3os"
177			header = {"Authorization": "token {}:{}".format(api_key, api_secret)}

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_api.py:178:8
177			header = {"Authorization": "token {}:{}".format(api_key, api_secret)}
178			res = requests.post(get_url() + "/api/method/frappe.auth.get_logged_user", headers=header)
179			self.assertEqual(res.status_code, 401)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'pwd_012'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_auth.py:18:28
17			self.test_user_mobile = '+911234567890'
18			self.test_user_password = 'pwd_012'
19	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\tests\test_commands.py:8:0
7	import shlex
8	import subprocess
9	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\tests\test_commands.py:96:15
95			command = shlex.split(self.command)
96			self._proc = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
97			self.stdout = clean(self._proc.stdout)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\tests\test_db.py:131:17
130	
131			random_field = choice(fields).lower()
132			random_doc = choice(created_docs)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\tests\test_db.py:132:15
131			random_field = choice(fields).lower()
132			random_doc = choice(created_docs)
133			random_value = random_string(20)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_oauth20.py:67:19
66			# Request for bearer token
67			token_response = requests.post(
68				get_full_url("/api/method/frappe.integrations.oauth2.get_token"),
69				headers=self.form_header,
70				data=encode_params({
71					"grant_type": "authorization_code",
72					"code": auth_code,
73					"redirect_uri": self.redirect_uri,
74					"client_id": self.client_id
75				})
76			)
77	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_oauth20.py:120:19
119			# Request for bearer token
120			token_response = requests.post(
121				get_full_url("/api/method/frappe.integrations.oauth2.get_token"),
122				headers=self.form_header,
123				data=encode_params({
124					"grant_type": "authorization_code",
125					"code": auth_code,
126					"redirect_uri": self.redirect_uri,
127					"client_id": self.client_id
128				})
129			)
130	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_oauth20.py:135:26
134			# Revoke Token
135			revoke_token_response = requests.post(
136				get_full_url("/api/method/frappe.integrations.oauth2.revoke_token"),
137				headers=self.form_header,
138				data={"token": bearer_token.get("access_token")}
139			)
140	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_oauth20.py:154:19
153			# Request for bearer token
154			token_response = requests.post(
155				get_full_url("/api/method/frappe.integrations.oauth2.get_token"),
156				headers=self.form_header,
157				data=encode_params({
158					"grant_type": "password",
159					"username": "test@example.com",
160					"password": "Eastern_43A1W",
161					"client_id":  self.client_id,
162					"scope": self.scope
163				})
164			)
165	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_oauth20.py:215:19
214		# check openid for email test@example.com
215		openid_response = requests.get(
216			get_full_url("/api/method/frappe.integrations.oauth2.openid_profile"),
217			headers=headers
218		)
219	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'test-password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_password.py:16:17
15	
16			new_password = 'test-password'
17			doc.password = new_password

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Eastern_43A1W'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_password.py:51:17
50		def test_hashed_password(self, user='test@example.com'):
51			old_password = 'Eastern_43A1W'
52			new_password = 'Eastern_43A1W-new'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Eastern_43A1W-new'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_password.py:52:17
51			old_password = 'Eastern_43A1W'
52			new_password = 'Eastern_43A1W-new'
53	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'test-rename-password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_password.py:74:13
73		def test_password_on_rename_user(self):
74			password = 'test-rename-password'
75	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'qwe'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_pdf.py:43:13
42		def test_pdf_encryption(self):
43			password = "qwe"
44			pdf = pdfgen.get_pdf(self.html, options={"password": password})

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\tests\test_rename_doc.py:73:13
72			"""Rename an existing document via frappe.rename_doc"""
73			old_name = choice(self.available_documents)
74			new_name = old_name + ".new"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Eastern_43A1W'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_twofactor.py:161:18
160		frappe.form_dict['usr'] = 'test@example.com'
161		frappe.form_dict['pwd'] = 'Eastern_43A1W'
162		frappe.local.form_dict['cmd'] = 'login'

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\translate.py:197:1
196			frappe.local.lang_full_dict.update(user_translations)
197		except Exception:
198			pass
199	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\translate.py:285:33
284		if modules:
285			for name in frappe.db.sql_list("""select name from tabDocType
286				where module in ({})""".format(modules)):
287				messages.extend(get_messages_from_doctype(name))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\translate.py:290:35
289			# pages
290			for name, title in frappe.db.sql("""select name, title from tabPage
291				where module in ({})""".format(modules)):
292				messages.append((None, title or name))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\translate.py:297:33
296			# reports
297			for name in frappe.db.sql_list("""select tabReport.name from tabDocType, tabReport
298				where tabReport.ref_doctype = tabDocType.name
299					and tabDocType.module in ({})""".format(modules)):
300				messages.append((None, name))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\frappe\translate.py:365:1
364	def get_messages_from_workflow(doctype=None, app_name=None):
365		assert doctype or app_name, 'doctype or app_name should be provided'
366	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\twofactor.py:96:9
95	
96		query = """SELECT `name`
97			FROM `tabRole`
98			WHERE `two_factor_auth`= 1
99			AND `name` IN ({0})
100			LIMIT 1""".format(", ".join(roles))
101	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\utils\__init__.py:168:17
167		from random import choice
168		return ''.join([choice(string.ascii_letters + string.digits) for i in range(length)])
169	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\frappe\utils\__init__.py:182:13
181	
182		hexdigest = hashlib.md5(frappe.as_unicode(email).encode('utf-8')).hexdigest()
183	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\utils\__init__.py:186:8
185		try:
186			res = requests.get(gravatar_url)
187			if res.status_code==200:

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\frappe\utils\__init__.py:195:75
194	def get_gravatar_url(email):
195		return "https://secure.gravatar.com/avatar/{hash}?d=mm&s=200".format(hash=hashlib.md5(email.encode('utf-8')).hexdigest())
196	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\utils\__init__.py:306:1
305		import tempfile
306		from subprocess import Popen
307	

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\frappe\utils\__init__.py:310:7
309			with tempfile.TemporaryFile() as stderr:
310				p = Popen(cmd, shell=True, stdout=stdout, stderr=stderr)
311				p.wait()

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\utils\__init__.py:556:1
555			is_valid = pos > 0 and (email_id.rindex(".") > pos) and (len(email_id) - pos > 4)
556		except Exception:
557			#print(e)
558			pass
559		return is_valid

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\utils\backups.py:318:2
317		def backup_files(self):
318			import subprocess
319	

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\frappe\utils\backups.py:331:12
330				output = subprocess.check_output(
331					cmd_string.format(backup_path, files_path), shell=True
332				)
333	
334				if self.verbose and output:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\bot.py:114:29
113				if self.tables:
114					return str(frappe.db.sql('select count(*) from `tab{0}`'.format(self.get_doctype()))[0][0])
115	

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\frappe\utils\change_log.py:124:11
123			result = subprocess.check_output('cd ../apps/{0} && git rev-parse --abbrev-ref HEAD'.format(app),
124				shell=True, stdin=null_stream, stderr=null_stream)
125			result = safe_decode(result)
126			result = result.strip()

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\frappe\utils\change_log.py:135:11
134			result = subprocess.check_output('cd ../apps/{0} && git rev-parse HEAD --short 7'.format(app),
135				shell=True, stdin=null_stream, stderr=null_stream)
136			result = safe_decode(result)
137			result = result.strip()

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\frappe\utils\change_log.py:206:15
205			# Check if repo remote is on github
206			remote_url = subprocess.check_output("cd ../apps/{} && git ls-remote --get-url".format(app), shell=True)
207		except subprocess.CalledProcessError:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\utils\change_log.py:227:5
226		# Get latest version from GitHub
227		r = requests.get(f"https://api.github.com/repos/{owner}/{repo}/releases")
228		if r.ok:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\utils\commands.py:11:8
10		for org in ["frappe", "erpnext"]:
11			req = requests.get(f"https://api.github.com/users/{org}/repos", {"type": "sources", "per_page": 200})
12			if req.ok:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\utils\csvutils.py:193:12
192		}
193		response = requests.get(url, headers=headers)
194	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\frappe\utils\file_manager.py:343:8
342			content = content.encode()
343		return hashlib.md5(content).hexdigest()
344	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\global_search.py:221:15
220					VALUES {0} '''.format(", ".join(batch_values)),
221				'postgres': '''INSERT INTO `__global_search`
222					(doctype, name, content, published, title, route)
223					VALUES {0}
224					ON CONFLICT("name", "doctype") DO NOTHING'''.format(", ".join(batch_values))
225				})

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\goal.py:18:25
17		conditions = ('where ' + filter_str) if filter_str else ''
18		results = frappe.db.sql('''SELECT {aggregation}(`{goal_field}`) AS {goal_field},
19			{month_year_format_query} AS month_year
20			FROM `{table_name}` {conditions}
21			GROUP BY month_year'''
22			.format(
23				aggregation=aggregation,

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\frappe\utils\identicon.py:28:13
27			"""
28			return int(md5(str_.encode('utf-8')).hexdigest(), 16)
29	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\utils\identicon.py:37:10
36			# color = (self.hash & 0xff, self.hash >> 8 & 0xff, self.hash >> 16 & 0xff)
37			color = random.choice((
38				(254, 196, 197),
39				(253, 138, 139),
40				(254, 231, 206),
41				(254, 208, 159),
42				(210, 211, 253),
43				(163, 165, 252),
44				(247, 213, 247),
45				(242, 172, 238),
46				(235, 247, 206),
47				(217, 241, 157),
48				(211, 248, 237),
49				(167, 242, 221),
50				(255, 249, 207),
51				(254, 245, 161),
52				(211, 241, 254),
53				(168, 228, 254),
54				(207, 245, 210),
55				(159, 235, 164),
56			))
57			# print color

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\utils\make_random.py:15:10
14		if rows > 1:
15			nrows = random.randrange(1, rows)
16	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\utils\make_random.py:23:13
22				else:
23					d[key] = random.randrange(*val)
24	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\make_random.py:41:21
40	
41		out = frappe.db.sql("""select name from `tab%s` %s
42			order by RAND() limit 0,1""" % (doctype, condition))
43	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\utils\make_random.py:52:8
51	def can_make(doctype):
52		return random.random() < settings.prob.get(doctype, settings.prob["default"])["make"]
53	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\utils\make_random.py:55:8
54	def how_many(doctype):
55		return random.randrange(*settings.prob.get(doctype, settings.prob["default"])["qty"])

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:62:30
61		if parent:
62			left, right = frappe.db.sql("select lft, rgt from `tab{0}` where name=%s"
63				.format(doctype), parent)[0]
64			validate_loop(doc.doctype, doc.name, left, right)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:66:24
65		else: # root
66			right = frappe.db.sql("""
67				SELECT COALESCE(MAX(rgt), 0) + 1 FROM `tab{0}`
68				WHERE COALESCE(`{1}`, '') = ''
69			""".format(doctype, parent_field))[0][0]
70		right = right or 1

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:73:15
72		# update all on the right
73		frappe.db.sql("update `tab{0}` set rgt = rgt+2, modified=%s where rgt >= %s"
74			.format(doctype), (n, right))
75		frappe.db.sql("update `tab{0}` set lft = lft+2, modified=%s where lft >= %s"

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:75:15
74			.format(doctype), (n, right))
75		frappe.db.sql("update `tab{0}` set lft = lft+2, modified=%s where lft >= %s"
76			.format(doctype), (n, right))
77	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:79:18
78		# update index of new node
79		if frappe.db.sql("select * from `tab{0}` where lft=%s or rgt=%s".format(doctype), (right, right+1)):
80			frappe.msgprint(_("Nested set error. Please contact the Administrator."))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:83:15
82	
83		frappe.db.sql("update `tab{0}` set lft=%s, rgt=%s, modified=%s where name=%s".format(doctype),
84			(right,right+1, n, name))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:93:29
92		if parent:
93			new_parent = frappe.db.sql("""select lft, rgt from `tab{0}`
94				where name = %s""".format(doc.doctype), parent, as_dict=1)[0]
95	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:99:15
98		# move to dark side
99		frappe.db.sql("""update `tab{0}` set lft = -lft, rgt = -rgt, modified=%s
100			where lft >= %s and rgt <= %s""".format(doc.doctype), (n, doc.lft, doc.rgt))
101	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:104:15
103		diff = doc.rgt - doc.lft + 1
104		frappe.db.sql("""update `tab{0}` set lft = lft -%s, rgt = rgt - %s, modified=%s
105			where lft > %s""".format(doc.doctype), (diff, diff, n, doc.rgt))
106	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:108:15
107		# shift left rgts of ancestors whose only rgts must shift
108		frappe.db.sql("""update `tab{0}` set rgt = rgt - %s, modified=%s
109			where lft < %s and rgt > %s""".format(doc.doctype), (diff, n, doc.lft, doc.rgt))
110	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:112:29
111		if parent:
112			new_parent = frappe.db.sql("""select lft, rgt from `tab%s`
113				where name = %s""" % (doc.doctype, '%s'), parent, as_dict=1)[0]
114	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:117:16
116			# set parent lft, rgt
117			frappe.db.sql("""update `tab{0}` set rgt = rgt + %s, modified=%s
118				where name = %s""".format(doc.doctype), (diff, n, parent))
119	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:121:16
120			# shift right at new parent
121			frappe.db.sql("""update `tab{0}` set lft = lft + %s, rgt = rgt + %s, modified=%s
122				where lft > %s""".format(doc.doctype), (diff, diff, n, new_parent.rgt))
123	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:125:16
124			# shift right rgts of ancestors whose only rgts must shift
125			frappe.db.sql("""update `tab{0}` set rgt = rgt + %s, modified=%s
126				where lft < %s and rgt > %s""".format(doc.doctype),
127				(diff, n, new_parent.lft, new_parent.rgt))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:133:26
132			# new root
133			max_rgt = frappe.db.sql("""select max(rgt) from `tab{0}`""".format(doc.doctype))[0][0]
134			new_diff = max_rgt + 1 - doc.lft

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:137:15
136		# bring back from dark side
137		frappe.db.sql("""update `tab{0}` set lft = -lft + %s, rgt = -rgt + %s, modified=%s
138			where lft < 0""".format(doc.doctype), (new_diff, new_diff, n))
139	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:154:24
153		right = 1
154		result = frappe.db.sql("SELECT name FROM `tab%s` WHERE `%s`='' or `%s` IS NULL ORDER BY name ASC" % (doctype, parent_field, parent_field))
155		for r in result:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:171:24
170		# get all children of this node
171		result = frappe.db.sql("SELECT name FROM `tab{0}` WHERE `{1}`=%s"
172			.format(doctype, parent_field), (parent))
173		for r in result:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:178:15
177		# the children of this node we also know the right value
178		frappe.db.sql("""UPDATE `tab{0}` SET lft=%s, rgt=%s, modified=%s
179			WHERE name=%s""".format(doctype), (left,right,n,parent))
180	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:187:31
186		"""check if item not an ancestor (loop)"""
187		if name in frappe.db.sql_list("""select name from `tab{0}` where lft <= %s and rgt >= %s"""
188			 .format(doctype), (lft, rgt)):
189			frappe.throw(_("Item cannot be added to its own descendents"), NestedSetRecursionError)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:223:31
222		def validate_if_child_exists(self):
223			has_children = frappe.db.sql("""select count(name) from `tab{doctype}`
224				where `{nsm_parent_field}`=%s""".format(doctype=self.doctype, nsm_parent_field=self.nsm_parent_field),
225				(self.name,))[0][0]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:242:16
241			# set old_parent for children
242			frappe.db.sql("update `tab{0}` set old_parent=%s where {1}=%s"
243				.format(self.doctype, parent_field), (newdn, newdn))
244	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:260:20
259			if hasattr(self, group_identifier) and not bool(self.get(group_identifier)):
260				if frappe.db.sql("""select name from `tab{0}` where {1}=%s and docstatus!=2"""
261					.format(self.doctype, self.nsm_parent_field), (self.name)):
262					frappe.throw(_("{0} {1} cannot be a leaf node as it has children").format(_(self.doctype), self.name))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:269:24
268		"""Get root element of a DocType with a tree structure"""
269		result = frappe.db.sql("""select t1.name from `tab{0}` t1 where
270			(select count(*) from `tab{1}` t2 where
271				t2.lft < t1.lft and t2.rgt > t1.rgt) = 0
272			and t1.rgt > t1.lft""".format(doctype, doctype))
273		return result[0][0] if result else None

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\password.py:56:16
55		try:
56			frappe.db.sql("""insert into `__Auth` (doctype, name, fieldname, `password`, encrypted)
57				values (%(doctype)s, %(name)s, %(fieldname)s, %(pwd)s, 1)
58				{on_duplicate_update} `password`=%(pwd)s, encrypted=1""".format(
59					on_duplicate_update=frappe.db.get_on_duplicate_update(['doctype', 'name', 'fieldname'])

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\utils\pdf.py:9:0
8	from distutils.version import LooseVersion
9	import subprocess
10	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b108_hardcoded_tmp_directory.html
   Location: .\frappe\utils\pdf.py:128:14
127			# Use wkhtmltopdf's cookie-jar feature to set cookies and restrict them to host domain
128			cookiejar = "/tmp/{}.jar".format(frappe.generate_hash())
129	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\utils\pdf.py:155:2
154					options[attr] = str(match[-1][3]).strip()
155			except:
156				pass
157	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b108_hardcoded_tmp_directory.html
   Location: .\frappe\utils\pdf.py:187:24
186				# create temp file
187				fname = os.path.join("/tmp", "frappe-pdf-{0}.html".format(frappe.generate_hash()))
188				with open(fname, "wb") as f:

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\frappe\utils\pdf.py:221:9
220			try:
221				res = subprocess.check_output(["wkhtmltopdf", "--version"])
222				wkhtmltopdf_version = res.decode('utf-8').split(" ")[1]

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\utils\pdf.py:221:9
220			try:
221				res = subprocess.check_output(["wkhtmltopdf", "--version"])
222				wkhtmltopdf_version = res.decode('utf-8').split(" ")[1]

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\utils\pdf.py:224:2
223				frappe.cache().hset("wkhtmltopdf_version", None, wkhtmltopdf_version)
224			except Exception:
225				pass
226	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b108_hardcoded_tmp_directory.html
   Location: .\frappe\utils\print_format.py:80:22
79		# Get the content of the merged pdf files
80		fname = os.path.join("/tmp", "frappe-pdf-{0}.pdf".format(frappe.generate_hash()))
81		output.write(open(fname,"wb"))

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: .\frappe\utils\reset_doc.py:32:18
31				app, branch, doc_path.split('apps/'+app)[1]])
32			original_file = urlopen(git_link).read()
33		except:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\frappe\utils\safe_exec.py:41:1
40		# execute script compiled by RestrictedPython
41		exec(compile_restricted(script), exec_globals, _locals) # pylint: disable=exec-used
42	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\user.py:229:33
228		from frappe.core.doctype.user.user import STANDARD_USERS
229		system_managers = frappe.db.sql("""SELECT DISTINCT `name`, `creation`,
230			CONCAT_WS(' ',
231				CASE WHEN `first_name`= '' THEN NULL ELSE `first_name` END,
232				CASE WHEN `last_name`= '' THEN NULL ELSE `last_name` END
233			) AS fullname
234			FROM `tabUser` AS p
235			WHERE `docstatus` < 2
236			AND `enabled` = 1
237			AND `name` NOT IN ({})
238			AND exists
239				(SELECT *
240					FROM `tabHas Role` AS ur
241					WHERE ur.parent = p.name
242					AND ur.role='System Manager')
243			ORDER BY `creation` DESC""".format(", ".join(["%s"]*len(STANDARD_USERS))),
244				STANDARD_USERS, as_dict=True)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\website\doctype\blog_post\blog_post.py:228:9
227	
228		query = """\
229			select
230				t1.title, t1.name, t1.blog_category, t1.route, t1.published_on, t1.read_time,
231					t1.published_on as creation,
232					t1.read_time as read_time,
233					t1.featured as featured,
234					t1.meta_image as cover_image,
235					t1.content as content,
236					t1.content_type as content_type,
237					t1.content_html as content_html,
238					t1.content_md as content_md,
239					ifnull(t1.blog_intro, t1.content) as intro,
240					t2.full_name, t2.avatar, t1.blogger,
241					(select count(name) from `tabComment`
242						where
243							comment_type='Comment'
244							and reference_doctype='Blog Post'
245							and reference_name=t1.name) as comments
246			from `tabBlog Post` t1, `tabBlogger` t2
247			where ifnull(t1.published,0)=1
248			and t1.blogger = t2.name
249			%(condition)s
250			order by featured desc, published_on desc, name asc
251			limit %(page_len)s OFFSET %(start)s""" % {
252				"start": limit_start, "page_len": limit_page_length,
253					"condition": (" and " + " and ".join(conditions)) if conditions else ""
254			}
255	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\website\doctype\web_page\web_page.py:195:11
194					try:
195						res = requests.get(link)
196					except requests.exceptions.SSLError:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\website\doctype\website_settings\google_indexing.py:40:9
39				}
40				res = requests.post(get_auth_url(), data=data).json()
41	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\website\doctype\website_settings\website_settings.py:99:9
98			try:
99				res = requests.post(get_auth_url(), data=data).json()
100			except requests.exceptions.HTTPError:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\website\doctype\website_theme\website_theme.py:52:2
51		def generate_bootstrap_theme(self):
52			from subprocess import Popen, PIPE
53	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\website\doctype\website_theme\website_theme.py:73:12
72	
73			process = Popen(command, cwd=frappe.get_app_path('frappe', '..'), stdout=PIPE, stderr=PIPE)
74	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\website\report\website_analytics\website_analytics.py:99:10
98	
99			query = """
100					SELECT
101						DATE_FORMAT({0}, %s) as date,
102						COUNT(*) as count,
103						COUNT(CASE WHEN is_unique = 1 THEN 1 END) as unique_count
104					FROM `tabWeb Page View`
105					WHERE creation BETWEEN %s AND %s
106					GROUP BY DATE_FORMAT({0}, %s)
107					ORDER BY creation
108				""".format(field)
109	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\website\report\website_analytics\website_analytics.py:125:10
124	
125			query = """
126					SELECT
127						DATE_TRUNC(%s, {0}) as date,
128						COUNT(*) as count,
129						COUNT(CASE WHEN CAST(is_unique as Integer) = 1 THEN 1 END) as unique_count
130					FROM "tabWeb Page View"
131					WHERE  coalesce("tabWeb Page View".{0}, '0001-01-01') BETWEEN %s AND %s
132					GROUP BY date_trunc(%s, {0})
133					ORDER BY date
134				""".format(field)
135	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\website\router.py:313:2
312					source = res['body']
313			except Exception:
314				pass
315	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\workflow\doctype\workflow\workflow.py:50:18
49				if not d.doc_status in docstatus_map:
50					frappe.db.sql("""
51						UPDATE `tab{doctype}`
52						SET `{field}` = %s
53						WHERE ifnull(`{field}`, '') = ''
54						AND `docstatus` = %s
55					""".format(doctype=self.document_type, field=self.workflow_state_field),
56					(d.state, d.doc_status))

--------------------------------------------------

Code scanned:
	Total lines of code: 77505
	Total lines skipped (#nosec): 8
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 106
		Medium: 235
		High: 16
	Total issues (by confidence):
		Undefined: 0
		Low: 221
		Medium: 27
		High: 109
Files skipped (0):
