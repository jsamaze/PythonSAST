Working... ---------------------------------------- 100% 0:00:16
Run started:2024-02-10 22:51:11.353437

Test results:
>> Issue: [B412:blacklist] Consider possible security implications associated with CGIHandler module.
   Severity: High   Confidence: High
   CWE: CWE-284 (https://cwe.mitre.org/data/definitions/284.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b412-import-httpoxy
   Location: .\anyserver.py:25:8
24	    def cgi(app, address=None, **options):
25	        from wsgiref.handlers import CGIHandler
26	        CGIHandler().run(app)  # Just ignore host and port here

--------------------------------------------------
>> Issue: [B412:blacklist] Consider possible security implications associated with wsgiref.handlers.CGIHandler module.
   Severity: High   Confidence: High
   CWE: CWE-284 (https://cwe.mitre.org/data/definitions/284.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b412-import-httpoxy
   Location: .\anyserver.py:26:8
25	        from wsgiref.handlers import CGIHandler
26	        CGIHandler().run(app)  # Just ignore host and port here
27	

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\applications\admin\controllers\appadmin.py:94:4
93	def eval_in_global_env(text):
94	    exec ('_ret=%s' % text, {}, global_env)
95	    return global_env['_ret']

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with shelve module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\applications\admin\controllers\appadmin.py:401:4
400	
401	    import shelve
402	    import os

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\applications\admin\controllers\appadmin.py:630:24
629	                        # compiled app and windows build don't support code inspection
630	                        except:
631	                            pass
632	                if len(functions):

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\applications\admin\controllers\default.py:776:12
775	            mopath = '.'.join(request.args[2:])[:-3]
776	            exec('import applications.%s.modules.%s' % (
777	                request.args[0], mopath))
778	            reload(sys.modules['applications.%s.modules.%s'

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\applications\admin\controllers\default.py:1636:19
1635	
1636	            hash = hashlib.md5(to_bytes(error['traceback'])).hexdigest()
1637	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\applications\admin\controllers\default.py:1671:23
1670	                error = pickle.loads(fn.ticket_data)
1671	                hash = hashlib.md5(error['traceback']).hexdigest()
1672	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\applications\admin\controllers\gae.py:6:4
5	    import fcntl
6	    import subprocess
7	    import signal

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\applications\admin\controllers\gae.py:63:8
62	            kill()
63	        except:
64	            pass
65	        ignore_apps = [item for item in apps

--------------------------------------------------
>> Issue: [B604:any_other_function_with_shell_equals_true] Function call with shell=True parameter identified, possible security issue.
   Severity: Medium   Confidence: Low
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b604_any_other_function_with_shell_equals_true.html
   Location: .\applications\admin\controllers\gae.py:83:50
82	        p = cache.ram('gae_upload',
83	                      lambda s=subprocess, c=cmd: s.Popen(c, shell=True,
84	                                                          stdin=s.PIPE,
85	                                                          stdout=s.PIPE,
86	                                                          stderr=s.PIPE, close_fds=True), -1)
87	        p.stdin.write(form.vars.password + '\n')

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b108_hardcoded_tmp_directory.html
   Location: .\applications\admin\controllers\openshift.py:22:30
21	        Field(
22	            'osrepo', default='/tmp', label=T('Path to local openshift repo root.'),
23	            requires=EXISTS(error_message=T('directory not found'))),

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\applications\admin\controllers\openshift.py:33:8
32	            kill()
33	        except:
34	            pass
35	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\applications\admin\controllers\openshift.py:45:8
44	        index = repo.index
45	        assert repo.bare == False
46	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\applications\admin\controllers\webservices.py:112:8
111	            gluon.debug.dbg_debugger.do_quit()
112	        except:
113	            pass
114	    if hasattr(gluon.debug, 'dbg_listener'):

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\applications\admin\controllers\wizard.py:6:0
5	import re
6	import pickle
7	import urllib

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b301-pickle
   Location: .\applications\admin\controllers\wizard.py:72:38
71	                    try:
72	                        session.app = pickle.load(metafile)
73	                    finally:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\applications\examples\controllers\appadmin.py:94:4
93	def eval_in_global_env(text):
94	    exec ('_ret=%s' % text, {}, global_env)
95	    return global_env['_ret']

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with shelve module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\applications\examples\controllers\appadmin.py:401:4
400	
401	    import shelve
402	    import os

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\applications\examples\controllers\appadmin.py:630:24
629	                        # compiled app and windows build don't support code inspection
630	                        except:
631	                            pass
632	                if len(functions):

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\applications\welcome\controllers\appadmin.py:94:4
93	def eval_in_global_env(text):
94	    exec ('_ret=%s' % text, {}, global_env)
95	    return global_env['_ret']

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with shelve module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\applications\welcome\controllers\appadmin.py:401:4
400	
401	    import shelve
402	    import os

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\applications\welcome\controllers\appadmin.py:630:24
629	                        # compiled app and windows build don't support code inspection
630	                        except:
631	                            pass
632	                if len(functions):

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\extras\build_web2py\build_web2py.py:18:0
17	import zipfile
18	import subprocess
19	import platform

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\extras\build_web2py\build_web2py.py:79:8
78	    if BUILD_DEBUG: # debug only
79	        subprocess.call('pyinstaller --clean  --icon=extras/icons/web2py.ico \
80	                        --hidden-import=site-packages --hidden-import=gluon.packages.dal.pydal \
81	                        --hidden-import=gluon.packages.yatl.yatl web2py.py')
82	        zip_filename = 'web2py_win_debug'

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\extras\build_web2py\build_web2py.py:79:8
78	    if BUILD_DEBUG: # debug only
79	        subprocess.call('pyinstaller --clean  --icon=extras/icons/web2py.ico \
80	                        --hidden-import=site-packages --hidden-import=gluon.packages.dal.pydal \
81	                        --hidden-import=gluon.packages.yatl.yatl web2py.py')
82	        zip_filename = 'web2py_win_debug'

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\extras\build_web2py\build_web2py.py:84:8
83	    else: # normal run    
84	        subprocess.call('pyinstaller --clean  web2py.win.spec')
85	        subprocess.call('pyinstaller --clean  web2py.win_no_console.spec')

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\extras\build_web2py\build_web2py.py:84:8
83	    else: # normal run    
84	        subprocess.call('pyinstaller --clean  web2py.win.spec')
85	        subprocess.call('pyinstaller --clean  web2py.win_no_console.spec')

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\extras\build_web2py\build_web2py.py:85:8
84	        subprocess.call('pyinstaller --clean  web2py.win.spec')
85	        subprocess.call('pyinstaller --clean  web2py.win_no_console.spec')
86	        source_no_console = 'dist/web2py_no_console/'

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\extras\build_web2py\build_web2py.py:85:8
84	        subprocess.call('pyinstaller --clean  web2py.win.spec')
85	        subprocess.call('pyinstaller --clean  web2py.win_no_console.spec')
86	        source_no_console = 'dist/web2py_no_console/'

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\extras\build_web2py\build_web2py.py:108:8
107	    if BUILD_DEBUG: #debug only    
108	        subprocess.call("pyinstaller --clean --icon=extras/icons/web2py.icns --hidden-import=gluon.packages.dal.pydal  --hidden-import=gluon.packages.yatl.yatl \
109	                        --hidden-import=site-packages --windowed web2py.py", shell=True)
110	        zip_filename = 'web2py_osx_debug'

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\extras\build_web2py\build_web2py.py:109:8
108	        subprocess.call("pyinstaller --clean --icon=extras/icons/web2py.icns --hidden-import=gluon.packages.dal.pydal  --hidden-import=gluon.packages.yatl.yatl \
109	                        --hidden-import=site-packages --windowed web2py.py", shell=True)
110	        zip_filename = 'web2py_osx_debug'
111	    else: # normal run

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\extras\build_web2py\build_web2py.py:112:8
111	    else: # normal run
112	        subprocess.call("pyinstaller --clean web2py.mac.spec", shell=True)
113	        # cleanup + move binary files to dist folder

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\extras\build_web2py\build_web2py.py:112:8
111	    else: # normal run
112	        subprocess.call("pyinstaller --clean web2py.mac.spec", shell=True)
113	        # cleanup + move binary files to dist folder

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\authapi.py:887:8
886	            table_user[passfield].requires[-1].min_length = settings.password_min_length
887	        except:
888	            pass
889	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\cache.py:261:68
260	        self.stats[self.app]['misses'] += 1
261	        if HAVE_PSUTIL and self.max_ram_utilization is not None and random.random() < 0.10:
262	            remove_oldest_entries(self.storage, percentage=self.max_ram_utilization)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\compileapp.py:90:33
89	    vars = Storage(vars or {})
90	    target = target or 'c' + str(random.random())[2:]
91	    attr['_id'] = target

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\compileapp.py:197:37
196	        vars = Storage(vars or {})
197	        target = target or 'c' + str(random.random())[2:]
198	        attr['_id'] = target

--------------------------------------------------
>> Issue: [B302:blacklist] Deserialization with the marshal module is possibly dangerous.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b302-marshal
   Location: .\gluon\compileapp.py:428:11
427	        raise SystemError('compiled code is incompatible')
428	    return marshal.loads(data[MARSHAL_HEADER_SIZE:])
429	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '******'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\console.py:528:28
527	    copy_options = copy.deepcopy(options)
528	    copy_options.password = '******'
529	    global_settings.cmd_options = copy_options

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\AuthorizeNet.py:37:16
36	            for kw, val in kws.iteritems():
37	                assert kw in kws, "%r not in field list" % kw
38	                values[fields[kw]] = val

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\contrib\DowCommerce.py:37:23
36	            username = 'demo'
37	            password = 'password'
38	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\autolinks.py:153:12
152	                return loads(data)  # json!
153	            except:
154	                pass
155	    return {}

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\gluon\contrib\dbg.py:374:18
373	        if self.frame:
374	            ret = eval(arg, self.frame.f_globals,
375	                        self.frame_locals)
376	        else:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\gluon\contrib\dbg.py:393:16
392	                sys.displayhook = self.displayhook
393	                exec(code, globals, locals)
394	                ret = self.displayhook_value

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\dbg.py:484:16
483	                    doc = inspect.getdoc(obj)
484	                except:
485	                    pass
486	            return (name, argspec[1:-1], doc.strip())

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\dbg.py:588:8
587	            self.pipe.close()
588	        except:
589	            pass
590	

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\gluon\contrib\dbg.py:861:39
860	        "List source code for the current file"
861	        lines = Frontend.do_list(self, eval(args, {}, {}) if args else None)
862	        self.print_lines(lines)

--------------------------------------------------
>> Issue: [B406:blacklist] Using xml.sax to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b406-import-xml-sax
   Location: .\gluon\contrib\feedparser.py:174:4
173	try:
174	    import xml.sax
175	    from xml.sax.saxutils import escape as _xmlescape

--------------------------------------------------
>> Issue: [B406:blacklist] Using escape to parse untrusted XML data is known to be vulnerable to XML attacks. Replace escape with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b406-import-xml-sax
   Location: .\gluon\contrib\feedparser.py:175:4
174	    import xml.sax
175	    from xml.sax.saxutils import escape as _xmlescape
176	except ImportError:

--------------------------------------------------
>> Issue: [B317:blacklist] Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b313-b320-xml-bad-sax
   Location: .\gluon\contrib\feedparser.py:187:8
186	    try:
187	        xml.sax.make_parser(PREFERRED_XML_PARSERS) # test for valid parsers
188	    except xml.sax.SAXReaderNotAvailable:

--------------------------------------------------
>> Issue: [B317:blacklist] Using xml.sax.make_parser to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.sax.make_parser with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b313-b320-xml-bad-sax
   Location: .\gluon\contrib\feedparser.py:3945:20
3944	        feedparser = _StrictFeedParser(baseuri, baselang, 'utf-8')
3945	        saxparser = xml.sax.make_parser(PREFERRED_XML_PARSERS)
3946	        saxparser.setFeature(xml.sax.handler.feature_namespaces, 1)

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\gluon\contrib\fpdf\fpdf.py:622:24
621	                    with open(name+'.font') as file:
622	                        exec(compile(file.read(), name+'.font', 'exec'))
623	                    if fontkey not in fpdf_charwidths:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\fpdf\fpdf.py:1017:20
1016	                        break;
1017	                    except:
1018	                        pass
1019	                #last resource

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with cPickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\gluon\contrib\fpdf\py3k.py:11:4
10	try:
11	    import cPickle as pickle
12	except ImportError:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\gluon\contrib\fpdf\py3k.py:13:4
12	except ImportError:
13	    import pickle
14	

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\gluon\contrib\fpdf\template.py:61:28
60	                    else:
61	                        v = eval(v.strip())
62	                    kargs[keys[i]] = v

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b108_hardcoded_tmp_directory.html
   Location: .\gluon\contrib\gateways\fcgi.py:138:15
137	    DEBUG = 0
138	    DEBUGLOG = '/tmp/fcgi.log'
139	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\gateways\fcgi.py:148:8
147	            f.close()
148	        except:
149	            pass
150	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\gateways\fcgi.py:176:12
175	
176	            assert self._avail >= 0
177	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\gateways\fcgi.py:336:8
335	    def write(self, data):
336	        assert not self.closed
337	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\gateways\fcgi.py:349:8
348	    def writelines(self, lines):
349	        assert not self.closed
350	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\gateways\fcgi.py:664:8
663	                    break
664	        except:
665	            pass
666	        self._sock.close()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\gateways\fcgi.py:1032:16
1031	                # INET socket
1032	                assert type(self._bindAddress) is tuple
1033	                assert len(self._bindAddress) == 2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\gateways\fcgi.py:1033:16
1032	                assert type(self._bindAddress) is tuple
1033	                assert len(self._bindAddress) == 2
1034	                sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\gateways\fcgi.py:1219:12
1218	        def write(data):
1219	            assert type(data) is str, 'write() argument must be string'
1220	            assert headers_set, 'write() before start_response()'

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\gateways\fcgi.py:1220:12
1219	            assert type(data) is str, 'write() argument must be string'
1220	            assert headers_set, 'write() before start_response()'
1221	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\gateways\fcgi.py:1234:20
1233	                                                    str(len(data))))
1234	                    except:
1235	                        pass
1236	                s = 'Status: %s\r\n' % status

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\gateways\fcgi.py:1254:16
1253	            else:
1254	                assert not headers_set, 'Headers already set!'
1255	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\gateways\fcgi.py:1256:12
1255	
1256	            assert type(status) is str, 'Status must be a string'
1257	            assert len(status) >= 4, 'Status must be at least 4 characters'

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\gateways\fcgi.py:1257:12
1256	            assert type(status) is str, 'Status must be a string'
1257	            assert len(status) >= 4, 'Status must be at least 4 characters'
1258	            assert int(status[:3]), 'Status must begin with 3-digit code'

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\gateways\fcgi.py:1258:12
1257	            assert len(status) >= 4, 'Status must be at least 4 characters'
1258	            assert int(status[:3]), 'Status must begin with 3-digit code'
1259	            assert status[3] == ' ', 'Status must have a space after code'

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\gateways\fcgi.py:1259:12
1258	            assert int(status[:3]), 'Status must begin with 3-digit code'
1259	            assert status[3] == ' ', 'Status must have a space after code'
1260	            assert type(response_headers) is list, 'Headers must be a list'

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\gateways\fcgi.py:1260:12
1259	            assert status[3] == ' ', 'Status must have a space after code'
1260	            assert type(response_headers) is list, 'Headers must be a list'
1261	            if __debug__:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\gateways\fcgi.py:1263:20
1262	                for name,val in response_headers:
1263	                    assert type(name) is str, 'Header names must be strings'
1264	                    assert type(val) is str, 'Header values must be strings'

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\gateways\fcgi.py:1264:20
1263	                    assert type(name) is str, 'Header names must be strings'
1264	                    assert type(val) is str, 'Header values must be strings'
1265	

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html
   Location: .\gluon\contrib\generics.py:32:7
31	def pdflatex_from_html(html):
32	    if os.system('which pdflatex > /dev/null') == 0:
33	        markmin = TAG(html).element('body').flatten(markmin_serializer)

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\gluon\contrib\generics.py:32:7
31	def pdflatex_from_html(html):
32	    if os.system('which pdflatex > /dev/null') == 0:
33	        markmin = TAG(html).element('body').flatten(markmin_serializer)

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html
   Location: .\gluon\contrib\generics.py:73:7
72	    # try use latex and pdflatex
73	    if os.system('which pdflatex > /dev/null') == 0:
74	        return pdflatex_from_html(html)

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\gluon\contrib\generics.py:73:7
72	    # try use latex and pdflatex
73	    if os.system('which pdflatex > /dev/null') == 0:
74	        return pdflatex_from_html(html)

--------------------------------------------------
>> Issue: [B408:blacklist] Using xml.dom.minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: .\gluon\contrib\login_methods\cas_auth.py:11:0
10	"""
11	import xml.dom.minidom as dom
12	import xml.parsers.expat as expat

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: .\gluon\contrib\login_methods\cas_auth.py:121:23
120	            try:
121	                dxml = dom.parseString(data)
122	                envelop = dxml.getElementsByTagName("cas:authenticationSuccess")

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\gluon\contrib\login_methods\dropbox_account.py:36:4
35	
36	    def __init__(self,
37	                 request,
38	                 key="",
39	                 secret="",
40	                 access_type="app_folder",
41	                 login_url="",
42	                 on_login_failure=None,
43	                 ):
44	
45	        self.request = request
46	        self.key = key
47	        self.secret = secret
48	        self.access_type = access_type
49	        self.login_url = login_url
50	        self.on_login_failure = on_login_failure
51	        self.sess = session.DropboxSession(
52	            self.key, self.secret, self.access_type)
53	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\login_methods\email_auth.py:43:16
42	                    server.quit()
43	                except:  # server might already close connection after error
44	                    pass
45	            return False

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\contrib\login_methods\freeipa_auth.py:24:23
23	    def freeipa_auth_aux(username, password):
24	        if password == "" or username == "":
25	            logger.warning("blank username / password not allowed")

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\contrib\login_methods\ldap_auth.py:208:23
207	                      db=db):
208	        if password == '':  # http://tools.ietf.org/html/rfc4513#section-5.1.2
209	            logger.warning('blank password not allowed')

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\gluon\contrib\login_methods\loginradius_account.py:31:4
30	
31	    def __init__(self, request, api_key="", api_secret="",
32	                 url="", on_login_failure=None):
33	
34	        self.request = request
35	        self.api_key = api_key
36	        self.api_secret = api_secret
37	        self.url = url
38	        self.auth_base_url = "https://hub.loginradius.com/UserProfile.ashx/"
39	        self.profile = None
40	        self.on_login_failure = on_login_failure
41	        self.mappings = Storage()
42	
43	        def defaultmapping(profile):
44	            first_name = profile.get('FirstName')
45	            last_name = profile.get('LastName')
46	            email = profile.get('Email', [{}])[0].get('Value')
47	            reg_id = profile.get('ID', '')
48	            username = profile.get('ProfileName', email)
49	
50	            return dict(registration_id=reg_id, username=username, email=email,
51	                        first_name=first_name, last_name=last_name)
52	
53	        self.mappings.default = defaultmapping
54	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\gluon\contrib\login_methods\motp_auth.py:87:19
86	            to_hash = str(t) + secret + pin
87	            hash = md5(to_hash).hexdigest()[:6]
88	            if otp == hash:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\markdown\markdown2.py:138:20
137	
138	SECRET_SALT = bytes(randint(0, 1000000))
139	def _hash_text(s):

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\markdown\markdown2.py:223:8
222	            self.extras.update(extras)
223	        assert isinstance(self.extras, dict)
224	        if "toc" in self.extras and not "header-ids" in self.extras:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\markdown\markdown2.py:425:16
424	                emacs_vars_str = match.group(1)
425	                assert '\n' not in emacs_vars_str
426	                emacs_var_strs = [s.strip() for s in emacs_vars_str.split(';')

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\markdown\markdown2.py:1870:24
1869	                        cuddled_list = self._do_lists(graf[start:]).rstrip("\n")
1870	                        assert cuddled_list.startswith("<ul>") or cuddled_list.startswith("<ol>")
1871	                        graf = graf[:start]

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\markdown\markdown2.py:2303:8
2302	def _xml_encode_email_char_at_random(ch):
2303	    r = random()
2304	    # Roughly 10% raw, 45% hex, 45% dec.

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\gluon\contrib\markdown\markdown2.py:2420:12
2419	        if opts.compare:
2420	            from subprocess import Popen, PIPE
2421	            print("==== Markdown.pl ====")

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\gluon\contrib\markdown\markdown2.py:2422:16
2421	            print("==== Markdown.pl ====")
2422	            p = Popen('perl %s' % markdown_pl, shell=True, stdin=PIPE, stdout=PIPE, close_fds=True)
2423	            p.stdin.write(text.encode('utf-8'))

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\markmin\markmin2html.py:676:12
675	                b = safe_eval(make_dict(b), env)
676	            except:
677	                pass
678	            try:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\gluon\contrib\markmin\markmin2pdf.py:7:0
6	
7	import subprocess
8	import os

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\gluon\contrib\markmin\markmin2pdf.py:72:18
71	        try:
72	            ret = subprocess.call([pdflatex,
73	                                   '-interaction=nonstopmode',
74	                                   '-output-format', 'pdf',
75	                                   '-output-directory', tmpdir,
76	                                   texfile],
77	                                  cwd=os.path.dirname(texfile), stdout=outfile,
78	                                  stderr=subprocess.PIPE)
79	        finally:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with cPickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\gluon\contrib\memcache\__init__.py:11:0
10	
11	import cPickle as pickle
12	import thread

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\gluon\contrib\memcache\memcache.py:52:0
51	import os
52	import pickle
53	import re

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b301-pickle
   Location: .\gluon\contrib\memcache\memcache.py:1530:12
1529	            print("OK", end=" ")
1530	        s = pickle.loads('V\\u4f1a\np0\n.')
1531	        try:

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\gluon\contrib\minify\minify.py:22:28
21	else:
22	    hashlib_md5 = lambda s: hashlib.md5(bytes(s, 'utf8'))
23	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\minify\minify.py:96:16
95	                        break
96	                except:
97	                    pass
98	            if concat_css:

--------------------------------------------------
>> Issue: [B408:blacklist] Using parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace parseString with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: .\gluon\contrib\paymentech.py:13:0
12	import sys, httplib, urllib, urllib2
13	from xml.dom.minidom import parseString
14	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: .\gluon\contrib\paymentech.py:334:14
333	
334	        dom = parseString(output)
335	        result["resp_code"] = \

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\pbkdf2_ctypes.py:182:4
181	        print(crypto.SSLeay_version(0))
182	    except:
183	        pass
184	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:52:19
51	        keys = list(self.db.keys())
52	        key = keys[random.randint(0, len(keys) - 1)]
53	        words = key

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:62:16
61	            s = sum(db.values())
62	            i = random.randint(0, s - 1)
63	            for key, value in db.items():

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:73:20
72	            if prefix and regex.findall(key1) and \
73	                    random.random() < 0.01:
74	                key1 = '<a href="%s%s">%s</a>' % (prefix, key1, key1)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:85:21
84	                     'pa', 'po', 'sa', 'so', 'ta', 'to']
85	                    [random.randint(0, 11)] for i in range(n)])
86	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:153:36
152	            elif field.type == 'boolean':
153	                record[fieldname] = random.random() > 0.5
154	            elif field.type == 'date':

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:157:44
156	                    datetime.date(2009, 1, 1) - \
157	                    datetime.timedelta(days=random.randint(0, 365))
158	            elif field.type == 'datetime':

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:161:44
160	                    datetime.datetime(2009, 1, 1) - \
161	                    datetime.timedelta(days=random.randint(0, 365))
162	            elif field.type == 'time':

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:163:20
162	            elif field.type == 'time':
163	                h = random.randint(0, 23)
164	                m = 15 * random.randint(0, 3)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:164:25
163	                h = random.randint(0, 23)
164	                m = 15 * random.randint(0, 3)
165	                record[fieldname] = datetime.time(h, m, 0)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:173:24
172	                    record[fieldname] = options[
173	                        random.randint(0, len(options) - 1)][0]
174	                else:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:180:33
179	                    record[fieldname] = [item[0] for item in random.sample(
180	                        options, random.randint(0, len(options) - 1) / 2)]
181	            elif field.type == 'integer':

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:183:40
182	                try:
183	                    record[fieldname] = random.randint(
184	                        field.requires.minimum, field.requires.maximum - 1)
185	                except:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:187:44
186	                    if 'day' in  fieldname:
187	                        record[fieldname] = random.randint(1,28)
188	                    elif 'month' in fieldname:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:189:43
188	                    elif 'month' in fieldname:
189	                        record[fieldname] =random.randint(1,12)
190	                    elif 'year' in fieldname:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:191:43
190	                    elif 'year' in fieldname:
191	                        record[fieldname] =random.randint(2000,2013)
192	                    else:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:193:44
192	                    else:
193	                        record[fieldname] = random.randint(0, 1000)
194	            elif field.type == 'double' \

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:197:27
196	                if hasattr(field.requires, 'minimum'):
197	                    rand = random.random()
198	                    if str(field.type).startswith('decimal'):

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:205:40
204	                else:
205	                    record[fieldname] = random.random() * 1000
206	            elif field.type[:10] == 'reference ':

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:218:39
217	                    record[fieldname] = \
218	                        ids[tablename][random.randint(0, n - 1)]
219	                else:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:233:40
232	                    record[fieldname] = [item for item in random.sample(
233	                        ids[tablename], random.randint(0, n - 1) / 2)]
234	                else:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:241:33
240	                    record[fieldname] = [item[0] for item in random.sample(
241	                        options, random.randint(0, len(options) - 1) / 2)]
242	            elif field.type == 'string':

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:246:32
245	                    record[fieldname] = \
246	                        options[random.randint(0, len(options) - 1)][0]
247	                elif fieldname.find('url') >= 0:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:254:44
253	                    if fieldname.find('first')>=0:
254	                        record[fieldname] = random.choice(FIRST_NAMES)
255	                    elif fieldname.find('last')>=0:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:256:44
255	                    elif fieldname.find('last')>=0:
256	                        record[fieldname] = random.choice(LAST_NAMES)
257	                    elif fieldname.find('username')>=0:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:258:44
257	                    elif fieldname.find('username')>=0:
258	                        record[fieldname] = random.choice(FIRST_NAMES).lower()+str(random.randint(1000,9999))
259	                    else:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:258:83
257	                    elif fieldname.find('username')>=0:
258	                        record[fieldname] = random.choice(FIRST_NAMES).lower()+str(random.randint(1000,9999))
259	                    else:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:260:44
259	                    else:
260	                        record[fieldname] = random.choice(FIRST_NAMES)+' '+random.choice(LAST_NAMES)
261	                elif fieldname.find('phone')>=0:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:260:75
259	                    else:
260	                        record[fieldname] = random.choice(FIRST_NAMES)+' '+random.choice(LAST_NAMES)
261	                elif fieldname.find('phone')>=0:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:263:24
262	                    record[fieldname] = '(%s%s%s) %s%s%s-%s%s%s%s' % (
263	                        random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'))
264	                elif fieldname.find('address') >=0:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:263:52
262	                    record[fieldname] = '(%s%s%s) %s%s%s-%s%s%s%s' % (
263	                        random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'))
264	                elif fieldname.find('address') >=0:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:263:80
262	                    record[fieldname] = '(%s%s%s) %s%s%s-%s%s%s%s' % (
263	                        random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'))
264	                elif fieldname.find('address') >=0:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:263:108
262	                    record[fieldname] = '(%s%s%s) %s%s%s-%s%s%s%s' % (
263	                        random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'))
264	                elif fieldname.find('address') >=0:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:263:136
262	                    record[fieldname] = '(%s%s%s) %s%s%s-%s%s%s%s' % (
263	                        random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'))
264	                elif fieldname.find('address') >=0:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:263:164
262	                    record[fieldname] = '(%s%s%s) %s%s%s-%s%s%s%s' % (
263	                        random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'))
264	                elif fieldname.find('address') >=0:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:263:192
262	                    record[fieldname] = '(%s%s%s) %s%s%s-%s%s%s%s' % (
263	                        random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'))
264	                elif fieldname.find('address') >=0:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:263:220
262	                    record[fieldname] = '(%s%s%s) %s%s%s-%s%s%s%s' % (
263	                        random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'))
264	                elif fieldname.find('address') >=0:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:263:248
262	                    record[fieldname] = '(%s%s%s) %s%s%s-%s%s%s%s' % (
263	                        random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'))
264	                elif fieldname.find('address') >=0:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:263:276
262	                    record[fieldname] = '(%s%s%s) %s%s%s-%s%s%s%s' % (
263	                        random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'),random.choice('1234567890'))
264	                elif fieldname.find('address') >=0:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:265:61
264	                elif fieldname.find('address') >=0:
265	                    record[fieldname] = '%s %s %s Street' % (random.randint(1000,9000),random.choice(FIRST_NAMES),random.choice(LAST_NAMES))
266	                else:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:265:87
264	                elif fieldname.find('address') >=0:
265	                    record[fieldname] = '%s %s %s Street' % (random.randint(1000,9000),random.choice(FIRST_NAMES),random.choice(LAST_NAMES))
266	                else:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:265:114
264	                elif fieldname.find('address') >=0:
265	                    record[fieldname] = '%s %s %s Street' % (random.randint(1000,9000),random.choice(FIRST_NAMES),random.choice(LAST_NAMES))
266	                else:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:271:79
270	                if fieldname.find('address')>=0:
271	                    record[fieldname] = '%s %s %s Street\nChicago, IL\nUSA' % (random.randint(1000,9000),random.choice(FIRST_NAMES),random.choice(LAST_NAMES))
272	                else:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:271:105
270	                if fieldname.find('address')>=0:
271	                    record[fieldname] = '%s %s %s Street\nChicago, IL\nUSA' % (random.randint(1000,9000),random.choice(FIRST_NAMES),random.choice(LAST_NAMES))
272	                else:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:271:132
270	                if fieldname.find('address')>=0:
271	                    record[fieldname] = '%s %s %s Street\nChicago, IL\nUSA' % (random.randint(1000,9000),random.choice(FIRST_NAMES),random.choice(LAST_NAMES))
272	                else:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\populate.py:274:24
273	                    record[fieldname] = ell.generate(
274	                        random.randint(10, 100), prefix=None)
275	        yield record

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pymysql\connections.py:78:8
77	    def _makefile(sock, mode):
78	        assert mode == 'rb'
79	        return SockFile(sock)

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\gluon\contrib\pymysql\connections.py:528:4
527	
528	    def __init__(self, host=None, user=None, password="",
529	                 database=None, port=0, unix_socket=None,
530	                 charset='', sql_mode=None,
531	                 read_default_file=None, conv=None, use_unicode=None,
532	                 client_flag=0, cursorclass=Cursor, init_command=None,
533	                 connect_timeout=None, ssl=None, read_default_group=None,
534	                 compress=None, named_pipe=None, no_delay=None,
535	                 autocommit=False, db=None, passwd=None, local_infile=False,
536	                 max_allowed_packet=16*1024*1024, defer_connect=False,
537	                 auth_plugin_map={}, read_timeout=None, write_timeout=None):
538	        """
539	        Establish a connection to the MySQL database. Accepts several
540	        arguments:
541	
542	        host: Host where the database server is located
543	        user: Username to log in as
544	        password: Password to use.
545	        database: Database to use, None to not use a particular one.
546	        port: MySQL port to use, default is usually OK. (default: 3306)
547	        unix_socket: Optionally, you can use a unix socket rather than TCP/IP.
548	        charset: Charset you want to use.
549	        sql_mode: Default SQL_MODE to use.
550	        read_default_file:
551	            Specifies  my.cnf file to read these parameters from under the [client] section.
552	        conv:
553	            Conversion dictionary to use instead of the default one.
554	            This is used to provide custom marshalling and unmarshaling of types.
555	            See converters.
556	        use_unicode:
557	            Whether or not to default to unicode strings.
558	            This option defaults to true for Py3k.
559	        client_flag: Custom flags to send to MySQL. Find potential values in constants.CLIENT.
560	        cursorclass: Custom cursor class to use.
561	        init_command: Initial SQL statement to run when connection is established.
562	        connect_timeout: Timeout before throwing an exception when connecting.
563	        ssl:
564	            A dict of arguments similar to mysql_ssl_set()'s parameters.
565	            For now the capath and cipher arguments are not supported.
566	        read_default_group: Group to read from in the configuration file.
567	        compress; Not supported
568	        named_pipe: Not supported
569	        autocommit: Autocommit mode. None means use server default. (default: False)
570	        local_infile: Boolean to enable the use of LOAD DATA LOCAL command. (default: False)
571	        max_allowed_packet: Max size of packet sent to server in bytes. (default: 16MB)
572	            Only used to limit size of "LOAD LOCAL INFILE" data packet smaller than default (16KB).
573	        defer_connect: Don't explicitly connect on contruction - wait for connect call.
574	            (default: False)
575	        auth_plugin_map: A dict of plugin names to a class that processes that plugin.
576	            The class will take the Connection object as the argument to the constructor.
577	            The class needs an authenticate method taking an authentication packet as
578	            an argument.  For the dialog plugin, a prompt(echo, prompt) method can be used
579	            (if no authenticate method) for returning a string from the user. (experimental)
580	        db: Alias for database. (for compatibility to MySQLdb)
581	        passwd: Alias for password. (for compatibility to MySQLdb)
582	        """
583	        if no_delay is not None:
584	            warnings.warn("no_delay option is deprecated", DeprecationWarning)
585	
586	        if use_unicode is None and sys.version_info[0] > 2:
587	            use_unicode = True
588	
589	        if db is not None and database is None:
590	            database = db
591	        if passwd is not None and not password:
592	            password = passwd
593	
594	        if compress or named_pipe:
595	            raise NotImplementedError("compress and named_pipe arguments are not supported")
596	
597	        if local_infile:
598	            client_flag |= CLIENT.LOCAL_FILES
599	
600	        self.ssl = False
601	        if ssl:
602	            if not SSL_ENABLED:
603	                raise NotImplementedError("ssl module not found")
604	            self.ssl = True
605	            client_flag |= CLIENT.SSL
606	            self.ctx = self._create_ssl_ctx(ssl)
607	
608	        if read_default_group and not read_default_file:
609	            if sys.platform.startswith("win"):
610	                read_default_file = "c:\\my.ini"
611	            else:
612	                read_default_file = "/etc/my.cnf"
613	
614	        if read_default_file:
615	            if not read_default_group:
616	                read_default_group = "client"
617	
618	            cfg = Parser()
619	            cfg.read(os.path.expanduser(read_default_file))
620	
621	            def _config(key, arg):
622	                if arg:
623	                    return arg
624	                try:
625	                    return cfg.get(read_default_group, key)
626	                except Exception:
627	                    return arg
628	
629	            user = _config("user", user)
630	            password = _config("password", password)
631	            host = _config("host", host)
632	            database = _config("database", database)
633	            unix_socket = _config("socket", unix_socket)
634	            port = int(_config("port", port))
635	            charset = _config("default-character-set", charset)
636	
637	        self.host = host or "localhost"
638	        self.port = port or 3306
639	        self.user = user or DEFAULT_USER
640	        self.password = password or ""
641	        self.db = database
642	        self.unix_socket = unix_socket
643	        if read_timeout is not None and read_timeout <= 0:
644	            raise ValueError("read_timeout should be >= 0")
645	        self._read_timeout = read_timeout
646	        if write_timeout is not None and write_timeout <= 0:
647	            raise ValueError("write_timeout should be >= 0")
648	        self._write_timeout = write_timeout
649	        if charset:
650	            self.charset = charset
651	            self.use_unicode = True
652	        else:
653	            self.charset = DEFAULT_CHARSET
654	            self.use_unicode = False
655	
656	        if use_unicode is not None:
657	            self.use_unicode = use_unicode
658	
659	        self.encoding = charset_by_name(self.charset).encoding
660	
661	        client_flag |= CLIENT.CAPABILITIES
662	        if self.db:
663	            client_flag |= CLIENT.CONNECT_WITH_DB
664	        self.client_flag = client_flag
665	
666	        self.cursorclass = cursorclass
667	        self.connect_timeout = connect_timeout
668	
669	        self._result = None
670	        self._affected_rows = 0
671	        self.host_info = "Not connected"
672	
673	        #: specified autocommit mode. None means use server default.
674	        self.autocommit_mode = autocommit
675	
676	        if conv is None:
677	            conv = _conv
678	        # Need for MySQLdb compatibility.
679	        self.encoders = dict([(k, v) for (k, v) in conv.items() if type(k) is not int])
680	        self.decoders = dict([(k, v) for (k, v) in conv.items() if type(k) is int])
681	        self.sql_mode = sql_mode
682	        self.init_command = init_command
683	        self.max_allowed_packet = max_allowed_packet
684	        self._auth_plugin_map = auth_plugin_map
685	        if defer_connect:
686	            self._sock = None
687	        else:
688	            self.connect()
689	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\pymysql\connections.py:714:8
713	            self._write_bytes(send_data)
714	        except Exception:
715	            pass
716	        finally:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\pymysql\connections.py:730:12
729	                self._sock.close()
730	            except:
731	                pass
732	        self._sock = None

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\pymysql\connections.py:925:16
924	                    sock.close()
925	                except:
926	                    pass
927	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pymysql\connections.py:1472:8
1471	        eof_packet = self.connection._read_packet()
1472	        assert eof_packet.is_eof_packet(), 'Protocol error, expecting EOF'
1473	        self.description = tuple(description)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pymysql\converters.py:83:8
82	            return _escape_unicode(value)
83	        assert isinstance(value, (bytes, bytearray))
84	        value = value.replace('\\', '\\\\')

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pymysql\converters.py:94:8
93	    def escape_bytes(value, mapping=None):
94	        assert isinstance(value, (bytes, bytearray))
95	        return b"_binary'%s'" % escape_string(value)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pymysql\cursors.py:190:12
189	            q_postfix = m.group(3) or ''
190	            assert q_values[0] == '(' and q_values[-1] == ')'
191	            return self._do_execute_many(q_prefix, q_values, q_postfix, args,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\test_connection.py:39:28
38	        if self._grant:
39	            self._c.execute("REVOKE SELECT ON %s.* FROM %s" % (self._db, self._user))
40	        if self._created:

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'very bad guess at password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\contrib\pymysql\tests\test_connection.py:287:19
286	                c = pymysql.connect(user=TestAuthentication.osuser, **db)
287	                db['password'] = 'very bad guess at password'
288	                with self.assertRaises(pymysql.err.OperationalError):

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'crummy p	assword'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\contrib\pymysql\tests\test_connection.py:316:11
315	        db = self.db.copy()
316	        db['password'] = "crummy p\tassword"
317	        with self.connections[0] as c:

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Sh@256Pa33'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\contrib\pymysql\tests\test_connection.py:359:15
358	            db = self.db.copy()
359	            db['password'] = "Sh@256Pa33"
360	            # not implemented yet so thows error

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pymysql\tests\test_connection.py:381:8
380	        cur.execute("SELECT '" + t + "'")
381	        assert cur.fetchone()[0] == t
382	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\contrib\pymysql\tests\test_example.py:6:15
5	    def test_example(self):
6	        conn = pymysql.connect(host='127.0.0.1', port=3306, user='root', passwd='', db='mysql')
7	   

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '1234'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\contrib\pymysql\tests\test_issues.py:166:20
165	
166	            conn2 = pymysql.connect(host=host, user="issue17user", passwd="1234", db=db)
167	            c2 = conn2.cursor()

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\pymysql\tests\test_issues.py:222:8
221	            self.fail()
222	        except Exception:
223	            pass
224	        c.close()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pymysql\tests\test_issues.py:377:16
376	                cur.execute('select * from test_field_count')
377	                assert len(cur.description) == length
378	            finally:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\capabilities.py:53:32
52	        try:
53	            self.cursor.execute('select * from %s where 1=0' % name)
54	        except Exception:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\capabilities.py:89:28
88	        self.create_table(columndefs)
89	        insert_statement = ('INSERT INTO %s VALUES (%s)' %
90	                            (self.table,
91	                             ','.join(['%s'] * len(columndefs))))
92	        data = [ [ generator(i,j) for j in range(len(columndefs)) ]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\capabilities.py:99:28
98	        # verify
99	        self.cursor.execute('select * from %s' % self.table)
100	        l = self.cursor.fetchall()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\capabilities.py:118:28
117	        self.create_table(columndefs)
118	        insert_statement = ('INSERT INTO %s VALUES (%s)' %
119	                            (self.table,
120	                             ','.join(['%s'] * len(columndefs))))
121	        data = [ [ generator(i,j) for j in range(len(columndefs)) ]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\capabilities.py:126:28
125	        self.connection.commit()
126	        self.cursor.execute('select * from %s' % self.table)
127	        l = self.cursor.fetchall()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\capabilities.py:132:27
131	                self.assertEqual(l[i][j], generator(i,j))
132	        delete_statement = 'delete from %s where col1=%%s' % self.table
133	        self.cursor.execute(delete_statement, (0,))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\capabilities.py:134:28
133	        self.cursor.execute(delete_statement, (0,))
134	        self.cursor.execute('select col1 from %s where col1=%s' % \
135	                            (self.table, 0))
136	        l = self.cursor.fetchall()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\capabilities.py:139:28
138	        self.connection.rollback()
139	        self.cursor.execute('select col1 from %s where col1=%s' % \
140	                            (self.table, 0))
141	        l = self.cursor.fetchall()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\capabilities.py:151:28
150	        self.create_table(columndefs)
151	        insert_statement = ('INSERT INTO %s VALUES (%s)' %
152	                            (self.table,
153	                             ','.join(['%s'] * len(columndefs))))
154	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:261:25
260	            self.executeDDL1(cur1)
261	            cur1.execute("insert into %sbooze values ('Victoria Bitter')" % (
262	                self.table_prefix
263	                ))
264	            cur2.execute("select name from %sbooze" % self.table_prefix)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:264:25
263	                ))
264	            cur2.execute("select name from %sbooze" % self.table_prefix)
265	            booze = cur2.fetchall()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:281:24
280	                )
281	            cur.execute('select name from %sbooze' % self.table_prefix)
282	            self.assertEqual(len(cur.description),1,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:314:24
313	                )
314	            cur.execute("insert into %sbooze values ('Victoria Bitter')" % (
315	                self.table_prefix
316	                ))
317	            self.assertTrue(cur.rowcount in (-1,1),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:321:24
320	                )
321	            cur.execute("select name from %sbooze" % self.table_prefix)
322	            self.assertTrue(cur.rowcount in (-1,1),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:382:20
381	        self.executeDDL1(cur)
382	        cur.execute("insert into %sbooze values ('Victoria Bitter')" % (
383	            self.table_prefix
384	            ))
385	        self.assertTrue(cur.rowcount in (-1,1))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:389:16
388	            cur.execute(
389	                'insert into %sbooze values (?)' % self.table_prefix,
390	                ("Cooper's",)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:394:16
393	            cur.execute(
394	                'insert into %sbooze values (:1)' % self.table_prefix,
395	                ("Cooper's",)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:399:16
398	            cur.execute(
399	                'insert into %sbooze values (:beer)' % self.table_prefix,
400	                {'beer':"Cooper's"}

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:404:16
403	            cur.execute(
404	                'insert into %sbooze values (%%s)' % self.table_prefix,
405	                ("Cooper's",)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:409:16
408	            cur.execute(
409	                'insert into %sbooze values (%%(beer)s)' % self.table_prefix,
410	                {'beer':"Cooper's"}

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:416:20
415	
416	        cur.execute('select name from %sbooze' % self.table_prefix)
417	        res = cur.fetchall()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:439:20
438	                cur.executemany(
439	                    'insert into %sbooze values (?)' % self.table_prefix,
440	                    largs

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:444:20
443	                cur.executemany(
444	                    'insert into %sbooze values (:1)' % self.table_prefix,
445	                    largs

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:449:20
448	                cur.executemany(
449	                    'insert into %sbooze values (:beer)' % self.table_prefix,
450	                    margs

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:454:20
453	                cur.executemany(
454	                    'insert into %sbooze values (%%s)' % self.table_prefix,
455	                    largs

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:459:20
458	                cur.executemany(
459	                    'insert into %sbooze values (%%(beer)s)' % (
460	                        self.table_prefix
461	                        ),
462	                    margs

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:470:24
469	                )
470	            cur.execute('select name from %sbooze' % self.table_prefix)
471	            res = cur.fetchall()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:496:24
495	
496	            cur.execute('select name from %sbooze' % self.table_prefix)
497	            self.assertEqual(cur.fetchone(),None,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:505:24
504	            # executing a query that cannnot return rows
505	            cur.execute("insert into %sbooze values ('Victoria Bitter')" % (
506	                self.table_prefix
507	                ))
508	            self.assertRaises(self.driver.Error,cur.fetchone)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:510:24
509	
510	            cur.execute('select name from %sbooze' % self.table_prefix)
511	            r = cur.fetchone()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:539:12
538	        populate = [
539	            "insert into %sbooze values ('%s')" % (self.table_prefix,s)
540	                for s in self.samples

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:557:24
556	
557	            cur.execute('select name from %sbooze' % self.table_prefix)
558	            r = cur.fetchmany()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:581:24
580	            cur.arraysize=4
581	            cur.execute('select name from %sbooze' % self.table_prefix)
582	            r = cur.fetchmany() # Should get 4 rows

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:593:24
592	            cur.arraysize=6
593	            cur.execute('select name from %sbooze' % self.table_prefix)
594	            rows = cur.fetchmany() # Should get all rows

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:615:24
614	            self.executeDDL2(cur)
615	            cur.execute('select name from %sbarflys' % self.table_prefix)
616	            r = cur.fetchmany() # Should get empty sequence

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:643:24
642	
643	            cur.execute('select name from %sbooze' % self.table_prefix)
644	            rows = cur.fetchall()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:664:24
663	            self.executeDDL2(cur)
664	            cur.execute('select name from %sbarflys' % self.table_prefix)
665	            rows = cur.fetchall()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:683:24
682	
683	            cur.execute('select name from %sbooze' % self.table_prefix)
684	            rows1  = cur.fetchone()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:745:16
744	                numberofrows=cur.fetchone()
745	                assert numberofrows[0]== len(self.samples)
746	                assert cur.nextset()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:746:16
745	                assert numberofrows[0]== len(self.samples)
746	                assert cur.nextset()
747	                names=cur.fetchall()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:748:16
747	                names=cur.fetchall()
748	                assert len(names) == len(self.samples)
749	                s=cur.nextset()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:750:16
749	                s=cur.nextset()
750	                assert s == None,'No more return sets, should return None'
751	            finally:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:800:24
799	            self.executeDDL1(cur)
800	            cur.execute('insert into %sbooze values (NULL)' % self.table_prefix)
801	            cur.execute('select name from %sbooze' % self.table_prefix)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\dbapi20.py:801:24
800	            cur.execute('insert into %sbooze values (NULL)' % self.table_prefix)
801	            cur.execute('select name from %sbooze' % self.table_prefix)
802	            r = cur.fetchall()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\test_MySQLdb_capabilities.py:52:26
51	            self.create_table(('pos INT', 'tree CHAR(20)'))
52	            c.executemany("INSERT INTO %s (pos,tree) VALUES (%%s,%%s)" % self.table,
53	                          list(enumerate('ash birch cedar larch pine'.split())))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\test_MySQLdb_capabilities.py:56:22
55	
56	            c.execute("""
57	            CREATE PROCEDURE test_sp(IN t VARCHAR(255))
58	            BEGIN
59	                SELECT pos FROM %s WHERE tree = t;
60	            END
61	            """ % self.table)
62	            db.commit()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\test_MySQLdb_dbapi20.py:46:24
45	
46	            cur.execute('select name from %sbooze' % self.table_prefix)
47	            rows = cur.fetchall()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\test_MySQLdb_dbapi20.py:67:24
66	            self.executeDDL2(cur)
67	            cur.execute('select name from %sbarflys' % self.table_prefix)
68	            rows = cur.fetchall()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\test_MySQLdb_dbapi20.py:92:24
91	
92	            cur.execute('select name from %sbooze' % self.table_prefix)
93	            self.assertEqual(cur.fetchone(),None,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\test_MySQLdb_dbapi20.py:101:24
100	            # executing a query that cannnot return rows
101	            cur.execute("insert into %sbooze values ('Victoria Bitter')" % (
102	                self.table_prefix
103	                ))
104	##             self.assertRaises(self.driver.Error,cur.fetchone)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\test_MySQLdb_dbapi20.py:106:24
105	
106	            cur.execute('select name from %sbooze' % self.table_prefix)
107	            r = cur.fetchone()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\test_MySQLdb_dbapi20.py:131:24
130	##                 )
131	            cur.execute("insert into %sbooze values ('Victoria Bitter')" % (
132	                self.table_prefix
133	                ))
134	##             self.assertTrue(cur.rowcount in (-1,1),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\test_MySQLdb_dbapi20.py:138:24
137	##                 )
138	            cur.execute("select name from %sbooze" % self.table_prefix)
139	            self.assertTrue(cur.rowcount in (-1,1),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\test_MySQLdb_dbapi20.py:159:12
158	        '''
159	        sql="""
160	           create procedure deleteme()
161	           begin
162	               select count(*) from %(tp)sbooze;
163	               select name from %(tp)sbooze;
164	           end
165	        """ % dict(tp=self.table_prefix)
166	        cur.execute(sql)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\test_MySQLdb_dbapi20.py:190:16
189	                numberofrows=cur.fetchone()
190	                assert numberofrows[0]== len(self.samples)
191	                assert cur.nextset()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\test_MySQLdb_dbapi20.py:191:16
190	                assert numberofrows[0]== len(self.samples)
191	                assert cur.nextset()
192	                names=cur.fetchall()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\test_MySQLdb_dbapi20.py:193:16
192	                names=cur.fetchall()
193	                assert len(names) == len(self.samples)
194	                s=cur.nextset()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pymysql\tests\thirdparty\test_MySQLdb\test_MySQLdb_nonstandard.py:86:8
85	    def test_host_info(self):
86	        assert isinstance(self.conn.get_host_info(), basestring), "should return a string"
87	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\gluon\contrib\pypyodbc.py:463:8
462	    if py_v3:
463	        from subprocess import getstatusoutput
464	    else:

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html
   Location: .\gluon\contrib\pypyodbc.py:467:21
466	
467	    status, output = getstatusoutput('odbc_config --cflags')
468	    if status == 0 and 'SQL_WCHART_CONVERT' in output:

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\gluon\contrib\pypyodbc.py:467:21
466	
467	    status, output = getstatusoutput('odbc_config --cflags')
468	    if status == 0 and 'SQL_WCHART_CONVERT' in output:

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\gluon\contrib\pypyodbc.py:2518:4
2517	
2518	    def ConnectByDSN(self, dsn, user, passwd = ''):
2519	        """Connect to odbc, we need dsn, user and optionally password"""
2520	        self.dsn = dsn
2521	        self.user = user
2522	        self.passwd = passwd
2523	
2524	        sn = create_buffer(dsn)
2525	        un = create_buffer(user)        
2526	        pw = create_buffer(passwd)
2527	        
2528	        ret = ODBC_API.SQLConnect(self.dbc_h, sn, len(sn), un, len(un), pw, len(pw))
2529	        check_success(self, ret)
2530	
2531	        self.update_db_special_info()
2532	        self.connected = 1
2533	        

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\pypyodbc.py:2556:12
2555	                    self.type_size_dic[sql_type] = info_tuple[2], info_tuple[14]
2556	            except:
2557	                pass
2558	            cur.close()

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\pypyodbc.py:2565:8
2564	                self.support_SQLDescribeParam = True
2565	        except:
2566	            pass
2567	    

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Elements.py:180:8
179	    def SetBreakType( self, value ) :
180	        assert value in self.BREAK_TYPES
181	        self.BreakType = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Elements.py:574:8
573	
574	        assert not kwargs, 'invalid keyword args %s' % kwargs
575	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Elements.py:577:8
576	    def SetAlignment( self, value ) :
577	        assert value is None or value in self.ALIGNMENT
578	        self.Alignment = value or self.LEFT

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Elements.py:659:8
658	    def SetAlignment( self, value ) :
659	        assert value in [ self.ALIGN_TOP, self.ALIGN_CENTER, self.ALIGN_BOTTOM ] #, self.ALIGN_TEXT_TOP_DOWN, self.ALIGN_TEXT_BOTTOM_UP ]
660	        self.Alignment = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Elements.py:663:8
662	    def SetFlow( self, value ) :
663	        assert value in [ self.FLOW_LR_TB, self.FLOW_RL_TB, self.FLOW_LR_BT, self.FLOW_VERTICAL_LR_TB, self.FLOW_VERTICAL_TB_RL ]
664	        self.Flow = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:25:4
24	def MakeAttributeName( value ) :
25	    assert value and isinstance(value, StringType)
26	    value = value.replace( ' ', '' )

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:37:35
36	        for value in values :
37	            if self.AcceptedType : assert isinstance( value, self.AcceptedType )
38	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:216:8
215	    def SetPattern( self, value ) :
216	        assert value is None or value in self.PATTERNS
217	        self.Pattern = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:221:8
220	    def SetForeground( self, value ) :
221	        assert not value or isinstance( value, Colour )
222	        self.Foreground = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:226:8
225	    def SetBackground( self, value ) :
226	        assert not value or isinstance( value, Colour )
227	        self.Background = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:252:8
251	    def SetStyle( self, value ) :
252	        assert value is None or value in self.STYLES
253	        self.Style = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:257:8
256	    def SetColour( self, value ) :
257	        assert value is None or isinstance( value, Colour )
258	        self.Colour = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:273:8
272	    def SetTop( self, value ) :
273	        assert value is None or isinstance( value, BorderPropertySet )
274	        self.Top = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:278:8
277	    def SetLeft( self, value ) :
278	        assert value is None or isinstance( value, BorderPropertySet )
279	        self.Left = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:283:8
282	    def SetBottom( self, value ) :
283	        assert value is None or isinstance( value, BorderPropertySet )
284	        self.Bottom = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:288:8
287	    def SetRight( self, value ) :
288	        assert value is None or isinstance( value, BorderPropertySet )
289	        self.Right = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:318:8
317	    def SetAlignment( self, value ) :
318	        assert value in self.ALIGNMENT
319	        self.Alignment = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:323:8
322	    def SetLeader( self, value ) :
323	        assert not value or value in self.LEADERS
324	        self.Leader = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:364:8
363	    def SetFont( self, value ) :
364	        assert not value or isinstance( value, Font )
365	        self.Font = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:388:8
387	    def SetColour( self, value ) :
388	        assert value is None or isinstance( value, Colour )
389	        self.Colour = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:393:8
392	    def SetFrame( self, value ) :
393	        assert value is None or isinstance( value, BorderPropertySet )
394	        self.Frame = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\PropertySets.py:449:8
448	    def SetAlignment( self, value ) :
449	        assert not value or value in self.ALIGNMENT
450	        self.Alignment = value or self.LEFT

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Renderer.py:288:8
287	
288	        assert Languages.IsValid   ( self._doc.DefaultLanguage )
289	        assert ViewKind.IsValid    ( self._doc.ViewKind        )

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Renderer.py:289:8
288	        assert Languages.IsValid   ( self._doc.DefaultLanguage )
289	        assert ViewKind.IsValid    ( self._doc.ViewKind        )
290	        assert ViewZoomKind.IsValid( self._doc.ViewZoomKind    )

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Renderer.py:290:8
289	        assert ViewKind.IsValid    ( self._doc.ViewKind        )
290	        assert ViewZoomKind.IsValid( self._doc.ViewZoomKind    )
291	        assert ViewScale.IsValid   ( self._doc.ViewScale       )

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Renderer.py:291:8
290	        assert ViewZoomKind.IsValid( self._doc.ViewZoomKind    )
291	        assert ViewScale.IsValid   ( self._doc.ViewScale       )
292	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Styles.py:25:8
24	    def SetTextPropertySet( self, value ) :
25	        assert isinstance( value, TextPropertySet )
26	        self.TextPropertySet = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Styles.py:30:8
29	    def SetShadingPropertySet( self, value ) :
30	        assert value is None or isinstance( value, ShadingPropertySet )
31	        self.ShadingPropertySet = value or ShadingPropertySet()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Styles.py:60:8
59	    def SetTextStyle( self, value ) :
60	        assert isinstance( value, TextStyle )
61	        self.TextStyle = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Styles.py:65:8
64	    def SetParagraphPropertySet( self, value ) :
65	        assert value is None or isinstance( value, ParagraphPropertySet )
66	        self.ParagraphPropertySet = value or ParagraphPropertySet()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Styles.py:70:8
69	    def SetFramePropertySet( self, value ) :
70	        assert value is None or isinstance( value, FramePropertySet )
71	        self.FramePropertySet = value or FramePropertySet()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Styles.py:77:8
76	
77	        assert value is None or isinstance( value, ShadingPropertySet )
78	        self.ShadingPropertySet = value or ShadingPropertySet()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Styles.py:84:8
83	
84	        assert not value or isinstance( value, ParagraphStyle )
85	        self.BasedOn = value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pyrtf\Styles.py:91:8
90	
91	        assert not value or isinstance( value, ParagraphStyle )
92	        self.Next    = value

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with cPickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\gluon\contrib\pysimplesoap\client.py:21:4
20	try:
21	    import cPickle as pickle
22	except ImportError:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\gluon\contrib\pysimplesoap\client.py:23:4
22	except ImportError:
23	    import pickle
24	import copy

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\gluon\contrib\pysimplesoap\client.py:839:38
838	            # make md5 hash of the url for caching...
839	            filename_pkl = '%s.pkl' % hashlib.md5(url).hexdigest()
840	            if isinstance(cache, basestring):

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\gluon\contrib\pysimplesoap\helpers.py:61:26
60	    # make md5 hash of the url for caching...
61	    filename = '%s.xml' % hashlib.md5(url.encode('utf8')).hexdigest()
62	    if isinstance(cache, basestring):

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: .\gluon\contrib\pysimplesoap\helpers.py:72:16
71	            log.info('Fetching url %s using urllib2' % url)
72	            f = urllib2.urlopen(url)
73	            xml = f.read()

--------------------------------------------------
>> Issue: [B408:blacklist] Using xml.dom.minidom to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b408-import-xml-minidom
   Location: .\gluon\contrib\pysimplesoap\simplexml.py:25:0
24	import time
25	import xml.dom.minidom
26	

--------------------------------------------------
>> Issue: [B318:blacklist] Using xml.dom.minidom.parseString to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.dom.minidom.parseString with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b313-b320-xml-bad-minidom
   Location: .\gluon\contrib\pysimplesoap\simplexml.py:56:34
55	            try:
56	                self.__document = xml.dom.minidom.parseString(text)
57	            except:

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\gluon\contrib\pysimplesoap\wsse.py:51:4
50	
51	    def __init__(self, username="", password=""):
52	        self.token = {
53	            'wsse:UsernameToken': {
54	                'wsse:Username': username,
55	                'wsse:Password': password,
56	                }
57	            }
58	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\gluon\contrib\pysimplesoap\wsse.py:83:4
82	
83	    def __init__(self, username="", password="", drift=0):
84	        self.username = username
85	        self.password = password
86	        self.drift = datetime.timedelta(seconds=drift)
87	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\gluon\contrib\pysimplesoap\wsse.py:104:18
103	
104	        sha1obj = sha1()
105	        sha1obj.update(nonce + created + self.password)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '<?xml version="1.0" encoding="UTF-8"?>
<wsse:Security soapenv:mustUnderstand="1" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
    <wsse:BinarySecurityToken EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary" ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" wsu:Id="CertId-45851B081998E431E8132880700036719" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
%(certificate)s</wsse:BinarySecurityToken>
    <ds:Signature Id="Signature-13" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
        %(signed_info)s
        <ds:SignatureValue>%(signature_value)s</ds:SignatureValue>
        <ds:KeyInfo Id="KeyId-45851B081998E431E8132880700036720">
            <wsse:SecurityTokenReference wsu:Id="STRId-45851B081998E431E8132880700036821" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
                <wsse:Reference URI="#CertId-45851B081998E431E8132880700036719" ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"/>
            </wsse:SecurityTokenReference>
        </ds:KeyInfo>
    </ds:Signature>
</wsse:Security>
'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\contrib\pysimplesoap\wsse.py:111:17
110	
111	BIN_TOKEN_TMPL = """<?xml version="1.0" encoding="UTF-8"?>
112	<wsse:Security soapenv:mustUnderstand="1" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
113	    <wsse:BinarySecurityToken EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary" ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" wsu:Id="CertId-45851B081998E431E8132880700036719" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
114	%(certificate)s</wsse:BinarySecurityToken>
115	    <ds:Signature Id="Signature-13" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
116	        %(signed_info)s
117	        <ds:SignatureValue>%(signature_value)s</ds:SignatureValue>
118	        <ds:KeyInfo Id="KeyId-45851B081998E431E8132880700036720">
119	            <wsse:SecurityTokenReference wsu:Id="STRId-45851B081998E431E8132880700036821" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
120	                <wsse:Reference URI="#CertId-45851B081998E431E8132880700036719" ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"/>
121	            </wsse:SecurityTokenReference>
122	        </ds:KeyInfo>
123	    </ds:Signature>
124	</wsse:Security>
125	"""
126	

--------------------------------------------------
>> Issue: [B410:blacklist] Using lxml.etree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace lxml.etree with the equivalent defusedxml package.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b410-import-lxml
   Location: .\gluon\contrib\pysimplesoap\xmlsec.py:23:4
22	try:
23	    import lxml.etree
24	except ImportError:

--------------------------------------------------
>> Issue: [B320:blacklist] Using lxml.etree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace lxml.etree.parse with its defusedxml equivalent function.
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b313-b320-xml-bad-etree
   Location: .\gluon\contrib\pysimplesoap\xmlsec.py:104:13
103	        # use faster libxml2 / lxml canonicalization function if available
104	        et = lxml.etree.parse(StringIO(xml))
105	        et.write_c14n(output, exclusive=c14n_exc)

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\gluon\contrib\pysimplesoap\xmlsec.py:115:28
114	    "Create a SHA1 hash and return the base64 string"
115	    return base64.b64encode(hashlib.sha1(payload).digest())
116	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\gluon\contrib\pysimplesoap\xmlsec.py:130:26
129	    pkey = RSA.load_key(private_key, lambda *args, **kwargs: password)
130	    signature = pkey.sign(hashlib.sha1(signed_info).digest())
131	    # build the mapping (placeholders) to create the final xml signed message

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\pysimplesoap\xmlsec.py:219:4
218	    public_key = x509_extract_rsa_public_key(open("zunimercado.crt").read())
219	    assert rsa_verify(vars['signed_info'], vars['signature_value'], public_key,
220	                      c14n_exc=False)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with cPickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\gluon\contrib\redis_cache.py:7:4
6	try:
7	    import cPickle as pickle
8	except:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\gluon\contrib\redis_cache.py:9:4
8	except:
9	    import pickle
10	import time

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\redis_cache.py:259:11
258	                pipe.delete(a)
259	        if random.randrange(0, 100) < 10:
260	            # do this just once in a while (10% chance)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\redis_scheduler.py:247:20
246	                        self.is_a_ticker = self.being_a_ticker(pipe)
247	                    except:
248	                        pass
249	                    if self.w_stats.status in (ACTIVE, POLLING):

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\redis_scheduler.py:729:12
728	                kwargs.update(start_time=start_time, next_run_time=next_run_time)
729	            except:
730	                pass
731	        rtn = self.db.scheduler_task.validate_and_insert(**kwargs)

--------------------------------------------------
>> Issue: [B406:blacklist] Using saxutils to parse untrusted XML data is known to be vulnerable to XML attacks. Replace saxutils with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b406-import-xml-sax
   Location: .\gluon\contrib\rss2.py:71:8
70	    def write_xml(self, outfile, encoding="iso-8859-1"):
71	        from xml.sax import saxutils
72	        handler = saxutils.XMLGenerator(outfile, encoding)

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\gluon\contrib\shell.py:211:12
210	        for code in history.unpicklables:
211	            exec(code, statement_module.__dict__)
212	

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\gluon\contrib\shell.py:231:16
230	                locker.acquire()
231	                exec(compiled, statement_module.__dict__)
232	            finally:

--------------------------------------------------
>> Issue: [B411:blacklist] Using Transport to parse untrusted XML data is known to be vulnerable to XML attacks. Use defusedxml.xmlrpc.monkey_patch() function to monkey-patch xmlrpclib and mitigate XML vulnerabilities.
   Severity: High   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b411-import-xmlrpclib
   Location: .\gluon\contrib\simplejsonrpc.py:24:4
23	if PY2:
24	    from xmlrpclib import Transport, SafeTransport
25	    from cStringIO import StringIO

--------------------------------------------------
>> Issue: [B411:blacklist] Using Transport to parse untrusted XML data is known to be vulnerable to XML attacks. Use defusedxml.xmlrpc.monkey_patch() function to monkey-patch xmlrpclib and mitigate XML vulnerabilities.
   Severity: High   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b411-import-xmlrpclib
   Location: .\gluon\contrib\simplejsonrpc.py:27:4
26	else:
27	    from xmlrpc.client import Transport, SafeTransport
28	    from io import StringIO

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\contrib\simplejsonrpc.py:118:21
117	        # build data sent to the service
118	        request_id = random.randint(0, sys.maxsize)
119	        data = {'id': request_id, 'method': method, 'params': args or vars, }

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\gluon\contrib\spreadsheet.py:9:0
8	import re
9	import pickle
10	import copy

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b301-pickle
   Location: .\gluon\contrib\spreadsheet.py:268:16
267	    def loads(data):
268	        sheet = pickle.loads(data)
269	        return sheet

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\gluon\contrib\spreadsheet.py:505:8
504	
505	        exec('from math import *', {}, self.environment)
506	

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\gluon\contrib\spreadsheet.py:743:16
742	            try:
743	                exec('__value__=' + node.value[1:], {}, self.environment)
744	                node.computed_value = self.environment['__value__']

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\gluon\contrib\stripe.py:115:25
114	        self.errors = None
115	        self.signature = sha1(repr((self.amount,self.description))).hexdigest()
116	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\contrib\user_agent_parser.py:638:12
637	                detector.detect(agent, result)
638	            except Exception as _err:
639	                pass
640	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\contrib\webclient.py:197:11
196	    # register
197	    data = dict(first_name='Homer',
198	                last_name='Simpson',
199	                email='homer@web2py.com',
200	                password='test',
201	                password_two='test',
202	                _formname='register')
203	    client.post('user/register', data=data)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\contrib\webclient.py:209:11
208	    # login
209	    data = dict(email='homer@web2py.com',
210	                password='test',
211	                _formname='login')
212	    client.post('user/login', data=data)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\contrib\webclient.py:216:4
215	    client.get('user/profile')
216	    assert 'Welcome Homer' in client.text
217	

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: .\gluon\contrib\websocket_messaging.py:204:30
203	                      '--listen',
204	                      default='0.0.0.0',
205	                      dest='address',

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\custom_import.py:29:4
28	def track_changes(track=True):
29	    assert track in (True, False), "must be True or False"
30	    current.request._custom_import_track_changes = track

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\dal.py:37:4
36	        DRIVERS['pymysql'] = pymysql
37	    except:
38	        pass
39	if not DRIVERS.get('pyodbc'):

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\dal.py:43:4
42	        DRIVERS['pyodbc'] = pyodbc
43	    except:
44	        pass
45	if not DRIVERS.get('pg8000'):

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\dal.py:49:4
48	        DRIVERS['pg8000'] = pg8000
49	    except:
50	        pass

--------------------------------------------------
>> Issue: [B202:tarfile_unsafe_members] tarfile.extractall used without any validation. Please check and discard dangerous members.
   Severity: High   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b202_tarfile_unsafe_members.html
   Location: .\gluon\fileutils.py:213:10
212	    tar = tarfile.TarFile(filename, 'r')
213	    ret = tar.extractall(path, members)
214	    tar.close()

--------------------------------------------------
>> Issue: [B202:tarfile_unsafe_members] tarfile.extractall used without any validation. Please check and discard dangerous members.
   Severity: High   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b202_tarfile_unsafe_members.html
   Location: .\gluon\fileutils.py:238:4
237	
238	    _extractall(file, dir)
239	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with Pickler module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\gluon\globals.py:31:0
30	from pydal.contrib import portalocker
31	from pickle import Pickler, MARK, DICT, EMPTY_DICT
32	# from types import DictionaryType

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\globals.py:256:12
255	                post_vars.update(dpost)
256	            except:
257	                pass
258	            if query_string is not None:

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\gluon\globals.py:1018:32
1017	        session_pickled = pickle.dumps(self, pickle.HIGHEST_PROTOCOL)
1018	        response.session_hash = hashlib.md5(session_pickled).hexdigest()
1019	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\globals.py:1152:12
1151	                os.unlink(target)
1152	            except:
1153	                pass
1154	        elif response.session_storage_type == 'db':

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\gluon\globals.py:1218:23
1217	        response.session_pickled = session_pickled
1218	        session_hash = hashlib.md5(session_pickled).hexdigest()
1219	        return response.session_hash == session_hash

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\globals.py:1299:12
1298	                response.session_locked = False
1299	            except:  # this should never happen but happens in Windows
1300	                pass
1301	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\globals.py:1308:12
1307	                del response.session_file
1308	            except:
1309	                pass
1310	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'MULTILINESTRING'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\highlight.py:98:20
97	        value = xmlescape(match.group(), quote=False)
98	        if token == 'MULTILINESTRING':
99	            self.change_style(token, style)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'ENDMULTILINESTRING'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\highlight.py:103:22
102	            return 'PYTHONMultilineString'
103	        elif token == 'ENDMULTILINESTRING':
104	            if match.group(1) == self.strMultilineString:

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'GOTOHTML'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\highlight.py:120:20
119	            self.output.append(value)
120	        if token == 'GOTOHTML':
121	            return 'HTML'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'GOTOPYTHON'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\highlight.py:137:20
136	        self.output.append(value)
137	        if token == 'GOTOPYTHON':
138	            return 'PYTHON'

--------------------------------------------------
>> Issue: [B302:blacklist] Deserialization with the marshal module is possibly dangerous.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b302-marshal
   Location: .\gluon\html.py:707:15
706	def XML_unpickle(data):
707	    return XML(marshal.loads(data))
708	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\html.py:1267:12
1266	                        break
1267	            except:
1268	                pass
1269	        return matches

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\html.py:2504:16
2503	                    continue
2504	                except:
2505	                    pass
2506	            if isinstance(c, str):

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\gluon\languages.py:95:19
94	        except ImportError:
95	            return eval(text, {}, {})
96	    return None

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\gluon\languages.py:292:15
291	    try:
292	        return eval(lang_text) or {}
293	    except Exception:

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\gluon\languages.py:1050:12
1049	                message = safe_eval(item)
1050	            except:
1051	                continue  # silently ignore inproperly formatted strings
1052	            add_message(message)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\main.py:537:12
536	                    BaseAdapter.close_all_instances('rollback')
537	            except:
538	                pass
539	            e = RestrictedError('Framework', '', '', locals())

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '<random>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\main.py:571:19
570	    password_file = abspath('parameters_%i.py' % port)
571	    if password == '<random>':
572	        # make up a new password

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\main.py:574:28
573	        chars = string.letters + string.digits
574	        password = ''.join([random.choice(chars) for _ in range(8)])
575	        cpassword = CRYPT()(password)[0]

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '<recycle>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\main.py:579:21
578	        print('*********************************************************')
579	    elif password == '<recycle>':
580	        # reuse the current password if any

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\main.py:584:23
583	        else:
584	            password = ''
585	    elif password.startswith('<pam_user:'):

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\main.py:674:8
673	                logfilename.write(line)
674	        except:
675	            pass
676	        return ret[0]

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\gluon\main.py:686:4
685	
686	    def __init__(
687	        self,
688	        ip='127.0.0.1',
689	        port=8000,
690	        password='',
691	        pid_filename='httpserver.pid',
692	        log_filename='httpserver.log',
693	        profiler_dir=None,
694	        ssl_certificate=None,
695	        ssl_private_key=None,
696	        ssl_ca_certificate=None,
697	        min_threads=None,
698	        max_threads=None,
699	        server_name=None,
700	        request_queue_size=5,
701	        timeout=10,
702	        socket_timeout=1,
703	        shutdown_timeout=None,  # Rocket does not use a shutdown timeout
704	        path=None,
705	        interfaces=None  # Rocket is able to use several interfaces - must be list of socket-tuples as string
706	    ):
707	        """
708	        starts the web server.
709	        """
710	
711	        if interfaces:
712	            # if interfaces is specified, it must be tested for rocket parameter correctness
713	            # not necessarily completely tested (e.g. content of tuples or ip-format)
714	            if isinstance(interfaces, list):
715	                for i in interfaces:
716	                    if not isinstance(i, tuple):
717	                        raise AttributeError("Wrong format for rocket interfaces parameter - see http://packages.python.org/rocket/")
718	            else:
719	                raise AttributeError("Wrong format for rocket interfaces parameter - see http://packages.python.org/rocket/")
720	
721	        if path:
722	            # if a path is specified change the global variables so that web2py
723	            # runs from there instead of cwd or os.environ['web2py_path']
724	            global web2py_path
725	            path = os.path.normpath(path)
726	            web2py_path = path
727	            global_settings.applications_parent = path
728	            os.chdir(path)
729	            load_routes()
730	            for p in (path, abspath('site-packages'), ""):
731	                add_path_first(p)
732	            if exists("logging.conf"):
733	                logging.config.fileConfig("logging.conf")
734	
735	        save_password(password, port)
736	        self.pid_filename = pid_filename
737	        if not server_name:
738	            server_name = socket.gethostname()
739	        logger.info('starting web server...')
740	        rocket.SERVER_NAME = server_name
741	        rocket.SOCKET_TIMEOUT = socket_timeout
742	        sock_list = [ip, port]
743	        if not ssl_certificate or not ssl_private_key:
744	            logger.info('SSL is off')
745	        elif not rocket.has_ssl:
746	            logger.warning('Python "ssl" module unavailable. SSL is OFF')
747	        elif not exists(ssl_certificate):
748	            logger.warning('unable to open SSL certificate. SSL is OFF')
749	        elif not exists(ssl_private_key):
750	            logger.warning('unable to open SSL private key. SSL is OFF')
751	        else:
752	            sock_list.extend([ssl_private_key, ssl_certificate])
753	            if ssl_ca_certificate:
754	                sock_list.append(ssl_ca_certificate)
755	
756	            logger.info('SSL is ON')
757	        app_info = {'wsgi_app': appfactory(wsgibase,
758	                                           log_filename,
759	                                           profiler_dir)}
760	
761	        self.server = rocket.Rocket(interfaces or tuple(sock_list),
762	                                    method='wsgi',
763	                                    app_info=app_info,
764	                                    min_threads=min_threads,
765	                                    max_threads=max_threads,
766	                                    queue_size=request_queue_size,
767	                                    timeout=timeout,
768	                                    handle_signals=False,
769	                                    )
770	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\main.py:778:8
777	            signal.signal(signal.SIGINT, lambda a, b, s=self: s.stop())
778	        except:
779	            pass
780	        write_file(self.pid_filename, str(os.getpid()))

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\main.py:790:12
789	                newcron.stopcron()
790	            except:
791	                pass
792	        self.server.stop(stoplogging)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\main.py:795:8
794	            os.unlink(self.pid_filename)
795	        except:
796	            pass

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html
   Location: .\gluon\messageboxhandler.py:39:12
38	            msg = self.format(record)
39	            os.system("notify-send '%s'" % msg)

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\gluon\newcron.py:266:20
265	                    logger.debug('Worker %s: now calling %r', self.name, cmd)
266	                    import subprocess
267	                    proc = subprocess.Popen(self.payload,

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\gluon\newcron.py:267:27
266	                    import subprocess
267	                    proc = subprocess.Popen(self.payload,
268	                                    stdin=subprocess.PIPE,
269	                                    stdout=subprocess.PIPE,
270	                                    stderr=subprocess.PIPE)
271	                    with _subprocs_lock:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\gluon\restricted.py:219:8
218	    try:
219	        exec(ccode, environment)
220	    except HTTP:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\gluon\rewrite.py:384:12
383	        try:
384	            exec(data, symbols)
385	        except SyntaxError as e:

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: .\gluon\rewrite.py:793:11
792	    method="get",
793	    remote="0.0.0.0",
794	    out=False,
795	    app=False,
796	    lang=None,
797	    domain=(None, None),
798	    env=False,
799	    scheme=None,
800	    host=None,
801	    port=None,
802	    language=None,
803	):
804	    """
805	    doctest/unittest interface to regex_filter_in() and regex_filter_out()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\rewrite.py:854:8
853	            items.pop()  # adjust trailing empty args
854	        assert len(items) >= 3, "at least /a/c/f is required"
855	        a = items.pop(0)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\rocket.py:863:20
862	                if __debug__:
863	                    assert(c not in self.connections)
864	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\rocket.py:1083:12
1082	                self.threads.remove(t)
1083	            except:
1084	                pass
1085	        self.check_for_dead_threads -= len(dead_threads)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\gluon\scheduler.py:193:12
192	                )
193	            assert not nested_dict, "A cyclic dependency exists amongst %r" % nested_dict
194	            db.commit()

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\gluon\scheduler.py:510:21
509	            # for testing purpose only
510	            result = eval(task.function)(
511	                *loads(task.args, object_hook=_decode_dict),

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\scheduler.py:1573:12
1572	                kwargs.update(start_time=start_time, next_run_time=next_run_time)
1573	            except Exception:
1574	                pass
1575	        if 'start_time' in kwargs and 'next_run_time' not in kwargs:

--------------------------------------------------
>> Issue: [B506:yaml_load] Use of unsafe yaml load. Allows instantiation of arbitrary objects. Consider yaml.safe_load().
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b506_yaml_load.html
   Location: .\gluon\serializers.py:238:15
237	    if have_yaml:
238	        return yamlib.load(data)
239	    else:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\gluon\shell.py:41:12
40	            code = compile(f.read(), filename, 'exec')
41	            exec(code, global_vars, local_vars)
42	    raw_input = input

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\gluon\shell.py:99:12
98	        if os.path.isfile(pycfile):
99	            exec(read_pyc(pycfile), env)
100	        else:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\gluon\shell.py:288:12
287	            or not os.path.isfile(pyfile)):
288	            exec(read_pyc(pycfile), _env)
289	        elif os.path.isfile(pyfile):

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\gluon\shell.py:295:8
294	    if f:
295	        exec('print( %s())' % f, _env)
296	        return

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\gluon\shell.py:304:16
303	                ccode = read_pyc(startfile)
304	                exec(ccode, _env)
305	            else:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\gluon\shell.py:321:12
320	        try:
321	            exec(python_code, _env)
322	            if import_models:

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\gluon\shell.py:477:28
476	
477	                        o = eval('%s.%s' % (name, attr_name), globs)
478	                        doctest_object(attr_name, o)

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\gluon\sqlhtml.py:2026:28
2025	            env = {'datetime': datetime}
2026	            session[name] = eval(open(filename).read(), {}, env)
2027	        form = SQLFORM.dictform(session[name])

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\gluon\sqlhtml.py:2377:24
2376	                    nrows = db.executesql(
2377	                        'select count(*) from (%s) _tmp;' %
2378	                        dbset._select(c, left=left, cacheable=True,
2379	                                      groupby=groupby,
2380	                                      cache=cache_count)[:-1])[0][0]
2381	                elif left:

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password_123'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_appadmin.py:64:8
63	        # Create a user
64	        db.auth_user.insert(first_name='Bart',
65	                            last_name='Simpson',
66	                            username='user1',
67	                            email='user1@test.com',
68	                            password='password_123',
69	                            registration_key=None,
70	                            registration_id=None)
71	        self.env = locals()

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password_123'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\tests\test_appadmin.py:165:13
164	        data['username'] = 'lisasimpson'
165	        data['password'] = 'password_123'
166	        data['email'] = 'lisa@example.com'

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bart_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_authapi.py:39:8
38	        # Create a user
39	        self.auth.table_user().validate_and_insert(first_name='Bart',
40	                                                   last_name='Simpson',
41	                                                   username='bart',
42	                                                   email='bart@simpson.com',
43	                                                   password='bart_password',
44	                                                   registration_key='',
45	                                                   registration_id=''
46	                                                   )
47	        self.db.commit()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bart_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_authapi.py:132:8
131	        self.assertTrue(self.auth.is_logged_in())
132	        self.auth.change_password(old_password='bart_password', new_password='1234', new_password2='1234')
133	        self.auth.logout()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '1234'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_authapi.py:135:8
134	        self.assertTrue(not self.auth.is_logged_in())
135	        self.auth.login(username='bart', password='1234')
136	        self.assertTrue(self.auth.is_logged_in())

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bart_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_authapi.py:137:17
136	        self.assertTrue(self.auth.is_logged_in())
137	        result = self.auth.change_password(old_password='bart_password', new_password='1234', new_password2='5678')
138	        self.assertTrue('new_password2' in result['errors'])

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bart_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_authapi.py:139:17
138	        self.assertTrue('new_password2' in result['errors'])
139	        result = self.auth.change_password(old_password='bart_password', new_password='1234', new_password2='1234')
140	        self.assertTrue('old_password' in result['errors'])

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '1234'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_authapi.py:142:17
141	        # Test the default 4 min_length is enforced on change password
142	        result = self.auth.change_password(old_password='1234', new_password='123', new_password2='123')
143	        self.assertTrue('new_password' in result['errors'])

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\tests\test_cache.py:32:4
31	        os.unlink('dummy.db')
32	    except:
33	        pass
34	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\tests\test_dal.py:17:4
16	        os.unlink('dummy.db')
17	    except:
18	        pass
19	

--------------------------------------------------
>> Issue: [B306:blacklist] Use of insecure and deprecated function (mktemp).
   Severity: Medium   Confidence: High
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b306-mktemp-q
   Location: .\gluon\tests\test_languages.py:47:24
46	    def setUp(self):
47	        self.filename = tempfile.mktemp()
48	        contents = dict()

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\tests\test_languages.py:57:8
56	            os.remove(self.filename)
57	        except:
58	            pass
59	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\tests\test_scheduler.py:45:8
44	            self.inner_teardown()
45	        except:
46	            pass
47	        appdir = os.path.join('applications', test_app_name)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\tests\test_scheduler.py:616:12
615	                os.unlink(f)
616	            except:
617	                pass
618	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\gluon\tests\test_scheduler.py:644:8
643	    def exec_sched(self):
644	        import subprocess
645	        call_args = [sys.executable, 'web2py.py', '--no_banner', '-D', 'INFO','-K', test_app_name]

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\gluon\tests\test_scheduler.py:646:14
645	        call_args = [sys.executable, 'web2py.py', '--no_banner', '-D', 'INFO','-K', test_app_name]
646	        ret = subprocess.call(call_args, env=dict(os.environ))
647	        return ret

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password_123'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_sqlhtml.py:270:8
269	        # Create a user
270	        self.db.auth_user.insert(first_name='Bart',
271	                                 last_name='Simpson',
272	                                 username='user1',
273	                                 email='user1@test.com',
274	                                 password='password_123',
275	                                 registration_key=None,
276	                                 registration_id=None)
277	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password_123'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_sqlhtml.py:371:8
370	        # Create a user
371	        self.db.auth_user.insert(first_name='Bart',
372	                                 last_name='Simpson',
373	                                 username='user1',
374	                                 email='user1@test.com',
375	                                 password='password_123',
376	                                 registration_key=None,
377	                                 registration_id=None)
378	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'jwtuser123'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_tools.py:229:25
228	        self.auth.define_tables(username=True, signature=False)
229	        self.user_data = dict(username='jwtuser', password='jwtuser123')
230	        self.db.auth_user.insert(username=self.user_data['username'],

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_tools.py:234:23
233	                                         self.user_data['password'])[0]))
234	        self.jwtauth = AuthJWT(self.auth, secret_key='secret', verify_expiration=True)
235	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bart_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_tools.py:533:8
532	        # self.db.commit()
533	        self.auth.register_bare(first_name='Bart',
534	                                last_name='Simpson',
535	                                username='bart',
536	                                email='bart@simpson.com',
537	                                password='bart_password')
538	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password_123'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_tools.py:632:8
631	    def test_get_or_create_user(self):
632	        self.db.auth_user.insert(email='user1@test.com', username='user1', password='password_123')
633	        self.db.commit()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bart_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_tools.py:658:8
657	    def test_login_bare(self):
658	        self.auth.login_bare(username='bart', password='bart_password')
659	        self.assertTrue(self.auth.is_logged_in())

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'wrong_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_tools.py:662:25
661	        # Failing login because wrong_password
662	        self.assertFalse(self.auth.login_bare(username='bart', password='wrong_password'))
663	        # NOTE : The following failed for some reason, but I can't find out why

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'wrong_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_tools.py:687:25
686	        # failing register_bare user already exist
687	        self.assertEqual(self.auth.register_bare(username='bart', password='wrong_password'), False)
688	        # successful register_bare

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password_123'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_tools.py:689:25
688	        # successful register_bare
689	        self.assertEqual(self.auth.register_bare(username='user2',
690	                                                 email='user2@test.com',
691	                                                 password='password_123')['username'], 'user2')
692	        # raise ValueError

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password_123'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_tools.py:694:28
693	        self.assertRaises(ValueError, self.auth.register_bare,
694	                          **dict(wrong_field_name='user3', password='password_123'))
695	        # raise ValueError wrong email

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password_123'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_tools.py:697:28
696	        self.assertRaises(ValueError, self.auth.register_bare,
697	                          **dict(email='user4@', password='password_123'))
698	        self.db.auth_user.truncate()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password_omer'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_tools.py:761:37
760	        # Create a user to be impersonated
761	        self.auth.get_or_create_user(dict(first_name='Omer',
762	                                          last_name='Simpson',
763	                                          username='omer',
764	                                          email='omer@test.com',
765	                                          password='password_omer',
766	                                          registration_key='',
767	                                          registration_id=''),
768	                                     login=False)

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\gluon\tests\test_utils.py:7:0
6	import unittest
7	import pickle
8	from hashlib import md5

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b301-pickle
   Location: .\gluon\tests\test_utils.py:105:20
104	        unpadded = gluon.utils.unpad(padded)
105	        unpickled = pickle.loads(unpadded)
106	        self.assertEqual(pickled, unpadded)

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\gluon\tests\test_web.py:11:0
10	import unittest
11	import subprocess
12	import time

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\gluon\tests\test_web.py:34:23
33	    web2py_exec = os.path.join(path, 'web2py.py')
34	    webserverprocess = subprocess.Popen([sys.executable, web2py_exec, '-a', 'testpass'])
35	    print('Sleeping before web2py starts...')

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\gluon\tests\test_web.py:43:8
42	            break
43	        except:
44	            continue
45	    print('')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_web.py:98:15
97	        # register
98	        data = dict(first_name='Homer',
99	                    last_name='Simpson',
100	                    email='homer@web2py.com',
101	                    password='test',
102	                    password_two='test',
103	                    _formname='register')
104	        client.post('user/register', data=data)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_web.py:110:15
109	        # login again
110	        data = dict(email='homer@web2py.com',
111	                    password='test',
112	                    _formname='login')
113	        client.post('user/login', data=data)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'testpass'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tests\test_web.py:122:34
121	        client = WebClient('http://127.0.0.1:8000/admin/default/')
122	        client.post('index', data=dict(password='testpass'))
123	        client.get('site')

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\tools.py:843:24
842	                            server.close()
843	                        except Exception:
844	                            pass
845	        except Exception as e:

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\gluon\tools.py:1100:4
1099	
1100	    def __init__(self,
1101	                 auth,
1102	                 secret_key,
1103	                 algorithm='HS256',
1104	                 verify_expiration=True,
1105	                 leeway=30,
1106	                 expiration=60 * 5,
1107	                 allow_refresh=True,
1108	                 refresh_expiration_delta=60 * 60,
1109	                 header_prefix='Bearer',
1110	                 jwt_add_header=None,
1111	                 user_param='username',
1112	                 pass_param='password',
1113	                 realm='Login required',
1114	                 salt=None,
1115	                 additional_payload=None,
1116	                 before_authorization=None,
1117	                 max_header_length=4 * 1024,
1118	                 ):
1119	        self.secret_key = secret_key
1120	        self.auth = auth
1121	        self.algorithm = algorithm
1122	        if self.algorithm not in ('HS256', 'HS384', 'HS512'):
1123	            raise NotImplementedError('Algorithm %s not allowed' % algorithm)
1124	        self.verify_expiration = verify_expiration
1125	        self.leeway = leeway
1126	        self.expiration = expiration
1127	        self.allow_refresh = allow_refresh
1128	        self.refresh_expiration_delta = refresh_expiration_delta
1129	        self.header_prefix = header_prefix
1130	        self.jwt_add_header = jwt_add_header or {}
1131	        base_header = {'alg': self.algorithm, 'typ': 'JWT'}
1132	        for k, v in iteritems(self.jwt_add_header):
1133	            base_header[k] = v
1134	        self.cached_b64h = self.jwt_b64e(json.dumps(base_header))
1135	        digestmod_mapping = {
1136	            'HS256': hashlib.sha256,
1137	            'HS384': hashlib.sha384,
1138	            'HS512': hashlib.sha512
1139	        }
1140	        self.digestmod = digestmod_mapping[algorithm]
1141	        self.user_param = user_param
1142	        self.pass_param = pass_param
1143	        self.realm = realm
1144	        self.salt = salt
1145	        self.additional_payload = additional_payload
1146	        self.before_authorization = before_authorization
1147	        self.max_header_length = max_header_length
1148	        self.recvd_token = None
1149	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: '_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\gluon\tools.py:1261:4
1260	
1261	    def jwt_token_manager(self, token_param='_token'):
1262	        """
1263	        The part that issues (and refreshes) tokens.
1264	        Used in a controller, given myjwt is the istantiated class, as
1265	
1266	            @myjwt.allow_jwt(required=False, verify_expiration=False)
1267	            def api_auth():
1268	                return myjwt.jwt_token_manager()
1269	
1270	        Then, a call to /app/c/api_auth with username and password
1271	        returns a token, while /app/c/api_auth with the current token
1272	        issues another token (expired, but within grace time)
1273	        """
1274	        request = current.request
1275	        response = current.response
1276	        session = current.session
1277	        # forget and unlock response
1278	        session.forget(response)
1279	        valid_user = None
1280	        ret = None
1281	        token = None
1282	        try:
1283	            token = self.recvd_token or self.get_jwt_token_from_request(token_param)
1284	        except HTTP:
1285	            pass
1286	        if token:
1287	            if not self.allow_refresh:
1288	                raise HTTP(403, 'Refreshing token is not allowed')
1289	            tokend = self.load_token(token)
1290	            # verification can fail here
1291	            refreshed = self.refresh_token(tokend)
1292	            ret = {'token': self.generate_token(refreshed)}
1293	        elif self.user_param in request.vars and self.pass_param in request.vars:
1294	            username = request.vars[self.user_param]
1295	            password = request.vars[self.pass_param]
1296	            valid_user = self.auth.login_bare(username, password)
1297	        else:
1298	            valid_user = self.auth.user
1299	            self.auth.login_user(valid_user)
1300	        if valid_user:
1301	            payload = self.serialize_auth_session(session.auth)
1302	            self.alter_payload(payload)
1303	            ret = {'token': self.generate_token(payload)}
1304	        elif ret is None:
1305	            raise HTTP(401,
1306	                       'Not Authorized - need to be logged in, to pass a token '
1307	                       'for refresh or username and password for login',
1308	                       **{'WWW-Authenticate': 'JWT realm="%s"' % self.realm})
1309	        response.headers['Content-Type'] = 'application/json'
1310	        return serializers.json(ret)
1311	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: '_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\gluon\tools.py:1320:4
1319	
1320	    def get_jwt_token_from_request(self, token_param='_token'):
1321	        """
1322	        The method that extracts and validates the token, either
1323	        from the header or the _token var
1324	
1325	        token_param: request.vars attribute with the token used only if the http authorization header is not present.
1326	        """
1327	        token = None
1328	        token_in_header = current.request.env.http_authorization
1329	        if token_in_header:
1330	            parts = token_in_header.split()
1331	            if parts[0].lower() != self.header_prefix.lower():
1332	                raise HTTP(400, 'Invalid JWT header')
1333	            elif len(parts) == 1:
1334	                raise HTTP(400, 'Invalid JWT header, missing token')
1335	            elif len(parts) > 2:
1336	                raise HTTP(400, 'Invalid JWT header, token contains spaces')
1337	            token = parts[1]
1338	        else:
1339	            token = current.request.vars.get(token_param)
1340	            if token is None:
1341	                raise HTTP(400, 'JWT header not found and JWT parameter {} missing in request'.format(token_param))
1342	
1343	        self.recvd_token = token
1344	        return token
1345	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: '_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\gluon\tools.py:1346:4
1345	
1346	    def allows_jwt(self, otherwise=None, required=True, verify_expiration=True, token_param='_token'):
1347	        """
1348	        The decorator that takes care of injecting auth info in the decorated action.
1349	        Works w/o resorting to session.
1350	
1351	        Args:
1352	
1353	            required: the token is mandatory (either in request.var._token or in the HTTP hearder Authorization Bearer)
1354	            verify_expiration: allows to bypass expiration check.  Useful to manage token renewal.
1355	            token_param: request.vars attribute with the token used only if the http authorization header is not present (default: "_token").
1356	
1357	        """
1358	        def decorator(action):
1359	            def f(*args, **kwargs):
1360	                try:
1361	                    token = self.get_jwt_token_from_request(token_param=token_param)
1362	                except HTTP as e:
1363	                    if required:
1364	                        raise e
1365	                    token = None
1366	                if token and len(token) < self.max_header_length:
1367	                    old_verify_expiration = self.verify_expiration
1368	                    try:
1369	                        self.verify_expiration = verify_expiration
1370	                        tokend = self.load_token(token)
1371	                    except ValueError:
1372	                        raise HTTP(400, 'Invalid JWT header, wrong token format')
1373	                    finally:
1374	                        self.verify_expiration = old_verify_expiration
1375	                    self.inject_token(tokend)
1376	
1377	                return action(*args, **kwargs)
1378	
1379	            f.__doc__ = action.__doc__
1380	            f.__name__ = action.__name__
1381	            f.__dict__.update(action.__dict__)
1382	            return f
1383	
1384	        return decorator
1385	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'auth_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tools.py:1389:23
1388	
1389	    default_settings = dict(AuthAPI.default_settings,
1390	                            allow_basic_login=False,
1391	                            allow_basic_login_only=False,
1392	                            allow_delete_accounts=False,
1393	                            alternate_requires_registration=False,
1394	                            auth_manager_role=None,
1395	                            auth_two_factor_enabled=False,
1396	                            auth_two_factor_tries_left=3,
1397	                            bulk_register_enabled=False,
1398	                            captcha=None,
1399	                            cas_maps=None,
1400	                            client_side=True,
1401	                            formstyle=None,
1402	                            hideerror=False,
1403	                            label_separator=None,
1404	                            login_after_password_change=True,
1405	                            login_after_registration=False,
1406	                            login_captcha=None,
1407	                            login_specify_error=False,
1408	                            long_expiration=3600 * 30 * 24,  # one month
1409	                            mailer=None,
1410	                            manager_actions={},
1411	                            multi_login=False,
1412	                            on_failed_authentication=lambda x: redirect(x),
1413	                            pre_registration_div=None,
1414	                            prevent_open_redirect_attacks=True,
1415	                            prevent_password_reset_attacks=True,
1416	                            profile_fields=None,
1417	                            register_captcha=None,
1418	                            register_fields=None,
1419	                            register_verify_password=True,
1420	                            remember_me_form=True,
1421	                            reset_password_requires_verification=False,
1422	                            retrieve_password_captcha=None,
1423	                            retrieve_username_captcha=None,
1424	                            showid=False,
1425	                            table_cas=None,
1426	                            table_cas_name='auth_cas',
1427	                            table_event=None,
1428	                            table_group=None,
1429	                            table_membership=None,
1430	                            table_permission=None,
1431	                            table_token_name='auth_token',
1432	                            table_user=None,
1433	                            two_factor_authentication_group=None,
1434	                            update_fields=['email'],
1435	                            wiki=Settings()
1436	                            )
1437	    # ## these are messages that can be customized

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'Invalid reset password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\gluon\tools.py:1438:23
1437	    # ## these are messages that can be customized
1438	    default_messages = dict(AuthAPI.default_messages,
1439	                            access_denied='Insufficient privileges',
1440	                            bulk_invite_body='You have been invited to join %(site)s, click %(link)s to complete '
1441	                                             'the process',
1442	                            bulk_invite_subject='Invitation to join %(site)s',
1443	                            delete_label='Check to delete',
1444	                            email_sent='Email sent',
1445	                            email_verified='Email verified',
1446	                            function_disabled='Function disabled',
1447	                            impersonate_log='User %(id)s is impersonating %(other_id)s',
1448	                            invalid_reset_password='Invalid reset password',
1449	                            invalid_two_factor_code='Incorrect code. {0} more attempt(s) remaining.',
1450	                            is_empty="Cannot be empty",
1451	                            label_client_ip='Client IP',
1452	                            label_description='Description',
1453	                            label_email='E-mail',
1454	                            label_first_name='First name',
1455	                            label_group_id='Group ID',
1456	                            label_last_name='Last name',
1457	                            label_name='Name',
1458	                            label_origin='Origin',
1459	                            label_password='Password',
1460	                            label_record_id='Record ID',
1461	                            label_registration_id='Registration identifier',
1462	                            label_registration_key='Registration key',
1463	                            label_remember_me="Remember me (for 30 days)",
1464	                            label_reset_password_key='Reset Password key',
1465	                            label_role='Role',
1466	                            label_table_name='Object or table name',
1467	                            label_time_stamp='Timestamp',
1468	                            label_two_factor='Authentication code',
1469	                            label_user_id='User ID',
1470	                            label_username='Username',
1471	                            login_button='Log In',
1472	                            login_disabled='Login disabled by administrator',
1473	                            new_password='New password',
1474	                            new_password_sent='A new password was emailed to you',
1475	                            old_password='Old password',
1476	                            password_change_button='Change password',
1477	                            password_reset_button='Request reset password',
1478	                            profile_save_button='Apply changes',
1479	                            register_button='Sign Up',
1480	                            reset_password='Click on the link %(link)s to reset your password',
1481	                            reset_password_log='User %(id)s Password reset',
1482	                            reset_password_subject='Password reset',
1483	                            retrieve_password='Your password is: %(password)s',
1484	                            retrieve_password_log='User %(id)s Password retrieved',
1485	                            retrieve_password_subject='Password retrieve',
1486	                            retrieve_two_factor_code='Your temporary login code is {0}',
1487	                            retrieve_two_factor_code_subject='Two-step Login Authentication Code',
1488	                            retrieve_username='Your username is: %(username)s',
1489	                            retrieve_username_log='User %(id)s Username retrieved',
1490	                            retrieve_username_subject='Username retrieve',
1491	                            submit_button='Submit',
1492	                            two_factor_comment='This code was emailed to you and is required for login.',
1493	                            unable_send_email='Unable to send email',
1494	                            username_sent='Your username was emailed to you',
1495	                            verify_email='Welcome %(username)s! Click on the link %(link)s to verify your email',
1496	                            verify_email_log='User %(id)s Verification email sent',
1497	                            verify_email_subject='Email verification',
1498	                            verify_password='Verify Password',
1499	                            verify_password_comment='please input your password again'
1500	                            )
1501	    """

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\tools.py:2506:8
2505	            table_user[passfield].requires[-1].min_length = 0
2506	        except:
2507	            pass
2508	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\tools.py:2706:42
2705	                session.auth_two_factor_user = user  # store the validated user and associate with this session
2706	                session.auth_two_factor = random.randint(100000, 999999)
2707	                session.auth_two_factor_tries_left = self.settings.auth_two_factor_tries_left

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\tools.py:2723:24
2722	                            session.auth_two_factor = two_factor_method(user, session.auth_two_factor)
2723	                        except:
2724	                            pass
2725	                        else:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\tools.py:2777:24
2776	                                two_factor_onvalidation(session.auth_two_factor_user, form.vars['authentication_code'])
2777	                        except:
2778	                            pass
2779	                        else:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\tools.py:2942:8
2941	            table_user[passfield].requires[-1].min_length = self.settings.password_min_length
2942	        except:
2943	            pass
2944	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\tools.py:3136:19
3135	        import random
3136	        password = ''
3137	        specials = r'!#$*'

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\tools.py:3139:24
3138	        for i in range(0, 3):
3139	            password += random.choice(string.ascii_lowercase)
3140	            password += random.choice(string.ascii_uppercase)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\tools.py:3140:24
3139	            password += random.choice(string.ascii_lowercase)
3140	            password += random.choice(string.ascii_uppercase)
3141	            password += random.choice(string.digits)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\tools.py:3141:24
3140	            password += random.choice(string.ascii_uppercase)
3141	            password += random.choice(string.digits)
3142	            password += random.choice(specials)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\gluon\tools.py:3142:24
3141	            password += random.choice(string.digits)
3142	            password += random.choice(specials)
3143	        return ''.join(random.sample(password, len(password)))

--------------------------------------------------
>> Issue: [B413:blacklist] The pyCrypto library and its module AES are no longer actively maintained and have been deprecated. Consider using pyca/cryptography library.
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b413-import-pycrypto
   Location: .\gluon\utils.py:34:4
33	try:
34	    from Crypto.Cipher import AES
35	    HAVE_AES = True

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\gluon\utils.py:92:11
91	    """Generate an md5 hash with the given text."""
92	    return hashlib.md5(to_bytes(text)).hexdigest()
93	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\gluon\utils.py:176:19
175	    if not hash_key:
176	        hash_key = hashlib.sha1(encryption_key).hexdigest()
177	    dump = pickle.dumps(data, pickle.HIGHEST_PROTOCOL)

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\gluon\utils.py:194:19
193	    if not hash_key:
194	        hash_key = hashlib.sha1(encryption_key).hexdigest()
195	    signature, encrypted_data = data.split(':', 1)

--------------------------------------------------
>> Issue: [B606:start_process_with_no_shell] Starting a process without a shell.
   Severity: Low   Confidence: Medium
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b606_start_process_with_no_shell.html
   Location: .\gluon\widget.py:78:8
77	        # replace the current process
78	        os.execvpe(run_args[0], run_args + call_args, os.environ)
79	    else:

--------------------------------------------------
>> Issue: [B606:start_process_with_no_shell] Starting a process without a shell.
   Severity: Low   Confidence: Medium
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b606_start_process_with_no_shell.html
   Location: .\gluon\widget.py:82:8
81	        # replace the current process
82	        os.execv(run_args[0], run_args + call_args)
83	

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: .\gluon\widget.py:88:17
87	        host = '[%s]' % host
88	    elif host == '0.0.0.0':
89	        host = '127.0.0.1'

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: .\gluon\widget.py:244:14
243	            [(ip, 'Public') for ip in if_ips] + \
244	            [('0.0.0.0', 'Public')]
245	        for ip, legend in ips:

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '<ask>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\widget.py:315:35
314	
315	            if options.password != '<ask>':
316	                self.password.insert(0, options.password)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\widget.py:446:12
445	                    self.try_stop_scheduler(t, skip_update=True)
446	            except:
447	                pass
448	            if self.options.with_cron and not self.options.soft_cron:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\widget.py:452:16
451	                    newcron.stopcron()
452	                except:
453	                    pass
454	            try:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\widget.py:457:12
456	                self.server.stop()
457	            except:
458	                pass
459	            try:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\gluon\widget.py:461:12
460	                self.tb.Destroy()
461	            except:
462	                pass
463	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '<ask>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\widget.py:786:51
785	
786	    if (not options.no_gui and options.password == '<ask>') or options.taskbar:
787	        try:

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html
   Location: .\gluon\widget.py:813:12
812	""" % (os.getpid())
813	            os.system("/usr/bin/osascript -e '%s'" % applescript)
814	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '<ask>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\gluon\widget.py:835:27
834	
835	    if options.password == '<ask>':
836	        options.password = getpass.getpass('choose a password:')

--------------------------------------------------
>> Issue: [B411:blacklist] Using SimpleXMLRPCDispatcher to parse untrusted XML data is known to be vulnerable to XML attacks. Use defusedxml.xmlrpc.monkey_patch() function to monkey-patch xmlrpclib and mitigate XML vulnerabilities.
   Severity: High   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b411-import-xmlrpclib
   Location: .\gluon\xmlrpc.py:15:4
14	else:
15	    from xmlrpc.server import SimpleXMLRPCDispatcher
16	

--------------------------------------------------
>> Issue: [B412:blacklist] Consider possible security implications associated with wsgiref.handlers.CGIHandler module.
   Severity: High   Confidence: High
   CWE: CWE-284 (https://cwe.mitre.org/data/definitions/284.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b412-import-httpoxy
   Location: .\handlers\cgihandler.py:70:0
69	
70	wsgiref.handlers.CGIHandler().run(gluon.main.wsgibase)

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b108_hardcoded_tmp_directory.html
   Location: .\handlers\fcgihandler.py:59:41
58	
59	fcgi.WSGIServer(application, bindAddress='/tmp/fcgi.sock').run()

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with cPickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\handlers\gaehandler.py:30:0
29	import logging
30	import cPickle
31	import pickle

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\handlers\gaehandler.py:31:0
30	import cPickle
31	import pickle
32	import wsgiref.handlers

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\scripts\sessions2trash.py:80:12
79	                        last_visit = session.auth.last_visit
80	            except:
81	                pass
82	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\scripts\sessions2trash.py:178:8
177	            os.unlink(self.filename)
178	        except:
179	            pass
180	

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\scripts\sync_languages.py:43:19
42	        try:
43	            data = eval(langfile.read())
44	        finally:

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b403-import-pickle
   Location: .\scripts\tickets2slack.py:19:0
18	import time
19	import pickle
20	import json

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b301-pickle
   Location: .\scripts\tickets2slack.py:40:21
39	        with open(sent_errors_file, 'rb') as f:
40	            hashes = pickle.load(f)
41	    except Exception as _:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\scripts\tickets2slack.py:41:4
40	            hashes = pickle.load(f)
41	    except Exception as _:
42	        pass
43	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\scripts\tickets2slack.py:66:8
65	            error.load(request, request.application, file_name)
66	        except Exception as _:
67	            continue  # not an exception file?
68	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\scripts\tickets2slack.py:74:8
73	
74	        requests.post(global_settings.slack_hook, data=dict(payload=payload))
75	

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\scripts\update_languages.py:40:10
39			except ImportError:
40				return eval(text, {}, {})
41		return None

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\setupbase.py:2:0
1	import os
2	import subprocess
3	import sys

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\setupbase.py:46:11
45	    # check with git submodule status
46	    proc = subprocess.Popen('git submodule status',
47	                            stdout=subprocess.PIPE,
48	                            stderr=subprocess.PIPE,
49	                            shell=True,
50	                            cwd=root,
51	                        )
52	    status, _ = proc.communicate()

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\setupbase.py:49:11
48	                            stderr=subprocess.PIPE,
49	                            shell=True,
50	                            cwd=root,
51	                        )
52	    status, _ = proc.communicate()
53	    status = status.decode("ascii", "replace")
54	
55	    for line in status.splitlines():

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\setupbase.py:66:4
65	    """update submodules in a repo"""
66	    subprocess.check_call("git submodule init", cwd=repo_dir, shell=True)
67	    subprocess.check_call("git submodule update --recursive",

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\setupbase.py:66:4
65	    """update submodules in a repo"""
66	    subprocess.check_call("git submodule init", cwd=repo_dir, shell=True)
67	    subprocess.check_call("git submodule update --recursive",

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\setupbase.py:67:4
66	    subprocess.check_call("git submodule init", cwd=repo_dir, shell=True)
67	    subprocess.check_call("git submodule update --recursive",
68	                          cwd=repo_dir, shell=True)
69	

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\setupbase.py:68:4
67	    subprocess.check_call("git submodule update --recursive",
68	                          cwd=repo_dir, shell=True)
69	
70	

--------------------------------------------------

Code scanned:
	Total lines of code: 106333
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 318
		Medium: 105
		High: 27
	Total issues (by confidence):
		Undefined: 0
		Low: 9
		Medium: 114
		High: 327
Files skipped (21):
	.\extras\build_web2py\web2py.site_27.py (syntax error while parsing AST from file)
	.\extras\build_web2py\web2py.site_37.py (syntax error while parsing AST from file)
	.\fabfile.py (syntax error while parsing AST from file)
	.\gluon\form.py (syntax error while parsing AST from file)
	.\handlers\isapiwsgihandler.py (syntax error while parsing AST from file)
	.\handlers\modpythonhandler.py (syntax error while parsing AST from file)
	.\handlers\web2py_on_gevent.py (syntax error while parsing AST from file)
	.\scripts\check_lang_progress.py (syntax error while parsing AST from file)
	.\scripts\contentparser.py (syntax error while parsing AST from file)
	.\scripts\cpdb.py (syntax error while parsing AST from file)
	.\scripts\cpplugin.py (syntax error while parsing AST from file)
	.\scripts\dict_diff.py (syntax error while parsing AST from file)
	.\scripts\extract_mssql_models.py (syntax error while parsing AST from file)
	.\scripts\extract_mysql_models.py (syntax error while parsing AST from file)
	.\scripts\extract_oracle_models.py (syntax error while parsing AST from file)
	.\scripts\extract_pgsql_models.py (syntax error while parsing AST from file)
	.\scripts\extract_sqlite_models.py (syntax error while parsing AST from file)
	.\scripts\fixws.py (syntax error while parsing AST from file)
	.\scripts\lang_update_from_langfile.py (syntax error while parsing AST from file)
	.\scripts\parse_top_level_domains.py (syntax error while parsing AST from file)
	.\scripts\rmorphans.py (syntax error while parsing AST from file)
