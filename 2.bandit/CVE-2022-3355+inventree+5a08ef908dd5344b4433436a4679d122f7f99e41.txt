Working... ---------------------------------------- 100% 0:00:07
Run started:2024-02-10 22:51:23.298473

Test results:
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'mypassword'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\InvenTree\api_tester.py:22:15
21	    username = 'testuser'
22	    password = 'mypassword'
23	    email = 'test@testing.com'

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\InvenTree\InvenTree\config.py:198:23
197	        options = string.digits + string.ascii_letters + string.punctuation
198	        key = ''.join([random.choice(options) for i in range(100)])
199	        secret_key_file.write_text(key)

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: .\InvenTree\InvenTree\exchange.py:44:23
43	            context = ssl.create_default_context(cafile=certifi.where())
44	            response = urlopen(url, timeout=5, context=context)
45	            return response.read()

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\InvenTree\InvenTree\helpers.py:905:11
904	
905	    hash = hashlib.md5(str(barcode_data).encode())
906	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\InvenTree\InvenTree\metadata.py:149:28
148	                                default = default()
149	                            except Exception:
150	                                continue
151	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\InvenTree\middleware.py:38:8
37	
38	        assert hasattr(request, 'user')
39	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\InvenTree\models.py:296:8
295	            reference = InvenTree.format.extract_named_group('ref', reference, cls.get_reference_pattern())
296	        except Exception:
297	            pass
298	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\InvenTree\InvenTree\serializers.py:109:24
108	                            value = value()
109	                        except Exception:
110	                            continue
111	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\InvenTree\InvenTree\serializers.py:139:24
138	                            value = value()
139	                        except Exception:
140	                            continue
141	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\InvenTree\serializers.py:417:12
416	                model_fields = self.TARGET_MODEL.get_import_fields()
417	            except Exception:
418	                pass
419	

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\InvenTree\InvenTree\tasks.py:119:28
118	                if not _func:
119	                    _func = eval(func)  # pragma: no cover
120	            except NameError:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\InvenTree\InvenTree\tasks.py:201:15
200	
201	    response = requests.get('https://api.github.com/repos/inventree/inventree/releases/latest')
202	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'test_pass'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\InvenTree\test_views.py:15:15
14	    username = 'test_user'
15	    password = 'test_pass'
16	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'notstaff'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\InvenTree\InvenTree\test_views.py:90:20
89	        # Now create a user who does not have staff access
90	        pleb_user = get_user_model().objects.create_user(
91	            username='pleb',
92	            password='notstaff',
93	        )
94	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'notstaff'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\InvenTree\InvenTree\test_views.py:102:17
101	
102	        result = self.client.login(
103	            username='pleb',
104	            password='notstaff',
105	        )
106	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\InvenTree\InvenTree\tests.py:576:8
575	
576	        import subprocess
577	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\InvenTree\tests.py:580:19
579	
580	        hash = str(subprocess.check_output('git rev-parse --short HEAD'.split()), 'utf-8').strip()
581	        self.assertEqual(hash, version.inventreeCommitHash())

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\InvenTree\tests.py:583:16
582	
583	        d = str(subprocess.check_output('git show -s --format=%ci'.split()), 'utf-8').strip().split(' ')[0]
584	        self.assertEqual(d, version.inventreeCommitDate())

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\InvenTree\InvenTree\version.py:8:0
7	import re
8	import subprocess
9	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\InvenTree\version.py:101:19
100	    try:
101	        return str(subprocess.check_output('git rev-parse --short HEAD'.split()), 'utf-8').strip()
102	    except Exception:  # pragma: no cover

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\InvenTree\version.py:115:16
114	    try:
115	        d = str(subprocess.check_output('git show -s --format=%ci'.split()), 'utf-8').strip()
116	        return d.split(' ')[0]

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\build\api.py:243:8
242	            ctx['build'] = Build.objects.get(pk=self.kwargs.get('pk', None))
243	        except Exception:
244	            pass
245	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\build\api.py:263:8
262	            ctx['build'] = Build.objects.get(pk=self.kwargs.get('pk', None))
263	        except Exception:
264	            pass
265	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\build\models.py:1297:12
1296	                thumb_url = self.stock_item.part.image.thumbnail.url
1297	            except Exception:
1298	                pass
1299	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\build\models.py:1303:12
1302	                thumb_url = self.bom_item.sub_part.image.thumbnail.url
1303	            except Exception:
1304	                pass
1305	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\common\apps.py:34:8
33	                    common.models.InvenTreeSetting.set_setting('SERVER_RESTART_REQUIRED', False, None)
34	        except Exception:
35	            pass

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\common\models.py:660:12
659	                return model_class.get_api_url()
660	            except Exception:
661	                pass
662	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\common\models.py:1862:17
1861	    # Token
1862	    TOKEN_NAME = "Token"
1863	    VERIFICATION_METHOD = VerificationMethod.NONE

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Incorrect token in header.'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\common\models.py:1866:26
1865	    MESSAGE_OK = "Message was received."
1866	    MESSAGE_TOKEN_ERROR = "Incorrect token in header."
1867	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\InvenTree\common\test_notifications.py:130:8
129	        super().setUp()
130	        self.client.login(username=self.user.username, password='password')
131	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'hunter42'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\InvenTree\common\tests.py:224:12
223	        for idx in range(5):
224	            get_user_model().objects.create(
225	                username=f"User_{idx}",
226	                password="hunter42",
227	                email="email@dot.com",
228	            )
229	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:613:8
612	        response = self.client.get(self.url)
613	        assert response.status_code == HTTPStatus.METHOD_NOT_ALLOWED
614	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:622:8
621	
622	        assert response.status_code == HTTPStatus.FORBIDDEN
623	        assert (

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:623:8
622	        assert response.status_code == HTTPStatus.FORBIDDEN
623	        assert (
624	            json.loads(response.content)['detail'] == WebhookView.model_class.MESSAGE_TOKEN_ERROR
625	        )
626	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:635:8
634	
635	        assert response.status_code == HTTPStatus.FORBIDDEN
636	        assert (json.loads(response.content)['detail'] == WebhookView.model_class.MESSAGE_TOKEN_ERROR)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:636:8
635	        assert response.status_code == HTTPStatus.FORBIDDEN
636	        assert (json.loads(response.content)['detail'] == WebhookView.model_class.MESSAGE_TOKEN_ERROR)
637	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:645:8
644	
645	        assert response.status_code == HTTPStatus.NOT_FOUND
646	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:656:8
655	
656	        assert response.status_code == HTTPStatus.NOT_ACCEPTABLE
657	        assert (

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:657:8
656	        assert response.status_code == HTTPStatus.NOT_ACCEPTABLE
657	        assert (
658	            json.loads(response.content)['detail'] == 'Expecting property name enclosed in double quotes'
659	        )
660	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\common\tests.py:664:34
663	        # delete token
664	        self.endpoint_def.token = ''
665	        self.endpoint_def.save()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:673:8
672	
673	        assert response.status_code == HTTPStatus.OK
674	        assert str(response.content, 'utf-8') == WebhookView.model_class.MESSAGE_OK

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:674:8
673	        assert response.status_code == HTTPStatus.OK
674	        assert str(response.content, 'utf-8') == WebhookView.model_class.MESSAGE_OK
675	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\common\tests.py:679:34
678	        # delete token
679	        self.endpoint_def.token = ''
680	        self.endpoint_def.secret = '123abc'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '123abc'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\common\tests.py:680:35
679	        self.endpoint_def.token = ''
680	        self.endpoint_def.secret = '123abc'
681	        self.endpoint_def.save()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:689:8
688	
689	        assert response.status_code == HTTPStatus.FORBIDDEN
690	        assert (json.loads(response.content)['detail'] == WebhookView.model_class.MESSAGE_TOKEN_ERROR)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:690:8
689	        assert response.status_code == HTTPStatus.FORBIDDEN
690	        assert (json.loads(response.content)['detail'] == WebhookView.model_class.MESSAGE_TOKEN_ERROR)
691	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\common\tests.py:695:34
694	        # delete token
695	        self.endpoint_def.token = ''
696	        self.endpoint_def.secret = '123abc'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '123abc'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\common\tests.py:696:35
695	        self.endpoint_def.token = ''
696	        self.endpoint_def.secret = '123abc'
697	        self.endpoint_def.save()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:706:8
705	
706	        assert response.status_code == HTTPStatus.OK
707	        assert str(response.content, 'utf-8') == WebhookView.model_class.MESSAGE_OK

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:707:8
706	        assert response.status_code == HTTPStatus.OK
707	        assert str(response.content, 'utf-8') == WebhookView.model_class.MESSAGE_OK
708	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:721:8
720	
721	        assert response.status_code == HTTPStatus.OK
722	        assert str(response.content, 'utf-8') == WebhookView.model_class.MESSAGE_OK

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:722:8
721	        assert response.status_code == HTTPStatus.OK
722	        assert str(response.content, 'utf-8') == WebhookView.model_class.MESSAGE_OK
723	        message = WebhookMessage.objects.get()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\common\tests.py:724:8
723	        message = WebhookMessage.objects.get()
724	        assert message.body == {"this": "is a message"}
725	

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:18:8
17	    if not TESTING:  # pragma: no cover
18	        os.system('cls' if os.name == 'nt' else 'clear')
19	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:48:34
47	        # Grab the manufacturer ID from the part
48	        response = cursor.execute(f"SELECT manufacturer_id FROM part_supplierpart WHERE id={supplier_part_id};")
49	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:67:34
66	        # Now extract the "name" for the manufacturer
67	        response = cursor.execute(f"SELECT name from company_company where id={manufacturer_id};")
68	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:75:34
74	
75	        response = cursor.execute("UPDATE part_supplierpart SET manufacturer_name='{name}' WHERE id={ID};".format(name=name, ID=supplier_part_id))
76	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:103:16
102	
103	        query = "SELECT manufacturer_name from part_supplierpart where id={ID};".format(ID=part_id)
104	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:115:30
114	
115	    response = cursor.execute(f'select id, "MPN" from part_supplierpart;')
116	    supplier_parts = cursor.fetchall()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:147:20
146	
147	            query = f"update part_supplierpart set manufacturer_id={manufacturer_id} where id={part_id};"
148	            result = cursor.execute(query)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:158:20
157	
158	            query = f"update part_supplierpart set manufacturer_id={manufacturer_id} where id={part_id};"
159	            result = cursor.execute(query)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:185:23
184	        # Update SupplierPart object in the database
185	        cursor.execute(f"update part_supplierpart set manufacturer_id={manufacturer.pk} where id={part_id};")
186	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:275:39
274	                        # Ensure the company is designated as a manufacturer
275	                        cursor.execute(f"update company_company set is_manufacturer=true where id={company_id};")
276	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0019_auto_20200413_0642.py:278:39
277	                        # Link the company to the part
278	                        cursor.execute(f"update part_supplierpart set manufacturer_id={company_id} where id={part_id};")
279	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0026_auto_20201110_1011.py:68:34
67	        # Copy the 'cost' field across to the 'price' field
68	        response = cursor.execute(f'UPDATE part_supplierpricebreak set price={cost} where id={pk};')
69	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0026_auto_20201110_1011.py:74:34
73	        # Update the currency code
74	        response = cursor.execute(f"UPDATE part_supplierpricebreak set price_currency= '{currency_code}' where id={pk};")
75	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0026_auto_20201110_1011.py:94:30
93	    # Extract a list of currency codes which are in use
94	    response = cursor.execute(f'SELECT id, price, price_currency from part_supplierpricebreak;')
95	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0026_auto_20201110_1011.py:106:34
105	        # Copy the 'price' field back into the 'cost' field
106	        response = cursor.execute(f'UPDATE part_supplierpricebreak set cost={price} where id={pk};')
107	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0026_auto_20201110_1011.py:113:34
112	    for code in codes_in_use:
113	        response = cursor.execute(f"SELECT id, suffix from common_currency where suffix='{code}';")
114	        row = cursor.fetchone()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0026_auto_20201110_1011.py:128:20
127	            # Construct a query to create a new Currency object
128	            query = f'INSERT into common_currency (symbol, suffix, description, value, base) VALUES ("$", "{code}", "{description}", 1.0, False);'
129	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\company\migrations\0026_auto_20201110_1011.py:141:34
140	
141	        response = cursor.execute(f"UPDATE part_supplierpricebreak set currency_id={pk} where price_currency='{suffix}';")
142	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\InvenTree\label\api.py:362:16
361	                    filters = InvenTree.helpers.validateFilterString(label.filters)
362	                except Exception:  # pragma: no cover
363	                    # Skip if there was an error validating the filters...
364	                    continue
365	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\InvenTree\label\apps.py:21:10
20	    """Calculate the MD5 hash of a file."""
21	    md5 = hashlib.md5()
22	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\InvenTree\label\apps.py:45:12
44	            from .models import PartLabel, StockItemLabel, StockLocationLabel
45	            assert bool(StockLocationLabel is not None)
46	        except AppRegistryNotReady:  # pragma: no cover

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\order\api.py:340:8
339	            context['order'] = models.PurchaseOrder.objects.get(pk=self.kwargs.get('pk', None))
340	        except Exception:
341	            pass
342	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\order\api.py:902:8
901	            ctx['order'] = models.SalesOrder.objects.get(pk=self.kwargs.get('pk', None))
902	        except Exception:
903	            pass
904	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\order\api.py:1095:8
1094	            )
1095	        except Exception:
1096	            pass
1097	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\part\api.py:747:8
746	            ctx['part'] = Part.objects.get(pk=self.kwargs.get('pk', None))
747	        except Exception:
748	            pass
749	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\part\migrations\0056_auto_20201110_1125.py:69:34
68	        # Copy the 'cost' field across to the 'price' field
69	        response = cursor.execute(f'UPDATE part_partsellpricebreak set price={cost} where id={pk};')
70	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\part\migrations\0056_auto_20201110_1125.py:75:34
74	        # Update the currency code
75	        response = cursor.execute(f"UPDATE part_partsellpricebreak set price_currency='{currency_code}' where id={pk};")
76	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\part\migrations\0056_auto_20201110_1125.py:95:30
94	    # Extract a list of currency codes which are in use
95	    response = cursor.execute(f'SELECT id, price, price_currency from part_partsellpricebreak;')
96	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\part\migrations\0056_auto_20201110_1125.py:107:34
106	        # Copy the 'price' field back into the 'cost' field
107	        response = cursor.execute(f'UPDATE part_partsellpricebreak set cost={price} where id={pk};')
108	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\part\migrations\0056_auto_20201110_1125.py:114:34
113	    for code in codes_in_use:
114	        response = cursor.execute(f"SELECT id, suffix from common_currency where suffix='{code}';")
115	        row = cursor.fetchone()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\part\migrations\0056_auto_20201110_1125.py:129:20
128	            # Construct a query to create a new Currency object
129	            query = f"INSERT into common_currency (symbol, suffix, description, value, base) VALUES ('$', '{code}', '{description}', 1.0, False);"
130	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\InvenTree\part\migrations\0056_auto_20201110_1125.py:142:34
141	
142	        response = cursor.execute(f"UPDATE part_partsellpricebreak set currency_id={pk} where price_currency='{suffix}';")
143	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\part\models.py:620:8
619	            latest = int(latest)
620	        except Exception:
621	            pass
622	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\InvenTree\part\models.py:1547:22
1546	        """
1547	        result_hash = hashlib.md5(str(self.id).encode())
1548	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\InvenTree\part\models.py:2690:22
2689	        # Seed the hash with the ID of this BOM item
2690	        result_hash = hashlib.md5(str(self.id).encode())
2691	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\part\serializers.py:939:12
938	                    return None
939	            except Exception:
940	                pass
941	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\part\templatetags\inventree_extras.py:392:11
391	
392	    return mark_safe(html)
393	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\part\templatetags\inventree_extras.py:392:11
391	
392	    return mark_safe(html)
393	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\part\templatetags\inventree_extras.py:497:11
496	    ref_url = reverse(url_name, kwargs={'pk': pk})
497	    return mark_safe(f'<b><a href="{ref_url}">{ref}</a></b>')
498	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\part\templatetags\inventree_extras.py:497:11
496	    ref_url = reverse(url_name, kwargs={'pk': pk})
497	    return mark_safe(f'<b><a href="{ref_url}">{ref}</a></b>')
498	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\part\templatetags\status_codes.py:15:11
14	    """Render a PurchaseOrder status label."""
15	    return mark_safe(PurchaseOrderStatus.render(key, large=kwargs.get('large', False)))
16	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\part\templatetags\status_codes.py:15:11
14	    """Render a PurchaseOrder status label."""
15	    return mark_safe(PurchaseOrderStatus.render(key, large=kwargs.get('large', False)))
16	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\part\templatetags\status_codes.py:21:11
20	    """Render a SalesOrder status label."""
21	    return mark_safe(SalesOrderStatus.render(key, large=kwargs.get('large', False)))
22	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\part\templatetags\status_codes.py:21:11
20	    """Render a SalesOrder status label."""
21	    return mark_safe(SalesOrderStatus.render(key, large=kwargs.get('large', False)))
22	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\part\templatetags\status_codes.py:27:11
26	    """Render a StockItem status label."""
27	    return mark_safe(StockStatus.render(key, large=kwargs.get('large', False)))
28	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\part\templatetags\status_codes.py:27:11
26	    """Render a StockItem status label."""
27	    return mark_safe(StockStatus.render(key, large=kwargs.get('large', False)))
28	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\part\templatetags\status_codes.py:33:11
32	    """Render the text value of a StockItem status value"""
33	    return mark_safe(StockStatus.text(key))
34	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\part\templatetags\status_codes.py:33:11
32	    """Render the text value of a StockItem status value"""
33	    return mark_safe(StockStatus.text(key))
34	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\part\templatetags\status_codes.py:39:11
38	    """Render a Build status label."""
39	    return mark_safe(BuildStatus.render(key, large=kwargs.get('large', False)))

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\part\templatetags\status_codes.py:39:11
38	    """Render a Build status label."""
39	    return mark_safe(BuildStatus.render(key, large=kwargs.get('large', False)))

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\InvenTree\part\test_api.py:1738:27
1737	                # Generate random quantity to order
1738	                quantity = randint(10, 20)
1739	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\InvenTree\part\test_api.py:1741:27
1740	                # Mark up to half of the quantity as received
1741	                received = randint(0, quantity // 2)
1742	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\part\test_part.py:203:8
202	            self.assertTrue(False)  # pragma: no cover
203	        except Exception:
204	            pass
205	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\plugin\apps.py:42:20
41	                            registry.install_plugin_file()
42	                    except Exception:  # pragma: no cover
43	                        pass
44	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Bearer'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\plugin\base\integration\mixins.py:372:16
371	
372	    API_TOKEN = 'Bearer'
373	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'API_TOKEN'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\plugin\base\integration\test_mixins.py:193:32
192	            API_URL_SETTING = 'API_URL'
193	            API_TOKEN_SETTING = 'API_TOKEN'
194	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\InvenTree\plugin\helpers.py:7:0
6	import pkgutil
7	import subprocess
8	import sysconfig

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\plugin\helpers.py:117:25
116	        try:
117	            output = str(subprocess.check_output(command, cwd=settings.BASE_DIR.parent), 'utf-8')[1:-1]
118	            if output:

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\InvenTree\plugin\helpers.py:136:21
135	    try:
136	        output = str(subprocess.check_output(['git', '--version'], cwd=settings.BASE_DIR.parent), 'utf-8')
137	    except subprocess.CalledProcessError:  # pragma: no cover

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\plugin\helpers.py:136:21
135	    try:
136	        output = str(subprocess.check_output(['git', '--version'], cwd=settings.BASE_DIR.parent), 'utf-8')
137	    except subprocess.CalledProcessError:  # pragma: no cover

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\InvenTree\plugin\registry.py:11:0
10	import os
11	import subprocess
12	from importlib import reload

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\InvenTree\plugin\registry.py:305:25
304	        try:
305	            output = str(subprocess.check_output(['pip', 'install', '-U', '-r', settings.PLUGIN_FILE], cwd=settings.BASE_DIR.parent), 'utf-8')
306	        except subprocess.CalledProcessError as error:  # pragma: no cover

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\plugin\registry.py:305:25
304	        try:
305	            output = str(subprocess.check_output(['pip', 'install', '-U', '-r', settings.PLUGIN_FILE], cwd=settings.BASE_DIR.parent), 'utf-8')
306	        except subprocess.CalledProcessError as error:  # pragma: no cover

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\plugin\registry.py:610:20
609	                        admin.site.unregister(model)
610	                    except Exception:  # pragma: no cover
611	                        pass
612	                    models += [model._meta.model_name]

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'API_TOKEN'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\InvenTree\plugin\samples\integration\api_caller.py:23:24
22	    API_URL_SETTING = 'API_URL'
23	    API_TOKEN_SETTING = 'API_TOKEN'
24	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\plugin\samples\integration\custom_panel_sample.py:116:12
115	                    })
116	            except Exception:  # pragma: no cover
117	                pass
118	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\InvenTree\plugin\serializers.py:3:0
2	
3	import subprocess
4	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\plugin\serializers.py:146:21
145	        try:
146	            result = subprocess.check_output(command, cwd=settings.BASE_DIR.parent)
147	            ret['result'] = str(result, 'utf-8')

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\InvenTree\plugin\test_plugin.py:5:0
4	import shutil
5	import subprocess
6	import tempfile

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\InvenTree\plugin\test_plugin.py:248:8
247	        # Install sample package
248	        subprocess.check_output('pip install inventree-zapier'.split())
249	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\InvenTree\report\api.py:305:16
304	                    filters = InvenTree.helpers.validateFilterString(report.filters)
305	                except Exception:
306	                    continue
307	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\InvenTree\report\api.py:560:16
559	                    filters = InvenTree.helpers.validateFilterString(report.filters)
560	                except Exception:
561	                    continue
562	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\InvenTree\report\api.py:639:16
638	                    filters = InvenTree.helpers.validateFilterString(report.filters)
639	                except Exception:
640	                    continue
641	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\report\apps.py:77:12
76	
77	            except Exception:
78	                pass
79	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\report\templatetags\report.py:172:11
171	
172	    return mark_safe(f'<a href="{url}">{text}</a>')

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\report\templatetags\report.py:172:11
171	
172	    return mark_safe(f'<a href="{url}">{text}</a>')

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:104:8
103	            context['item'] = StockItem.objects.get(pk=self.kwargs.get('pk', None))
104	        except Exception:
105	            pass
106	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:858:12
857	                    queryset = queryset.filter(part__tree_id=part.tree_id)
858	            except Exception:
859	                pass
860	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:1172:8
1171	            kwargs['user_detail'] = str2bool(self.request.query_params.get('user_detail', False))
1172	        except Exception:
1173	            pass
1174	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:1214:8
1213	            kwargs['item_detail'] = str2bool(self.request.query_params.get('item_detail', False))
1214	        except Exception:
1215	            pass
1216	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:1219:8
1218	            kwargs['user_detail'] = str2bool(self.request.query_params.get('user_detail', False))
1219	        except Exception:
1220	            pass
1221	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:1247:16
1246	                    deltas['part_detail'] = serializer.data
1247	                except Exception:
1248	                    pass
1249	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:1256:16
1255	                    deltas['location_detail'] = serializer.data
1256	                except Exception:
1257	                    pass
1258	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:1265:16
1264	                    deltas['stockitem_detail'] = serializer.data
1265	                except Exception:
1266	                    pass
1267	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:1274:16
1273	                    deltas['customer_detail'] = serializer.data
1274	                except Exception:
1275	                    pass
1276	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\api.py:1283:16
1282	                    deltas['purchaseorder_detail'] = serializer.data
1283	                except Exception:
1284	                    pass
1285	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\stock\tests.py:560:12
559	                )
560	            except Exception:
561	                pass
562	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\InvenTree\users\admin.py:191:30
190	        if warning_message:
191	            warning_message = mark_safe(_(f'The following users are members of multiple groups:'
192	                                          f'{warning_message}'))
193	            messages.add_message(request, messages.WARNING, warning_message)

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\InvenTree\users\admin.py:191:30
190	        if warning_message:
191	            warning_message = mark_safe(_(f'The following users are members of multiple groups:'
192	                                          f'{warning_message}'))
193	            messages.add_message(request, messages.WARNING, warning_message)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\users\models.py:571:8
570	            owners.append(cls.objects.get(owner_id=user.pk, owner_type=user_type))
571	        except Exception:  # pragma: no cover
572	            pass
573	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\InvenTree\users\models.py:578:12
577	                owners.append(owner)
578	            except Exception:  # pragma: no cover
579	                pass
580	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\InvenTree\users\test_migrations.py:18:8
17	
18	        User.objects.create(
19	            username='fred',
20	            email='fred@fred.com',
21	            password='password'
22	        )
23	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\InvenTree\users\test_migrations.py:24:8
23	
24	        User.objects.create(
25	            username='brad',
26	            email='brad@fred.com',
27	            password='password'
28	        )
29	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\ci\check_api_endpoint.py:12:11
11	
12	response = requests.get(url)
13	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\ci\check_api_endpoint.py:14:0
13	
14	assert response.status_code == 200
15	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\ci\check_api_endpoint.py:28:4
27	for key in required_keys:
28	    assert key in data
29	    print(f"- Found key '{key}'")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\ci\check_api_endpoint.py:32:0
31	# Check that the worker is running
32	assert data['worker_running']
33	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\ci\check_locale_files.py:3:0
2	
3	import subprocess
4	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\ci\check_locale_files.py:10:7
9	
10	proc = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
11	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\ci\check_migration_files.py:3:0
2	
3	import subprocess
4	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\ci\check_migration_files.py:10:7
9	
10	proc = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
11	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\ci\version_check.py:24:15
23	
24	    response = requests.get('https://api.github.com/repos/inventree/inventree/releases')
25	

--------------------------------------------------

Code scanned:
	Total lines of code: 52796
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 103
		Medium: 47
		High: 5
	Total issues (by confidence):
		Undefined: 0
		Low: 8
		Medium: 37
		High: 110
Files skipped (0):
