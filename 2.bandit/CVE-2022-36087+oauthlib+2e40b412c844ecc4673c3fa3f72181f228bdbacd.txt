Working... ---------------------------------------- 100% 0:00:01
Run started:2024-02-10 22:52:57.203912

Test results:
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\oauthlib\oauth1\rfc5849\__init__.py:222:63
221	        if request.body is not None and content_type_eligible:
222	            params.append(('oauth_body_hash', base64.b64encode(hashlib.sha1(request.body.encode('utf-8')).digest()).decode('utf-8')))
223	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'refresh_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\oauthlib\oauth2\rfc6749\clients\base.py:54:24
53	    """
54	    refresh_token_key = 'refresh_token'
55	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'Bearer'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\oauthlib\oauth2\rfc6749\clients\base.py:56:4
55	
56	    def __init__(self, client_id,
57	                 default_token_placement=AUTH_HEADER,
58	                 token_type='Bearer',
59	                 access_token=None,
60	                 refresh_token=None,
61	                 mac_key=None,
62	                 mac_algorithm=None,
63	                 token=None,
64	                 scope=None,
65	                 state=None,
66	                 redirect_url=None,
67	                 state_generator=generate_token,
68	                 code_verifier=None,
69	                 code_challenge=None,
70	                 code_challenge_method=None,
71	                 **kwargs):
72	        """Initialize a client with commonly used attributes.
73	
74	        :param client_id: Client identifier given by the OAuth provider upon
75	        registration.
76	
77	        :param default_token_placement: Tokens can be supplied in the Authorization
78	        header (default), the URL query component (``query``) or the request
79	        body (``body``).
80	
81	        :param token_type: OAuth 2 token type. Defaults to Bearer. Change this
82	        if you specify the ``access_token`` parameter and know it is of a
83	        different token type, such as a MAC, JWT or SAML token. Can
84	        also be supplied as ``token_type`` inside the ``token`` dict parameter.
85	
86	        :param access_token: An access token (string) used to authenticate
87	        requests to protected resources. Can also be supplied inside the
88	        ``token`` dict parameter.
89	
90	        :param refresh_token: A refresh token (string) used to refresh expired
91	        tokens. Can also be supplied inside the ``token`` dict parameter.
92	
93	        :param mac_key: Encryption key used with MAC tokens.
94	
95	        :param mac_algorithm:  Hashing algorithm for MAC tokens.
96	
97	        :param token: A dict of token attributes such as ``access_token``,
98	        ``token_type`` and ``expires_at``.
99	
100	        :param scope: A list of default scopes to request authorization for.
101	
102	        :param state: A CSRF protection string used during authorization.
103	
104	        :param redirect_url: The redirection endpoint on the client side to which
105	        the user returns after authorization.
106	
107	        :param state_generator: A no argument state generation callable. Defaults
108	        to :py:meth:`oauthlib.common.generate_token`.
109	
110	        :param code_verifier: PKCE parameter. A cryptographically random string that is used to correlate the
111	        authorization request to the token request.
112	
113	        :param code_challenge: PKCE parameter. A challenge derived from the code verifier that is sent in the
114	        authorization request, to be verified against later.
115	
116	        :param code_challenge_method: PKCE parameter. A method that was used to derive code challenge.
117	        Defaults to "plain" if not present in the request.
118	        """
119	
120	        self.client_id = client_id
121	        self.default_token_placement = default_token_placement
122	        self.token_type = token_type
123	        self.access_token = access_token
124	        self.refresh_token = refresh_token
125	        self.mac_key = mac_key
126	        self.mac_algorithm = mac_algorithm
127	        self.token = token or {}
128	        self.scope = scope
129	        self.state_generator = state_generator
130	        self.state = state
131	        self.redirect_url = redirect_url
132	        self.code_verifier = code_verifier
133	        self.code_challenge = code_challenge
134	        self.code_challenge_method = code_challenge_method
135	        self.code = None
136	        self.expires_in = None
137	        self._expires_at = None
138	        self.populate_token_attributes(self.token)
139	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'access_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\oauthlib\oauth2\rfc6749\clients\base.py:323:4
322	
323	    def prepare_token_revocation_request(self, revocation_url, token,
324	                                         token_type_hint="access_token", body='', callback=None, **kwargs):
325	        """Prepare a token revocation request.
326	
327	        :param revocation_url: Provider token revocation endpoint URL.
328	        :param token: The access or refresh token to be revoked (string).
329	        :param token_type_hint: ``"access_token"`` (default) or
330	            ``"refresh_token"``. This is optional and if you wish to not pass it you
331	            must provide ``token_type_hint=None``.
332	        :param body:
333	        :param callback: A jsonp callback such as ``package.callback`` to be invoked
334	            upon receiving the response. Not that it should not include a () suffix.
335	        :param kwargs: Additional parameters to included in the request.
336	        :returns: The prepared request tuple with (url, headers, body).
337	
338	        Note that JSONP request may use GET requests as the parameters will
339	        be added to the request URL query as opposed to the request body.
340	
341	        An example of a revocation request
342	
343	        .. code-block:: http
344	
345	            POST /revoke HTTP/1.1
346	            Host: server.example.com
347	            Content-Type: application/x-www-form-urlencoded
348	            Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
349	
350	            token=45ghiukldjahdnhzdauz&token_type_hint=refresh_token
351	
352	        An example of a jsonp revocation request
353	
354	        .. code-block:: http
355	
356	            GET /revoke?token=agabcdefddddafdd&callback=package.myCallback HTTP/1.1
357	            Host: server.example.com
358	            Content-Type: application/x-www-form-urlencoded
359	            Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
360	
361	        and an error response
362	
363	        .. code-block:: javascript
364	
365	            package.myCallback({"error":"unsupported_token_type"});
366	
367	        Note that these requests usually require client credentials, client_id in
368	        the case for public clients and provider specific authentication
369	        credentials for confidential clients.
370	        """
371	        if not is_secure_transport(revocation_url):
372	            raise InsecureTransportError()
373	
374	        return prepare_token_revocation_request(revocation_url, token,
375	                                                token_type_hint=token_type_hint, body=body, callback=callback,
376	                                                **kwargs)
377	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\oauthlib\oauth2\rfc6749\endpoints\metadata.py:41:8
40	    def __init__(self, endpoints, claims={}, raise_errors=True):
41	        assert isinstance(claims, dict)
42	        for endpoint in endpoints:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\oauthlib\oauth2\rfc6749\endpoints\metadata.py:43:12
42	        for endpoint in endpoints:
43	            assert isinstance(endpoint, BaseEndpoint)
44	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'Bearer'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\oauthlib\oauth2\rfc6749\endpoints\pre_configured.py:67:8
66	                               default_token_type=self.bearer)
67	        ResourceEndpoint.__init__(self, default_token='Bearer',
68	                                  token_types={'Bearer': self.bearer})
69	        RevocationEndpoint.__init__(self, request_validator)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'Bearer'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\oauthlib\oauth2\rfc6749\endpoints\pre_configured.py:106:8
105	                               default_token_type=self.bearer)
106	        ResourceEndpoint.__init__(self, default_token='Bearer',
107	                                  token_types={'Bearer': self.bearer})
108	        RevocationEndpoint.__init__(self, request_validator)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'Bearer'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\oauthlib\oauth2\rfc6749\endpoints\pre_configured.py:139:8
138	                                       default_token_type=self.bearer)
139	        ResourceEndpoint.__init__(self, default_token='Bearer',
140	                                  token_types={'Bearer': self.bearer})
141	        RevocationEndpoint.__init__(self, request_validator,

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'Bearer'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\oauthlib\oauth2\rfc6749\endpoints\pre_configured.py:178:8
177	                               default_token_type=self.bearer)
178	        ResourceEndpoint.__init__(self, default_token='Bearer',
179	                                  token_types={'Bearer': self.bearer})
180	        RevocationEndpoint.__init__(self, request_validator)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'Bearer'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\oauthlib\oauth2\rfc6749\endpoints\pre_configured.py:211:8
210	                               default_token_type=self.bearer)
211	        ResourceEndpoint.__init__(self, default_token='Bearer',
212	                                  token_types={'Bearer': self.bearer})
213	        RevocationEndpoint.__init__(self, request_validator,

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'access_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\oauthlib\oauth2\rfc6749\parameters.py:175:0
174	
175	def prepare_token_revocation_request(url, token, token_type_hint="access_token",
176	        callback=None, body='', **kwargs):
177	    """Prepare a token revocation request.
178	
179	    The client constructs the request by including the following parameters
180	    using the ``application/x-www-form-urlencoded`` format in the HTTP request
181	    entity-body:
182	
183	    :param token: REQUIRED.  The token that the client wants to get revoked.
184	
185	    :param token_type_hint: OPTIONAL.  A hint about the type of the token
186	                            submitted for revocation. Clients MAY pass this
187	                            parameter in order to help the authorization server
188	                            to optimize the token lookup.  If the server is
189	                            unable to locate the token using the given hint, it
190	                            MUST extend its search across all of its supported
191	                            token types.  An authorization server MAY ignore
192	                            this parameter, particularly if it is able to detect
193	                            the token type automatically.
194	
195	    This specification defines two values for `token_type_hint`:
196	
197	        * access_token: An access token as defined in [RFC6749],
198	             `Section 1.4`_
199	
200	        * refresh_token: A refresh token as defined in [RFC6749],
201	             `Section 1.5`_
202	
203	        Specific implementations, profiles, and extensions of this
204	        specification MAY define other values for this parameter using the
205	        registry defined in `Section 4.1.2`_.
206	
207	    .. _`Section 1.4`: https://tools.ietf.org/html/rfc6749#section-1.4
208	    .. _`Section 1.5`: https://tools.ietf.org/html/rfc6749#section-1.5
209	    .. _`Section 4.1.2`: https://tools.ietf.org/html/rfc7009#section-4.1.2
210	
211	    """
212	    if not is_secure_transport(url):
213	        raise InsecureTransportError()
214	
215	    params = [('token', token)]
216	
217	    if token_type_hint:
218	        params.append(('token_type_hint', token_type_hint))
219	
220	    for k in kwargs:
221	        if kwargs[k]:
222	            params.append((str(k), kwargs[k]))
223	
224	    headers = {'Content-Type': 'application/x-www-form-urlencoded'}
225	
226	    if callback:
227	        params.append(('callback', callback))
228	        return add_params_to_uri(url, params), headers, body
229	    else:
230	        return url, headers, add_params_to_qs(body, params)
231	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'Bearer'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\oauthlib\openid\connect\core\endpoints\pre_configured.py:93:8
92	                               default_token_type=self.bearer)
93	        ResourceEndpoint.__init__(self, default_token='Bearer',
94	                                  token_types={'Bearer': self.bearer, 'JWT': self.jwt})
95	        RevocationEndpoint.__init__(self, request_validator)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'dummy'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth1\rfc5849\endpoints\test_access_token.py:28:38
27	        self.validator.dummy_client = 'dummy'
28	        self.validator.dummy_secret = 'dummy'
29	        self.validator.dummy_request_token = 'dummy'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'dummy'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth1\rfc5849\endpoints\test_access_token.py:29:45
28	        self.validator.dummy_secret = 'dummy'
29	        self.validator.dummy_request_token = 'dummy'
30	        self.validator.save_access_token = MagicMock()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bar'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth1\rfc5849\endpoints\test_access_token.py:32:22
31	        self.endpoint = AccessTokenEndpoint(self.validator)
32	        self.client = Client('foo',
33	                client_secret='bar',
34	                resource_owner_key='token',
35	                resource_owner_secret='secret',
36	                verifier='verfier')
37	        self.uri, self.headers, self.body = self.client.sign(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth1\rfc5849\endpoints\test_access_token.py:73:17
72	    def test_validate_signature(self):
73	        client = Client('foo',
74	                resource_owner_key='token',
75	                resource_owner_secret='secret',
76	                verifier='verfier')
77	        _, headers, _ = client.sign(self.uri + '/extra')

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'dummy'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth1\rfc5849\endpoints\test_request_token.py:25:38
24	        self.validator.dummy_client = 'dummy'
25	        self.validator.dummy_secret = 'dummy'
26	        self.validator.save_request_token = MagicMock()

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bar'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth1\rfc5849\endpoints\test_request_token.py:28:22
27	        self.endpoint = RequestTokenEndpoint(self.validator)
28	        self.client = Client('foo', client_secret='bar', realm='foo',
29	                callback_uri='https://c.b/cb')
30	        self.uri, self.headers, self.body = self.client.sign(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bar'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth1\rfc5849\endpoints\test_request_token.py:83:17
82	    def test_uri_provided_realm(self):
83	        client = Client('foo', callback_uri='https://c.b/cb',
84	                client_secret='bar')
85	        uri = self.uri + '?realm=foo'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'dummy'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth1\rfc5849\endpoints\test_resource.py:25:38
24	        self.validator.dummy_client = 'dummy'
25	        self.validator.dummy_secret = 'dummy'
26	        self.validator.dummy_access_token = 'dummy'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'dummy'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth1\rfc5849\endpoints\test_resource.py:26:44
25	        self.validator.dummy_secret = 'dummy'
26	        self.validator.dummy_access_token = 'dummy'
27	        self.endpoint = ResourceEndpoint(self.validator)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bar'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth1\rfc5849\endpoints\test_resource.py:28:22
27	        self.endpoint = ResourceEndpoint(self.validator)
28	        self.client = Client('foo',
29	                client_secret='bar',
30	                resource_owner_key='token',
31	                resource_owner_secret='secret')
32	        self.uri, self.headers, self.body = self.client.sign(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth1\rfc5849\endpoints\test_resource.py:81:17
80	    def test_validate_signature(self):
81	        client = Client('foo',
82	                resource_owner_key='token',
83	                resource_owner_secret='secret')
84	        _, headers, _ = client.sign(self.uri + '/extra')

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'dummy'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth1\rfc5849\endpoints\test_signature_only.py:21:38
20	        self.validator.dummy_client = 'dummy'
21	        self.validator.dummy_secret = 'dummy'
22	        self.endpoint = SignatureOnlyEndpoint(self.validator)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bar'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth1\rfc5849\endpoints\test_signature_only.py:23:22
22	        self.endpoint = SignatureOnlyEndpoint(self.validator)
23	        self.client = Client('foo', client_secret='bar')
24	        self.uri, self.headers, self.body = self.client.sign(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'foo'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth1\rfc5849\test_client.py:140:17
139	    def test_plaintext_method(self):
140	        client = Client('client_key',
141	                        signature_method=SIGNATURE_PLAINTEXT,
142	                        timestamp='1234567890',
143	                        nonce='abc',
144	                        client_secret='foo',
145	                        resource_owner_secret='bar')
146	        u, h, b = client.sign('http://example.com')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'ECrDNoq1VYzzzzzzzzzyAK7TwZNtPnkqatqZZZZ'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth1\rfc5849\test_signatures.py:446:18
445	
446	    hmac_client = MockClient(
447	        client_secret='ECrDNoq1VYzzzzzzzzzyAK7TwZNtPnkqatqZZZZ',
448	        resource_owner_secret='just-a-string    asdasd')
449	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'wrong-secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth1\rfc5849\test_signatures.py:548:20
547	                    self.eg_signature_base_string,
548	                    MockClient(client_secret='wrong-secret',
549	                               resource_owner_secret=_ros))
550	            bad_signature_produced_by_different_resource_owner_secret = \

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'wrong-secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth1\rfc5849\test_signatures.py:553:20
552	                    self.eg_signature_base_string,
553	                    MockClient(client_secret=self.hmac_client.client_secret,
554	                               resource_owner_secret='wrong-secret'))
555	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'wrong-secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth1\rfc5849\test_signatures.py:856:16
855	                self.eg_signature_base_string,
856	                MockClient(client_secret='wrong-secret',
857	                           resource_owner_secret=_ros))
858	        bad_signature_produced_by_different_resource_owner_secret = \

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'wrong-secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth1\rfc5849\test_signatures.py:861:16
860	                self.eg_signature_base_string,
861	                MockClient(client_secret=self.plaintext_client.client_secret,
862	                           resource_owner_secret='wrong-secret'))
863	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'someclientsecret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_backend_application.py:15:20
14	    client_id = "someclientid"
15	    client_secret = 'someclientsecret'
16	    scope = ["/profile"]

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '{   "access_token":"2YotnFZFEjr1zCsicMWpAA",    "token_type":"example",    "expires_in":3600,    "scope":"/profile",    "example_parameter":"example_value"}'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_backend_application.py:27:18
26	
27	    token_json = ('{   "access_token":"2YotnFZFEjr1zCsicMWpAA",'
28	                  '    "token_type":"example",'
29	                  '    "expires_in":3600,'
30	                  '    "scope":"/profile",'
31	                  '    "example_parameter":"example_value"}')
32	    token = {

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '3'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_backend_application.py:68:19
67	        self.assertRaises(Warning, client.parse_request_body_response, self.token_json, scope="invalid")
68	        os.environ['OAUTHLIB_RELAX_TOKEN_SCOPE'] = '3'
69	        token = client.parse_request_body_response(self.token_json, scope="invalid")

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:18:19
17	    headers = {}
18	    access_token = "token"
19	    mac_key = "secret"

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'invalid'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:41:17
40	        # Invalid token type
41	        client = Client(self.client_id, token_type="invalid")
42	        self.assertRaises(ValueError, client.add_token, self.uri)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'bEAreR'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:45:17
44	        # Case-insensitive token type
45	        client = Client(self.client_id, access_token=self.access_token, token_type="bEAreR")
46	        uri, headers, body = client.add_token(self.uri, body=self.body,

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'Bearer'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:54:17
53	        insecure_uri = 'http://example.com/path?query=world'
54	        client = Client(self.client_id, access_token=self.access_token, token_type="Bearer")
55	        self.assertRaises(InsecureTransportError, client.add_token, insecure_uri,

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'Bearer'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:68:17
67	        }
68	        client = Client(self.client_id, token=expired_token, access_token=self.access_token, token_type="Bearer")
69	        self.assertRaises(TokenExpiredError, client.add_token, self.uri,

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'invalid'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:129:8
128	        client = Client(self.client_id, access_token=self.access_token)
129	        self.assertRaises(ValueError, client.add_token, self.uri, body=self.body,
130	                headers=self.headers, token_placement="invalid")
131	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'invalid'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:132:17
131	
132	        client = Client(self.client_id, access_token=self.access_token,
133	                default_token_placement="invalid")
134	        self.assertRaises(ValueError, client.add_token, self.uri, body=self.body,

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'MAC'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:139:17
138	        # Missing access token
139	        client = Client(self.client_id, token_type="MAC")
140	        self.assertRaises(ValueError, client.add_token, self.uri)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'MAC'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:143:17
142	        # Invalid hash algorithm
143	        client = Client(self.client_id, token_type="MAC",
144	                access_token=self.access_token, mac_key=self.mac_key,
145	                mac_algorithm="hmac-sha-2")
146	        self.assertRaises(ValueError, client.add_token, self.uri)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'MAC'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:159:17
158	        # Add the Authorization header (draft 00)
159	        client = Client(self.client_id, token_type="MAC",
160	                access_token=self.access_token, mac_key=self.mac_key,
161	                mac_algorithm="hmac-sha-1")
162	        uri, headers, body = client.add_token(self.uri, body=self.body,

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'MAC'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:178:17
177	        }
178	        client = Client(self.client_id, token=expired_token, token_type="MAC",
179	                access_token=self.access_token, mac_key=self.mac_key,
180	                mac_algorithm="hmac-sha-1")
181	        self.assertRaises(TokenExpiredError, client.add_token, self.uri,

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'MAC'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:187:17
186	        # Add the Authorization header (draft 01)
187	        client = Client(self.client_id, token_type="MAC",
188	                access_token=self.access_token, mac_key=self.mac_key,
189	                mac_algorithm="hmac-sha-1")
190	        uri, headers, body = client.add_token(self.uri, body=self.body,

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'MAC'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:206:17
205	        }
206	        client = Client(self.client_id, token=expired_token, token_type="MAC",
207	                access_token=self.access_token, mac_key=self.mac_key,
208	                mac_algorithm="hmac-sha-1")
209	        self.assertRaises(TokenExpiredError, client.add_token, self.uri,

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'foobar'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:218:16
217	        url = 'https://example.com/revoke'
218	        token = 'foobar'
219	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'refresh_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:232:18
231	
232	        u, h, b = client.prepare_token_revocation_request(
233	            url, token, token_type_hint='refresh_token')
234	        self.assertEqual(u, url)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'https://example.com/token/'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:263:20
262	        scopes = 'read'
263	        token_url = 'https://example.com/token/'
264	        state = 'fake_state'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'foobar'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:279:16
278	        url = 'https://example.com/revoke'
279	        token = 'foobar'
280	        scope = 'extra_scope'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '{   "access_token":"2YotnFZFEjr1zCsicMWpAA",    "token_type":"example",    "expires_at":"2006-01-02T15:04:05Z",    "scope":"/profile",    "example_parameter":"example_value"}'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_base.py:306:22
305	    def test_parse_token_response_invalid_expires_at(self):
306	        token_json = ('{   "access_token":"2YotnFZFEjr1zCsicMWpAA",'
307	                      '    "token_type":"example",'
308	                      '    "expires_at":"2006-01-02T15:04:05Z",'
309	                      '    "scope":"/profile",'
310	                      '    "example_parameter":"example_value"}')
311	        token = {

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'someclientsecret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_legacy_application.py:16:20
15	    client_id = "someclientid"
16	    client_secret = 'someclientsecret'
17	    scope = ["/profile"]

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'user_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_legacy_application.py:24:15
23	    username = "user_username"
24	    password = "user_password"
25	    body = "not=empty"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '{   "access_token":"2YotnFZFEjr1zCsicMWpAA",    "token_type":"example",    "expires_in":3600,    "scope":"/profile",    "refresh_token":"tGzv3JOkF0XG5Qx2TlKWIA",    "example_parameter":"example_value"}'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_legacy_application.py:30:18
29	
30	    token_json = ('{   "access_token":"2YotnFZFEjr1zCsicMWpAA",'
31	                  '    "token_type":"example",'
32	                  '    "expires_in":3600,'
33	                  '    "scope":"/profile",'
34	                  '    "refresh_token":"tGzv3JOkF0XG5Qx2TlKWIA",'
35	                  '    "example_parameter":"example_value"}')
36	    token = {

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '5'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_legacy_application.py:71:19
70	        self.assertRaises(Warning, client.parse_request_body_response, self.token_json, scope="invalid")
71	        os.environ['OAUTHLIB_RELAX_TOKEN_SCOPE'] = '5'
72	        token = client.parse_request_body_response(self.token_json, scope="invalid")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth2\rfc6749\clients\test_legacy_application.py:124:13
123	        # scenario 4, `client_secret` is an empty string
124	        r4 = client.prepare_request_body(username=self.username, password=self.password, include_client_id=True, client_secret='')
125	        r4_params = dict(urlparse.parse_qsl(r4, keep_blank_values=True))

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '4'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_mobile_application.py:93:19
92	        self.assertRaises(Warning, client.parse_request_uri_response, self.response_uri, scope="invalid")
93	        os.environ['OAUTHLIB_RELAX_TOKEN_SCOPE'] = '4'
94	        token = client.parse_request_uri_response(self.response_uri, scope='invalid')

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '{   "access_token":"2YotnFZFEjr1zCsicMWpAA",    "token_type":"example",    "expires_in":3600,    "scope":"/profile",    "example_parameter":"example_value"}'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_service_application.py:63:18
62	
63	    token_json = ('{   "access_token":"2YotnFZFEjr1zCsicMWpAA",'
64	                  '    "token_type":"example",'
65	                  '    "expires_in":3600,'
66	                  '    "scope":"/profile",'
67	                  '    "example_parameter":"example_value"}')
68	    token = {

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '2'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_service_application.py:182:19
181	        self.assertRaises(Warning, client.parse_request_body_response, self.token_json, scope="invalid")
182	        os.environ['OAUTHLIB_RELAX_TOKEN_SCOPE'] = '2'
183	        token = client.parse_request_body_response(self.token_json, scope="invalid")

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'someclientsecret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_web_application.py:22:20
21	    client_id = "someclientid"
22	    client_secret = 'someclientsecret'
23	    uri = "https://example.com/path?query=world"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '{   "access_token":"2YotnFZFEjr1zCsicMWpAA",    "token_type":"example",    "expires_in":3600,    "scope":"/profile",    "refresh_token":"tGzv3JOkF0XG5Qx2TlKWIA",    "example_parameter":"example_value"}'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_web_application.py:54:18
53	
54	    token_json = ('{   "access_token":"2YotnFZFEjr1zCsicMWpAA",'
55	                  '    "token_type":"example",'
56	                  '    "expires_in":3600,'
57	                  '    "scope":"/profile",'
58	                  '    "refresh_token":"tGzv3JOkF0XG5Qx2TlKWIA",'
59	                  '    "example_parameter":"example_value"}')
60	    token = {

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\clients\test_web_application.py:169:19
168	        self.assertRaises(Warning, client.parse_request_body_response, self.token_json, scope="invalid")
169	        os.environ['OAUTHLIB_RELAX_TOKEN_SCOPE'] = '1'
170	        token = client.parse_request_body_response(self.token_json, scope="invalid")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth2\rfc6749\clients\test_web_application.py:240:13
239	        # scenario 4, `client_secret` is an empty string
240	        r4 = client.prepare_request_body(include_client_id=True, client_secret='')
241	        r4_params = dict(urlparse.parse_qsl(r4, keep_blank_values=True))

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'http://example.com/path'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_client_authentication.py:45:25
44	                token_generator=self.inspect_client)
45	        self.token_uri = 'http://example.com/path'
46	        self.auth_uri = 'http://example.com/path?client_id=abc&response_type=token'

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_client_authentication.py:62:8
61	    def basicauth_authenticate_client(self, request):
62	        assert "Authorization" in request.headers
63	        assert "john:doe" in request.headers["Authorization"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_client_authentication.py:63:8
62	        assert "Authorization" in request.headers
63	        assert "john:doe" in request.headers["Authorization"]
64	        request.client = mock.MagicMock()

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'http://example.com/path'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_client_authentication.py:69:20
68	    def test_client_id_authentication(self):
69	        token_uri = 'http://example.com/path'
70	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'http://example.com/path'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_client_authentication.py:145:20
144	    def test_custom_authentication(self):
145	        token_uri = 'http://example.com/path'
146	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'http://example.com/path'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_credentials_preservation.py:56:20
55	        redirect_uri = 'http://i.b/path'
56	        token_uri = 'http://example.com/path'
57	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'http://example.com/path'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_credentials_preservation.py:111:20
110	        auth_uri = 'http://example.com/path?state=xyz&client_id=abc'
111	        token_uri = 'http://example.com/path'
112	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'https://i.b/token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_error_responses.py:139:20
138	        self.validator.get_default_redirect_uri.return_value = 'https://i.b/cb'
139	        token_uri = 'https://i.b/token'
140	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'https://i.b/token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_error_responses.py:229:20
228	        self.validator.authenticate_client.side_effect = self.set_client
229	        token_uri = 'https://i.b/token'
230	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'https://i.b/token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_error_responses.py:258:20
257	        self.validator.confirm_redirect_uri.return_value = False
258	        token_uri = 'https://i.b/token'
259	        # Authorization code grant

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'https://i.b/token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_error_responses.py:267:20
266	        self.validator.get_default_redirect_uri.return_value = None
267	        token_uri = 'https://i.b/token'
268	        # Authorization code grant

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_metadata.py:49:8
48	        headers, body, status = metadata.create_metadata_response('/', 'GET')
49	        assert headers == {
50	            'Content-Type': 'application/json',
51	            'Access-Control-Allow-Origin': '*',
52	        }
53	        claims = json.loads(body)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_metadata.py:54:8
53	        claims = json.loads(body)
54	        assert claims['issuer'] == 'https://foo.bar'
55	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'http://example.com/path'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_resource_owner_association.py:19:16
18	    auth_uri = 'http://example.com/path?client_id=abc'
19	    token_uri = 'http://example.com/path'
20	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'http://example.com/path'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_scope_handling.py:79:20
78	        auth_uri = 'http://example.com/path?client_id=abc&response_type='
79	        token_uri = 'http://example.com/path'
80	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'http://example.com/path'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_scope_handling.py:122:20
121	        auth_uri = 'http://example.com/path?client_id=abc&response_type='
122	        token_uri = 'http://example.com/path'
123	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'http://example.com/path'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\endpoints\test_scope_handling.py:162:20
161	        auth_uri = 'http://example.com/path?client_id=abc&response_type='
162	        token_uri = 'http://example.com/path'
163	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'lsdkfhj230'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\grant_types\test_refresh_token.py:20:37
19	        self.request.grant_type = 'refresh_token'
20	        self.request.refresh_token = 'lsdkfhj230'
21	        self.request.client_id = 'abcdef'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'doe'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\grant_types\test_resource_owner_password.py:23:32
22	        self.request.username = 'john'
23	        self.request.password = 'doe'
24	        self.request.client = mock_client

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'grant_type=password&username=johndoe&password=A3ddj3w'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\test_parameters.py:83:20
82	    }
83	    password_body = 'grant_type=password&username=johndoe&password=A3ddj3w'
84	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\test_parameters.py:258:19
257	
258	        os.environ['OAUTHLIB_RELAX_TOKEN_SCOPE'] = '1'
259	        signals.scope_changed.connect(record_scope_change)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\test_parameters.py:277:23
276	        try:
277	            os.environ['OAUTHLIB_STRICT_TOKEN_TYPE'] = '1'
278	            self.assertRaises(MissingTokenTypeError, parse_token_response, self.json_notype)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\test_parameters.py:292:19
291	
292	        os.environ['OAUTHLIB_RELAX_TOKEN_SCOPE'] = '1'
293	        signals.scope_changed.connect(record_scope_change)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'Bearer'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\tests\oauth2\rfc6749\test_server.py:381:24
380	        token = tokens.BearerToken(request_validator=self.mock_validator)
381	        self.endpoint = ResourceEndpoint(
382	            default_token='Bearer',
383	            token_types={'Bearer': token}
384	        )
385	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'vF9dft4qmT'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc6749\test_tokens.py:61:12
60	    # Bearer
61	    token = 'vF9dft4qmT'
62	    uri = 'http://server.example.com/resource'

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\tests\oauth2\rfc6749\test_utils.py:77:8
76	        set_scope = list_to_scope(set_list)
77	        assert len(set_scope.split(' ')) == 3
78	        for x in string_list:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\tests\oauth2\rfc6749\test_utils.py:79:12
78	        for x in string_list:
79	            assert x in set_scope
80	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'asecret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\oauth2\rfc8628\clients\test_device.py:18:20
17	
18	    client_secret = "asecret"
19	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'http://example.com/path'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\openid\connect\core\endpoints\test_claims_handling.py:92:20
91	        code = get_query_credentials(h['Location'])['code'][0]
92	        token_uri = 'http://example.com/path'
93	        _, body, _ = self.server.create_token_response(

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'me@email.com'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\openid\connect\core\grant_types\test_authorization_code.py:87:37
86	        self.request.response_mode = 'query'
87	        self.request.id_token_hint = 'me@email.com'
88	        h, b, s = self.auth.create_authorization_response(self.request, bearer)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\openid\connect\core\grant_types\test_base.py:81:19
80	    def test_finalize_id_token_with_at_hash(self):
81	        self.token["access_token"] = "Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk"
82	        token = self.grant.add_id_token(self.token, "token_handler_mock", self.request)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\openid\connect\core\grant_types\test_base.py:98:19
97	        self.token["code"] = "Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk"
98	        self.token["access_token"] = "Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk"
99	        token = self.grant.add_id_token(self.token, "token_handler_mock", self.request)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'MOCKED_TOKEN'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\openid\connect\core\grant_types\test_hybrid.py:54:16
53	        self.auth = HybridGrant(request_validator=self.mock_validator)
54	        token = 'MOCKED_TOKEN'
55	        self.url_query = 'https://a.b/cb?code=abc&state=abc&id_token=%s' % token

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\tests\openid\connect\core\grant_types\test_hybrid.py:75:8
74	        token = self.auth.add_id_token(token, None, self.request)
75	        assert self.mock_validator.finalize_id_token.call_count == 1
76	        claims = self.mock_validator.finalize_id_token.call_args[0][0]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\tests\openid\connect\core\grant_types\test_hybrid.py:77:8
76	        claims = self.mock_validator.finalize_id_token.call_args[0][0]
77	        assert "nonce" in claims
78	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'MOCKED_TOKEN'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\openid\connect\core\grant_types\test_hybrid.py:88:16
87	        self.auth = HybridGrant(request_validator=self.mock_validator)
88	        token = 'MOCKED_TOKEN'
89	        self.url_query = 'https://a.b/cb?code=abc&state=abc&token_type=Bearer&expires_in=3600&scope=hello+openid&access_token=abc&id_token=%s' % token

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'MOCKED_TOKEN'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\openid\connect\core\grant_types\test_implicit.py:39:16
38	
39	        token = 'MOCKED_TOKEN'
40	        self.url_query = 'https://a.b/cb?state=abc&token_type=Bearer&expires_in=3600&scope=hello+openid&access_token=abc&id_token=%s' % token

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'MOCKED_TOKEN'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\openid\connect\core\grant_types\test_implicit.py:56:16
55	        self.request.response_type = 'id_token'
56	        token = 'MOCKED_TOKEN'
57	        url = 'https://a.b/cb#state=abc&id_token=%s' % token

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'me@email.com'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\openid\connect\core\grant_types\test_implicit.py:71:37
70	        self.request.response_mode = 'query'
71	        self.request.id_token_hint = 'me@email.com'
72	        h, b, s = self.auth.create_authorization_response(self.request, bearer)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'MOCKED_TOKEN'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\openid\connect\core\grant_types\test_implicit.py:156:16
155	        self.request.response_type = 'id_token'
156	        token = 'MOCKED_TOKEN'
157	        self.url_query = 'https://a.b/cb?state=abc&id_token=%s' % token

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'lsdkfhj230'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\openid\connect\core\grant_types\test_refresh_token.py:31:37
30	        self.request.grant_type = 'refresh_token'
31	        self.request.refresh_token = 'lsdkfhj230'
32	        self.request.scope = ('hello', 'openid')

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'some-token-from-request-object'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\tests\openid\connect\core\test_tokens.py:121:35
120	            request.scopes = mock.MagicMock()
121	            request.access_token = 'some-token-from-request-object'
122	            request.headers = {}

--------------------------------------------------

Code scanned:
	Total lines of code: 15627
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 106
		Medium: 0
		High: 1
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 96
		High: 11
Files skipped (0):
