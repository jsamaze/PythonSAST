Working... ---------------------------------------- 100% 0:00:00
Run started:2024-02-10 23:24:26.713571

Test results:
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '12345678'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\accounts\tests.py:18:25
17	        self.factory = RequestFactory()
18	        self.blog_user = BlogUser.objects.create_user(
19	            username="test",
20	            email="admin@admin.com",
21	            password="12345678"
22	        )
23	        self.new_test = "xxx123--="

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwer!@#$ggg'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\accounts\tests.py:27:15
26	        site = get_current_site().domain
27	        user = BlogUser.objects.create_superuser(
28	            email="liangliangyy1@gmail.com",
29	            username="liangliangyy1",
30	            password="qwer!@#$ggg")
31	        testuser = BlogUser.objects.get(username='liangliangyy1')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'qwer!@#$ggg'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\accounts\tests.py:33:22
32	
33	        loginresult = self.client.login(
34	            username='liangliangyy1',
35	            password='qwer!@#$ggg')
36	        self.assertEqual(loginresult, True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password123!q@wE#R$T'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\accounts\tests.py:81:8
80	
81	        self.client.login(username='user1233', password='password123!q@wE#R$T')
82	        user = BlogUser.objects.filter(email='user123@user.com')[0]

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\blog\management\commands\sync_user_avatar.py:17:8
16	                return True
17	        except:
18	            pass
19	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\blog\templatetags\blog_tags.py:48:11
47	def custom_markdown(content):
48	    return mark_safe(CommonMarkdown.get_markdown(content))
49	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\blog\templatetags\blog_tags.py:48:11
47	def custom_markdown(content):
48	    return mark_safe(CommonMarkdown.get_markdown(content))
49	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\blog\templatetags\blog_tags.py:55:11
54	    body, toc = CommonMarkdown.get_markdown_with_toc(content)
55	    return mark_safe(toc)
56	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\blog\templatetags\blog_tags.py:55:11
54	    body, toc = CommonMarkdown.get_markdown_with_toc(content)
55	    return mark_safe(toc)
56	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\blog\templatetags\blog_tags.py:114:29
113	        tags_list.append((
114	            url, count, tag, random.choice(settings.BOOTSTRAP_COLOR_TYPES)
115	        ))

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\blog\templatetags\blog_tags.py:301:57
300	
301	        url = "https://www.gravatar.com/avatar/%s?%s" % (hashlib.md5(
302	            email.lower()).hexdigest(), urllib.parse.urlencode({'d': default, 's': str(size)}))
303	        cache.set(cachekey, url, 60 * 60 * 10)

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\blog\templatetags\blog_tags.py:312:11
311	    url = gravatar_url(email, size)
312	    return mark_safe(
313	        '<img src="%s" height="%d" width="%d">' %
314	        (url, size, size))
315	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\blog\templatetags\blog_tags.py:312:11
311	    url = gravatar_url(email, size)
312	    return mark_safe(
313	        '<img src="%s" height="%d" width="%d">' %
314	        (url, size, size))
315	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'liangliangyy'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\blog\tests.py:103:8
102	
103	        self.client.login(username='liangliangyy', password='liangliangyy')
104	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\blog\tests.py:168:14
167	        import requests
168	        rsp = requests.get(
169	            'https://www.python.org/static/img/python-logo@2x.png')
170	        imagepath = os.path.join(settings.BASE_DIR, 'python.png')

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'liangliangyy1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\comments\tests.py:30:15
29	    def test_validate_comment(self):
30	        user = BlogUser.objects.create_superuser(
31	            email="liangliangyy1@gmail.com",
32	            username="liangliangyy1",
33	            password="liangliangyy1")
34	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'liangliangyy1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\comments\tests.py:35:8
34	
35	        self.client.login(username='liangliangyy1', password='liangliangyy1')
36	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\djangoblog\logentryadmin.py:92:15
91	                pass
92	        return mark_safe(object_link)
93	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\djangoblog\logentryadmin.py:92:15
91	                pass
92	        return mark_safe(object_link)
93	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\djangoblog\logentryadmin.py:110:15
109	            pass
110	        return mark_safe(user_link)
111	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\djangoblog\logentryadmin.py:110:15
109	            pass
110	        return mark_safe(user_link)
111	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\djangoblog\spider_notify.py:15:21
14	            data = '\n'.join(urls)
15	            result = requests.post(settings.BAIDU_NOTIFY_URL, data=data)
16	            logger.info(result.text)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\djangoblog\whoosh_cn_backend.py:276:12
275	        if models is not None:
276	            assert isinstance(models, (list, tuple))
277	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\oauth\oauthmanager.py:60:14
59	    def do_get(self, url, params, headers=None):
60	        rsp = requests.get(url=url, params=params, headers=headers)
61	        logger.info(rsp.text)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\oauth\oauthmanager.py:65:14
64	    def do_post(self, url, params, headers=None):
65	        rsp = requests.post(url, params, headers=headers)
66	        logger.info(rsp.text)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'https://api.weibo.com/oauth2/access_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\oauth\oauthmanager.py:76:16
75	    AUTH_URL = 'https://api.weibo.com/oauth2/authorize'
76	    TOKEN_URL = 'https://api.weibo.com/oauth2/access_token'
77	    API_URL = 'https://api.weibo.com/2/users/show.json'

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\oauth\oauthmanager.py:160:14
159	    def do_get(self, url, params, headers=None):
160	        rsp = requests.get(url=url, params=params, headers=headers, proxies=self.proxies)
161	        logger.info(rsp.text)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\oauth\oauthmanager.py:165:14
164	    def do_post(self, url, params, headers=None):
165	        rsp = requests.post(url, params, headers=headers, proxies=self.proxies)
166	        logger.info(rsp.text)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'https://www.googleapis.com/oauth2/v4/token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\oauth\oauthmanager.py:172:16
171	    AUTH_URL = 'https://accounts.google.com/o/oauth2/v2/auth'
172	    TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token'
173	    API_URL = 'https://www.googleapis.com/oauth2/v3/userinfo'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'https://github.com/login/oauth/access_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\oauth\oauthmanager.py:250:16
249	    AUTH_URL = 'https://github.com/login/oauth/authorize'
250	    TOKEN_URL = 'https://github.com/login/oauth/access_token'
251	    API_URL = 'https://api.github.com/user'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'https://graph.facebook.com/v16.0/oauth/access_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\oauth\oauthmanager.py:323:16
322	    AUTH_URL = 'https://www.facebook.com/v16.0/dialog/oauth'
323	    TOKEN_URL = 'https://graph.facebook.com/v16.0/oauth/access_token'
324	    API_URL = 'https://graph.facebook.com/me'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'https://graph.qq.com/oauth2.0/token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\oauth\oauthmanager.py:397:16
396	    AUTH_URL = 'https://graph.qq.com/oauth2.0/authorize'
397	    TOKEN_URL = 'https://graph.qq.com/oauth2.0/token'
398	    API_URL = 'https://graph.qq.com/user/get_user_info'

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\oauth\tests.py:61:8
60	        weibo_app = self.get_app_by_type('weibo')
61	        assert weibo_app
62	        url = weibo_app.get_authorization_url()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\oauth\tests.py:80:8
79	        google_app = self.get_app_by_type('google')
80	        assert google_app
81	        url = google_app.get_authorization_url()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\oauth\tests.py:101:8
100	        github_app = self.get_app_by_type('github')
101	        assert github_app
102	        url = github_app.get_authorization_url()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\oauth\tests.py:121:8
120	        facebook_app = self.get_app_by_type('facebook')
121	        assert facebook_app
122	        url = facebook_app.get_authorization_url()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\oauth\tests.py:153:8
152	        qq_app = self.get_app_by_type('qq')
153	        assert qq_app
154	        url = qq_app.get_authorization_url()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\oauth\tests.py:184:8
183	        user = auth.get_user(self.client)
184	        assert user.is_authenticated
185	        self.assertTrue(user.is_authenticated)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\oauth\tests.py:195:8
194	        user = auth.get_user(self.client)
195	        assert user.is_authenticated
196	        self.assertTrue(user.is_authenticated)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\oauth\views.py:87:25
86	        if type == 'facebook':
87	            user.token = ''
88	        if user.email:

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'liangliangyy1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\owntracks\tests.py:45:15
44	
45	        user = BlogUser.objects.create_superuser(
46	            email="liangliangyy1@gmail.com",
47	            username="liangliangyy1",
48	            password="liangliangyy1")
49	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'liangliangyy1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\owntracks\tests.py:50:8
49	
50	        self.client.login(username='liangliangyy1', password='liangliangyy1')
51	        s = OwnTrackLog()

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\owntracks\views.py:87:14
86	        }
87	        rsp = requests.get(url=api, params=query)
88	        result = json.loads(rsp.text)

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html
   Location: .\servermanager\api\commonapi.py:49:18
48	        try:
49	            res = os.popen(cmd).read()
50	            return res

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b301-pickle
   Location: .\servermanager\robot.py:125:28
124	            info = session[userid]
125	            self.userinfo = jsonpickle.decode(info)
126	        except Exception as e:

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '123'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\servermanager\robot.py:156:25
155	            if settings.TESTING:
156	                passwd = '123'
157	            if passwd.upper() == get_sha256(get_sha256(info)).upper():

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'liangliangyy1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\servermanager\tests.py:24:15
23	    def test_validate_comment(self):
24	        user = BlogUser.objects.create_superuser(
25	            email="liangliangyy1@gmail.com",
26	            username="liangliangyy1",
27	            password="liangliangyy1")
28	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'liangliangyy1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\servermanager\tests.py:29:8
28	
29	        self.client.login(username='liangliangyy1', password='liangliangyy1')
30	

--------------------------------------------------

Code scanned:
	Total lines of code: 6253
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 28
		Medium: 18
		High: 2
	Total issues (by confidence):
		Undefined: 0
		Low: 7
		Medium: 18
		High: 23
Files skipped (0):
