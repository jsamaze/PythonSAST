Working... ---------------------------------------- 100% 0:00:14
Run started:2024-02-10 23:54:05.891063

Test results:
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\.github\helper\documentation.py:31:12
30		pr = sys.argv[1]
31		response = requests.get("https://api.github.com/repos/frappe/frappe/pulls/{}".format(pr))
32	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\.github\helper\roulette.py:5:0
4	import shlex
5	import subprocess
6	import sys

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: .\.github\helper\roulette.py:30:10
29				req = urllib.request.Request(url)
30				return urllib.request.urlopen(req)
31			except HTTPError as exc:

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\.github\helper\roulette.py:45:8
44		command = shlex.split(command)
45		return subprocess.check_output(command, shell=shell, encoding="utf8").strip()
46	

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell: Seems safe, but may be changed in the future, consider rewriting without shell
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html
   Location: .\.github\helper\roulette.py:101:1
100	
101		os.system('echo "::set-output name=build::strawberry"')

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\.github\helper\roulette.py:101:1
100	
101		os.system('echo "::set-output name=build::strawberry"')

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\__init__.py:2172:1
2171			param = param.encode(encoding)
2172		except Exception:
2173			pass
2174		return param

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\__init__.py:2180:1
2179			param = param.decode(encoding)
2180		except Exception:
2181			pass
2182		return param

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: .\frappe\app.py:368:2
367		run_simple(
368			"0.0.0.0",
369			int(port),
370			application,
371			use_reloader=False if in_test_env else not no_reload,
372			use_debugger=not in_test_env,
373			use_evalex=not in_test_env,
374			threaded=not no_threading,
375		)
376	
377	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\boot.py:160:2
159		pages_with_custom_roles = frappe.db.sql(
160			"""
161			select
162				`tabCustom Role`.{field} as name,
163				`tabCustom Role`.modified,
164				`tabCustom Role`.ref_doctype,
165				{column}
166			from `tabCustom Role`, `tabHas Role`, `tab{parent}`
167			where
168				`tabHas Role`.parent = `tabCustom Role`.name
169				and `tab{parent}`.name = `tabCustom Role`.{field}
170				and `tabCustom Role`.{field} is not null
171				and `tabHas Role`.role in ({roles})
172		""".format(
173				field=parent.lower(), parent=parent, column=column, roles=", ".join(["%s"] * len(roles))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\boot.py:183:2
182		pages_with_standard_roles = frappe.db.sql(
183			"""
184			select distinct
185				`tab{parent}`.name as name,
186				`tab{parent}`.modified,
187				{column}
188			from `tabHas Role`, `tab{parent}`
189			where
190				`tabHas Role`.role in ({roles})
191				and `tabHas Role`.parent = `tab{parent}`.name
192				and `tab{parent}`.`name` not in (
193					select `tabCustom Role`.{field} from `tabCustom Role`
194					where `tabCustom Role`.{field} is not null)
195				{condition}
196			""".format(
197				parent=parent,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\boot.py:216:3
215			pages_with_no_roles = frappe.db.sql(
216				"""
217				select
218					`tab{parent}`.name, `tab{parent}`.modified, {column}
219				from `tab{parent}`
220				where
221					(select count(*) from `tabHas Role`
222					where `tabHas Role`.parent=`tab{parent}`.`name`) = 0
223			""".format(
224					parent=parent, column=column

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\build.py:8:0
7	from distutils.spawn import find_executable
8	from subprocess import getoutput
9	from tempfile import mkdtemp, mktemp

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\build.py:39:6
38		local_filename = os.path.join(prefix, filename)
39		with get(url, stream=True, allow_redirects=True) as r:
40			r.raise_for_status()

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\build.py:67:2
66			from shlex import split
67			from subprocess import check_call
68	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\build.py:71:2
70			command = split("node rollup/build.js --files {0} --no-concat".format(",".join(missing_assets)))
71			check_call(command, cwd=os.path.join("..", "apps", "frappe"))
72	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\build.py:86:8
85	
86		if not head(url):
87			reference = f"Release {tag}" if tag else f"Commit {frappe_head}"

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\build.py:158:2
157				shutil.rmtree(os.path.dirname(assets_archive))
158			except Exception:
159				pass
160	

--------------------------------------------------
>> Issue: [B306:blacklist] Use of insecure and deprecated function (mktemp).
   Severity: Medium   Confidence: High
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b306-mktemp-q
   Location: .\frappe\build.py:181:19
180		while True:
181			temp_link_name = mktemp(dir=link_dir)
182	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\build.py:279:1
278			safe_max_old_space_size = max(1024, int(total_memory * 0.75))
279		except Exception:
280			pass
281	

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html
   Location: .\frappe\build.py:574:5
573						css_path = os.path.join(path, "public", "css", fname.rsplit(".", 1)[0] + ".css")
574						os.system("lessc {0} > {1}".format(fpath, css_path))

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\frappe\commands\__init__.py:91:8
90			stderr=None if output else subprocess.PIPE,
91			shell=shell,
92			cwd=cwd,
93			preexec_fn=set_low_prio,
94			env=env,
95		)
96	
97		return_ = proc.wait()
98	
99		if return_ and raise_err:
100			raise subprocess.CalledProcessError(return_, command)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\commands\scheduler.py:20:1
19			)
20		except Exception:
21			pass
22		finally:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\commands\utils.py:5:0
4	import os
5	import subprocess
6	import sys

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\frappe\commands\utils.py:227:12
226					try:
227						args = eval(args)
228					except NameError:

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\frappe\commands\utils.py:234:13
233				if kwargs:
234					kwargs = eval(kwargs)
235				else:

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\frappe\commands\utils.py:248:10
247					# eval is safe here because input is from console
248					ret = eval(method + "(*args, **kwargs)", globals(), locals())  # nosemgrep
249	

--------------------------------------------------
>> Issue: [B606:start_process_with_no_shell] Starting a process without a shell.
   Severity: Low   Confidence: Medium
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b606_start_process_with_no_shell.html
   Location: .\frappe\commands\utils.py:517:1
516		mysql = find_executable("mysql")
517		os.execv(
518			mysql,
519			[
520				mysql,
521				"-u",
522				frappe.conf.db_name,
523				"-p" + frappe.conf.db_password,
524				frappe.conf.db_name,
525				"-h",
526				frappe.conf.db_host or "localhost",
527				"--pager=less -SFX",
528				"--safe-updates",
529				"-A",
530			],
531		)
532	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\commands\utils.py:544:1
543		psql = find_executable("psql")
544		subprocess.run([psql, "-d", frappe.conf.db_name])
545	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\commands\utils.py:552:11
551			r.split("==")[0]
552			for r in subprocess.check_output([sys.executable, "-m", "pip", "freeze"], encoding="utf8")
553		)

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\commands\utils.py:556:2
555		if "jupyter" not in installed_packages:
556			subprocess.check_output([sys.executable, "-m", "pip", "install", "jupyter"])
557	

--------------------------------------------------
>> Issue: [B606:start_process_with_no_shell] Starting a process without a shell.
   Severity: Low   Confidence: Medium
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b606_start_process_with_no_shell.html
   Location: .\frappe\commands\utils.py:585:1
584		)
585		os.execv(
586			"{0}/jupyter".format(bin_path),
587			[
588				"{0}/jupyter".format(bin_path),
589				"notebook",
590				jupyter_notebooks_path,
591			],
592		)
593	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\contacts\doctype\address\address.py:90:3
89			address = frappe.db.sql(
90				""" SELECT
91					addr.name
92				FROM
93					`tabAddress` addr, `tabDynamic Link` dl
94				WHERE
95					dl.parent = addr.name and dl.link_doctype = %s and
96					dl.link_name = %s and ifnull(addr.disabled, 0) = 0 and
97					%s = %s
98				"""
99				% ("%s", "%s", preferred_key, "%s"),
100				(doctype, name, 1),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\contacts\doctype\address\address.py:117:2
116		out = frappe.db.sql(
117			""" SELECT
118				addr.name, addr.%s
119			FROM
120				`tabAddress` addr, `tabDynamic Link` dl
121			WHERE
122				dl.parent = addr.name and dl.link_doctype = %s and
123				dl.link_name = %s and ifnull(addr.disabled, 0) = 0
124			"""
125			% (sort_key, "%s", "%s"),
126			(doctype, name),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\contacts\doctype\address\address.py:261:2
260		return frappe.db.sql(
261			"""select
262				`tabAddress`.name, `tabAddress`.city, `tabAddress`.country
263			from
264				`tabAddress`
265			join `tabDynamic Link`
266				on (`tabDynamic Link`.parent = `tabAddress`.name and `tabDynamic Link`.parenttype = 'Address')
267			where
268				`tabDynamic Link`.link_doctype = %(link_doctype)s and
269				`tabDynamic Link`.link_name = %(link_name)s and
270				ifnull(`tabAddress`.disabled, 0) = 0 and
271				({search_condition})
272				{mcond} {condition}
273			order by
274				case
275					when locate(%(_txt)s, `tabAddress`.name) != 0
276					then locate(%(_txt)s, `tabAddress`.name)
277					else 99999
278				end,
279				`tabAddress`.idx desc, `tabAddress`.name
280			limit %(page_len)s offset %(start)s""".format(
281				mcond=get_match_cond(doctype),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\contacts\doctype\contact\contact.py:228:2
227		return frappe.db.sql(
228			"""select
229				`tabContact`.name, `tabContact`.first_name, `tabContact`.last_name
230			from
231				`tabContact`, `tabDynamic Link`
232			where
233				`tabDynamic Link`.parent = `tabContact`.name and
234				`tabDynamic Link`.parenttype = 'Contact' and
235				`tabDynamic Link`.link_doctype = %(link_doctype)s and
236				`tabDynamic Link`.link_name = %(link_name)s and
237				`tabContact`.`{key}` like %(txt)s
238				{mcond}
239			order by
240				if(locate(%(_txt)s, `tabContact`.name), locate(%(_txt)s, `tabContact`.name), 99999),
241				`tabContact`.idx desc, `tabContact`.name
242			limit %(start)s, %(page_len)s """.format(
243				mcond=get_match_cond(doctype), key=searchfield

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\core\doctype\access_log\test_access_log.py:161:13
160			try:
161				request = requests.post(private_file_link, headers=self.header)
162				last_doc = frappe.get_last_doc("Access Log")

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\activity_log\activity_log.py:57:2
56		frappe.db.sql(
57			"""delete from `tabActivity Log` where \
58			creation< (NOW() - INTERVAL '{0}' DAY)""".format(
59				days

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\core\doctype\data_import_legacy\importer.py:272:7
271			try:
272				r = requests.get(url)
273				is_valid = True if r.status_code == 200 else False

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\core\doctype\data_import_legacy\importer.py:274:2
273				is_valid = True if r.status_code == 200 else False
274			except Exception:
275				pass
276	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\data_import_legacy\importer.py:288:3
287			files = frappe.db.sql(
288				"""Select name from `tabFile` where attached_to_doctype='{doctype}' and
289				attached_to_name='{docname}' and (file_url='{file_url}' or thumbnail_url='{file_url}')""".format(
290					doctype=doctype, docname=docname, file_url=file_url

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\data_import_legacy\importer.py:629:17
628			if p:
629				frappe.db.sql("""delete from `tab{0}` where parent=%s""".format(doctype), p)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\doctype\doctype.py:535:21
534				frappe.db.table_exists(self.name)
535				and frappe.db.sql("select name from `tab{}` limit 1".format(self.name))
536			):

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\doctype\doctype.py:1082:5
1081					has_non_unique_values = frappe.db.sql(
1082						"""select `{fieldname}`, count(*)
1083						from `tab{doctype}` where ifnull(`{fieldname}`, '') != ''
1084						group by `{fieldname}` having count(*) > 1 limit 1""".format(
1085							doctype=d.parent, fieldname=d.fieldname

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\core\doctype\document_share_key\document_share_key.py:12:41
11		def before_insert(self):
12			self.key = frappe.generate_hash(length=randrange(25, 35))
13			if not self.expires_on and not self.flags.no_expiry:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\domain\domain.py:117:4
116				frappe.db.sql(
117					"""update `tabPortal Menu Item` set enabled=1
118					where route in ({0})""".format(
119						", ".join(['"{0}"'.format(d) for d in self.data.allow_sidebar_items])

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\domain\domain.py:129:4
128				frappe.db.sql(
129					"""update `tabPortal Menu Item` set enabled=0
130					where route in ({0})""".format(
131						", ".join(['"{0}"'.format(d) for d in self.data.remove_sidebar_items])

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\core\doctype\file\file.py:707:5
706		file_url = frappe.utils.get_url(file_url)
707		r = requests.get(file_url, stream=True)
708		try:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\core\doctype\file\test_file.py:467:2
466				shutil.copy(file_path, public_file_path)
467			except Exception:
468				pass
469	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\log_settings\log_settings.py:20:3
19			frappe.db.sql(
20				""" DELETE FROM `tabError Log`
21				WHERE `creation` < (NOW() - INTERVAL '{0}' DAY)
22			""".format(
23					self.clear_error_log_after

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\page\page.py:33:5
32					cnt = frappe.db.sql(
33						"""select name from tabPage
34						where name like "%s-%%" order by name desc limit 1"""
35						% self.name
36					)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\core\doctype\server_script\test_server_script.py:116:13
115		def test_api(self):
116			response = requests.post(get_site_url(frappe.local.site) + "/api/method/test_server_script")
117			self.assertEqual(response.status_code, 200)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\core\doctype\sms_settings\sms_settings.py:131:13
130		if use_post:
131			response = requests.post(gateway_url, **kwargs)
132		else:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\core\doctype\sms_settings\sms_settings.py:133:13
132		else:
133			response = requests.get(gateway_url, **kwargs)
134		response.raise_for_status()

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\core\doctype\system_settings\system_settings.py:23:33
22			elif not enable_password_policy:
23				self.minimum_password_score = ""
24	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\transaction_log\transaction_log.py:22:4
21				prev_hash = frappe.db.sql(
22					"SELECT `chaining_hash` FROM `tabTransaction Log` WHERE `row_index` = '{0}'".format(index - 1)
23				)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\core\doctype\user\test_user.py:204:22
203			frappe.flags.in_test = False
204			user.new_password = "password"
205			self.assertRaisesRegex(frappe.exceptions.ValidationError, "Invalid Password", user.save)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Eastern_43A1W'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\core\doctype\user\test_user.py:207:22
206			user.reload()
207			user.new_password = "Eastern_43A1W"
208			user.save()

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Eastern_43A1W'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\core\doctype\user\test_user.py:358:17
357	
358			old_password = "Eastern_43A1W"
359			new_password = "easy_password"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'easy_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\core\doctype\user\test_user.py:359:17
358			old_password = "Eastern_43A1W"
359			new_password = "easy_password"
360	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\core\doctype\user\user.py:69:22
68			self.__new_password = self.new_password
69			self.new_password = ""
70	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\user\user.py:228:4
227				frappe.db.sql(
228					"""select name
229				from `tabRole` where desk_access=1
230					and name in ({0}) limit 1""".format(
231						", ".join(["%s"] * len(self.roles))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\user\user.py:457:5
456					frappe.db.sql(
457						"""UPDATE `%s`
458						SET `%s` = %s
459						WHERE `%s` = %s"""
460						% (tab, field, "%s", field, "%s"),
461						(new_name, old_name),

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\core\doctype\user\user.py:808:31
807		redirect_url = user_doc.redirect_url
808		user_doc.reset_password_key = ""
809		user_doc.redirect_url = ""

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\user\user.py:910:2
909		return frappe.db.sql(
910			"""SELECT `name`, CONCAT_WS(' ', first_name, middle_name, last_name)
911			FROM `tabUser`
912			WHERE `enabled`=1
913				{user_type_condition}
914				AND `docstatus` < 2
915				AND `name` NOT IN ({standard_users})
916				AND ({key} LIKE %(txt)s
917					OR CONCAT_WS(' ', first_name, middle_name, last_name) LIKE %(txt)s)
918				{fcond} {mcond}
919			ORDER BY
920				CASE WHEN `name` LIKE %(txt)s THEN 0 ELSE 1 END,
921				CASE WHEN concat_ws(' ', first_name, middle_name, last_name) LIKE %(txt)s
922					THEN 0 ELSE 1 END,
923				NAME asc
924			LIMIT %(page_len)s OFFSET %(start)s
925		""".format(
926				user_type_condition=user_type_condition,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\user\user.py:940:3
939			frappe.db.sql(
940				"""SELECT SUM(`simultaneous_sessions`)
941			FROM `tabUser`
942			WHERE `enabled` = 1
943			AND `user_type` = 'System User'
944			AND `name` NOT IN ({})""".format(
945					", ".join(["%s"] * len(STANDARD_USERS))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\user\user.py:965:2
964		system_users = frappe.db.sql_list(
965			"""select name from `tabUser`
966			where enabled=1 and user_type != 'Website User'
967			and name not in ({}) {}""".format(
968				", ".join(["%s"] * len(exclude_users)), limit_cond

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\doctype\user\user.py:979:2
978		return frappe.db.sql(
979			"""select count(*) from `tabUser`
980			where enabled = 1 and user_type != 'Website User'
981			and name not in ({})
982			and hour(timediff(now(), last_active)) < 72""".format(
983				", ".join(["%s"] * len(STANDARD_USERS))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\core\report\transaction_log_report\transaction_log_report.py:27:4
26				previous_hash = frappe.db.sql(
27					"SELECT chaining_hash FROM `tabTransaction Log` WHERE row_index = {0}".format(row_index - 1)
28				)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\custom\doctype\custom_field\custom_field.py:148:3
147			and frappe.db.sql(
148				"""select count(*) from `tab{doctype}`
149				where ifnull({fieldname},'')!=''""".format(
150					doctype=doctype, fieldname=df.fieldname

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\custom\doctype\customize_form\customize_form.py:484:4
483				docs = frappe.db.sql(
484					"""
485					SELECT name, {fieldname}, LENGTH({fieldname}) AS len
486					FROM `tab{doctype}`
487					WHERE LENGTH({fieldname}) > {max_length}
488				""".format(
489						fieldname=fieldname, doctype=self.doc_type, max_length=max_length

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\custom\report\audit_system_hooks\audit_system_hooks.py:43:3
42					return frappe.as_json(v)
43				except Exception:
44					pass
45	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:602:4
601				r = self.sql(
602					"""select field, value
603					from `tabSingles` where field in (%s) and doctype=%s"""
604					% (", ".join(["%s"] * len(fields)), "%s"),
605					tuple(fields) + (doctype,),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:740:3
739			r = self.sql(
740				"select {fields} from `tab{doctype}` {where} {conditions} {order_by} {limit} {for_update}".format(
741					for_update="for update" if for_update else "",

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:858:3
857			self.sql(
858				"""update `tab{doctype}` set `modified`=%s
859				where name=%s""".format(
860					doctype=doctype

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:990:18
989			"""Returns True if atleast one row exists."""
990			return self.sql("select name from `tab{doctype}` limit 1".format(doctype=doctype))
991	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:1025:4
1024				count = self.sql(
1025					"""select count(*)
1026					from `tab%s` where %s"""
1027					% (dt, conditions),
1028					filters,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:1034:4
1033				count = self.sql(
1034					"""select count(*)
1035					from `tab%s`"""
1036					% (dt,)
1037				)[0][0]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:1062:3
1061			return self.sql(
1062				"""select count(name) from `tab{doctype}`
1063				where creation >= %s""".format(
1064					doctype=doctype

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:1102:3
1101			return self.sql(
1102				"""SELECT column_type FROM INFORMATION_SCHEMA.COLUMNS
1103				WHERE table_name = 'tab{0}' AND column_name = '{1}' """.format(
1104					doctype, column

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:1154:4
1153				return self.sql_list(
1154					"""select name from `tab{doctype}`
1155					where lft > {lft} and rgt < {rgt}""".format(
1156						doctype=doctype, lft=lft, rgt=rgt

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\database.py:1180:10
1179			table = get_table_name(doctype)
1180			query = f"DELETE FROM `{table}`"
1181	

--------------------------------------------------
>> Issue: [B605:start_process_with_a_shell] Starting a process with a shell, possible injection detected, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b605_start_process_with_a_shell.html
   Location: .\frappe\database\db_manager.py:99:2
98			)
99			os.system(command)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\mariadb\database.py:270:3
269			return self.sql(
270				"""select
271				column_name as 'name',
272				column_type as 'type',
273				column_default as 'default',
274				COALESCE(
275					(select 1
276					from information_schema.statistics
277					where table_name="{table_name}"
278						and column_name=columns.column_name
279						and NON_UNIQUE=1
280						and Seq_in_index = 1
281						limit 1
282				), 0) as 'index',
283				column_key = 'UNI' as 'unique'
284				from information_schema.columns as columns
285				where table_name = '{table_name}' """.format(
286					table_name=table_name

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\postgres\database.py:126:4
125				for d in self.sql(
126					"""select table_name
127				from information_schema.tables
128				where table_catalog='{0}'
129					and table_type = 'BASE TABLE'
130					and table_schema='{1}'""".format(
131						frappe.conf.db_name, frappe.conf.get("db_schema", "public")

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\postgres\database.py:216:3
215			return self.sql(
216				f"SELECT COLUMN_NAME FROM information_schema.COLUMNS WHERE TABLE_NAME = '{table_name}'"
217			)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\postgres\database.py:278:17
277			"""
278			res = self.sql("select issingle from `tabDocType` where name='{}'".format(doctype))
279			if not res:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\postgres\database.py:294:9
293				key = '", "'.join(key)
294			return 'ON CONFLICT ("{key}") DO UPDATE SET '.format(key=key)
295	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\postgres\database.py:301:3
300			return self.sql(
301				"""SELECT 1 FROM pg_indexes WHERE tablename='{table_name}'
302				and indexname='{index_name}' limit 1""".format(
303					table_name=table_name, index_name=index_name

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\postgres\database.py:342:3
341			return self.sql(
342				"""
343				SELECT a.column_name AS name,
344				CASE LOWER(a.data_type)
345					WHEN 'character varying' THEN CONCAT('varchar(', a.character_maximum_length ,')')
346					WHEN 'timestamp without time zone' THEN 'timestamp'
347					ELSE a.data_type
348				END AS type,
349				BOOL_OR(b.index) AS index,
350				SPLIT_PART(COALESCE(a.column_default, NULL), '::', 1) AS default,
351				BOOL_OR(b.unique) AS unique
352				FROM information_schema.columns a
353				LEFT JOIN
354					(SELECT indexdef, tablename,
355						indexdef LIKE '%UNIQUE INDEX%' AS unique,
356						indexdef NOT LIKE '%UNIQUE INDEX%' AS index
357						FROM pg_indexes
358						WHERE tablename='{table_name}') b
359					ON SUBSTRING(b.indexdef, '(.*)') LIKE CONCAT('%', a.column_name, '%')
360				WHERE a.table_name = '{table_name}'
361				GROUP BY a.column_name, a.data_type, a.column_default, a.character_maximum_length;
362			""".format(
363					table_name=table_name

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\database\postgres\setup_db.py:43:1
42		from shutil import which
43		from subprocess import PIPE, run
44	

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\frappe\database\postgres\setup_db.py:71:16
70	
71		restore_proc = run(command, env=subprocess_env, shell=True, stdout=PIPE)
72	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\database\schema.py:139:7
138							max_length = frappe.db.sql(
139								"""SELECT MAX(CHAR_LENGTH(`{fieldname}`)) FROM `tab{doctype}`""".format(
140									fieldname=col.fieldname, doctype=self.doctype

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\defaults.py:222:2
221		frappe.db.sql(
222			"""delete from tabDefaultValue where {0}""".format(" and ".join(conditions)), tuple(values)
223		)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\doctype\bulk_update\bulk_update.py:27:3
26			docnames = frappe.db.sql_list(
27				f"""select name from `tab{self.document_type}`{condition} limit {limit} offset 0"""
28			)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\desk\doctype\desktop_icon\desktop_icon.py:180:10
179				module_icon = frappe._dict()
180				opts = random.choice(palette)
181				module_icon.color = opts[0]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\doctype\event\event.py:216:2
215		events = frappe.db.sql(
216			"""
217			SELECT `tabEvent`.name,
218					`tabEvent`.subject,
219					`tabEvent`.description,
220					`tabEvent`.color,
221					`tabEvent`.starts_on,
222					`tabEvent`.ends_on,
223					`tabEvent`.owner,
224					`tabEvent`.all_day,
225					`tabEvent`.event_type,
226					`tabEvent`.repeat_this_event,
227					`tabEvent`.repeat_on,
228					`tabEvent`.repeat_till,
229					`tabEvent`.monday,
230					`tabEvent`.tuesday,
231					`tabEvent`.wednesday,
232					`tabEvent`.thursday,
233					`tabEvent`.friday,
234					`tabEvent`.saturday,
235					`tabEvent`.sunday
236			FROM {tables}
237			WHERE (
238					(
239						(date(`tabEvent`.starts_on) BETWEEN date(%(start)s) AND date(%(end)s))
240						OR (date(`tabEvent`.ends_on) BETWEEN date(%(start)s) AND date(%(end)s))
241						OR (
242							date(`tabEvent`.starts_on) <= date(%(start)s)
243							AND date(`tabEvent`.ends_on) >= date(%(end)s)
244						)
245					)
246					OR (
247						date(`tabEvent`.starts_on) <= date(%(start)s)
248						AND `tabEvent`.repeat_this_event=1
249						AND coalesce(`tabEvent`.repeat_till, '3000-01-01') > date(%(start)s)
250					)
251				)
252			{reminder_condition}
253			{filter_condition}
254			AND (
255					`tabEvent`.event_type='Public'
256					OR `tabEvent`.owner=%(user)s
257					OR EXISTS(
258						SELECT `tabDocShare`.name
259						FROM `tabDocShare`
260						WHERE `tabDocShare`.share_doctype='Event'
261							AND `tabDocShare`.share_name=`tabEvent`.name
262							AND `tabDocShare`.user=%(user)s
263					)
264				)
265			AND `tabEvent`.status='Open'
266			ORDER BY `tabEvent`.starts_on""".format(
267				tables=", ".join(tables),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\doctype\tag\tag.py:19:16
18		try:
19			frappe.db.sql("select `_user_tags` from `tab%s` limit 1" % dt)
20		except Exception as e:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\doctype\tag\tag.py:56:2
55		return frappe.db.sql(
56			"""SELECT name
57			FROM `tab{0}`
58			WHERE _user_tags LIKE '%{1}%'""".format(
59				doctype, tag

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\doctype\tag\tag.py:114:4
113				frappe.db.sql(
114					"update `tab%s` set _user_tags=%s where name=%s" % (self.dt, "%s", "%s"), (tags, dn)
115				)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\form\load.py:261:9
260		# communications linked to reference_doctype
261		part1 = """
262			SELECT {fields}
263			FROM `tabCommunication` as C
264			WHERE C.communication_type IN ('Communication', 'Feedback', 'Automated Message')
265			AND (C.reference_doctype = %(doctype)s AND C.reference_name = %(name)s)
266			{conditions}
267		""".format(
268			fields=fields, conditions=conditions

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\form\load.py:272:9
271		# communications linked in Timeline Links
272		part2 = """
273			SELECT {fields}
274			FROM `tabCommunication` as C
275			INNER JOIN `tabCommunication Link` ON C.name=`tabCommunication Link`.parent
276			WHERE C.communication_type IN ('Communication', 'Feedback', 'Automated Message')
277			AND `tabCommunication Link`.link_doctype = %(doctype)s AND `tabCommunication Link`.link_name = %(name)s
278			{conditions}
279		""".format(
280			fields=fields, conditions=conditions

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\form\load.py:284:2
283		communications = frappe.db.sql(
284			"""
285			SELECT *
286			FROM (({part1}) UNION ({part2})) AS combined
287			{group_by}
288			ORDER BY creation DESC
289			LIMIT %(limit)s
290			OFFSET %(start)s
291		""".format(
292				part1=part1, part2=part2, group_by=(group_by or "")

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\listview.py:38:3
37			return frappe.db.sql(
38				"""select `tabToDo`.owner as name, count(*) as count
39				from
40					`tabToDo`, `tabUser`
41				where
42					`tabToDo`.status!='Cancelled' and
43					`tabToDo`.owner = `tabUser`.name and
44					`tabUser`.user_type = 'System User'
45					{subquery_condition}
46				group by
47					`tabToDo`.owner
48				order by
49					count desc
50				limit 50""".format(
51					subquery_condition=subquery_condition

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\page\activity\activity.py:18:2
17		result = frappe.db.sql(
18			"""select X.*
19			from (select name, owner, modified, creation, seen, comment_type,
20					reference_doctype, reference_name, '' as link_doctype, '' as link_name, subject,
21					communication_type, communication_medium, content
22				from
23					`tabCommunication`
24				where
25					communication_type = 'Communication'
26					and communication_medium != 'Email'
27					and {match_conditions_communication}
28			UNION
29				select name, owner, modified, creation, '0', 'Updated',
30					reference_doctype, reference_name, link_doctype, link_name, subject,
31					'Comment', '', content
32				from
33					`tabActivity Log`
34			UNION
35				select name, owner, modified, creation, '0', comment_type,
36					reference_doctype, reference_name, link_doctype, link_name, '',
37					'Comment', '', content
38				from
39					`tabComment`
40				where
41					{match_conditions_comment}
42			) X
43			order by X.creation DESC
44			LIMIT %(page_length)s
45			OFFSET %(start)s""".format(
46				match_conditions_comment=match_conditions_comment,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\page\user_profile\user_profile.py:16:3
15			frappe.db.sql(
16				"""select unix_timestamp(date(creation)), sum(points)
17			from `tabEnergy Point Log`
18			where
19				date(creation) > subdate('{date}', interval 1 year) and
20				date(creation) < subdate('{date}', interval -1 year) and
21				user = %s and
22				type != 'Review'
23			group by date(creation)
24			order by creation asc""".format(
25					date=date

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\report_dump.py:43:4
42				out[dt]["modified_names"] = frappe.db.sql_list(
43					"""select %sname from %s
44					where %smodified > %s"""
45					% (modified_table, table, modified_table, "%s"),
46					last_modified[d],

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\report_dump.py:59:4
58				for t in frappe.db.sql(
59					"""select %s from %s %s %s""" % (",".join(args["columns"]), table, conditions, order_by)
60				)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\desk\report_dump.py:69:3
68			tmp = frappe.db.sql(
69				"""select `modified`
70				from %s order by modified desc limit 1"""
71				% modified_table
72			)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\email\__init__.py:29:2
28		out = frappe.db.sql(
29			f"""select name as value, email_id as label,
30			concat(first_name, ifnull(concat(' ',last_name), '' )) as description
31			from tabContact
32			where (name like %(txt)s or email_id like %(txt)s) and email_id != ''
33			{match_conditions}
34			limit %(page_length)s""",
35			{"txt": "%" + txt + "%", "page_length": page_length},

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\email\doctype\email_account\email_account.py:184:2
183				return frappe.db.get_value("Email Domain", domain[1], fields, as_dict=True)
184			except Exception:
185				pass
186	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\email\doctype\email_account\email_account.py:464:4
463				names = frappe.db.sql(
464					"""SELECT DISTINCT `name`, `creation` FROM `tabCommunication`
465					WHERE `message_id`='{message_id}'
466					ORDER BY `creation` DESC LIMIT 1""".format(
467						message_id=email.message_id

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\email\doctype\email_account\email_account.py:776:3
775			flags = frappe.db.sql(
776				"""select name, communication, uid, action from
777				`tabEmail Flag Queue` where is_completed=0 and email_account={email_account}
778				""".format(
779					email_account=frappe.db.escape(self.name)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\email\doctype\email_account\email_account.py:806:4
805				frappe.db.sql(
806					""" update `tabEmail Flag Queue` set is_completed=1
807					where name in ({docnames})""".format(
808						docnames=docnames

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\email\doctype\email_account\email_account.py:818:3
817			frappe.db.sql(
818				""" update `tabCommunication` set seen={seen}
819				where name in ({docnames})""".format(
820					docnames=docnames, seen=seen

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\email\doctype\email_domain\email_domain.py:73:4
72							test.quit()
73					except Exception:
74						pass
75	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\email\doctype\newsletter\newsletter.py:345:3
344			return frappe.db.sql(
345				"""SELECT n.name, n.subject, n.message, n.modified
346				FROM `tabNewsletter` n, `tabNewsletter Email Group` neg
347				WHERE n.name = neg.parent
348				AND n.email_sent=1
349				AND n.published=1
350				AND neg.email_group in ({0})
351				ORDER BY n.modified DESC LIMIT {1} OFFSET {2}
352				""".format(
353					",".join(["%s"] * len(email_group_list)), limit_page_length, limit_start

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\email\doctype\newsletter\test_newsletter.py:143:19
142			name = self.send_newsletter()
143			to_unsubscribe = choice(emails)
144			group = frappe.get_all(

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\email\doctype\newsletter\test_newsletter.py:187:29
186			newsletter = self.get_newsletter()
187			newsletter.test_email_id = choice(emails)
188			newsletter.test_send()

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\email\receive.py:384:3
383					incoming_mail = Email(b"\n".join(self.pop.top(msg_num, 5)[1]))
384				except Exception:
385					pass
386	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\frappe\email\receive.py:411:3
410					self.imap.uid("STORE", uid, op, "(\\SEEN)")
411				except Exception:
412					continue
413	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '***'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\frappe\email\test_smtp.py:35:2
34			# lowest preference given to email account with default incoming enabled
35			create_email_account(
36				email_id="default_outgoing_enabled@gmail.com",
37				password="***",
38				enable_outgoing=1,
39				default_outgoing=1,
40			)
41			self.assertEqual(get_outgoing_email_account().email_id, "default_outgoing_enabled@gmail.com")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '***'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\frappe\email\test_smtp.py:45:2
44			# highest preference given to email account with append_to matching
45			create_email_account(
46				email_id="append_to@gmail.com",
47				password="***",
48				enable_outgoing=1,
49				default_outgoing=1,
50				append_to="Blog Post",
51			)
52			self.assertEqual(

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\event_streaming\doctype\event_consumer\event_consumer.py:70:13
69		def get_consumer_status(self):
70			response = requests.get(self.callback_url)
71			if response.status_code != 200:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\event_streaming\doctype\event_producer\event_producer.py:197:9
196			while retry > 0:
197				res = requests.get(self.producer_url)
198				if res.status_code == 200:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\event_streaming\doctype\event_producer\event_producer.py:227:12
226		"""Fetch data from producer node."""
227		response = requests.get(get_url())
228		if response.status_code == 200:

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'admin'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\frappe\event_streaming\doctype\event_producer\test_event_producer.py:425:17
424		producer_doc = frappe.get_doc("Event Producer", producer_url)
425		producer_site = FrappeClient(
426			url=producer_doc.producer_url, username="Administrator", password="admin", verify=False
427		)
428		return producer_site

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'admin'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\frappe\event_streaming\doctype\event_producer\test_event_producer.py:440:9
439		def _connect():
440			return FrappeClient(url=producer_url, username="Administrator", password="admin", verify=False)
441	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\frappeclient.py:409:8
408		def get_request(self, params):
409			res = requests.get(
410				self.url, params=self.preprocess(params), headers=self.headers, verify=self.verify
411			)
412			res = self.post_process(res)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\frappeclient.py:416:8
415		def post_request(self, data):
416			res = requests.post(
417				self.url, data=self.preprocess(data), headers=self.headers, verify=self.verify
418			)
419			res = self.post_process(res)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\frappeclient.py:428:8
427		def get(self, url, params, verify):
428			res = requests.get(url, params=params, headers=self.headers, verify=verify)
429			return res

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\frappeclient.py:432:8
431		def post(self, url, data, verify):
432			res = requests.post(url, data=data, headers=self.headers, verify=verify)
433			return res

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\frappeclient.py:436:8
435		def put(self, url, data, verify):
436			res = requests.put(url, data=data, headers=self.headers, verify=verify)
437			return res

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\geo\utils.py:70:4
69				coords = frappe.db.sql(
70					"""SELECT name, location FROM `tab{}`  WHERE {}""".format(doctype, filters_sql), as_dict=True
71				)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\geo\utils.py:85:4
84				coords = frappe.db.sql(
85					"""SELECT name, latitude, longitude FROM `tab{}`  WHERE {}""".format(doctype, filters_sql),
86					as_dict=True,

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\frappe\installer.py:45:18
44	
45			db_name = "_" + hashlib.sha1(site.encode()).hexdigest()[:16]
46	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\installer.py:549:1
548	def extract_sql_gzip(sql_gz_path):
549		import subprocess
550	

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\frappe\installer.py:556:2
555			cmd = "gzip -dvf < {0} > {1}".format(original_file, decompressed_file)
556			subprocess.check_call(cmd, shell=True)
557		except Exception:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\installer.py:565:1
564		import shutil
565		import subprocess
566	

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\frappe\installer.py:584:3
583			if file_path.endswith(".tar"):
584				subprocess.check_output(["tar", "xvf", tar_path, "--strip", "2"], cwd=abs_site_path)
585			elif file_path.endswith(".tgz"):

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\installer.py:584:3
583			if file_path.endswith(".tar"):
584				subprocess.check_output(["tar", "xvf", tar_path, "--strip", "2"], cwd=abs_site_path)
585			elif file_path.endswith(".tgz"):

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\frappe\installer.py:586:3
585			elif file_path.endswith(".tgz"):
586				subprocess.check_output(["tar", "zxvf", tar_path, "--strip", "2"], cwd=abs_site_path)
587		except Exception:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\installer.py:586:3
585			elif file_path.endswith(".tgz"):
586				subprocess.check_output(["tar", "zxvf", tar_path, "--strip", "2"], cwd=abs_site_path)
587		except Exception:

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '1'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\integrations\doctype\connected_app\connected_app.py:18:11
17	
18	os.environ["OAUTHLIB_RELAX_TOKEN_SCOPE"] = "1"
19	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Eastern_43A1W'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\integrations\doctype\connected_app\test_connected_app.py:68:23
67			self.user_name = "test-connected-app@example.com"
68			self.user_password = "Eastern_43A1W"
69	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'dropbox-auth-csrf-token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\frappe\integrations\doctype\dropbox_settings\dropbox_settings.py:350:22
349		app_details = get_dropbox_settings(redirect_uri=True)
350		dropbox_oauth_flow = dropbox.DropboxOAuth2Flow(
351			consumer_key=app_details["app_key"],
352			redirect_uri=app_details["redirect_uri"],
353			session={},
354			csrf_token_session_key="dropbox-auth-csrf-token",
355			consumer_secret=app_details["app_secret"],
356		)
357	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'dropbox-auth-csrf-token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\frappe\integrations\doctype\dropbox_settings\dropbox_settings.py:369:22
368	
369		dropbox_oauth_flow = dropbox.DropboxOAuth2Flow(
370			consumer_key=app_details["app_key"],
371			redirect_uri=app_details["redirect_uri"],
372			session={"dropbox-auth-csrf-token": callback.state},
373			csrf_token_session_key="dropbox-auth-csrf-token",
374			consumer_secret=app_details["app_secret"],
375		)
376	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\doctype\google_calendar\google_calendar.py:94:7
93			try:
94				r = requests.post(get_auth_url(), data=data).json()
95			except requests.exceptions.HTTPError:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\doctype\google_calendar\google_calendar.py:134:7
133				}
134				r = requests.post(get_auth_url(), data=data).json()
135	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\doctype\google_contacts\google_contacts.py:44:7
43			try:
44				r = requests.post(get_auth_url(), data=data).json()
45			except requests.exceptions.HTTPError:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\doctype\google_contacts\google_contacts.py:85:7
84				}
85				r = requests.post(get_auth_url(), data=data).json()
86	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\doctype\google_drive\google_drive.py:55:7
54			try:
55				r = requests.post(get_auth_url(), data=data).json()
56			except requests.exceptions.HTTPError:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\doctype\google_drive\google_drive.py:97:7
96				}
97				r = requests.post(get_auth_url(), data=data).json()
98	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'my_password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\integrations\doctype\ldap_settings\test_ldap_settings.py:99:22
98			cls.base_dn = f"cn=base_dn_user,{cls.ldap_dc_path}"
99			cls.base_password = "my_password"
100			cls.ldap_server = "ldap://my_fake_server:389"

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\doctype\paytm_settings\paytm_settings.py:140:12
139	
140		response = requests.post(url, data=post_data, headers={"Content-type": "application/json"}).json()
141		finalize_request(order_id, response)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\doctype\slack_webhook_url\slack_webhook_url.py:51:5
50	
51		r = requests.post(slack_url, data=json.dumps(data))
52	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'bearer'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\integrations\doctype\token_cache\token_cache.py:36:51
35			# 'Bearer' or 'MAC'
36			token_type = token_type.title() if token_type == "bearer" else token_type.upper()
37	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'X-Frappe-Webhook-Signature'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\integrations\doctype\webhook\webhook.py:23:24
22	
23	WEBHOOK_SECRET_HEADER = "X-Frappe-Webhook-Signature"
24	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\integrations\frappe_providers\frappecloud.py:12:11
11		request_url = "https://{}/api/method/press.api.script".format(remote_site)
12		request = requests.get(request_url)
13	

--------------------------------------------------
>> Issue: [B606:start_process_with_no_shell] Starting a process without a shell.
   Severity: Low   Confidence: Medium
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b606_start_process_with_no_shell.html
   Location: .\frappe\integrations\frappe_providers\frappecloud.py:36:1
35		print("Site Migrator stored at {}".format(script.name))
36		os.execv(py, [py, script.name, local_site])

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'access_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\integrations\oauth2.py:206:20
205		if token_type_hint not in ["access_token", "refresh_token"]:
206			token_type_hint = "access_token"
207		try:

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'access_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\integrations\oauth2.py:209:24
208			bearer_token = None
209			if token_type_hint == "access_token":
210				bearer_token = frappe.get_doc("OAuth Bearer Token", {"access_token": token})

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'refresh_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\integrations\oauth2.py:211:26
210				bearer_token = frappe.get_doc("OAuth Bearer Token", {"access_token": token})
211			elif token_type_hint == "refresh_token":
212				bearer_token = frappe.get_doc("OAuth Bearer Token", {"refresh_token": token})

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\__init__.py:145:3
144			frappe.db.sql(
145				"""
146				DELETE FROM `tabDocField`
147				WHERE parent='%s' AND fieldname IN (%s)
148			"""
149				% (dt, ", ".join(["'{}'".format(f) for f in fields]))
150			)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\__init__.py:158:4
157				frappe.db.sql(
158					"""
159					DELETE FROM `tabSingles`
160					WHERE doctype='%s' AND field IN (%s)
161				"""
162					% (dt, ", ".join(["'{}'".format(f) for f in fields]))
163				)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\base_document.py:412:4
411				frappe.db.sql(
412					"""INSERT INTO `tab{doctype}` ({columns})
413						VALUES ({values})""".format(
414						doctype=self.doctype,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\base_document.py:464:4
463				frappe.db.sql(
464					"""UPDATE `tab{doctype}`
465					SET {values} WHERE `name`=%s""".format(
466						doctype=self.doctype, values=", ".join(["`" + c + "`=%s" for c in columns])

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\db_query.py:201:3
200			query = (
201				"""select %(fields)s
202				from %(tables)s
203				%(conditions)s
204				%(group_by)s
205				%(order_by)s
206				%(limit)s"""
207				% args
208			)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\delete_doc.py:203:16
202		else:
203			frappe.db.sql("delete from `tab{0}` where `name`=%s".format(doctype), name)
204	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\delete_doc.py:233:4
232				frappe.db.sql(
233					"delete from `tab%s` where parenttype=%s and parent = %s" % (t, "%s", "%s"), (doctype, name)
234				)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\delete_doc.py:345:4
344				for refdoc in frappe.db.sql(
345					"""select `name`, `docstatus` {table} from `tab{parent}` where
346					{options}=%s and {fieldname}=%s""".format(
347						**df

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\delete_doc.py:411:2
410		frappe.db.sql(
411			"""delete from `tab{0}`
412			where {1}=%s and {2}=%s""".format(
413				doctype, reference_doctype_field, reference_name_field

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\delete_doc.py:427:2
426		frappe.db.sql(
427			"""update
428				`tab{0}`
429			set
430				{1}=NULL, {2}=NULL
431			where
432				{1}=%s and {2}=%s""".format(
433				doctype, reference_doctype_field, reference_name_field

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\docfield.py:50:3
49			frappe.db.sql(
50				"""update `tab%s` set parentfield=%s where parentfield=%s""" % (f["options"], "%s", "%s"),
51				(new, f["fieldname"]),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\document.py:417:4
416				deleted_rows = frappe.db.sql(
417					"""select name from `tab{0}` where parent=%s
418					and parenttype=%s and parentfield=%s
419					and name not in ({1})""".format(
420						df.options, ",".join(["%s"] * len(rows))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\document.py:427:5
426					frappe.db.sql(
427						"""delete from `tab{0}` where name in ({1})""".format(
428							df.options, ",".join(["%s"] * len(deleted_rows))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\document.py:436:4
435				frappe.db.sql(
436					"""delete from `tab{0}` where parent=%s
437					and parenttype=%s and parentfield=%s""".format(
438						df.options

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\document.py:776:5
775					tmp = frappe.db.sql(
776						"""select modified, docstatus from `tab{0}`
777						where name = %s for update""".format(
778							self.doctype

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\dynamic_links.py:47:32
46					try:
47						links = frappe.db.sql_list("""select distinct {options} from `tab{parent}`""".format(**df))
48						for doctype in links:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\naming.py:306:3
305			last = frappe.db.sql(
306				"""SELECT `{fieldname}` FROM `tab{doctype}`
307				WHERE `{fieldname}` {regex_character} %s
308				ORDER BY length({fieldname}) DESC,
309				`{fieldname}` DESC LIMIT 1""".format(
310					doctype=doctype, fieldname=fieldname, regex_character=frappe.db.REGEX_CHARACTER

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:190:2
189		user_settings_details = frappe.db.sql(
190			"""SELECT `user`, `doctype`, `data`
191				FROM `__UserSettings`
192				WHERE `data` like %s
193				AND `doctype` IN ('{doctypes}')""".format(
194				doctypes="', '".join(linked_doctypes)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:252:15
251		# rename the doc
252		frappe.db.sql("UPDATE `tab{0}` SET `name`={1} WHERE `name`={1}".format(doctype, "%s"), (new, old))
253		update_autoname_field(doctype, new, meta)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:263:4
262				frappe.db.sql(
263					"UPDATE `tab{0}` SET `{1}`={2} WHERE `name`={2}".format(doctype, field[1], "%s"), (new, new)
264				)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:270:2
269		exists = frappe.db.sql(
270			"select name from `tab{doctype}` where name=%s for update".format(doctype=doctype), new
271		)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:319:3
318			frappe.db.sql(
319				f"update `tab{df.options}` set parent=%s where parent=%s and parenttype=%s",
320				(new, old, meta.name),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:454:2
453		select_fields = frappe.db.sql(
454			"""
455			select parent, fieldname,
456				(select issingle from tabDocType dt
457				where dt.name = df.parent) as issingle
458			from tabDocField df
459			where
460				df.parent != %s and df.fieldtype = 'Select' and df.fieldname != 'fieldtype' and
461				df.options like {0} """.format(
462				frappe.db.escape("%" + old + "%")

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:470:2
469		custom_select_fields = frappe.db.sql(
470			"""
471			select dt as parent, fieldname,
472				(select issingle from tabDocType dt
473				where dt.name = df.dt) as issingle
474			from `tabCustom Field` df
475			where
476				df.dt != %s and df.fieldtype = 'Select' and
477				df.options like {0} """.format(
478				frappe.db.escape("%" + old + "%")

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:489:2
488		property_setter_select_fields = frappe.db.sql(
489			"""
490			select ps.doc_type as parent, ps.field_name as fieldname,
491				(select issingle from tabDocType dt
492				where dt.name = ps.doc_type) as issingle
493			from `tabProperty Setter` ps
494			where
495				ps.doc_type != %s and
496				ps.property_type='options' and
497				ps.field_name is not null and
498				ps.value like {0} """.format(
499				frappe.db.escape("%" + old + "%")

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:512:2
511		frappe.db.sql(
512			"""
513			update `tabDocField` set options=replace(options, %s, %s)
514			where
515				parent != %s and fieldtype = 'Select' and
516				(options like {0} or options like {1})""".format(
517				frappe.db.escape("%" + "\n" + old + "%"), frappe.db.escape("%" + old + "\n" + "%")

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:523:2
522		frappe.db.sql(
523			"""
524			update `tabCustom Field` set options=replace(options, %s, %s)
525			where
526				dt != %s and fieldtype = 'Select' and
527				(options like {0} or options like {1})""".format(
528				frappe.db.escape("%" + "\n" + old + "%"), frappe.db.escape("%" + old + "\n" + "%")

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:534:2
533		frappe.db.sql(
534			"""
535			update `tabProperty Setter` set value=replace(value, %s, %s)
536			where
537				doc_type != %s and field_name is not null and
538				property='options' and
539				(value like {0} or value like {1})""".format(
540				frappe.db.escape("%" + "\n" + old + "%"), frappe.db.escape("%" + old + "\n" + "%")

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:572:16
571		for doctype in child_doctypes:
572			frappe.db.sql(f"update `tab{doctype}` set parenttype=%s where parenttype=%s", (new, old))
573	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\rename_doc.py:591:4
590				frappe.db.sql(
591					"""update `tab{parent}` set {fieldname}=%s
592					where {options}=%s and {fieldname}=%s""".format(
593						parent=parent, fieldname=df.fieldname, options=df.options

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\utils\__init__.py:42:2
41		frappe.db.sql(
42			"""update `tab%s` set `is_default`=0
43			where `%s`=%s and name!=%s"""
44			% (doc.doctype, key, "%s", "%s"),
45			(doc.get(key), doc.name),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\utils\link_count.py:49:6
48						frappe.db.sql(
49							"update `tab{0}` set idx = idx + {1} where name=%s".format(key[0], count),
50							key[1],

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\utils\rename_field.py:31:3
30			frappe.db.sql(
31				"""update `tab%s` set parentfield=%s
32				where parentfield=%s"""
33				% (new_field.options.split("\n")[0], "%s", "%s"),
34				(new_fieldname, old_fieldname),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\utils\rename_field.py:46:17
45				# copy field value
46				frappe.db.sql("""update `tab%s` set `%s`=`%s`""" % (doctype, new_fieldname, old_fieldname))
47	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\model\utils\rename_field.py:146:4
145				frappe.db.sql(
146					"""update `tabDefaultValue` set defvalue=%s
147					where defkey=%s"""
148					% ("%s", "%s"),
149					(json.dumps(new_columns), key),

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\frappe\modules\import_file.py:23:12
22		"""
23		hash_md5 = hashlib.md5()
24		with open(path, "rb") as f:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\frappe\modules\patch_handler.py:103:5
102					if patchmodule.startswith("execute:"):
103						exec(patchmodule.split("execute:")[1], globals())
104					else:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\modules\utils.py:135:5
134					frappe.db.sql(
135						"delete from `tab{0}` where `{1}` =%s".format(custom_doctype, doctype_fieldname), doc_type
136					)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'access_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\oauth.py:286:24
285			"""
286			if token_type_hint == "access_token":
287				frappe.db.set_value("OAuth Bearer Token", token, "status", "Revoked")

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'refresh_token'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\oauth.py:288:26
287				frappe.db.set_value("OAuth Bearer Token", token, "status", "Revoked")
288			elif token_type_hint == "refresh_token":
289				frappe.db.set_value("OAuth Bearer Token", {"refresh_token": token}, "status", "Revoked")

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\parallel_test_runner.py:284:8
283			url = f"{self.orchestrator_url}/{endpoint}"
284			res = requests.get(url, json=data, headers=headers)
285			res.raise_for_status()

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v10_0\refactor_social_login_keys.py:125:9
124	
125		query = """INSERT INTO `tabUser Social Login` (`{source_cols}`)
126			VALUES ({values})
127		""".format(
128			source_cols="`, `".join(source_cols), values=", ".join([frappe.db.escape(d) for d in values])

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v11_0\delete_duplicate_user_permissions.py:17:3
16			frappe.db.sql(
17				"""delete from `tabUser Permission`
18				where allow=%s and user=%s and for_value=%s limit {0}""".format(
19					record.count - 1

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v11_0\update_list_user_settings.py:17:3
16			settings = frappe.db.sql(
17				"select * from `__UserSettings` \
18				where user={0}".format(
19					frappe.db.escape(user.user)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v12_0\move_email_and_phone_to_child_table.py:81:4
80				frappe.db.sql(
81					"""
82					INSERT INTO `tabContact Email`
83						(`idx`, `name`, `email_id`, `parentfield`, `parenttype`, `parent`, `is_primary`, `creation`,
84						`modified`, `modified_by`)
85					VALUES {}
86				""".format(
87						", ".join(["%s"] * len(email_values))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v12_0\move_email_and_phone_to_child_table.py:96:4
95				frappe.db.sql(
96					"""
97					INSERT INTO `tabContact Phone`
98						(`idx`, `name`, `phone`, `parentfield`, `parenttype`, `parent`, `is_primary_phone`, `is_primary_mobile_no`, `creation`,
99						`modified`, `modified_by`)
100					VALUES {}
101				""".format(
102						", ".join(["%s"] * len(phone_values))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v12_0\move_timeline_links_to_dynamic_links.py:56:4
55				frappe.db.sql(
56					"""
57					INSERT INTO `tabCommunication Link`
58						(`idx`, `name`, `parentfield`, `parenttype`, `parent`, `link_doctype`, `link_name`, `creation`,
59						`modified`, `modified_by`)
60					VALUES {0}
61				""".format(
62						", ".join([d for d in values])

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b112_try_except_continue.html
   Location: .\frappe\patches\v12_0\rename_uploaded_files_with_proper_name.py:25:2
24				)
25			except Exception:
26				continue
27	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v12_0\replace_null_values_in_tables.py:27:4
26				frappe.db.sql(
27					"""UPDATE `{table}` SET {columns}""".format(
28						table=table, columns=", ".join(update_column_table_map.get(table))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v12_0\setup_tags.py:20:3
19			for _user_tags in frappe.db.sql(
20				"select `name`, `_user_tags` from `tab{0}`".format(doctype.name), as_dict=True
21			):

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v13_0\clear_large_email_queues.py:44:3
43			frappe.db.sql(
44				f"""INSERT INTO `{temporary}`
45					SELECT * FROM `{original}`
46					WHERE `{original}`.`modified` > NOW() - INTERVAL '{days}' DAY"""
47			)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\patches\v13_0\clear_large_email_queues.py:69:1
68			return frappe.db.get_single_value("Log Settings", fieldname)
69		except Exception:
70			# Field might be gone if patch is reattempted
71			pass

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v13_0\set_unique_for_page_view.py:8:2
7		frappe.db.sql(
8			"""UPDATE `tabWeb Page View` set is_unique=1 where referrer LIKE '%{0}%'""".format(site_url)
9		)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\patches\v13_0\update_date_filters_in_user_settings.py:14:3
13			user_settings = frappe.db.sql(
14				"""
15				select
16					* from `__UserSettings`
17				where
18					user='{user}'
19			""".format(
20					user=user.user

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\recorder.py:69:1
68					}
69		except Exception:
70			pass
71	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\search\website_search.py:73:2
72				return frappe._dict(title=title, content=text_content, path=route)
73			except Exception:
74				pass
75			finally:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\sessions.py:79:2
78		return frappe.db.sql_list(
79			"""
80			SELECT `sid` FROM `tabSessions`
81			WHERE `tabSessions`.user=%(user)s
82			AND device in %(device)s
83			{condition}
84			ORDER BY `lastupdate` DESC
85			LIMIT 100 OFFSET {offset}""".format(
86				condition=condition, offset=offset

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\frappe\sessions.py:351:23
350			if rec:
351				data = frappe._dict(eval(rec and rec[0][1] or "{}"))
352				data.user = rec[0][0]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\social\doctype\energy_point_log\energy_point_log.py:250:2
249		points_list = frappe.db.sql(
250			"""
251			SELECT
252				SUM(CASE WHEN `type` != 'Review' THEN `points` ELSE 0 END) AS energy_points,
253				SUM(CASE WHEN `type` = 'Review' THEN `points` ELSE 0 END) AS review_points,
254				SUM(CASE
255					WHEN `type`='Review' AND `points` < 0 {given_points_condition}
256					THEN ABS(`points`)
257					ELSE 0
258				END) as given_points,
259				`user`
260			FROM `tabEnergy Point Log`
261			{conditions}
262			GROUP BY `user`
263			ORDER BY `energy_points` DESC
264		""".format(
265				conditions=conditions, given_points_condition=given_points_condition

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\social\doctype\post\post.py:58:9
57		try:
58			page = requests.get(url)
59		except (requests.exceptions.MissingSchema, requests.exceptions.ConnectionError):

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\test_runner.py:219:34
218			if force:
219				for name in frappe.db.sql_list("select name from `tab%s`" % doctype):
220					frappe.delete_doc(doctype, name, force=True)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_api.py:54:15
53			if not getattr(self, "_sid", None):
54				self._sid = requests.post(
55					f"{self.SITE_URL}/api/method/login",
56					data={
57						"usr": "Administrator",
58						"pwd": frappe.conf.admin_password or "admin",
59					},
60				).cookies.get("sid")
61	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_api.py:65:9
64		def get(self, path, params=""):
65			return requests.get(f"{self.RESOURCE_URL}/{path}?sid={self.sid}{params}")
66	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_api.py:68:9
67		def post(self, path, data):
68			return requests.post(f"{self.RESOURCE_URL}/{path}?sid={self.sid}", data=frappe.as_json(data))
69	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_api.py:71:9
70		def put(self, path, data):
71			return requests.put(f"{self.RESOURCE_URL}/{path}?sid={self.sid}", data=frappe.as_json(data))
72	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_api.py:74:9
73		def delete(self, path):
74			return requests.delete(f"{self.RESOURCE_URL}/{path}?sid={self.sid}")
75	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_api.py:78:13
77			# test 1: fetch documents without auth
78			response = requests.get(f"{self.RESOURCE_URL}/{self.DOCTYPE}")
79			self.assertEqual(response.status_code, 403)

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\frappe\tests\test_api.py:114:24
113			self.assertIsInstance(response.json()["exc"], str)
114			self.assertIsInstance(eval(response.json()["exc"]), list)
115	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\tests\test_api.py:136:15
135			data = {"description": generated_desc}
136			random_doc = choice(self.GENERATED_DOCUMENTS)
137			desc_before_update = frappe.db.get_value(self.DOCTYPE, random_doc, "description")

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\tests\test_api.py:146:18
145			# test 9: DELETE method on /api/resource
146			doc_to_delete = choice(self.GENERATED_DOCUMENTS)
147			response = self.delete(f"{self.DOCTYPE}/{doc_to_delete}")

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_api.py:163:13
162			# test 1: test for /api/method/version
163			response = requests.get(f"{self.METHOD_URL}/version")
164			json = frappe._dict(response.json())

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_api.py:173:13
172			# test 2: test for /api/method/ping
173			response = requests.get(f"{self.METHOD_URL}/ping")
174			self.assertEqual(response.status_code, 200)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'pwd_012'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_auth.py:20:28
19			self.test_user_mobile = "+911234567890"
20			self.test_user_password = "pwd_012"
21	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\tests\test_commands.py:9:0
8	import shlex
9	import subprocess
10	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\tests\test_commands.py:92:15
91			command = shlex.split(self.command)
92			self._proc = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
93			self.stdout = clean(self._proc.stdout)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\tests\test_db.py:260:17
259	
260			random_field = choice(fields).lower()
261			random_doc = choice(created_docs)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\tests\test_db.py:261:15
260			random_field = choice(fields).lower()
261			random_doc = choice(created_docs)
262			random_value = random_string(20)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\tests\test_db.py:365:3
364			check_exists = frappe.db.sql(
365				f"""
366				SELECT * FROM INFORMATION_SCHEMA.TABLES
367				WHERE TABLE_NAME = N'tab{new_table_name}';
368				"""
369			)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\tests\test_db.py:568:3
567			check_exists = frappe.db.sql(
568				f"""
569				SELECT EXISTS (
570				SELECT FROM information_schema.tables
571				WHERE  table_name = 'tab{new_table_name}'
572				);
573				"""
574			)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\tests\test_db.py:586:3
585			check_change = frappe.db.sql(
586				f"""
587				SELECT
588					table_name,
589					column_name,
590					data_type
591				FROM
592					information_schema.columns
593				WHERE
594					table_name = 'tab{self.test_table_name}'
595				"""
596			)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\tests\test_db_query.py:678:3
677			dashboard_settings = frappe.db.sql(
678				"""
679					SELECT name
680					FROM `tabDashboard Settings`
681					WHERE {condition}
682				""".format(
683					condition=permission_query_conditions

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_frappe_client.py:185:8
184			header = {"Authorization": "token {}:{}".format(api_key, generated_secret)}
185			res = requests.post(get_url() + "/api/method/frappe.auth.get_logged_user", headers=header)
186	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_frappe_client.py:196:8
195			}
196			res = requests.post(get_url() + "/api/method/frappe.auth.get_logged_user", headers=header)
197			self.assertEqual(res.status_code, 200)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'ksk&93nxoe3os'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_frappe_client.py:201:15
200			# Valid api key, invalid api secret
201			api_secret = "ksk&93nxoe3os"
202			header = {"Authorization": "token {}:{}".format(api_key, api_secret)}

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_frappe_client.py:203:8
202			header = {"Authorization": "token {}:{}".format(api_key, api_secret)}
203			res = requests.post(get_url() + "/api/method/frappe.auth.get_logged_user", headers=header)
204			self.assertEqual(res.status_code, 403)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'ksk&93nxoe3os'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_frappe_client.py:208:15
207			api_key = "@3djdk3kld"
208			api_secret = "ksk&93nxoe3os"
209			header = {"Authorization": "token {}:{}".format(api_key, api_secret)}

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_frappe_client.py:210:8
209			header = {"Authorization": "token {}:{}".format(api_key, api_secret)}
210			res = requests.post(get_url() + "/api/method/frappe.auth.get_logged_user", headers=header)
211			self.assertEqual(res.status_code, 401)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_oauth20.py:72:19
71			# Request for bearer token
72			token_response = requests.post(
73				get_full_url("/api/method/frappe.integrations.oauth2.get_token"),
74				headers=self.form_header,
75				data=encode_params(
76					{
77						"grant_type": "authorization_code",
78						"code": auth_code,
79						"redirect_uri": self.redirect_uri,
80						"client_id": self.client_id,
81						"scope": self.scope,
82					}
83				),
84			)
85	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_oauth20.py:131:19
130			# Request for bearer token
131			token_response = requests.post(
132				get_full_url("/api/method/frappe.integrations.oauth2.get_token"),
133				headers=self.form_header,
134				data=encode_params(
135					{
136						"grant_type": "authorization_code",
137						"code": auth_code,
138						"redirect_uri": self.redirect_uri,
139						"client_id": self.client_id,
140						"scope": self.scope,
141						"code_verifier": "420",
142					}
143				),
144			)
145	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_oauth20.py:188:19
187			# Request for bearer token
188			token_response = requests.post(
189				get_full_url("/api/method/frappe.integrations.oauth2.get_token"),
190				headers=self.form_header,
191				data=encode_params(
192					{
193						"grant_type": "authorization_code",
194						"code": auth_code,
195						"redirect_uri": self.redirect_uri,
196						"client_id": self.client_id,
197					}
198				),
199			)
200	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_oauth20.py:205:26
204			# Revoke Token
205			revoke_token_response = requests.post(
206				get_full_url("/api/method/frappe.integrations.oauth2.revoke_token"),
207				headers=self.form_header,
208				data={"token": bearer_token.get("access_token")},
209			)
210	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_oauth20.py:224:19
223			# Request for bearer token
224			token_response = requests.post(
225				get_full_url("/api/method/frappe.integrations.oauth2.get_token"),
226				headers=self.form_header,
227				data=encode_params(
228					{
229						"grant_type": "password",
230						"username": "test@example.com",
231						"password": "Eastern_43A1W",
232						"client_id": self.client_id,
233						"scope": self.scope,
234					}
235				),
236			)
237	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_oauth20.py:312:19
311			# Request for bearer token
312			token_response = requests.post(
313				get_full_url("/api/method/frappe.integrations.oauth2.get_token"),
314				headers=self.form_header,
315				data=encode_params(
316					{
317						"grant_type": "authorization_code",
318						"code": auth_code,
319						"redirect_uri": self.redirect_uri,
320						"client_id": self.client_id,
321						"scope": self.scope,
322					}
323				),
324			)
325	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\tests\test_oauth20.py:351:19
350		# check openid for email test@example.com
351		openid_response = requests.get(
352			get_full_url("/api/method/frappe.integrations.oauth2.openid_profile"), headers=headers
353		)
354	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'test-password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_password.py:19:17
18	
19			new_password = "test-password"
20			doc.password = new_password

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Eastern_43A1W'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_password.py:56:17
55		def test_hashed_password(self, user="test@example.com"):
56			old_password = "Eastern_43A1W"
57			new_password = "Eastern_43A1W-new"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Eastern_43A1W-new'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_password.py:57:17
56			old_password = "Eastern_43A1W"
57			new_password = "Eastern_43A1W-new"
58	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'test-rename-password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_password.py:79:13
78		def test_password_on_rename_user(self):
79			password = "test-rename-password"
80	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'asdf'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_password.py:105:17
104	
105			doc.password = "asdf"
106			doc.save()

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_password.py:109:17
108	
109			doc.password = ""
110			doc.save()

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\tests\test_password_strength.py:11:21
10		def test_long_password(self):
11			password = "".join(random.choice(printable) for _ in range(600))
12	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'qwe'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_pdf.py:47:13
46		def test_pdf_encryption(self):
47			password = "qwe"
48			pdf = pdfgen.get_pdf(self.html, options={"password": password})

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\tests\test_rename_doc.py:78:13
77			"""Rename an existing document via frappe.rename_doc"""
78			old_name = choice(self.available_documents)
79			new_name = old_name + ".new"

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\tests\test_translate.py:18:63
17	translation_string_file = os.path.join(dirname, "translation_test_file.txt")
18	first_lang, second_lang, third_lang, fourth_lang, fifth_lang = choices(
19		# skip "en*" since it is a default language
20		frappe.get_all("Language", pluck="name", filters=[["name", "not like", "en%"]]),
21		k=5,
22	)
23	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Eastern_43A1W'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\frappe\tests\test_twofactor.py:208:18
207		frappe.form_dict["usr"] = "test@example.com"
208		frappe.form_dict["pwd"] = "Eastern_43A1W"
209		frappe.local.form_dict["cmd"] = "login"

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\translate.py:299:1
298			frappe.local.lang_full_dict.update(user_translations)
299		except Exception:
300			pass
301	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\translate.py:398:3
397			for name in frappe.db.sql_list(
398				"""select name from tabDocType
399				where module in ({})""".format(
400					modules

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\translate.py:407:3
406			for name, title in frappe.db.sql(
407				"""select name, title from tabPage
408				where module in ({})""".format(
409					modules

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\translate.py:417:3
416			for name in frappe.db.sql_list(
417				"""select tabReport.name from tabDocType, tabReport
418				where tabReport.ref_doctype = tabDocType.name
419					and tabDocType.module in ({})""".format(
420					modules

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\frappe\translate.py:501:1
500	def get_messages_from_workflow(doctype=None, app_name=None):
501		assert doctype or app_name, "doctype or app_name should be provided"
502	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\twofactor.py:127:9
126	
127		query = """SELECT `name`
128			FROM `tabRole`
129			WHERE `two_factor_auth`= 1
130			AND `name` IN ({0})
131			LIMIT 1""".format(
132			", ".join(roles)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\utils\__init__.py:231:17
230	
231		return "".join([choice(string.ascii_letters + string.digits) for i in range(length)])
232	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\frappe\utils\__init__.py:243:13
242	
243		hexdigest = hashlib.md5(frappe.as_unicode(email).encode("utf-8")).hexdigest()
244	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\utils\__init__.py:247:8
246		try:
247			res = requests.get(gravatar_url)
248			if res.status_code == 200:

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\frappe\utils\__init__.py:258:7
257		return "https://secure.gravatar.com/avatar/{hash}?d=mm&s=200".format(
258			hash=hashlib.md5(email.encode("utf-8")).hexdigest()
259		)

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\utils\__init__.py:397:1
396		import tempfile
397		from subprocess import Popen
398	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\utils\__init__.py:406:7
405	
406				p = Popen(cmd, **kwargs)
407				exit_code = p.wait()

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\utils\__init__.py:700:1
699			is_valid = pos > 0 and (email_id.rindex(".") > pos) and (len(email_id) - pos > 4)
700		except Exception:
701			# print(e)
702			pass
703		return is_valid

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\utils\__init__.py:988:2
987				arg = json.loads(arg)
988			except Exception:
989				pass
990	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\bot.py:133:29
132				if self.tables:
133					return str(frappe.db.sql("select count(*) from `tab{0}`".format(self.get_doctype()))[0][0])
134	

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\frappe\utils\change_log.py:143:11
142				"cd ../apps/{0} && git rev-parse --abbrev-ref HEAD".format(app),
143				shell=True,
144				stdin=null_stream,
145				stderr=null_stream,
146			)
147			result = safe_decode(result)
148			result = result.strip()
149			return result

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\frappe\utils\change_log.py:159:11
158				"cd ../apps/{0} && git rev-parse HEAD --short 7".format(app),
159				shell=True,
160				stdin=null_stream,
161				stderr=null_stream,
162			)
163			result = safe_decode(result)
164			result = result.strip()
165			return result

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\frappe\utils\change_log.py:243:15
242			remote_url = subprocess.check_output(
243				"cd ../apps/{} && git ls-remote --get-url".format(app), shell=True
244			)
245		except subprocess.CalledProcessError:
246			# Passing this since some apps may not have git initialized in them

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\utils\change_log.py:265:5
264		# Get latest version from GitHub
265		r = requests.get(f"https://api.github.com/repos/{owner}/{repo}/releases")
266		if r.ok:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\utils\commands.py:11:8
10		for org in ["frappe", "erpnext"]:
11			req = requests.get(
12				f"https://api.github.com/users/{org}/repos", {"type": "sources", "per_page": 200}
13			)
14			if req.ok:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\utils\csvutils.py:205:12
204		headers = {"Accept": "text/csv"}
205		response = requests.get(url, headers=headers)
206	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\frappe\utils\file_manager.py:394:8
393			content = content.encode()
394		return hashlib.md5(content).hexdigest()
395	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\global_search.py:232:16
231					),
232					"postgres": """INSERT INTO `__global_search`
233					(doctype, name, content, published, title, route)
234					VALUES {0}
235					ON CONFLICT("name", "doctype") DO NOTHING""".format(
236						", ".join(batch_values)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\goal.py:20:2
19		results = frappe.db.sql(
20			"""SELECT {aggregation}(`{goal_field}`) AS {goal_field},
21			{month_year_format_query} AS month_year
22			FROM `{table_name}` {conditions}
23			GROUP BY month_year""".format(
24				aggregation=aggregation,

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\frappe\utils\identicon.py:30:13
29			"""
30			return int(md5(str_.encode("utf-8")).hexdigest(), 16)
31	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\utils\identicon.py:39:10
38			# color = (self.hash & 0xff, self.hash >> 8 & 0xff, self.hash >> 16 & 0xff)
39			color = random.choice(
40				(
41					(254, 196, 197),
42					(253, 138, 139),
43					(254, 231, 206),
44					(254, 208, 159),
45					(210, 211, 253),
46					(163, 165, 252),
47					(247, 213, 247),
48					(242, 172, 238),
49					(235, 247, 206),
50					(217, 241, 157),
51					(211, 248, 237),
52					(167, 242, 221),
53					(255, 249, 207),
54					(254, 245, 161),
55					(211, 241, 254),
56					(168, 228, 254),
57					(207, 245, 210),
58					(159, 235, 164),
59				)
60			)
61			# print color

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\utils\make_random.py:20:10
19		if rows > 1:
20			nrows = random.randrange(1, rows)
21	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\utils\make_random.py:28:13
27				else:
28					d[key] = random.randrange(*val)
29	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\make_random.py:48:2
47		out = frappe.db.sql(
48			"""select name from `tab%s` %s
49			order by RAND() limit 0,1"""
50			% (doctype, condition)
51		)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\utils\make_random.py:62:8
61	def can_make(doctype):
62		return random.random() < settings.prob.get(doctype, settings.prob["default"])["make"]
63	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\frappe\utils\make_random.py:66:8
65	def how_many(doctype):
66		return random.randrange(*settings.prob.get(doctype, settings.prob["default"])["qty"])

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:73:3
72			left, right = frappe.db.sql(
73				"select lft, rgt from `tab{0}` where name=%s for update".format(doctype), parent
74			)[0]

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:78:3
77			right = frappe.db.sql(
78				"""
79				SELECT COALESCE(MAX(rgt), 0) + 1 FROM `tab{0}`
80				WHERE COALESCE(`{1}`, '') = ''
81			""".format(
82					doctype, parent_field

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:88:15
87		# update all on the right
88		frappe.db.sql("update `tab{0}` set rgt = rgt+2 where rgt >= %s".format(doctype), (right,))
89		frappe.db.sql("update `tab{0}` set lft = lft+2 where lft >= %s".format(doctype), (right,))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:89:15
88		frappe.db.sql("update `tab{0}` set rgt = rgt+2 where rgt >= %s".format(doctype), (right,))
89		frappe.db.sql("update `tab{0}` set lft = lft+2 where lft >= %s".format(doctype), (right,))
90	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:93:2
92		if frappe.db.sql(
93			"select * from `tab{0}` where lft=%s or rgt=%s".format(doctype), (right, right + 1)
94		):

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:99:2
98		frappe.db.sql(
99			"update `tab{0}` set lft=%s, rgt=%s where name=%s".format(doctype), (right, right + 1, name)
100		)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:109:3
108			new_parent = frappe.db.sql(
109				"""select lft, rgt from `tab{0}`
110				where name = %s for update""".format(
111					doc.doctype

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:121:2
120		frappe.db.sql(
121			"""update `tab{0}` set lft = -lft, rgt = -rgt
122			where lft >= %s and rgt <= %s""".format(
123				doc.doctype

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:131:2
130		frappe.db.sql(
131			"""update `tab{0}` set lft = lft -%s, rgt = rgt - %s
132			where lft > %s""".format(
133				doc.doctype

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:140:2
139		frappe.db.sql(
140			"""update `tab{0}` set rgt = rgt - %s
141			where lft < %s and rgt > %s""".format(
142				doc.doctype

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:149:3
148			new_parent = frappe.db.sql(
149				"""select lft, rgt from `tab%s`
150				where name = %s for update"""
151				% (doc.doctype, "%s"),
152				parent,

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:158:3
157			frappe.db.sql(
158				"""update `tab{0}` set rgt = rgt + %s
159				where name = %s""".format(
160					doc.doctype

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:167:3
166			frappe.db.sql(
167				"""update `tab{0}` set lft = lft + %s, rgt = rgt + %s
168				where lft > %s""".format(
169					doc.doctype

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:176:3
175			frappe.db.sql(
176				"""update `tab{0}` set rgt = rgt + %s
177				where lft < %s and rgt > %s""".format(
178					doc.doctype

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:186:26
185			# new root
186			max_rgt = frappe.db.sql("""select max(rgt) from `tab{0}`""".format(doc.doctype))[0][0]
187			new_diff = max_rgt + 1 - doc.lft

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:191:2
190		frappe.db.sql(
191			"""update `tab{0}` set lft = -lft + %s, rgt = -rgt + %s
192			where lft < 0""".format(
193				doc.doctype

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:221:2
220		result = frappe.db.sql(
221			"SELECT name FROM `tab%s` WHERE `%s`='' or `%s` IS NULL ORDER BY name ASC"
222			% (doctype, parent_field, parent_field)
223		)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:243:2
242		result = frappe.db.sql(
243			"SELECT name FROM `tab{0}` WHERE `{1}`=%s".format(doctype, parent_field), (parent)
244		)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:261:2
260		if name in frappe.db.sql_list(
261			"""select name from `tab{0}` where lft <= %s and rgt >= %s""".format(doctype), (lft, rgt)
262		):

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:299:3
298			has_children = frappe.db.sql(
299				"""select count(name) from `tab{doctype}`
300				where `{nsm_parent_field}`=%s""".format(
301					doctype=self.doctype, nsm_parent_field=self.nsm_parent_field

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:327:3
326			frappe.db.sql(
327				"update `tab{0}` set old_parent=%s where {1}=%s".format(self.doctype, parent_field),
328				(newdn, newdn),

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:345:4
344				if frappe.db.sql(
345					"""select name from `tab{0}` where {1}=%s and docstatus!=2""".format(
346						self.doctype, self.nsm_parent_field

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\nestedset.py:361:2
360		result = frappe.db.sql(
361			"""select t1.name from `tab{0}` t1 where
362			(select count(*) from `tab{1}` t2 where
363				t2.lft < t1.lft and t2.rgt > t1.rgt) = 0
364			and t1.rgt > t1.lft""".format(
365				doctype, doctype

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\utils\pdf.py:8:0
7	import re
8	import subprocess
9	from distutils.version import LooseVersion

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b108_hardcoded_tmp_directory.html
   Location: .\frappe\utils\pdf.py:142:14
141			# Use wkhtmltopdf's cookie-jar feature to set cookies and restrict them to host domain
142			cookiejar = "/tmp/{}.jar".format(frappe.generate_hash())
143	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\utils\pdf.py:180:2
179					options[attr] = str(match[-1][3]).strip()
180			except Exception:
181				pass
182	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b108_hardcoded_tmp_directory.html
   Location: .\frappe\utils\pdf.py:217:24
216				# create temp file
217				fname = os.path.join("/tmp", "frappe-pdf-{0}.html".format(frappe.generate_hash()))
218				with open(fname, "wb") as f:

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b607_start_process_with_partial_path.html
   Location: .\frappe\utils\pdf.py:253:9
252			try:
253				res = subprocess.check_output(["wkhtmltopdf", "--version"])
254				wkhtmltopdf_version = res.decode("utf-8").split(" ")[1]

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\utils\pdf.py:253:9
252			try:
253				res = subprocess.check_output(["wkhtmltopdf", "--version"])
254				wkhtmltopdf_version = res.decode("utf-8").split(" ")[1]

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\utils\pdf.py:256:2
255				frappe.cache().hset("wkhtmltopdf_version", None, wkhtmltopdf_version)
256			except Exception:
257				pass
258	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b108_hardcoded_tmp_directory.html
   Location: .\frappe\utils\print_format.py:107:22
106		# Get the content of the merged pdf files
107		fname = os.path.join("/tmp", "frappe-pdf-{0}.pdf".format(frappe.generate_hash()))
108		output.write(open(fname, "wb"))

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: .\frappe\utils\reset_doc.py:44:18
43			)
44			original_file = urlopen(git_link).read()
45		except Exception:

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b102_exec_used.html
   Location: .\frappe\utils\safe_exec.py:81:2
80			# execute script compiled by RestrictedPython
81			exec(
82				compile_restricted(script, filename="<serverscript>", policy=FrappeTransformer),
83				exec_globals,
84				_locals,
85			)
86	

--------------------------------------------------
>> Issue: [B307:blacklist] Use of possibly insecure function - consider using safer ast.literal_eval.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b307-eval
   Location: .\frappe\utils\safe_exec.py:103:8
102	
103		return eval(
104			compile_restricted(code, filename="<safe_eval>", policy=FrappeTransformer, mode="eval"),
105			eval_globals,
106			eval_locals,
107		)
108	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\utils\user.py:272:2
271		system_managers = frappe.db.sql(
272			"""SELECT DISTINCT `name`, `creation`,
273			CONCAT_WS(' ',
274				CASE WHEN `first_name`= '' THEN NULL ELSE `first_name` END,
275				CASE WHEN `last_name`= '' THEN NULL ELSE `last_name` END
276			) AS fullname
277			FROM `tabUser` AS p
278			WHERE `docstatus` < 2
279			AND `enabled` = 1
280			AND `name` NOT IN ({})
281			AND exists
282				(SELECT *
283					FROM `tabHas Role` AS ur
284					WHERE ur.parent = p.name
285					AND ur.role='System Manager')
286			ORDER BY `creation` DESC""".format(
287				", ".join(["%s"] * len(STANDARD_USERS))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\website\doctype\blog_post\blog_post.py:277:9
276	
277		query = """\
278			select
279				t1.title, t1.name, t1.blog_category, t1.route, t1.published_on, t1.read_time,
280					t1.published_on as creation,
281					t1.read_time as read_time,
282					t1.featured as featured,
283					t1.meta_image as cover_image,
284					t1.content as content,
285					t1.content_type as content_type,
286					t1.content_html as content_html,
287					t1.content_md as content_md,
288					ifnull(t1.blog_intro, t1.content) as intro,
289					t2.full_name, t2.avatar, t1.blogger,
290					(select count(name) from `tabComment`
291						where
292							comment_type='Comment'
293							and reference_doctype='Blog Post'
294							and reference_name=t1.name) as comments
295			from `tabBlog Post` t1, `tabBlogger` t2
296			where ifnull(t1.published,0)=1
297			and t1.blogger = t2.name
298			%(condition)s
299			order by featured desc, published_on desc, name asc
300			limit %(page_len)s OFFSET %(start)s""" % {
301			"start": limit_start,
302			"page_len": limit_page_length,
303			"condition": (" and " + " and ".join(conditions)) if conditions else "",
304		}
305	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\website\doctype\web_page\web_page.py:202:11
201					try:
202						res = requests.get(link)
203					except requests.exceptions.SSLError:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\website\doctype\website_settings\google_indexing.py:46:9
45				}
46				res = requests.post(get_auth_url(), data=data).json()
47	

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\frappe\website\doctype\website_settings\website_settings.py:116:9
115			try:
116				res = requests.post(get_auth_url(), data=data).json()
117			except requests.exceptions.HTTPError:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\frappe\website\doctype\website_theme\website_theme.py:64:2
63		def generate_bootstrap_theme(self):
64			from subprocess import PIPE, Popen
65	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\frappe\website\doctype\website_theme\website_theme.py:87:12
86	
87			process = Popen(command, cwd=frappe.get_app_path("frappe", ".."), stdout=PIPE, stderr=PIPE)
88	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\website\report\website_analytics\website_analytics.py:76:10
75	
76			query = """
77					SELECT
78						DATE_FORMAT({0}, %s) as date,
79						COUNT(*) as count,
80						COUNT(CASE WHEN is_unique = 1 THEN 1 END) as unique_count
81					FROM `tabWeb Page View`
82					WHERE creation BETWEEN %s AND %s
83					GROUP BY DATE_FORMAT({0}, %s)
84					ORDER BY creation
85				""".format(
86				field

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\website\report\website_analytics\website_analytics.py:104:10
103	
104			query = """
105					SELECT
106						DATE_TRUNC(%s, {0}) as date,
107						COUNT(*) as count,
108						COUNT(CASE WHEN CAST(is_unique as Integer) = 1 THEN 1 END) as unique_count
109					FROM "tabWeb Page View"
110					WHERE  coalesce("tabWeb Page View".{0}, '0001-01-01') BETWEEN %s AND %s
111					GROUP BY date_trunc(%s, {0})
112					ORDER BY date
113				""".format(
114				field

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b110_try_except_pass.html
   Location: .\frappe\website\router.py:348:2
347					source = res["body"]
348			except Exception:
349				pass
350	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b608_hardcoded_sql_expressions.html
   Location: .\frappe\workflow\doctype\workflow\workflow.py:55:5
54					frappe.db.sql(
55						"""
56						UPDATE `tab{doctype}`
57						SET `{field}` = %s
58						WHERE ifnull(`{field}`, '') = ''
59						AND `docstatus` = %s
60					""".format(
61							doctype=self.document_type, field=self.workflow_state_field

--------------------------------------------------

Code scanned:
	Total lines of code: 91951
	Total lines skipped (#nosec): 6
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 103
		Medium: 226
		High: 15
	Total issues (by confidence):
		Undefined: 0
		Low: 211
		Medium: 41
		High: 92
Files skipped (0):
