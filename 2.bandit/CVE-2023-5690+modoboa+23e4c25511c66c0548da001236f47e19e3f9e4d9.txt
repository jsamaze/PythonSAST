Working... ---------------------------------------- 100% 0:00:04
Run started:2024-02-11 00:11:35.928379

Test results:
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Toto1234'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\modoboa\admin\api\v1\tests.py:313:13
312	
313	        data["password"] = "Toto1234"
314	        response = self.client.post(url, data, format="json")

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\modoboa\admin\api\v1\tests.py:398:13
397	        data = copy.deepcopy(self.ACCOUNT_DATA)
398	        data["password"] = "toto"
399	        url = reverse("v1:account-list")

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\modoboa\admin\api\v2\tests.py:221:13
220	
221	        data["password"] = "Toto"
222	        resp = self.client.post(url, data, format="json")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\api\v2\tests.py:465:12
464	        self.assertTrue(
465	            self.client.login(username="user1@test.com", password="toto")
466	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '{PLAIN}toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\factories.py:100:12
99	    dom = DomainFactory(name="test.com", quota=50)
100	    admin = UserFactory(
101	        username="admin@test.com", groups=("DomainAdmins", ),
102	        password="{PLAIN}toto"
103	    )
104	    MailboxFactory(address="admin", domain=dom, user=admin)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '{PLAIN}toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\factories.py:132:12
131	    dom2 = DomainFactory.create(name="test2.com", default_mailbox_quota=0)
132	    admin = UserFactory.create(
133	        username="admin@test2.com", groups=("DomainAdmins",),
134	        password="{PLAIN}toto"
135	    )
136	    MailboxFactory.create(address="admin", domain=dom2, user=admin)

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b108_hardcoded_tmp_directory.html
   Location: .\modoboa\admin\management\commands\handle_mailbox_operations.py:34:33
33	        parser.add_argument(
34	            "--pidfile", default="/tmp/handle_mailbox_operations.pid",
35	            help="Path to the file that will contain the PID of this process"

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\modoboa\admin\models\alias.py:123:12
122	        """Generate a random address (local part)."""
123	        m = hashlib.md5()
124	        for x in random.sample(range(10000000), 60):

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\modoboa\admin\templatetags\admin_tags.py:247:11
246	        res += "%s<br/>" % alias.name
247	    return mark_safe(res)
248	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\modoboa\admin\templatetags\admin_tags.py:247:11
246	        res += "%s<br/>" % alias.name
247	    return mark_safe(res)
248	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\modoboa\admin\templatetags\admin_tags.py:301:11
300	    results = reduce(lambda a, b: a + b, [result[1] for result in results])
301	    return mark_safe("".join(results))

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\modoboa\admin\templatetags\admin_tags.py:301:11
300	    results = reduce(lambda a, b: a + b, [result[1] for result in results])
301	    return mark_safe("".join(results))

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Tété1234'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\modoboa\admin\tests\test_account.py:30:19
29	        self.client.logout()
30	        password = "Tété1234"
31	        self.mb.user.set_password(password)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\tests\test_account.py:452:12
451	        self.assertTrue(
452	            self.client.login(username="admin@test.com", password="toto")
453	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\tests\test_account.py:458:12
457	        self.assertTrue(
458	            self.client.login(username="admin@test2.com", password="toto")
459	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\tests\test_account.py:657:12
656	        self.assertTrue(
657	            self.client.login(username="admin@test.com", password="toto")
658	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\tests\test_account.py:683:8
682	        self.client.logout()
683	        self.client.login(username=self.reseller.username, password="toto")
684	        self.assertTrue(self.reseller.can_access(self.reseller))

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\tests\test_account.py:705:12
704	        self.assertEqual(
705	            self.client.login(username="admin@test.com", password="toto"),
706	            True)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\tests\test_account.py:734:8
733	        self.client.logout()
734	        self.client.login(username="admin@test.com", password="toto")
735	        self.ajax_post(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '{PLAIN}toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\tests\test_account.py:769:13
768	        dom = models.Domain.objects.get(name="test.com")
769	        mb = factories.MailboxFactory(
770	            domain=dom, address="admin2",
771	            user__username="admin2@test.com", user__groups=("DomainAdmins", ),
772	            user__password="{PLAIN}toto")
773	        dom.add_admin(mb.user)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\tests\test_account.py:776:12
775	        self.assertTrue(
776	            self.client.login(username="admin@test.com", password="toto"))
777	        values = {

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\tests\test_domain.py:108:12
107	        self.assertFalse(
108	            self.client.login(username="admin@pouet.com", password="password"))
109	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'Toto1000'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\modoboa\admin\tests\test_domain.py:150:19
149	        """Test creation of a domain with a template and custom password."""
150	        password = "Toto1000"
151	        self.set_global_parameter("default_password", password, app="core")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\tests\test_import_.py:158:12
157	        self.assertTrue(
158	            self.client.login(username="user1@test.com", password="toto")
159	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\tests\test_import_.py:226:8
225	        self.client.logout()
226	        self.client.login(username="admin@test.com", password="toto")
227	        f = ContentFile(b"""

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\tests\test_import_.py:250:8
249	        self.client.logout()
250	        self.client.login(username="admin@test.com", password="toto")
251	        f = ContentFile(b"""

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\tests\test_import_.py:295:12
294	        self.assertTrue(
295	            self.client.login(username="admin@test.com", password="toto")
296	        )

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\modoboa\admin\tests\test_repair.py:28:8
27	        ret = management.call_command("modo", "repair", "--quiet")
28	        assert ret is None
29	        # assert it's fixed

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\modoboa\admin\tests\test_repair.py:41:8
40	        ret = management.call_command("modo", "repair", "--quiet", "--dry-run")
41	        assert ret is None
42	        # assert its not fixed

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\modoboa\admin\tests\test_repair.py:49:8
48	        ret = management.call_command("modo", "repair", "--quiet")
49	        assert ret is None
50	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\modoboa\admin\tests\test_repair.py:57:8
56	        ret = management.call_command("modo", "repair", "--quiet")
57	        assert ret is None
58	        self.assertTrue(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\admin\tests\test_user.py:20:8
19	        self.client.logout()
20	        self.client.login(username="user@test.com", password="toto")
21	        url = reverse("user_forward")

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b610_django_extra_used.html
   Location: .\modoboa\admin\views\identity.py:84:21
83	        if sort_order == "quota_value__bytes":
84	            mboxes = mboxes.extra(
85	                select={"quota_value__bytes": "admin_quota.bytes"},
86	                where=["admin_quota.username=%s" % where],
87	                tables=["admin_quota", "admin_domain"],
88	                order_by=["%s%s" % (sort_dir, sort_order)]
89	            )
90	        else:

--------------------------------------------------
>> Issue: [B610:django_extra_used] Use of extra potential SQL attack vector.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b610_django_extra_used.html
   Location: .\modoboa\admin\views\identity.py:101:21
100	                )
101	            mboxes = mboxes.extra(
102	                select={"quota_usage": select},
103	                where=["admin_quota.username=%s" % where],
104	                tables=["admin_quota", "admin_domain"],
105	                order_by=["%s%s" % (sort_dir, sort_order)]
106	            )
107	    else:

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'Toto1234'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\modoboa\core\api\v2\tests.py:128:4
127	
128	    def test_me_password(self, password_ko="Toto1234", password_ok="password"):
129	        url = reverse("v2:account-check-me-password")
130	        resp = self.client.post(url, {"password": password_ko}, format="json")
131	        self.assertEqual(resp.status_code, 400)
132	        resp = self.client.post(url, {"password": password_ok}, format="json")
133	        self.assertEqual(resp.status_code, 200)
134	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'Toto1234'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\modoboa\core\api\v2\tests.py:168:4
167	    @mock.patch("django_otp.plugins.otp_totp.models.TOTPDevice.verify_token")
168	    def test_tfa_setup_modify(self,
169	                              verify_mock,
170	                              password_ko="Toto1234",
171	                              password_ok="password"
172	                              ):
173	        user = models.User.objects.get(username="admin")
174	        user.totpdevice_set.create(name="Device")
175	
176	        url = reverse("v2:account-tfa-setup-check")
177	        data = {"pin_code": 1234}
178	        verify_mock.side_effect = [False]
179	        resp = self.client.post(url, data, format="json")
180	        self.assertEqual(resp.status_code, 400)
181	
182	        verify_mock.side_effect = [True]
183	        resp = self.client.post(url, data, format="json")
184	        self.assertEqual(resp.status_code, 200)
185	        self.assertIn("tokens", resp.json())
186	
187	        verify_mock.side_effect = [True]
188	        resp = self.client.post(url, data, format="json")
189	        self.assertEqual(resp.status_code, 400)
190	
191	        url_reset = reverse("v2:account-tfa-reset-codes")
192	        url_disable = reverse("v2:account-tfa-disable")
193	        data = {"password": password_ko}
194	        # Try regenerate TFA backup code with wrong password
195	        resp = self.client.post(url_reset, data, format="json")
196	        self.assertEqual(resp.status_code, 400)
197	        # Try disable with wrong password
198	        resp = self.client.post(url_disable, data, format="json")
199	        self.assertEqual(resp.status_code, 400)
200	
201	        # Test with password ok
202	        data = {"password": password_ok}
203	        # Try regenerate TFA backup codes with good password
204	        resp = self.client.post(url_reset, data, format="json")
205	        self.assertEqual(resp.status_code, 200)
206	        self.assertIn("tokens", resp.json())
207	
208	        # Try disable with good password
209	        resp = self.client.post(url_disable, data, format="json")
210	        self.assertEqual(resp.status_code, 200)
211	
212	        user.refresh_from_db()
213	        self.assertEqual(user.tfa_enabled, False)
214	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '123456'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\modoboa\core\api\v2\tests.py:429:19
428	        # Wrong Token
429	        token_ko = "123456"
430	        data = {"new_password1": "123456", "new_password2": "123456", "token": token_ko, "id": id_ok}

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\modoboa\core\api\v2\viewsets.py:82:24
81	            else:
82	                token = ""
83	        serializer = serializers.UserAPITokenSerializer({"token": str(token)})

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\modoboa\core\commands\deploy.py:9:0
8	import string
9	import subprocess
10	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\modoboa\core\commands\deploy.py:100:16
99	        if not self._verbose:
100	            p = subprocess.Popen(
101	                cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, cwd=cwd
102	            )
103	            output = p.communicate()

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\modoboa\core\commands\deploy.py:105:16
104	        else:
105	            p = subprocess.Popen(cmd, cwd=cwd)
106	            p.wait()

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'otp_device_id'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\modoboa\core\constants.py:115:23
114	
115	TFA_DEVICE_TOKEN_KEY = "otp_device_id"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '{PLAIN}toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\modoboa\core\factories.py:43:15
42	    email = factory.LazyAttribute(lambda a: a.username)
43	    password = "{PLAIN}toto"
44	

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\modoboa\core\management\commands\generate_postfix_maps.py:71:23
70	        with open(path, mode="rb") as fp:
71	            checksum = hashlib.md5(fp.read()).hexdigest()
72	        return checksum == self.__checksums[fname]["checksum"]

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\modoboa\core\management\commands\generate_postfix_maps.py:149:15
148	            fp.write(content)
149	        return hashlib.md5(force_bytes(content)).hexdigest()
150	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b311-random
   Location: .\modoboa\core\password_hashers\base.py:128:16
127	            salt = "".join(
128	                Random().sample(
129	                    string.ascii_letters +

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak MD5 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b324_hashlib.html
   Location: .\modoboa\core\password_hashers\base.py:150:14
149	    def _encrypt(self, clearvalue, salt=None):
150	        obj = hashlib.md5(force_bytes(clearvalue))
151	        return obj.hexdigest()

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\modoboa\core\templatetags\core_tags.py:173:11
172	    rule = field.form.visirules[field.html_name]
173	    return mark_safe(
174	        " data-visibility-field='{}' data-visibility-value='{}' "
175	        .format(rule["field"], rule["value"]))
176	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\modoboa\core\templatetags\core_tags.py:173:11
172	    rule = field.form.visirules[field.html_name]
173	    return mark_safe(
174	        " data-visibility-field='{}' data-visibility-value='{}' "
175	        .format(rule["field"], rule["value"]))
176	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\modoboa\core\templatetags\core_tags.py:252:11
251	
252	    return mark_safe("""
253	<script type="text/javascript">
254	    $(document).ready(function() {
255	        $('body').notify('%s', '%s', %s);
256	    });
257	</script>
258	""" % (level, text, timeout))
259	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\modoboa\core\templatetags\core_tags.py:252:11
251	
252	    return mark_safe("""
253	<script type="text/javascript">
254	    $(document).ready(function() {
255	        $('body').notify('%s', '%s', %s);
256	    });
257	</script>
258	""" % (level, text, timeout))
259	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\modoboa\core\tests\test_authentication.py:96:19
95	        username = "user@test.com"
96	        password = "toto"
97	        data = {"username": username, "password": password}

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\modoboa\core\tests\test_authentication.py:144:19
143	        username = "user@test.com"
144	        password = "toto"
145	        data = {"username": username, "password": password}

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\modoboa\core\tests\test_authentication.py:355:19
354	        username = "user@unknown.test"
355	        password = "toto"
356	        data = {"username": username, "password": password}

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\modoboa\core\tests\test_authentication.py:390:19
389	        username = "user@unknown.test"
390	        password = "toto"
391	        data = {"username": username, "password": password}

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\core\tests\test_core.py:55:12
54	        self.assertTrue(
55	            self.client.login(username="modoadmin", password="password"))
56	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '12345Toi'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\core\tests\test_core.py:143:12
142	        self.assertEqual(
143	            self.client.login(username="admin", password="12345Toi"), True
144	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\core\tests\test_core.py:146:12
145	        self.assertEqual(
146	            self.client.login(username="user@test.com", password="toto"), True
147	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'Toto1234'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\core\tests\test_core.py:181:12
180	        self.assertTrue(
181	            self.client.login(username="user@test.com", password="Toto1234")
182	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '12345Toi'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\core\tests\test_core.py:194:12
193	        self.assertEqual(
194	            self.client.login(username="admin", password="12345Toi"), False
195	        )

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\core\tests\test_core.py:232:8
231	        self.client.logout()
232	        self.client.login(username="user@test.com", password="toto")
233	        response = self.client.get(url, HTTP_X_REQUESTED_WITH="XMLHttpRequest")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'test'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\core\tests\test_ldap.py:112:8
111	        username = "testuser"
112	        self.client.login(username=username, password="test")
113	        self.check_created_user(username + "@example.com")

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b108_hardcoded_tmp_directory.html
   Location: .\modoboa\core\tests\test_views.py:95:27
94	    "maillog-logfile": "/var/log/mail.log",
95	    "maillog-rrd_rootdir": "/tmp",
96	    "maillog-greylist": False,
97	    "pdfcredentials-enabled_pdfcredentials": True,
98	    "pdfcredentials-storage_dir": "./",
99	    "pdfcredentials-delete_first_dl": True,
100	    "pdfcredentials-generate_at_creation": True,
101	    "pdfcredentials-title": "Modoboa",
102	    "pdfcredentials-webpanel_url": "local.host/",
103	    "pdfcredentials-custom_message": "test",
104	    "pdfcredentials-include_connection_settings": False,
105	    "pdfcredentials-smtp_server_address": "127.0.0.1",
106	    "pdfcredentials-smtp_server_port": 666,
107	    "pdfcredentials-smtp_connection_security": "starttls",
108	    "pdfcredentials-imap_server_address": "127.0.0.1",
109	    "pdfcredentials-imap_server_port": 667,
110	    "pdfcredentials-imap_connection_security": "starttls",
111	    "dmarc-enable_rlookups": False,
112	    "imap_migration-enabled_imapmigration": True,
113	    "imap_migration-max_sync_accounts": 2,
114	    "imap_migration-create_folders": True,
115	}
116	
117	
118	def announcement(sender, location, **kwargs):
119	    """Simpler handler."""
120	    return "This is an annoucement!"
121	
122	
123	class LoginTestCase(ModoTestCase):
124	    """Login page test cases."""
125	
126	    def test_announcements(self):
127	        """Check if announcements are displayed."""
128	        signals.get_announcements.connect(announcement)
129	        response = self.client.get(reverse("core:login"))
130	        self.assertEqual(response.status_code, 200)
131	        self.assertIn("This is an annoucement!", str(response.content))
132	
133	
134	class DashboardTestCase(ModoTestCase):
135	    """Dashboard tests."""
136	
137	    @classmethod
138	    def setUpTestData(cls):  # NOQA:N802
139	        """Create some data."""
140	        super(DashboardTestCase, cls).setUpTestData()
141	        cls.dadmin = factories.UserFactory(
142	            username="admin@test.com", groups=("DomainAdmins",)
143	        )
144	        cls.user = factories.UserFactory(
145	            username="user@test.com", groups=("SimpleUsers",)
146	        )
147	
148	    def test_access(self):
149	        """Load dashboard."""
150	        url = reverse("core:dashboard")
151	        response = self.client.get(url)
152	        self.assertEqual(response.status_code, 200)
153	        self.assertIn("Latest news", response.content.decode("utf-8"))
154	        self.client.logout()
155	        self.client.login(username=self.dadmin.username, password="toto")
156	        response = self.client.get(url)
157	        self.assertEqual(response.status_code, 200)
158	        self.assertIn("Latest news", response.content.decode("utf-8"))
159	        self.client.logout()
160	        self.client.login(username=self.user.username, password="toto")
161	        response = self.client.get(url)
162	        self.assertEqual(response.status_code, 403)
163	
164	    def test_custom_news(self):
165	        """Check that custom news are displayed."""
166	        url = reverse("core:dashboard")
167	        response = self.client.get(url)
168	        self.assertContains(response, "https://modoboa.org")
169	
170	        self.set_global_parameter(
171	            "rss_feed_url", "https://www.djangoproject.com/rss/weblog/")
172	        self.client.force_login(self.dadmin)
173	        response = self.client.get(url)
174	        self.assertContains(response, "djangoproject")
175	
176	    def test_features_visibility(self):
177	        """Hide or not features widget."""
178	        url = reverse("core:dashboard")
179	        response = self.client.get(url)
180	        self.assertContains(response, "Features looking for sponsoring")
181	
182	        self.client.force_login(self.dadmin)
183	        response = self.client.get(url)
184	        self.assertContains(response, "Features looking for sponsoring")
185	
186	        self.set_global_parameter("hide_features_widget", True)
187	        response = self.client.get(url)
188	        self.assertNotContains(response, "Features looking for sponsoring")
189	
190	    @override_settings(DISABLE_DASHBOARD_EXTERNAL_QUERIES=False)
191	    def test_enable_dashboard_external_queries(self):
192	        """Load dashboard with DISABLE_DASHBOARD_EXTERNAL_QUERIES = False"""
193	        url = reverse("core:dashboard")
194	        response = self.client.get(url)
195	        self.assertContains(response, 'href="https://modoboa.org/en/weblog/')
196	
197	    @override_settings(DISABLE_DASHBOARD_EXTERNAL_QUERIES=True)
198	    def test_disable_dashboard_external_queries(self):

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\core\tests\test_views.py:155:8
154	        self.client.logout()
155	        self.client.login(username=self.dadmin.username, password="toto")
156	        response = self.client.get(url)

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\core\tests\test_views.py:160:8
159	        self.client.logout()
160	        self.client.login(username=self.user.username, password="toto")
161	        response = self.client.get(url)

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\modoboa\core\tests\test_viewsets.py:22:4
21	    @mock.patch("django_otp.plugins.otp_totp.models.TOTPDevice.verify_token")
22	    def test_tfa_setup_process(self, verify_mock, password_ok="password"):
23	        admin = models.User.objects.get(username="admin")
24	        self.client.force_login(admin)
25	
26	        # First, check if we're in the initial state
27	        security_url = reverse("core:user_security")
28	        response = self.client.get(security_url)
29	        self.assertIn("not yet activated for", response.json()["content"])
30	
31	        # Start setup sequence
32	        url = reverse("v1:account-tfa-setup")
33	        response = self.client.post(url)
34	        self.assertEqual(response.status_code, 200)
35	
36	        # Check if security page is up-to-date
37	        security_url = reverse("core:user_security")
38	        response = self.client.get(security_url)
39	        self.assertIn("FreeOTP", response.json()["content"])
40	
41	        # Continue setup sequence
42	        verify_mock.side_effect = [True]
43	        url = reverse("v1:account-tfa-setup-check")
44	        data = {"pin_code": "1234"}
45	        response = self.client.post(url, data, format="json")
46	        self.assertEqual(response.status_code, 200)
47	
48	        # Display recovery tokens
49	        security_url = reverse("core:user_security")
50	        response = self.client.get(security_url)
51	
52	        self.assertIn("recovery codes", response.json()["content"])
53	        admin.refresh_from_db()
54	        self.assertTrue(admin.tfa_enabled)
55	        device = admin.staticdevice_set.first()
56	        self.assertIsNot(device, None)
57	        self.assertEqual(device.token_set.count(), 10)
58	
59	        # Try to disable TFA auth
60	        url = reverse("api:account-tfa-disable")
61	        data = {"password": password_ok}
62	        response = self.client.post(url, data, format="json")
63	        self.assertEqual(response.status_code, 200)
64	        self.assertFalse(admin.totpdevice_set.exists())
65	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\modoboa\core\tests\test_viewsets.py:66:4
65	
66	    def test_tfa_reset_codes(self, password_ok="password"):
67	        admin = models.User.objects.get(username="admin")
68	        self.client.force_login(admin)
69	        url = reverse("api:account-tfa-reset-codes")
70	        data = {"password": password_ok}
71	        response = self.client.post(url, data, format="json")
72	        self.assertEqual(response.status_code, 403)
73	
74	        device = admin.staticdevice_set.create(name="Device")
75	        response = self.client.post(url, data, format="json")
76	        self.assertEqual(response.status_code, 200)
77	        self.assertEqual(device.token_set.count(), 10)

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\modoboa\core\views\dashboard.py:65:31
64	                try:
65	                    response = requests.get(url)
66	                except RequestException:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\modoboa\dmarc\templatetags\dmarc_tags.py:28:11
27	        parts = (current[0], int(current[1]) + 1 )
28	    return mark_safe("{}-{}".format(parts[0], parts[1]))
29	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\modoboa\dmarc\templatetags\dmarc_tags.py:28:11
27	        parts = (current[0], int(current[1]) + 1 )
28	    return mark_safe("{}-{}".format(parts[0], parts[1]))
29	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\modoboa\dmarc\templatetags\dmarc_tags.py:50:11
49	        parts = (current[0], int(current[1]) - 1 )
50	    return mark_safe("{}-{}".format(parts[0], parts[1]))
51	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\modoboa\dmarc\templatetags\dmarc_tags.py:50:11
49	        parts = (current[0], int(current[1]) - 1 )
50	    return mark_safe("{}-{}".format(parts[0], parts[1]))
51	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b108_hardcoded_tmp_directory.html
   Location: .\modoboa\imap_migration\management\commands\generate_offlineimap_config.py:23:32
22	        parser.add_argument(
23	            "--output", default="/tmp/offlineimap.conf",
24	            help="Path of the generated file")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'Toto1234'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\imap_migration\tests.py:33:24
32	            user__username="user@test.com")
33	        cls.migration = factories.MigrationFactory(
34	            password="Toto1234", mailbox=cls.mb, username="user@test.com")
35	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '{PLAIN}toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\imap_migration\tests.py:95:8
94	        """Check potential conflicts."""
95	        core_factories.UserFactory(
96	            username="admin2@test.com", groups=("DomainAdmins", ),
97	            password="{PLAIN}toto"
98	        )
99	        domain = admin_models.Domain.objects.get(name="test.com")

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\modoboa\lib\api_client.py:33:19
32	        try:
33	            resp = requests.get(url, params=params)
34	        except RequestException as err:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\modoboa\lib\api_client.py:69:27
68	            try:
69	                response = requests.post(url, data=data)
70	            except RequestException as err:

--------------------------------------------------
>> Issue: [B113:request_without_timeout] Requests call without timeout
   Severity: Medium   Confidence: Low
   CWE: CWE-400 (https://cwe.mitre.org/data/definitions/400.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b113_request_without_timeout.html
   Location: .\modoboa\lib\api_client.py:84:23
83	        try:
84	            response = requests.put(url, data=data)
85	        except RequestException as err:

--------------------------------------------------
>> Issue: [B410:blacklist] Using lxml.html to parse untrusted XML data is known to be vulnerable to XML attacks. Replace lxml.html with the equivalent defusedxml package.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b410-import-lxml
   Location: .\modoboa\lib\email_utils.py:10:0
9	import chardet
10	import lxml.html
11	from lxml.html import defs

--------------------------------------------------
>> Issue: [B410:blacklist] Using defs to parse untrusted XML data is known to be vulnerable to XML attacks. Replace defs with the equivalent defusedxml package.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b410-import-lxml
   Location: .\modoboa\lib\email_utils.py:11:0
10	import lxml.html
11	from lxml.html import defs
12	from lxml.html.clean import Cleaner

--------------------------------------------------
>> Issue: [B410:blacklist] Using Cleaner to parse untrusted XML data is known to be vulnerable to XML attacks. Replace Cleaner with the equivalent defusedxml package.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b410-import-lxml
   Location: .\modoboa\lib\email_utils.py:12:0
11	from lxml.html import defs
12	from lxml.html.clean import Cleaner
13	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\modoboa\lib\email_utils.py:291:4
290	    """Split an e-mail address into local part and domain."""
291	    assert isinstance(address, str),\
292	        "address should be of type str"
293	    if "@" not in address:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\modoboa\lib\email_utils.py:303:4
302	    """Split a local part into local part and extension."""
303	    assert isinstance(local_part, str),\
304	        "local_part should be of type str"
305	    assert isinstance(delimiter, str) or delimiter is None,\

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\modoboa\lib\email_utils.py:305:4
304	        "local_part should be of type str"
305	    assert isinstance(delimiter, str) or delimiter is None,\
306	        "delimiter should be of type str"
307	    extension = None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\modoboa\lib\email_utils.py:348:4
347	    """Try to decode the given string."""
348	    assert isinstance(value_bytes, bytes),\
349	        "value_bytes should be of type bytes"
350	    if len(value_bytes) == 0:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\modoboa\lib\sysutils.py:10:0
9	import re
10	import subprocess
11	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b603_subprocess_without_shell_equals_true.html
   Location: .\modoboa\lib\sysutils.py:36:14
35	        kwargs.update(stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
36	    process = subprocess.Popen(cmd, **kwargs)
37	    if pinput or capture_output:

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\modoboa\lib\templatetags\form_tags.py:24:11
23	        ret += "%s\n" % render_field(field)
24	    return mark_safe(ret)
25	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\modoboa\lib\templatetags\form_tags.py:24:11
23	        ret += "%s\n" % render_field(field)
24	    return mark_safe(ret)
25	

--------------------------------------------------
>> Issue: [B703:django_mark_safe] Potential XSS on mark_safe function.
   Severity: Medium   Confidence: High
   CWE: CWE-80 (https://cwe.mitre.org/data/definitions/80.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b703_django_mark_safe.html
   Location: .\modoboa\lib\templatetags\lib_tags.py:27:11
26	def tolist(values):
27	    return mark_safe("[%s]" % ",".join(['"%s"' % v for v in values]))
28	

--------------------------------------------------
>> Issue: [B308:blacklist] Use of mark_safe() may expose cross-site scripting vulnerabilities and should be reviewed.
   Severity: Medium   Confidence: High
   CWE: CWE-79 (https://cwe.mitre.org/data/definitions/79.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_calls.html#b308-mark-safe
   Location: .\modoboa\lib\templatetags\lib_tags.py:27:11
26	def tolist(values):
27	    return mark_safe("[%s]" % ",".join(['"%s"' % v for v in values]))
28	

--------------------------------------------------
>> Issue: [B107:hardcoded_password_default] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b107_hardcoded_password_default.html
   Location: .\modoboa\lib\tests\__init__.py:68:4
67	
68	    def setUp(self, username="admin", password="password"):
69	        """Initiate test context."""
70	        self.assertEqual(
71	            self.client.login(username=username, password=password), True)
72	        self.workdir = tempfile.mkdtemp()
73	        self.set_global_parameter("storage_dir", self.workdir, app="pdfcredentials")
74	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '!8o(-dbbl3e+*bh7nx-^xysdt)1gso*%@4ze4-9_9o+i&amp;t--u_'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\lib\tests\test_cryptutils.py:9:1
8	
9	@override_settings(SECRET_KEY="!8o(-dbbl3e+*bh7nx-^xysdt)1gso*%@4ze4-9_9o+i&amp"
10	                              ";t--u_")
11	class CryptUtilsTest(SimpleTestCase):

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\modoboa\lib\tests\test_email_utils.py:20:8
19	        message_path = os.path.join(SAMPLES_DIR, "%s-input.txt" % self.mailid)
20	        assert os.path.isfile(message_path), "%s does not exist." % message_path
21	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b101_assert_used.html
   Location: .\modoboa\lib\tests\test_email_utils.py:43:8
42	                                    "%s-output-%s.txt" % (message_id, ext))
43	        assert os.path.isfile(message_path), "%s does not exist." % message_path
44	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'password'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\limits\tests\test_user_limits.py:367:8
366	        self.client.logout()
367	        self.client.login(username="admin", password="password")
368	        self.ajax_delete(

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'Toto1234'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\limits\tests\test_user_limits.py:425:8
424	        self.client.logout()
425	        self.client.login(username="admin1@domain.tld", password="Toto1234")
426	        self._create_account("user1@domain.tld")

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: 'toto'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b106_hardcoded_password_funcarg.html
   Location: .\modoboa\limits\tests\test_user_limits.py:430:8
429	        self.client.logout()
430	        self.client.login(username="reseller", password="toto")
431	        # Delete the admin -> resources should go back to the

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b108_hardcoded_tmp_directory.html
   Location: .\modoboa\maillog\api\v2\serializers.py:84:48
83	    logfile = serializers.CharField(default="/var/log/mail.log")
84	    rrd_rootdir = serializers.CharField(default="/tmp/modoboa")
85	    greylist = serializers.BooleanField(default=False)

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b108_hardcoded_tmp_directory.html
   Location: .\modoboa\maillog\forms.py:31:16
30	        label=gettext_lazy("Directory to store RRD files"),
31	        initial="/tmp/modoboa",
32	        help_text=gettext_lazy(

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: .\modoboa\pdfcredentials\tests\test_lib.py:17:0
16	import modoboa.pdfcredentials.lib as lib
17	from subprocess import Popen, PIPE
18	

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\modoboa\pdfcredentials\tests\test_lib.py:67:22
66	                      Popen("/usr/bin/file -b --mime -",
67	                            shell=True,
68	                            stdout=PIPE,
69	                            stdin=PIPE)
70	                      .communicate(filebuff)[0].strip().decode()
71	                      )

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True seems safe, but may be changed in the future, consider rewriting without shell
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: .\modoboa\pdfcredentials\tests\test_lib.py:75:16
74	                Popen("/usr/bin/file -b --mime -",
75	                      shell=True,
76	                      stdout=PIPE,
77	                      stdin=PIPE).communicate(file.read(1024))[0].strip()

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '!8o(-dbbl3e+*bh7nx-^xysdt)1gso*%@4ze4-9_9o+i&amp;t--u_'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b105_hardcoded_password_string.html
   Location: .\test_project\test_project\settings.py:25:13
24	# SECURITY WARNING: keep the secret key used in production secret!
25	SECRET_KEY = '!8o(-dbbl3e+*bh7nx-^xysdt)1gso*%@4ze4-9_9o+i&amp;t--u_'
26	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/1.7.7/plugins/b108_hardcoded_tmp_directory.html
   Location: .\test_project\test_project\settings.py:231:24
230	
231	PID_FILE_STORAGE_PATH = '/tmp'
232	

--------------------------------------------------

Code scanned:
	Total lines of code: 32891
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 73
		Medium: 28
		High: 4
	Total issues (by confidence):
		Undefined: 0
		Low: 4
		Medium: 59
		High: 42
Files skipped (0):
