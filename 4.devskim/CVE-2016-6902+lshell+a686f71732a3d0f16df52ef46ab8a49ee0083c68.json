{"$schema":"https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json","version":"2.1.0","runs":[{"tool":{"driver":{"name":"devskim","fullName":"Microsoft DevSkim Command Line Interface","version":"1.0.23+607c9a5eda","informationUri":"https://github.com/microsoft/DevSkim/","rules":[{"id":"DS189424","name":"ReviewEvalForUntrustedData","fullDescription":{"text":"Review eval for untrusted data: If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an eval statement it can allow an attacker to inject their own code."},"help":{"text":"Edit the eval so that no untrusted data is included. If untrusted data is absolutely necessary a great deal of care should be taken to ensure it is properly escaped so that it cannot be executed. This is not as simple as just escaping quotes.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md) for guidance on this issue."},"shortDescription":{"text":"If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an eval statement it can allow an attacker to inject their own code."},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}}]}},"versionControlProvenance":[{"repositoryUri":"https://github.com/ghantoos/lshell","revisionId":"e72dfcd1f258193f9aaea3591ecbdaed207661a0","branch":"(no branch)"}],"results":[{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"lshell\\checkconfig.py"},"region":{"startLine":521,"startColumn":32,"endLine":521,"endColumn":59,"charOffset":20539,"charLength":27,"snippet":{"text":"eval(self.conf_raw['path'])","rendered":{"text":"eval(self.conf_raw['path'])","markdown":"`eval(self.conf_raw['path'])`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"lshell\\checkconfig.py"},"region":{"startLine":413,"startColumn":24,"endLine":420,"endColumn":34,"charOffset":16248,"charLength":253,"snippet":{"text":"eval(value)\r\n            return evaluated\r\n        except SyntaxError:\r\n            self.log.critical('CONF: Incomplete %s field in configuration file'\r\n                              % info)\r\n            sys.exit(1)\r\n\r\n    def check_user_integrity(self)","rendered":{"text":"eval(value)\r\n            return evaluated\r\n        except SyntaxError:\r\n            self.log.critical('CONF: Incomplete %s field in configuration file'\r\n                              % info)\r\n            sys.exit(1)\r\n\r\n    def check_user_integrity(self)","markdown":"`eval(value)\r\n            return evaluated\r\n        except SyntaxError:\r\n            self.log.critical('CONF: Incomplete %s field in configuration file'\r\n                              % info)\r\n            sys.exit(1)\r\n\r\n    def check_user_integrity(self)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"lshell\\checkconfig.py"},"region":{"startLine":344,"startColumn":44,"endLine":348,"endColumn":66,"charOffset":13322,"charLength":265,"snippet":{"text":"eval(stuff)) is list:\r\n                            self.conf_raw.update({key: stuff})\r\n                # case allowed is set to 'all'\r\n                elif key == 'allowed' and split[0] == \"'all'\":\r\n                    self.conf_raw.update({key: self.expand_all()})","rendered":{"text":"eval(stuff)) is list:\r\n                            self.conf_raw.update({key: stuff})\r\n                # case allowed is set to 'all'\r\n                elif key == 'allowed' and split[0] == \"'all'\":\r\n                    self.conf_raw.update({key: self.expand_all()})","markdown":"`eval(stuff)) is list:\r\n                            self.conf_raw.update({key: stuff})\r\n                # case allowed is set to 'all'\r\n                elif key == 'allowed' and split[0] == \"'all'\":\r\n                    self.conf_raw.update({key: self.expand_all()})`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"lshell\\checkconfig.py"},"region":{"startLine":338,"startColumn":40,"endLine":340,"endColumn":70,"charOffset":12931,"charLength":146,"snippet":{"text":"eval(stuff):\r\n                                for item in glob.glob(path):\r\n                                    liste[0] += os.path.realpath(item)","rendered":{"text":"eval(stuff):\r\n                                for item in glob.glob(path):\r\n                                    liste[0] += os.path.realpath(item)","markdown":"`eval(stuff):\r\n                                for item in glob.glob(path):\r\n                                    liste[0] += os.path.realpath(item)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"lshell\\checkconfig.py"},"region":{"startLine":220,"startColumn":30,"endLine":223,"endColumn":41,"charOffset":7758,"charLength":150,"snippet":{"text":"eval(self.conf['logfilename'])\r\n            except:\r\n                logfilename = self.conf['logfilename']\r\n            currentime = time.localtime()","rendered":{"text":"eval(self.conf['logfilename'])\r\n            except:\r\n                logfilename = self.conf['logfilename']\r\n            currentime = time.localtime()","markdown":"`eval(self.conf['logfilename'])\r\n            except:\r\n                logfilename = self.conf['logfilename']\r\n            currentime = time.localtime()`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"lshell\\checkconfig.py"},"region":{"startLine":171,"startColumn":26,"endLine":171,"endColumn":55,"charOffset":5875,"charLength":29,"snippet":{"text":"eval(self.conf['syslogname'])","rendered":{"text":"eval(self.conf['syslogname'])","markdown":"`eval(self.conf['syslogname'])`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}}],"columnKind":"utf16CodeUnits"}]}
