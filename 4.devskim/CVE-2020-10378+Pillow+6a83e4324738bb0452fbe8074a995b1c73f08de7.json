{"$schema":"https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json","version":"2.1.0","runs":[{"tool":{"driver":{"name":"devskim","fullName":"Microsoft DevSkim Command Line Interface","version":"1.0.23+607c9a5eda","informationUri":"https://github.com/microsoft/DevSkim/","rules":[{"id":"DS137138","name":"InsecureUrl","fullDescription":{"text":"Insecure URL: An HTTP-based URL without TLS was detected."},"help":{"text":"Update to an HTTPS-based URL if possible.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS137138.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS137138.md) for guidance on this issue."},"shortDescription":{"text":"An HTTP-based URL without TLS was detected."},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS137138.md","properties":{"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"defaultConfiguration":{"level":"warning"}},{"id":"DS148264","name":"DoNotUseWeaknoncryptographicRandomNumberGenerators","fullDescription":{"text":"Do not use weak/non-cryptographic random number generators: Use cryptographic random numbers generators for anything even close to a security function."},"help":{"text":"Replacements depend on language.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS148264.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS148264.md) for guidance on this issue."},"shortDescription":{"text":"Use cryptographic random numbers generators for anything even close to a security function."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS148264.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS140021","name":"ProblematicCFunctionDetectedStrlen","fullDescription":{"text":"Problematic C function detected (strlen): If a string is missing a null terminator, strlen will read past the end of the buffer"},"help":{"text":"In instances where you know the maximum size of a string's buffer, use strlen_s or strnlen to prevent over-reading","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS140021.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS140021.md) for guidance on this issue."},"shortDescription":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS140021.md","properties":{"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"id":"DS161085","name":"ProblematicCFunctionDetectedMalloc","fullDescription":{"text":"Problematic C function detected (malloc): If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"help":{"text":"calloc handles the most common integer math in memory allocation (# of elements * their size) with error handling to prevent overflows in most implementations, and zeros out memory","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS161085.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS161085.md) for guidance on this issue."},"shortDescription":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS161085.md","properties":{"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"id":"DS172411","name":"ReviewSettimeoutForUntrustedData","fullDescription":{"text":"Review setTimeout for untrusted data: If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an setTimeout statement it can allow an attacker to inject their own code."},"help":{"text":"Edit the setTimeout so that no untrusted data is included. If untrusted data is absolutely necessary a great deal of care should be taken to ensure it is properly escaped so that it cannot be executed. This is not as simple as just escaping quotes.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS172411.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS172411.md) for guidance on this issue."},"shortDescription":{"text":"If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an setTimeout statement it can allow an attacker to inject their own code."},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS172411.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS162092","name":"DoNotLeaveDebugCodeInProduction","fullDescription":{"text":"Do not leave debug code in production: Accessing localhost could indicate debug code, or could hinder scaling."},"help":{"text":"Accessing localhost could indicate debug code, or could hinder scaling.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS162092.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS162092.md) for guidance on this issue."},"shortDescription":{"text":"Accessing localhost could indicate debug code, or could hinder scaling."},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS162092.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS425000","name":"DoNotDeserializeUntrustedData","fullDescription":{"text":"Do not deserialize untrusted data.: Deserializing attacker-supplied data using `pickle` or `cPickle` can result in code execution."},"help":{"text":"Either add integrity protection or use a data format like JSON.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS425000.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS425000.md) for guidance on this issue."},"shortDescription":{"text":"Deserializing attacker-supplied data using `pickle` or `cPickle` can result in code execution."},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS425000.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS185832","name":"BannedCFunctionDetectedStrcpy","fullDescription":{"text":"Banned C function detected (strcpy): strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"help":{"text":"Use strcpy_s or strlcpy if possible. If no safe function is viable, strcpy/strncpy should be proceeded by conditional checks to verify that the source string will fit in the destination with a null termnator.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS185832.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS185832.md) for guidance on this issue."},"shortDescription":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS185832.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS154189","name":"BannedCFunctionDetected","fullDescription":{"text":"Banned C function detected: These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'."},"help":{"text":"These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS154189.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS154189.md) for guidance on this issue."},"shortDescription":{"text":"These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'."},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS154189.md","properties":{"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"defaultConfiguration":{"level":"warning"}},{"id":"DS121708","name":"ProblematicCFunctionDetectedMemcpy","fullDescription":{"text":"Problematic C function detected (memcpy): There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"help":{"text":"Use memcpy_s if possible.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS121708.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS121708.md) for guidance on this issue."},"shortDescription":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS121708.md","properties":{"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"id":"DS111237","name":"BannedCFunctionDetectedStrncpy","fullDescription":{"text":"Banned C function detected (strncpy): strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"help":{"text":"Use strcpy_s or strlcpy if possible. If no safe function is viable, strcpy/strncpy should be proceeded by conditional checks to verify tha that the source string will fit in the destination with a null termnator.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS111237.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS111237.md) for guidance on this issue."},"shortDescription":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS111237.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS176209","name":"SuspiciousComment","fullDescription":{"text":"Suspicious comment: A \"TODO\" or similar was left in source code, possibly indicating incomplete functionality"},"help":{"text":"A \"TODO\" or similar was left in source code, possibly indicating incomplete functionality","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS176209.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS176209.md) for guidance on this issue."},"shortDescription":{"text":"A \"TODO\" or similar was left in source code, possibly indicating incomplete functionality"},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS176209.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS189424","name":"ReviewEvalForUntrustedData","fullDescription":{"text":"Review eval for untrusted data: If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an eval statement it can allow an attacker to inject their own code."},"help":{"text":"Edit the eval so that no untrusted data is included. If untrusted data is absolutely necessary a great deal of care should be taken to ensure it is properly escaped so that it cannot be executed. This is not as simple as just escaping quotes.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md) for guidance on this issue."},"shortDescription":{"text":"If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an eval statement it can allow an attacker to inject their own code."},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}}]}},"versionControlProvenance":[{"repositoryUri":"https://github.com/python-imaging/Pillow","revisionId":"124f4bb591e16212605d0e41c413ed53e242cba2","branch":"(no branch)"}],"results":[{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\WalImageFile.py"},"region":{"startLine":39,"startColumn":6,"endLine":39,"endColumn":11,"charOffset":1028,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\TiffTags.py"},"region":{"startLine":182,"startColumn":6,"endLine":182,"endColumn":11,"charOffset":5740,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\TiffImagePlugin.py"},"region":{"startLine":1865,"startColumn":65,"endLine":1865,"endColumn":69,"charOffset":67829,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\TiffImagePlugin.py"},"region":{"startLine":792,"startColumn":10,"endLine":792,"endColumn":15,"charOffset":29285,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PixarImagePlugin.py"},"region":{"startLine":59,"startColumn":10,"endLine":59,"endColumn":15,"charOffset":1359,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PdfParser.py"},"region":{"startLine":569,"startColumn":14,"endLine":569,"endColumn":18,"charOffset":18872,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PdfImagePlugin.py"},"region":{"startLine":163,"startColumn":22,"endLine":163,"endColumn":27,"charOffset":5062,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PdfImagePlugin.py"},"region":{"startLine":118,"startColumn":14,"endLine":118,"endColumn":19,"charOffset":3294,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\SpiderImagePlugin.py"},"region":{"startLine":152,"startColumn":31,"endLine":152,"endColumn":36,"charOffset":4677,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PcxImagePlugin.py"},"region":{"startLine":88,"startColumn":14,"endLine":88,"endColumn":19,"charOffset":2404,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Storage.c"},"region":{"startLine":479,"startColumn":29,"endLine":479,"endColumn":38,"charOffset":14612,"charLength":9,"snippet":{"text":"malloc(1)","rendered":{"text":"malloc(1)","markdown":"`malloc(1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Storage.c"},"replacements":[{"deletedRegion":{"charOffset":14612,"charLength":9},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Storage.c"},"region":{"startLine":344,"startColumn":24,"endLine":344,"endColumn":46,"charOffset":10566,"charLength":22,"snippet":{"text":"malloc(requested_size)","rendered":{"text":"malloc(requested_size)","markdown":"`malloc(requested_size)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Storage.c"},"replacements":[{"deletedRegion":{"charOffset":10566,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Storage.c"},"region":{"startLine":211,"startColumn":4,"endLine":211,"endColumn":26,"charOffset":6903,"charLength":22,"snippet":{"text":"strcpy(im->mode, mode)","rendered":{"text":"strcpy(im->mode, mode)","markdown":"`strcpy(im->mode, mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Storage.c"},"replacements":[{"deletedRegion":{"charOffset":6903,"charLength":22},"insertedContent":{"text":"strcpy_s(im->mode, <size of im->mode>,  mode)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Storage.c"},"replacements":[{"deletedRegion":{"charOffset":6903,"charLength":22},"insertedContent":{"text":"strlcpy(im->mode,  mode, <size of im->mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImtImagePlugin.py"},"region":{"startLine":66,"startColumn":18,"endLine":66,"endColumn":23,"charOffset":1405,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImImagePlugin.py"},"region":{"startLine":249,"startColumn":31,"endLine":249,"endColumn":36,"charOffset":7244,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImImagePlugin.py"},"region":{"startLine":153,"startColumn":14,"endLine":153,"endColumn":19,"charOffset":3935,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\GifImagePlugin.py"},"region":{"startLine":86,"startColumn":31,"endLine":86,"endColumn":36,"charOffset":2520,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PcdImagePlugin.py"},"region":{"startLine":49,"startColumn":33,"endLine":49,"endColumn":38,"charOffset":1129,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PSDraw.py"},"region":{"startLine":45,"startColumn":10,"endLine":45,"endColumn":15,"charOffset":1090,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHeap.c"},"region":{"startLine":142,"startColumn":5,"endLine":142,"endColumn":24,"charOffset":3053,"charLength":19,"snippet":{"text":"malloc(sizeof(Heap)","rendered":{"text":"malloc(sizeof(Heap)","markdown":"`malloc(sizeof(Heap)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantHeap.c"},"replacements":[{"deletedRegion":{"charOffset":3053,"charLength":19},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHeap.c"},"region":{"startLine":125,"startColumn":25,"endLine":125,"endColumn":31,"charOffset":2716,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHeap.c"},"region":{"startLine":105,"startColumn":25,"endLine":105,"endColumn":31,"charOffset":2278,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHeap.c"},"region":{"startLine":74,"startColumn":9,"endLine":74,"endColumn":15,"charOffset":1677,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHeap.c"},"region":{"startLine":70,"startColumn":9,"endLine":70,"endColumn":15,"charOffset":1538,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHeap.c"},"region":{"startLine":58,"startColumn":3,"endLine":58,"endColumn":40,"charOffset":1237,"charLength":37,"snippet":{"text":"memcpy(newheap,h->heap,sizeof(void *)","rendered":{"text":"memcpy(newheap,h->heap,sizeof(void *)","markdown":"`memcpy(newheap,h->heap,sizeof(void *)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantHeap.c"},"replacements":[{"deletedRegion":{"charOffset":1237,"charLength":37},"insertedContent":{"text":"memcpy_s(newheap, <size of newheap>, h->heap, sizeof(void *)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PsdImagePlugin.py"},"region":{"startLine":32,"startColumn":25,"endLine":32,"endColumn":30,"charOffset":786,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\SgiRleDecode.c"},"region":{"startLine":190,"startColumn":15,"endLine":190,"endColumn":23,"charOffset":5292,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\SgiRleDecode.c"},"region":{"startLine":112,"startColumn":10,"endLine":112,"endColumn":30,"charOffset":2456,"charLength":20,"snippet":{"text":"malloc(sizeof(UINT8)","rendered":{"text":"malloc(sizeof(UINT8)","markdown":"`malloc(sizeof(UINT8)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\SgiRleDecode.c"},"replacements":[{"deletedRegion":{"charOffset":2456,"charLength":20},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\SgiRleDecode.c"},"region":{"startLine":88,"startColumn":16,"endLine":88,"endColumn":36,"charOffset":1924,"charLength":20,"snippet":{"text":"memcpy(dest, src, 2)","rendered":{"text":"memcpy(dest, src, 2)","markdown":"`memcpy(dest, src, 2)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\SgiRleDecode.c"},"replacements":[{"deletedRegion":{"charOffset":1924,"charLength":20},"insertedContent":{"text":"memcpy_s(dest, <size of dest>,  src,  2)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\SgiRleDecode.c"},"region":{"startLine":81,"startColumn":16,"endLine":81,"endColumn":36,"charOffset":1753,"charLength":20,"snippet":{"text":"memcpy(dest, src, 2)","rendered":{"text":"memcpy(dest, src, 2)","markdown":"`memcpy(dest, src, 2)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\SgiRleDecode.c"},"replacements":[{"deletedRegion":{"charOffset":1753,"charLength":20},"insertedContent":{"text":"memcpy_s(dest, <size of dest>,  src,  2)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\Tk\\tkImaging.c"},"region":{"startLine":242,"startColumn":8,"endLine":242,"endColumn":15,"charOffset":7218,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\Tk\\tkImaging.c"},"region":{"startLine":65,"startColumn":7,"endLine":65,"endColumn":12,"charOffset":2060,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\MspImagePlugin.py"},"region":{"startLine":177,"startColumn":29,"endLine":177,"endColumn":34,"charOffset":5332,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"region":{"startLine":165,"startColumn":23,"endLine":165,"endColumn":31,"charOffset":5413,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"region":{"startLine":55,"startColumn":34,"endLine":55,"endColumn":56,"charOffset":1525,"charLength":22,"snippet":{"text":"malloc(state->bytes+1)","rendered":{"text":"malloc(state->bytes+1)","markdown":"`malloc(state->bytes+1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"replacements":[{"deletedRegion":{"charOffset":1525,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"region":{"startLine":54,"startColumn":36,"endLine":54,"endColumn":58,"charOffset":1466,"charLength":22,"snippet":{"text":"malloc(state->bytes+1)","rendered":{"text":"malloc(state->bytes+1)","markdown":"`malloc(state->bytes+1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"replacements":[{"deletedRegion":{"charOffset":1466,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"region":{"startLine":53,"startColumn":31,"endLine":53,"endColumn":53,"charOffset":1405,"charLength":22,"snippet":{"text":"malloc(state->bytes+1)","rendered":{"text":"malloc(state->bytes+1)","markdown":"`malloc(state->bytes+1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"replacements":[{"deletedRegion":{"charOffset":1405,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"region":{"startLine":52,"startColumn":34,"endLine":52,"endColumn":56,"charOffset":1349,"charLength":22,"snippet":{"text":"malloc(state->bytes+1)","rendered":{"text":"malloc(state->bytes+1)","markdown":"`malloc(state->bytes+1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"replacements":[{"deletedRegion":{"charOffset":1349,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"region":{"startLine":51,"startColumn":37,"endLine":51,"endColumn":59,"charOffset":1290,"charLength":22,"snippet":{"text":"malloc(state->bytes+1)","rendered":{"text":"malloc(state->bytes+1)","markdown":"`malloc(state->bytes+1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"replacements":[{"deletedRegion":{"charOffset":1290,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"region":{"startLine":50,"startColumn":33,"endLine":50,"endColumn":55,"charOffset":1228,"charLength":22,"snippet":{"text":"malloc(state->bytes+1)","rendered":{"text":"malloc(state->bytes+1)","markdown":"`malloc(state->bytes+1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"replacements":[{"deletedRegion":{"charOffset":1228,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"region":{"startLine":208,"startColumn":5,"endLine":208,"endColumn":28,"charOffset":5016,"charLength":23,"snippet":{"text":"malloc(sizeof(HashNode)","rendered":{"text":"malloc(sizeof(HashNode)","markdown":"`malloc(sizeof(HashNode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"replacements":[{"deletedRegion":{"charOffset":5016,"charLength":23},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"region":{"startLine":171,"startColumn":8,"endLine":171,"endColumn":31,"charOffset":4103,"charLength":23,"snippet":{"text":"malloc(sizeof(HashNode)","rendered":{"text":"malloc(sizeof(HashNode)","markdown":"`malloc(sizeof(HashNode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"replacements":[{"deletedRegion":{"charOffset":4103,"charLength":23},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"region":{"startLine":86,"startColumn":12,"endLine":86,"endColumn":37,"charOffset":1968,"charLength":25,"snippet":{"text":"malloc(sizeof(HashNode *)","rendered":{"text":"malloc(sizeof(HashNode *)","markdown":"`malloc(sizeof(HashNode *)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"replacements":[{"deletedRegion":{"charOffset":1968,"charLength":25},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"region":{"startLine":55,"startColumn":12,"endLine":55,"endColumn":37,"charOffset":1174,"charLength":25,"snippet":{"text":"malloc(sizeof(HashNode *)","rendered":{"text":"malloc(sizeof(HashNode *)","markdown":"`malloc(sizeof(HashNode *)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"replacements":[{"deletedRegion":{"charOffset":1174,"charLength":25},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"region":{"startLine":48,"startColumn":5,"endLine":48,"endColumn":29,"charOffset":1002,"charLength":24,"snippet":{"text":"malloc(sizeof(HashTable)","rendered":{"text":"malloc(sizeof(HashTable)","markdown":"`malloc(sizeof(HashTable)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"replacements":[{"deletedRegion":{"charOffset":1002,"charLength":24},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"region":{"startLine":436,"startColumn":20,"endLine":436,"endColumn":75,"charOffset":17575,"charLength":55,"snippet":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"replacements":[{"deletedRegion":{"charOffset":17575,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[yy] + xx * sizeof(v), <size of imOut->image[yy] + xx * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"region":{"startLine":418,"startColumn":20,"endLine":418,"endColumn":75,"charOffset":16619,"charLength":55,"snippet":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"replacements":[{"deletedRegion":{"charOffset":16619,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[yy] + xx * sizeof(v), <size of imOut->image[yy] + xx * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"region":{"startLine":401,"startColumn":20,"endLine":401,"endColumn":75,"charOffset":15738,"charLength":55,"snippet":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"replacements":[{"deletedRegion":{"charOffset":15738,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[yy] + xx * sizeof(v), <size of imOut->image[yy] + xx * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"region":{"startLine":352,"startColumn":20,"endLine":352,"endColumn":75,"charOffset":13921,"charLength":55,"snippet":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"replacements":[{"deletedRegion":{"charOffset":13921,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[yy] + xx * sizeof(v), <size of imOut->image[yy] + xx * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"region":{"startLine":334,"startColumn":20,"endLine":334,"endColumn":75,"charOffset":12909,"charLength":55,"snippet":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"replacements":[{"deletedRegion":{"charOffset":12909,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[yy] + xx * sizeof(v), <size of imOut->image[yy] + xx * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"region":{"startLine":317,"startColumn":20,"endLine":317,"endColumn":75,"charOffset":11983,"charLength":55,"snippet":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"replacements":[{"deletedRegion":{"charOffset":11983,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[yy] + xx * sizeof(v), <size of imOut->image[yy] + xx * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"region":{"startLine":214,"startColumn":13,"endLine":214,"endColumn":45,"charOffset":8664,"charLength":32,"snippet":{"text":"malloc(outSize * 2 * sizeof(int)","rendered":{"text":"malloc(outSize * 2 * sizeof(int)","markdown":"`malloc(outSize * 2 * sizeof(int)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"replacements":[{"deletedRegion":{"charOffset":8664,"charLength":32},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"region":{"startLine":207,"startColumn":9,"endLine":207,"endColumn":48,"charOffset":8460,"charLength":39,"snippet":{"text":"malloc(outSize * ksize * sizeof(double)","rendered":{"text":"malloc(outSize * ksize * sizeof(double)","markdown":"`malloc(outSize * ksize * sizeof(double)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"replacements":[{"deletedRegion":{"charOffset":8460,"charLength":39},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\MpoImagePlugin.py"},"region":{"startLine":60,"startColumn":31,"endLine":60,"endColumn":36,"charOffset":1921,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1676,"startColumn":12,"endLine":1676,"endColumn":48,"charOffset":46007,"charLength":36,"snippet":{"text":"strcpy(imOut->palette->mode, \"RGBA\")","rendered":{"text":"strcpy(imOut->palette->mode, \"RGBA\")","markdown":"`strcpy(imOut->palette->mode, \"RGBA\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"replacements":[{"deletedRegion":{"charOffset":46007,"charLength":36},"insertedContent":{"text":"strcpy_s(imOut->palette->mode, <size of imOut->palette->mode>,  \"RGBA\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"replacements":[{"deletedRegion":{"charOffset":46007,"charLength":36},"insertedContent":{"text":"strlcpy(imOut->palette->mode,  \"RGBA\", <size of imOut->palette->mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1543,"startColumn":11,"endLine":1543,"endColumn":16,"charOffset":42623,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1537,"startColumn":7,"endLine":1537,"endColumn":12,"charOffset":42463,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1515,"startColumn":11,"endLine":1515,"endColumn":16,"charOffset":41631,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1365,"startColumn":3,"endLine":1365,"endColumn":9,"charOffset":37848,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1364,"startColumn":3,"endLine":1364,"endColumn":9,"charOffset":37781,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1358,"startColumn":3,"endLine":1358,"endColumn":9,"charOffset":37591,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1350,"startColumn":3,"endLine":1350,"endColumn":9,"charOffset":37416,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1346,"startColumn":3,"endLine":1346,"endColumn":9,"charOffset":37255,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1331,"startColumn":12,"endLine":1331,"endColumn":18,"charOffset":36589,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1304,"startColumn":6,"endLine":1304,"endColumn":12,"charOffset":35508,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1270,"startColumn":3,"endLine":1270,"endColumn":9,"charOffset":34427,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1264,"startColumn":3,"endLine":1264,"endColumn":9,"charOffset":34221,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1261,"startColumn":3,"endLine":1261,"endColumn":9,"charOffset":34127,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1257,"startColumn":3,"endLine":1257,"endColumn":9,"charOffset":33970,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1250,"startColumn":3,"endLine":1250,"endColumn":9,"charOffset":33809,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1246,"startColumn":3,"endLine":1246,"endColumn":9,"charOffset":33675,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1242,"startColumn":3,"endLine":1242,"endColumn":9,"charOffset":33579,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1237,"startColumn":6,"endLine":1237,"endColumn":12,"charOffset":33490,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1230,"startColumn":3,"endLine":1230,"endColumn":9,"charOffset":33293,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1222,"startColumn":3,"endLine":1222,"endColumn":9,"charOffset":33150,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1217,"startColumn":3,"endLine":1217,"endColumn":9,"charOffset":32974,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1210,"startColumn":3,"endLine":1210,"endColumn":9,"charOffset":32837,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1206,"startColumn":3,"endLine":1206,"endColumn":9,"charOffset":32698,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1162,"startColumn":3,"endLine":1162,"endColumn":9,"charOffset":31789,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1157,"startColumn":6,"endLine":1157,"endColumn":12,"charOffset":31673,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1133,"startColumn":3,"endLine":1133,"endColumn":9,"charOffset":30533,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1070,"startColumn":9,"endLine":1070,"endColumn":15,"charOffset":28752,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1005,"startColumn":9,"endLine":1005,"endColumn":15,"charOffset":26960,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":997,"startColumn":9,"endLine":997,"endColumn":15,"charOffset":26751,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":989,"startColumn":9,"endLine":989,"endColumn":15,"charOffset":26513,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":987,"startColumn":22,"endLine":987,"endColumn":28,"charOffset":26415,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":924,"startColumn":9,"endLine":924,"endColumn":15,"charOffset":24807,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":784,"startColumn":6,"endLine":784,"endColumn":11,"charOffset":20720,"charLength":5,"snippet":{"text":"qsort","rendered":{"text":"qsort","markdown":"`qsort`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":718,"startColumn":9,"endLine":718,"endColumn":15,"charOffset":19052,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":710,"startColumn":6,"endLine":710,"endColumn":12,"charOffset":18836,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":682,"startColumn":6,"endLine":682,"endColumn":12,"charOffset":18157,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":648,"startColumn":9,"endLine":648,"endColumn":15,"charOffset":17464,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":627,"startColumn":8,"endLine":627,"endColumn":30,"charOffset":16839,"charLength":22,"snippet":{"text":"malloc(sizeof(BoxNode)","rendered":{"text":"malloc(sizeof(BoxNode)","markdown":"`malloc(sizeof(BoxNode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"replacements":[{"deletedRegion":{"charOffset":16839,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":600,"startColumn":6,"endLine":600,"endColumn":12,"charOffset":16200,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":591,"startColumn":6,"endLine":591,"endColumn":12,"charOffset":15889,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":569,"startColumn":9,"endLine":569,"endColumn":31,"charOffset":15313,"charLength":22,"snippet":{"text":"malloc(sizeof(BoxNode)","rendered":{"text":"malloc(sizeof(BoxNode)","markdown":"`malloc(sizeof(BoxNode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"replacements":[{"deletedRegion":{"charOffset":15313,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":568,"startColumn":8,"endLine":568,"endColumn":30,"charOffset":15278,"charLength":22,"snippet":{"text":"malloc(sizeof(BoxNode)","rendered":{"text":"malloc(sizeof(BoxNode)","markdown":"`malloc(sizeof(BoxNode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"replacements":[{"deletedRegion":{"charOffset":15278,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":563,"startColumn":6,"endLine":563,"endColumn":12,"charOffset":15161,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":559,"startColumn":6,"endLine":559,"endColumn":12,"charOffset":15073,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":553,"startColumn":6,"endLine":553,"endColumn":12,"charOffset":14949,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":533,"startColumn":12,"endLine":533,"endColumn":18,"charOffset":14398,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":526,"startColumn":12,"endLine":526,"endColumn":18,"charOffset":14121,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":523,"startColumn":12,"endLine":523,"endColumn":18,"charOffset":13988,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":518,"startColumn":12,"endLine":518,"endColumn":18,"charOffset":13703,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":515,"startColumn":12,"endLine":515,"endColumn":18,"charOffset":13576,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":507,"startColumn":12,"endLine":507,"endColumn":18,"charOffset":13120,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":506,"startColumn":12,"endLine":506,"endColumn":18,"charOffset":13076,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":503,"startColumn":12,"endLine":503,"endColumn":18,"charOffset":12936,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":502,"startColumn":12,"endLine":502,"endColumn":18,"charOffset":12892,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":493,"startColumn":3,"endLine":493,"endColumn":9,"charOffset":12654,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":481,"startColumn":3,"endLine":481,"endColumn":9,"charOffset":12387,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":434,"startColumn":6,"endLine":434,"endColumn":12,"charOffset":11296,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":432,"startColumn":9,"endLine":432,"endColumn":15,"charOffset":11228,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":377,"startColumn":12,"endLine":377,"endColumn":18,"charOffset":9894,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":369,"startColumn":12,"endLine":369,"endColumn":18,"charOffset":9595,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":365,"startColumn":12,"endLine":365,"endColumn":18,"charOffset":9449,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":359,"startColumn":12,"endLine":359,"endColumn":18,"charOffset":9151,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":355,"startColumn":12,"endLine":355,"endColumn":18,"charOffset":9011,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":244,"startColumn":5,"endLine":244,"endColumn":29,"charOffset":6506,"charLength":24,"snippet":{"text":"malloc(sizeof(PixelList)","rendered":{"text":"malloc(sizeof(PixelList)","markdown":"`malloc(sizeof(PixelList)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"replacements":[{"deletedRegion":{"charOffset":6506,"charLength":24},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":191,"startColumn":3,"endLine":191,"endColumn":9,"charOffset":4872,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":188,"startColumn":3,"endLine":188,"endColumn":9,"charOffset":4768,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":182,"startColumn":9,"endLine":182,"endColumn":15,"charOffset":4634,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":176,"startColumn":9,"endLine":176,"endColumn":15,"charOffset":4427,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":159,"startColumn":5,"endLine":159,"endColumn":33,"charOffset":3821,"charLength":28,"snippet":{"text":"malloc(sizeof(PixelHashData)","rendered":{"text":"malloc(sizeof(PixelHashData)","markdown":"`malloc(sizeof(PixelHashData)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"replacements":[{"deletedRegion":{"charOffset":3821,"charLength":28},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PngImagePlugin.py"},"region":{"startLine":364,"startColumn":34,"endLine":364,"endColumn":39,"charOffset":11029,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\GdImageFile.py"},"region":{"startLine":49,"startColumn":27,"endLine":49,"endColumn":32,"charOffset":1317,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipDecode.c"},"region":{"startLine":248,"startColumn":19,"endLine":248,"endColumn":27,"charOffset":8865,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipDecode.c"},"region":{"startLine":227,"startColumn":27,"endLine":227,"endColumn":35,"charOffset":7910,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipDecode.c"},"region":{"startLine":215,"startColumn":27,"endLine":215,"endColumn":35,"charOffset":7213,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipDecode.c"},"region":{"startLine":69,"startColumn":37,"endLine":69,"endColumn":59,"charOffset":2204,"charLength":22,"snippet":{"text":"malloc(state->bytes+1)","rendered":{"text":"malloc(state->bytes+1)","markdown":"`malloc(state->bytes+1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ZipDecode.c"},"replacements":[{"deletedRegion":{"charOffset":2204,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipDecode.c"},"region":{"startLine":68,"startColumn":33,"endLine":68,"endColumn":55,"charOffset":2142,"charLength":22,"snippet":{"text":"malloc(state->bytes+1)","rendered":{"text":"malloc(state->bytes+1)","markdown":"`malloc(state->bytes+1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ZipDecode.c"},"replacements":[{"deletedRegion":{"charOffset":2142,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\McIdasImagePlugin.py"},"region":{"startLine":55,"startColumn":14,"endLine":55,"endColumn":19,"charOffset":1254,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\McIdasImagePlugin.py"},"region":{"startLine":51,"startColumn":14,"endLine":51,"endColumn":19,"charOffset":1128,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\XVThumbImagePlugin.py"},"region":{"startLine":17,"startColumn":2,"endLine":17,"endColumn":7,"charOffset":422,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\JpegPresets.py"},"region":{"startLine":69,"startColumn":43,"endLine":69,"endColumn":69,"charOffset":2025,"charLength":26,"snippet":{"text":"http://www.jpegcameras.com","rendered":{"text":"http://www.jpegcameras.com","markdown":"`http://www.jpegcameras.com`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"src\\PIL\\JpegPresets.py"},"replacements":[{"deletedRegion":{"charOffset":2025,"charLength":26},"insertedContent":{"text":"https://www.jpegcameras.com"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\XpmImagePlugin.py"},"region":{"startLine":87,"startColumn":26,"endLine":87,"endColumn":31,"charOffset":1987,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageShow.py"},"region":{"startLine":108,"startColumn":30,"endLine":108,"endColumn":39,"charOffset":2663,"charLength":9,"snippet":{"text":"127.0.0.1","rendered":{"text":"127.0.0.1","markdown":"`127.0.0.1`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\XbmEncode.c"},"region":{"startLine":46,"startColumn":8,"endLine":46,"endColumn":16,"charOffset":787,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\FpxImagePlugin.py"},"region":{"startLine":210,"startColumn":18,"endLine":210,"endColumn":23,"charOffset":5975,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\FpxImagePlugin.py"},"region":{"startLine":171,"startColumn":18,"endLine":171,"endColumn":23,"charOffset":4542,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\XbmDecode.c"},"region":{"startLine":63,"startColumn":12,"endLine":63,"endColumn":20,"charOffset":1126,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\JpegEncode.c"},"region":{"startLine":336,"startColumn":4,"endLine":336,"endColumn":11,"charOffset":10014,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\JpegEncode.c"},"region":{"startLine":285,"startColumn":12,"endLine":285,"endColumn":20,"charOffset":8830,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\JpegEncode.c"},"region":{"startLine":266,"startColumn":12,"endLine":267,"endColumn":61,"charOffset":8210,"charLength":112,"snippet":{"text":"memcpy(context->destination.pub.next_output_byte,\r\n                   context->extra + context->extra_offset, n)","rendered":{"text":"memcpy(context->destination.pub.next_output_byte,\r\n                   context->extra + context->extra_offset, n)","markdown":"`memcpy(context->destination.pub.next_output_byte,\r\n                   context->extra + context->extra_offset, n)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\JpegEncode.c"},"replacements":[{"deletedRegion":{"charOffset":8210,"charLength":112},"insertedContent":{"text":"memcpy_s(context->destination.pub.next_output_byte, <size of context->destination.pub.next_output_byte>, \r\n                   context->extra + context->extra_offset,  n)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\JpegEncode.c"},"region":{"startLine":160,"startColumn":15,"endLine":160,"endColumn":19,"charOffset":4327,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":1188,"startColumn":12,"endLine":1188,"endColumn":65,"charOffset":59635,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":59635,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":1165,"startColumn":16,"endLine":1165,"endColumn":69,"charOffset":58579,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":58579,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":1141,"startColumn":16,"endLine":1141,"endColumn":69,"charOffset":57433,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":57433,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":1052,"startColumn":20,"endLine":1052,"endColumn":73,"charOffset":53849,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":53849,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":1023,"startColumn":20,"endLine":1023,"endColumn":73,"charOffset":50960,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":50960,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":999,"startColumn":20,"endLine":999,"endColumn":73,"charOffset":48696,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":48696,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":937,"startColumn":20,"endLine":937,"endColumn":73,"charOffset":45191,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":45191,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":913,"startColumn":20,"endLine":913,"endColumn":73,"charOffset":43162,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":43162,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":893,"startColumn":20,"endLine":893,"endColumn":73,"charOffset":41546,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":41546,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":839,"startColumn":20,"endLine":839,"endColumn":73,"charOffset":38835,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":38835,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":818,"startColumn":20,"endLine":818,"endColumn":73,"charOffset":37358,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":37358,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":800,"startColumn":20,"endLine":800,"endColumn":73,"charOffset":36152,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":36152,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":748,"startColumn":20,"endLine":748,"endColumn":73,"charOffset":33882,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":33882,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":735,"startColumn":20,"endLine":735,"endColumn":73,"charOffset":33057,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":33057,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":723,"startColumn":20,"endLine":723,"endColumn":73,"charOffset":32339,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":32339,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":681,"startColumn":20,"endLine":681,"endColumn":73,"charOffset":30771,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":30771,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":660,"startColumn":20,"endLine":660,"endColumn":73,"charOffset":29732,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":29732,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":642,"startColumn":20,"endLine":642,"endColumn":73,"charOffset":28853,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":28853,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":590,"startColumn":20,"endLine":590,"endColumn":73,"charOffset":26898,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":26898,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":574,"startColumn":20,"endLine":574,"endColumn":73,"charOffset":25973,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":25973,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":560,"startColumn":20,"endLine":560,"endColumn":73,"charOffset":25183,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":25183,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":515,"startColumn":20,"endLine":515,"endColumn":73,"charOffset":23494,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":23494,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":503,"startColumn":20,"endLine":503,"endColumn":73,"charOffset":22821,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":22821,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":492,"startColumn":20,"endLine":492,"endColumn":73,"charOffset":22220,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":22220,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":452,"startColumn":20,"endLine":452,"endColumn":73,"charOffset":20829,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":20829,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":436,"startColumn":20,"endLine":436,"endColumn":73,"charOffset":20048,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":20048,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":422,"startColumn":20,"endLine":422,"endColumn":73,"charOffset":19366,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":19366,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":378,"startColumn":20,"endLine":378,"endColumn":73,"charOffset":17783,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":17783,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":356,"startColumn":20,"endLine":356,"endColumn":73,"charOffset":16617,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":16617,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":336,"startColumn":20,"endLine":336,"endColumn":73,"charOffset":15593,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":15593,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":282,"startColumn":20,"endLine":282,"endColumn":73,"charOffset":13599,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":13599,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":257,"startColumn":20,"endLine":257,"endColumn":73,"charOffset":12229,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":12229,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":234,"startColumn":20,"endLine":234,"endColumn":73,"charOffset":11003,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":11003,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":176,"startColumn":20,"endLine":176,"endColumn":73,"charOffset":8718,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":8718,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":131,"startColumn":20,"endLine":131,"endColumn":73,"charOffset":6099,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":6099,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":91,"startColumn":20,"endLine":91,"endColumn":73,"charOffset":3844,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":3844,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageQt.py"},"region":{"startLine":123,"startColumn":10,"endLine":123,"endColumn":15,"charOffset":3481,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\FontFile.py"},"region":{"startLine":107,"startColumn":70,"endLine":107,"endColumn":74,"charOffset":2617,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\JpegDecode.c"},"region":{"startLine":282,"startColumn":15,"endLine":282,"endColumn":20,"charOffset":8696,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\JpegDecode.c"},"region":{"startLine":268,"startColumn":19,"endLine":268,"endColumn":27,"charOffset":8271,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1532,"startColumn":7,"endLine":1532,"endColumn":12,"charOffset":46545,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1105,"startColumn":8,"endLine":1105,"endColumn":27,"charOffset":30891,"charLength":19,"snippet":{"text":"memcpy(_out, in, 4)","rendered":{"text":"memcpy(_out, in, 4)","markdown":"`memcpy(_out, in, 4)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":30891,"charLength":19},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  in,  4)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1095,"startColumn":8,"endLine":1095,"endColumn":27,"charOffset":30702,"charLength":19,"snippet":{"text":"memcpy(_out, in, 4)","rendered":{"text":"memcpy(_out, in, 4)","markdown":"`memcpy(_out, in, 4)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":30702,"charLength":19},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  in,  4)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1087,"startColumn":4,"endLine":1087,"endColumn":31,"charOffset":30541,"charLength":27,"snippet":{"text":"memcpy(out, in, 4 * pixels)","rendered":{"text":"memcpy(out, in, 4 * pixels)","markdown":"`memcpy(out, in, 4 * pixels)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":30541,"charLength":27},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in,  4 * pixels)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1080,"startColumn":4,"endLine":1080,"endColumn":29,"charOffset":30407,"charLength":25,"snippet":{"text":"memcpy(out, in, pixels*2)","rendered":{"text":"memcpy(out, in, pixels*2)","markdown":"`memcpy(out, in, pixels*2)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":30407,"charLength":25},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in,  pixels*2)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1073,"startColumn":4,"endLine":1073,"endColumn":27,"charOffset":30292,"charLength":23,"snippet":{"text":"memcpy(out, in, pixels)","rendered":{"text":"memcpy(out, in, pixels)","markdown":"`memcpy(out, in, pixels)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":30292,"charLength":23},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in,  pixels)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\JpegImagePlugin.py"},"region":{"startLine":720,"startColumn":6,"endLine":720,"endColumn":11,"charOffset":25602,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\JpegImagePlugin.py"},"region":{"startLine":251,"startColumn":22,"endLine":251,"endColumn":27,"charOffset":9221,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1063,"startColumn":8,"endLine":1063,"endColumn":41,"charOffset":30149,"charLength":33,"snippet":{"text":"memcpy(out, &pixel, sizeof(pixel)","rendered":{"text":"memcpy(out, &pixel, sizeof(pixel)","markdown":"`memcpy(out, &pixel, sizeof(pixel)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":30149,"charLength":33},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &pixel,  sizeof(pixel)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\JpegImagePlugin.py"},"region":{"startLine":238,"startColumn":6,"endLine":238,"endColumn":11,"charOffset":8771,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\JpegImagePlugin.py"},"region":{"startLine":89,"startColumn":37,"endLine":89,"endColumn":42,"charOffset":3037,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\JpegImagePlugin.py"},"region":{"startLine":86,"startColumn":37,"endLine":86,"endColumn":42,"charOffset":2870,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1053,"startColumn":8,"endLine":1053,"endColumn":41,"charOffset":29909,"charLength":33,"snippet":{"text":"memcpy(out, &pixel, sizeof(pixel)","rendered":{"text":"memcpy(out, &pixel, sizeof(pixel)","markdown":"`memcpy(out, &pixel, sizeof(pixel)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":29909,"charLength":33},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &pixel,  sizeof(pixel)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1045,"startColumn":8,"endLine":1045,"endColumn":41,"charOffset":29703,"charLength":33,"snippet":{"text":"memcpy(out, &pixel, sizeof(pixel)","rendered":{"text":"memcpy(out, &pixel, sizeof(pixel)","markdown":"`memcpy(out, &pixel, sizeof(pixel)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":29703,"charLength":33},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &pixel,  sizeof(pixel)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":965,"startColumn":8,"endLine":965,"endColumn":36,"charOffset":27293,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":27293,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":950,"startColumn":8,"endLine":950,"endColumn":36,"charOffset":26948,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":26948,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":938,"startColumn":8,"endLine":938,"endColumn":36,"charOffset":26655,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":26655,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":926,"startColumn":8,"endLine":926,"endColumn":36,"charOffset":26362,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":26362,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":914,"startColumn":8,"endLine":914,"endColumn":36,"charOffset":26083,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":26083,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":902,"startColumn":8,"endLine":902,"endColumn":36,"charOffset":25787,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":25787,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":891,"startColumn":8,"endLine":891,"endColumn":36,"charOffset":25506,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":25506,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":864,"startColumn":8,"endLine":864,"endColumn":36,"charOffset":24818,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":24818,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":800,"startColumn":8,"endLine":800,"endColumn":36,"charOffset":23049,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":23049,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":778,"startColumn":8,"endLine":778,"endColumn":36,"charOffset":22452,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":22452,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":756,"startColumn":8,"endLine":756,"endColumn":36,"charOffset":21833,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":21833,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":734,"startColumn":8,"endLine":734,"endColumn":36,"charOffset":21211,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":21211,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":722,"startColumn":8,"endLine":722,"endColumn":36,"charOffset":20894,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":20894,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":708,"startColumn":8,"endLine":708,"endColumn":36,"charOffset":20567,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":20567,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":696,"startColumn":8,"endLine":696,"endColumn":36,"charOffset":20257,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":20257,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":684,"startColumn":8,"endLine":684,"endColumn":36,"charOffset":19963,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":19963,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":552,"startColumn":8,"endLine":552,"endColumn":36,"charOffset":16371,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":16371,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":540,"startColumn":8,"endLine":540,"endColumn":36,"charOffset":16082,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":16082,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":528,"startColumn":8,"endLine":528,"endColumn":36,"charOffset":15763,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":15763,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":516,"startColumn":8,"endLine":516,"endColumn":36,"charOffset":15441,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":15441,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":504,"startColumn":8,"endLine":504,"endColumn":36,"charOffset":15138,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":15138,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":492,"startColumn":8,"endLine":492,"endColumn":36,"charOffset":14832,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":14832,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":487,"startColumn":8,"endLine":487,"endColumn":36,"charOffset":14665,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":14665,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":485,"startColumn":8,"endLine":485,"endColumn":34,"charOffset":14589,"charLength":26,"snippet":{"text":"memcpy(&iv, in, sizeof(iv)","rendered":{"text":"memcpy(&iv, in, sizeof(iv)","markdown":"`memcpy(&iv, in, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":14589,"charLength":26},"insertedContent":{"text":"memcpy_s(&iv, <size of &iv>,  in,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":344,"startColumn":8,"endLine":344,"endColumn":36,"charOffset":11292,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":11292,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":332,"startColumn":8,"endLine":332,"endColumn":36,"charOffset":10984,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":10984,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImagePalette.py"},"region":{"startLine":200,"startColumn":6,"endLine":200,"endColumn":11,"charOffset":5906,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImagePalette.py"},"region":{"startLine":160,"startColumn":37,"endLine":160,"endColumn":42,"charOffset":5067,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\FitsStubImagePlugin.py"},"region":{"startLine":47,"startColumn":10,"endLine":47,"endColumn":15,"charOffset":862,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Jpeg2KEncode.c"},"region":{"startLine":516,"startColumn":20,"endLine":516,"endColumn":77,"charOffset":15928,"charLength":57,"snippet":{"text":"malloc (tile_width * tile_height * components * prec / 8)","rendered":{"text":"malloc (tile_width * tile_height * components * prec / 8)","markdown":"`malloc (tile_width * tile_height * components * prec / 8)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Jpeg2KEncode.c"},"replacements":[{"deletedRegion":{"charOffset":15928,"charLength":57},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageOps.py"},"region":{"startLine":50,"startColumn":10,"endLine":50,"endColumn":15,"charOffset":1116,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Point.c"},"region":{"startLine":252,"startColumn":20,"endLine":252,"endColumn":66,"charOffset":7409,"charLength":46,"snippet":{"text":"memcpy(out + x * sizeof(UINT16), &v, sizeof(v)","rendered":{"text":"memcpy(out + x * sizeof(UINT16), &v, sizeof(v)","markdown":"`memcpy(out + x * sizeof(UINT16), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Point.c"},"replacements":[{"deletedRegion":{"charOffset":7409,"charLength":46},"insertedContent":{"text":"memcpy_s(out + x * sizeof(UINT16), <size of out + x * sizeof(UINT16)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Point.c"},"region":{"startLine":250,"startColumn":20,"endLine":250,"endColumn":60,"charOffset":7300,"charLength":40,"snippet":{"text":"memcpy(&v, in + x * sizeof(v), sizeof(v)","rendered":{"text":"memcpy(&v, in + x * sizeof(v), sizeof(v)","markdown":"`memcpy(&v, in + x * sizeof(v), sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Point.c"},"replacements":[{"deletedRegion":{"charOffset":7300,"charLength":40},"insertedContent":{"text":"memcpy_s(&v, <size of &v>,  in + x * sizeof(v),  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Point.c"},"region":{"startLine":247,"startColumn":19,"endLine":247,"endColumn":24,"charOffset":7171,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Point.c"},"region":{"startLine":225,"startColumn":15,"endLine":225,"endColumn":20,"charOffset":6294,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Point.c"},"region":{"startLine":107,"startColumn":12,"endLine":107,"endColumn":72,"charOffset":3095,"charLength":60,"snippet":{"text":"memcpy(out + x, table + in[x] * sizeof(INT32), sizeof(INT32)","rendered":{"text":"memcpy(out + x, table + in[x] * sizeof(INT32), sizeof(INT32)","markdown":"`memcpy(out + x, table + in[x] * sizeof(INT32), sizeof(INT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Point.c"},"replacements":[{"deletedRegion":{"charOffset":3095,"charLength":60},"insertedContent":{"text":"memcpy_s(out + x, <size of out + x>,  table + in[x] * sizeof(INT32),  sizeof(INT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\EpsImagePlugin.py"},"region":{"startLine":219,"startColumn":29,"endLine":219,"endColumn":34,"charOffset":6130,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\PcxEncode.c"},"region":{"startLine":74,"startColumn":19,"endLine":74,"endColumn":27,"charOffset":1655,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\PcxDecode.c"},"region":{"startLine":79,"startColumn":12,"endLine":79,"endColumn":20,"charOffset":1775,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\PcxDecode.c"},"region":{"startLine":73,"startColumn":16,"endLine":73,"endColumn":23,"charOffset":1566,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageFont.py"},"region":{"startLine":160,"startColumn":10,"endLine":160,"endColumn":15,"charOffset":4853,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageFont.py"},"region":{"startLine":102,"startColumn":26,"endLine":102,"endColumn":31,"charOffset":2997,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageFont.py"},"region":{"startLine":52,"startColumn":2,"endLine":52,"endColumn":7,"charOffset":1357,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\DdsImagePlugin.py"},"region":{"startLine":6,"startColumn":45,"endLine":6,"endColumn":63,"charOffset":164,"charLength":18,"snippet":{"text":"http://oss.sgi.com","rendered":{"text":"http://oss.sgi.com","markdown":"`http://oss.sgi.com`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"src\\PIL\\DdsImagePlugin.py"},"replacements":[{"deletedRegion":{"charOffset":164,"charLength":18},"insertedContent":{"text":"https://oss.sgi.com"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"region":{"startLine":622,"startColumn":19,"endLine":622,"endColumn":27,"charOffset":21731,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"region":{"startLine":512,"startColumn":28,"endLine":512,"endColumn":43,"charOffset":17553,"charLength":15,"snippet":{"text":"malloc(bufsize)","rendered":{"text":"malloc(bufsize)","markdown":"`malloc(bufsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"replacements":[{"deletedRegion":{"charOffset":17553,"charLength":15},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"region":{"startLine":460,"startColumn":23,"endLine":460,"endColumn":31,"charOffset":15377,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"region":{"startLine":399,"startColumn":27,"endLine":399,"endColumn":35,"charOffset":13027,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"region":{"startLine":212,"startColumn":12,"endLine":212,"endColumn":56,"charOffset":6127,"charLength":44,"snippet":{"text":"memcpy(bottom_line, swap_line, 4*tile_width)","rendered":{"text":"memcpy(bottom_line, swap_line, 4*tile_width)","markdown":"`memcpy(bottom_line, swap_line, 4*tile_width)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"replacements":[{"deletedRegion":{"charOffset":6127,"charLength":44},"insertedContent":{"text":"memcpy_s(bottom_line, <size of bottom_line>,  swap_line,  4*tile_width)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"region":{"startLine":211,"startColumn":12,"endLine":211,"endColumn":55,"charOffset":6069,"charLength":43,"snippet":{"text":"memcpy(top_line, bottom_line, 4*tile_width)","rendered":{"text":"memcpy(top_line, bottom_line, 4*tile_width)","markdown":"`memcpy(top_line, bottom_line, 4*tile_width)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"replacements":[{"deletedRegion":{"charOffset":6069,"charLength":43},"insertedContent":{"text":"memcpy_s(top_line, <size of top_line>,  bottom_line,  4*tile_width)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"region":{"startLine":210,"startColumn":12,"endLine":210,"endColumn":53,"charOffset":6013,"charLength":41,"snippet":{"text":"memcpy(swap_line, top_line, 4*tile_width)","rendered":{"text":"memcpy(swap_line, top_line, 4*tile_width)","markdown":"`memcpy(swap_line, top_line, 4*tile_width)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"replacements":[{"deletedRegion":{"charOffset":6013,"charLength":41},"insertedContent":{"text":"memcpy_s(swap_line, <size of swap_line>,  top_line,  4*tile_width)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"region":{"startLine":196,"startColumn":29,"endLine":196,"endColumn":51,"charOffset":5497,"charLength":22,"snippet":{"text":"malloc(swap_line_size)","rendered":{"text":"malloc(swap_line_size)","markdown":"`malloc(swap_line_size)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"replacements":[{"deletedRegion":{"charOffset":5497,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\PcdDecode.c"},"region":{"startLine":68,"startColumn":8,"endLine":68,"endColumn":16,"charOffset":1459,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\PcdDecode.c"},"region":{"startLine":53,"startColumn":8,"endLine":53,"endColumn":16,"charOffset":1057,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"region":{"startLine":326,"startColumn":4,"endLine":326,"endColumn":36,"charOffset":9396,"charLength":32,"snippet":{"text":"memcpy(&ink8, ink_, sizeof(ink8)","rendered":{"text":"memcpy(&ink8, ink_, sizeof(ink8)","markdown":"`memcpy(&ink8, ink_, sizeof(ink8)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"replacements":[{"deletedRegion":{"charOffset":9396,"charLength":32},"insertedContent":{"text":"memcpy_s(&ink8, <size of &ink8>,  ink_,  sizeof(ink8)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"region":{"startLine":325,"startColumn":4,"endLine":325,"endColumn":35,"charOffset":9358,"charLength":31,"snippet":{"text":"memcpy(&ink32, ink_, pixelsize)","rendered":{"text":"memcpy(&ink32, ink_, pixelsize)","markdown":"`memcpy(&ink32, ink_, pixelsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"replacements":[{"deletedRegion":{"charOffset":9358,"charLength":31},"insertedContent":{"text":"memcpy_s(&ink32, <size of &ink32>,  ink_,  pixelsize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"region":{"startLine":294,"startColumn":4,"endLine":294,"endColumn":36,"charOffset":8639,"charLength":32,"snippet":{"text":"memcpy(&ink8, ink_, sizeof(ink8)","rendered":{"text":"memcpy(&ink8, ink_, sizeof(ink8)","markdown":"`memcpy(&ink8, ink_, sizeof(ink8)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"replacements":[{"deletedRegion":{"charOffset":8639,"charLength":32},"insertedContent":{"text":"memcpy_s(&ink8, <size of &ink8>,  ink_,  sizeof(ink8)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"region":{"startLine":293,"startColumn":4,"endLine":293,"endColumn":35,"charOffset":8601,"charLength":31,"snippet":{"text":"memcpy(&ink32, ink_, pixelsize)","rendered":{"text":"memcpy(&ink32, ink_, pixelsize)","markdown":"`memcpy(&ink32, ink_, pixelsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"replacements":[{"deletedRegion":{"charOffset":8601,"charLength":31},"insertedContent":{"text":"memcpy_s(&ink32, <size of &ink32>,  ink_,  pixelsize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"region":{"startLine":41,"startColumn":8,"endLine":41,"endColumn":66,"charOffset":1015,"charLength":58,"snippet":{"text":"memcpy(imOut->image[y+dy]+dx, imIn->image[y+sy]+sx, xsize)","rendered":{"text":"memcpy(imOut->image[y+dy]+dx, imIn->image[y+sy]+sx, xsize)","markdown":"`memcpy(imOut->image[y+dy]+dx, imIn->image[y+sy]+sx, xsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"replacements":[{"deletedRegion":{"charOffset":1015,"charLength":58},"insertedContent":{"text":"memcpy_s(imOut->image[y+dy]+dx, <size of imOut->image[y+dy]+dx>,  imIn->image[y+sy]+sx,  xsize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\RawEncode.c"},"region":{"startLine":68,"startColumn":8,"endLine":68,"endColumn":16,"charOffset":1501,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\RawEncode.c"},"region":{"startLine":7,"startColumn":3,"endLine":7,"endColumn":8,"charOffset":79,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\RawDecode.c"},"region":{"startLine":79,"startColumn":8,"endLine":79,"endColumn":16,"charOffset":1467,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"region":{"startLine":293,"startColumn":34,"endLine":293,"endColumn":64,"charOffset":8229,"charLength":30,"snippet":{"text":"malloc(entries * sizeof(INT16)","rendered":{"text":"malloc(entries * sizeof(INT16)","markdown":"`malloc(entries * sizeof(INT16)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"replacements":[{"deletedRegion":{"charOffset":8229,"charLength":30},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"region":{"startLine":112,"startColumn":4,"endLine":112,"endColumn":70,"charOffset":2770,"charLength":66,"snippet":{"text":"memcpy(new_palette, palette, sizeof(struct ImagingPaletteInstance)","rendered":{"text":"memcpy(new_palette, palette, sizeof(struct ImagingPaletteInstance)","markdown":"`memcpy(new_palette, palette, sizeof(struct ImagingPaletteInstance)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"replacements":[{"deletedRegion":{"charOffset":2770,"charLength":66},"insertedContent":{"text":"memcpy_s(new_palette, <size of new_palette>,  palette,  sizeof(struct ImagingPaletteInstance)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"region":{"startLine":108,"startColumn":18,"endLine":108,"endColumn":62,"charOffset":2632,"charLength":44,"snippet":{"text":"malloc(sizeof(struct ImagingPaletteInstance)","rendered":{"text":"malloc(sizeof(struct ImagingPaletteInstance)","markdown":"`malloc(sizeof(struct ImagingPaletteInstance)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"replacements":[{"deletedRegion":{"charOffset":2632,"charLength":44},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"region":{"startLine":87,"startColumn":7,"endLine":87,"endColumn":12,"charOffset":2155,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"region":{"startLine":67,"startColumn":7,"endLine":67,"endColumn":12,"charOffset":1581,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"region":{"startLine":40,"startColumn":4,"endLine":40,"endColumn":55,"charOffset":925,"charLength":51,"snippet":{"text":"strncpy(palette->mode, mode, IMAGING_MODE_LENGTH-1)","rendered":{"text":"strncpy(palette->mode, mode, IMAGING_MODE_LENGTH-1)","markdown":"`strncpy(palette->mode, mode, IMAGING_MODE_LENGTH-1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"replacements":[{"deletedRegion":{"charOffset":925,"charLength":51},"insertedContent":{"text":"strcpy_s(palette->mode,  IMAGING_MODE_LENGTH-1,  mode)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"replacements":[{"deletedRegion":{"charOffset":925,"charLength":51},"insertedContent":{"text":"strlcpy(palette->mode,  mode,  IMAGING_MODE_LENGTH-1)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"region":{"startLine":995,"startColumn":7,"endLine":995,"endColumn":12,"charOffset":28668,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"region":{"startLine":623,"startColumn":4,"endLine":623,"endColumn":29,"charOffset":18780,"charLength":25,"snippet":{"text":"memcpy(out, &k, sizeof(k)","rendered":{"text":"memcpy(out, &k, sizeof(k)","markdown":"`memcpy(out, &k, sizeof(k)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"replacements":[{"deletedRegion":{"charOffset":18780,"charLength":25},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &k,  sizeof(k)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"region":{"startLine":612,"startColumn":4,"endLine":612,"endColumn":29,"charOffset":18542,"charLength":25,"snippet":{"text":"memcpy(out, &k, sizeof(k)","rendered":{"text":"memcpy(out, &k, sizeof(k)","markdown":"`memcpy(out, &k, sizeof(k)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"replacements":[{"deletedRegion":{"charOffset":18542,"charLength":25},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &k,  sizeof(k)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"region":{"startLine":507,"startColumn":4,"endLine":507,"endColumn":29,"charOffset":15779,"charLength":25,"snippet":{"text":"memcpy(out, &k, sizeof(k)","rendered":{"text":"memcpy(out, &k, sizeof(k)","markdown":"`memcpy(out, &k, sizeof(k)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"replacements":[{"deletedRegion":{"charOffset":15779,"charLength":25},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &k,  sizeof(k)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"region":{"startLine":496,"startColumn":4,"endLine":496,"endColumn":29,"charOffset":15538,"charLength":25,"snippet":{"text":"memcpy(out, &k, sizeof(k)","rendered":{"text":"memcpy(out, &k, sizeof(k)","markdown":"`memcpy(out, &k, sizeof(k)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"replacements":[{"deletedRegion":{"charOffset":15538,"charLength":25},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &k,  sizeof(k)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"region":{"startLine":442,"startColumn":4,"endLine":442,"endColumn":49,"charOffset":14094,"charLength":45,"snippet":{"text":"memcpy(out, &im->image32[y][x], sizeof(INT32)","rendered":{"text":"memcpy(out, &im->image32[y][x], sizeof(INT32)","markdown":"`memcpy(out, &im->image32[y][x], sizeof(INT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"replacements":[{"deletedRegion":{"charOffset":14094,"charLength":45},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &im->image32[y][x],  sizeof(INT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"region":{"startLine":431,"startColumn":4,"endLine":431,"endColumn":64,"charOffset":13796,"charLength":60,"snippet":{"text":"memcpy(out, im->image8[y] + x * sizeof(INT16), sizeof(INT16)","rendered":{"text":"memcpy(out, im->image8[y] + x * sizeof(INT16), sizeof(INT16)","markdown":"`memcpy(out, im->image8[y] + x * sizeof(INT16), sizeof(INT16)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"replacements":[{"deletedRegion":{"charOffset":13796,"charLength":60},"insertedContent":{"text":"memcpy_s(out, <size of out>,  im->image8[y] + x * sizeof(INT16),  sizeof(INT16)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"region":{"startLine":76,"startColumn":8,"endLine":76,"endColumn":64,"charOffset":2299,"charLength":56,"snippet":{"text":"memcpy(imOut->image[yr], imIn->image[y], imIn->linesize)","rendered":{"text":"memcpy(imOut->image[yr], imIn->image[y], imIn->linesize)","markdown":"`memcpy(imOut->image[yr], imIn->image[y], imIn->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"replacements":[{"deletedRegion":{"charOffset":2299,"charLength":56},"insertedContent":{"text":"memcpy_s(imOut->image[yr], <size of imOut->image[yr]>,  imIn->image[y],  imIn->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TgaRleEncode.c"},"region":{"startLine":142,"startColumn":8,"endLine":145,"endColumn":23,"charOffset":4175,"charLength":122,"snippet":{"text":"memcpy(\r\n            dst,\r\n            state->buffer + (state->x * bytesPerPixel - state->count),\r\n            flushCount)","rendered":{"text":"memcpy(\r\n            dst,\r\n            state->buffer + (state->x * bytesPerPixel - state->count),\r\n            flushCount)","markdown":"`memcpy(\r\n            dst,\r\n            state->buffer + (state->x * bytesPerPixel - state->count),\r\n            flushCount)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\TgaRleEncode.c"},"replacements":[{"deletedRegion":{"charOffset":4175,"charLength":122},"insertedContent":{"text":"memcpy_s(\r\n            dst, <size of \r\n            dst>, \r\n            state->buffer + (state->x * bytesPerPixel - state->count), \r\n            flushCount)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TgaRleEncode.c"},"region":{"startLine":63,"startColumn":23,"endLine":63,"endColumn":31,"charOffset":1488,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\RankFilter.c"},"region":{"startLine":81,"startColumn":16,"endLine":81,"endColumn":43,"charOffset":2083,"charLength":27,"snippet":{"text":"malloc(size2 * sizeof(type)","rendered":{"text":"malloc(size2 * sizeof(type)","markdown":"`malloc(size2 * sizeof(type)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\RankFilter.c"},"replacements":[{"deletedRegion":{"charOffset":2083,"charLength":27},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\PackDecode.c"},"region":{"startLine":79,"startColumn":12,"endLine":79,"endColumn":20,"charOffset":1352,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TgaRleDecode.c"},"region":{"startLine":100,"startColumn":12,"endLine":100,"endColumn":20,"charOffset":1880,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TgaRleDecode.c"},"region":{"startLine":88,"startColumn":5,"endLine":88,"endColumn":49,"charOffset":1675,"charLength":44,"snippet":{"text":"memcpy(state->buffer + state->x, ptr + 1, n)","rendered":{"text":"memcpy(state->buffer + state->x, ptr + 1, n)","markdown":"`memcpy(state->buffer + state->x, ptr + 1, n)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\TgaRleDecode.c"},"replacements":[{"deletedRegion":{"charOffset":1675,"charLength":44},"insertedContent":{"text":"memcpy_s(state->buffer + state->x, <size of state->buffer + state->x>,  ptr + 1,  n)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TgaRleDecode.c"},"region":{"startLine":69,"startColumn":20,"endLine":69,"endColumn":70,"charOffset":1309,"charLength":50,"snippet":{"text":"memcpy(state->buffer + state->x + i, ptr+1, depth)","rendered":{"text":"memcpy(state->buffer + state->x + i, ptr+1, depth)","markdown":"`memcpy(state->buffer + state->x + i, ptr+1, depth)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\TgaRleDecode.c"},"replacements":[{"deletedRegion":{"charOffset":1309,"charLength":50},"insertedContent":{"text":"memcpy_s(state->buffer + state->x + i, <size of state->buffer + state->x + i>,  ptr+1,  depth)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"region":{"startLine":157,"startColumn":16,"endLine":157,"endColumn":74,"charOffset":4961,"charLength":58,"snippet":{"text":"memcpy(&fmax, ((char*)minmax) + sizeof(fmin), sizeof(fmax)","rendered":{"text":"memcpy(&fmax, ((char*)minmax) + sizeof(fmin), sizeof(fmax)","markdown":"`memcpy(&fmax, ((char*)minmax) + sizeof(fmin), sizeof(fmax)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"replacements":[{"deletedRegion":{"charOffset":4961,"charLength":58},"insertedContent":{"text":"memcpy_s(&fmax, <size of &fmax>,  ((char*)minmax) + sizeof(fmin),  sizeof(fmax)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"region":{"startLine":156,"startColumn":16,"endLine":156,"endColumn":50,"charOffset":4907,"charLength":34,"snippet":{"text":"memcpy(&fmin, minmax, sizeof(fmin)","rendered":{"text":"memcpy(&fmin, minmax, sizeof(fmin)","markdown":"`memcpy(&fmin, minmax, sizeof(fmin)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"replacements":[{"deletedRegion":{"charOffset":4907,"charLength":34},"insertedContent":{"text":"memcpy_s(&fmin, <size of &fmin>,  minmax,  sizeof(fmin)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"region":{"startLine":134,"startColumn":16,"endLine":134,"endColumn":74,"charOffset":3959,"charLength":58,"snippet":{"text":"memcpy(&imax, ((char*)minmax) + sizeof(imin), sizeof(imax)","rendered":{"text":"memcpy(&imax, ((char*)minmax) + sizeof(imin), sizeof(imax)","markdown":"`memcpy(&imax, ((char*)minmax) + sizeof(imin), sizeof(imax)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"replacements":[{"deletedRegion":{"charOffset":3959,"charLength":58},"insertedContent":{"text":"memcpy_s(&imax, <size of &imax>,  ((char*)minmax) + sizeof(imin),  sizeof(imax)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"region":{"startLine":133,"startColumn":16,"endLine":133,"endColumn":50,"charOffset":3905,"charLength":34,"snippet":{"text":"memcpy(&imin, minmax, sizeof(imin)","rendered":{"text":"memcpy(&imin, minmax, sizeof(imin)","markdown":"`memcpy(&imin, minmax, sizeof(imin)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"replacements":[{"deletedRegion":{"charOffset":3905,"charLength":34},"insertedContent":{"text":"memcpy_s(&imin, <size of &imin>,  minmax,  sizeof(imin)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"region":{"startLine":44,"startColumn":4,"endLine":44,"endColumn":53,"charOffset":993,"charLength":49,"snippet":{"text":"strncpy(h->mode, im->mode, IMAGING_MODE_LENGTH-1)","rendered":{"text":"strncpy(h->mode, im->mode, IMAGING_MODE_LENGTH-1)","markdown":"`strncpy(h->mode, im->mode, IMAGING_MODE_LENGTH-1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"replacements":[{"deletedRegion":{"charOffset":993,"charLength":49},"insertedContent":{"text":"strcpy_s(h->mode,  IMAGING_MODE_LENGTH-1,  im->mode)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"replacements":[{"deletedRegion":{"charOffset":993,"charLength":49},"insertedContent":{"text":"strlcpy(h->mode,  im->mode,  IMAGING_MODE_LENGTH-1)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"region":{"startLine":491,"startColumn":4,"endLine":491,"endColumn":29,"charOffset":10566,"charLength":25,"snippet":{"text":"memcpy(out, in, 4*pixels)","rendered":{"text":"memcpy(out, in, 4*pixels)","markdown":"`memcpy(out, in, 4*pixels)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"replacements":[{"deletedRegion":{"charOffset":10566,"charLength":25},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in,  4*pixels)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"region":{"startLine":484,"startColumn":4,"endLine":484,"endColumn":29,"charOffset":10432,"charLength":25,"snippet":{"text":"memcpy(out, in, pixels*3)","rendered":{"text":"memcpy(out, in, pixels*3)","markdown":"`memcpy(out, in, pixels*3)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"replacements":[{"deletedRegion":{"charOffset":10432,"charLength":25},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in,  pixels*3)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"region":{"startLine":477,"startColumn":4,"endLine":477,"endColumn":29,"charOffset":10308,"charLength":25,"snippet":{"text":"memcpy(out, in, pixels*2)","rendered":{"text":"memcpy(out, in, pixels*2)","markdown":"`memcpy(out, in, pixels*2)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"replacements":[{"deletedRegion":{"charOffset":10308,"charLength":25},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in,  pixels*2)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"region":{"startLine":470,"startColumn":4,"endLine":470,"endColumn":27,"charOffset":10188,"charLength":23,"snippet":{"text":"memcpy(out, in, pixels)","rendered":{"text":"memcpy(out, in, pixels)","markdown":"`memcpy(out, in, pixels)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"replacements":[{"deletedRegion":{"charOffset":10188,"charLength":23},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in,  pixels)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"region":{"startLine":409,"startColumn":8,"endLine":409,"endColumn":35,"charOffset":8960,"charLength":27,"snippet":{"text":"memcpy(&in, in_, sizeof(in)","rendered":{"text":"memcpy(&in, in_, sizeof(in)","markdown":"`memcpy(&in, in_, sizeof(in)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"replacements":[{"deletedRegion":{"charOffset":8960,"charLength":27},"insertedContent":{"text":"memcpy_s(&in, <size of &in>,  in_,  sizeof(in)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"region":{"startLine":264,"startColumn":8,"endLine":264,"endColumn":34,"charOffset":5777,"charLength":26,"snippet":{"text":"memcpy(out, in + i * 4, 4)","rendered":{"text":"memcpy(out, in + i * 4, 4)","markdown":"`memcpy(out, in + i * 4, 4)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"replacements":[{"deletedRegion":{"charOffset":5777,"charLength":26},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in + i * 4,  4)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\SunRleDecode.c"},"region":{"startLine":115,"startColumn":23,"endLine":115,"endColumn":31,"charOffset":2921,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"region":{"startLine":89,"startColumn":23,"endLine":89,"endColumn":46,"charOffset":2432,"charLength":23,"snippet":{"text":"malloc(sizeof(uint32_t)","rendered":{"text":"malloc(sizeof(uint32_t)","markdown":"`malloc(sizeof(uint32_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"replacements":[{"deletedRegion":{"charOffset":2432,"charLength":23},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"region":{"startLine":79,"startColumn":21,"endLine":79,"endColumn":59,"charOffset":2056,"charLength":38,"snippet":{"text":"malloc(height * sizeof(unsigned char*)","rendered":{"text":"malloc(height * sizeof(unsigned char*)","markdown":"`malloc(height * sizeof(unsigned char*)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"replacements":[{"deletedRegion":{"charOffset":2056,"charLength":38},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"region":{"startLine":77,"startColumn":17,"endLine":77,"endColumn":39,"charOffset":1974,"charLength":22,"snippet":{"text":"malloc(width * height)","rendered":{"text":"malloc(width * height)","markdown":"`malloc(width * height)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"replacements":[{"deletedRegion":{"charOffset":1974,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"region":{"startLine":67,"startColumn":15,"endLine":67,"endColumn":35,"charOffset":1551,"charLength":20,"snippet":{"text":"malloc(sizeof(Pixel)","rendered":{"text":"malloc(sizeof(Pixel)","markdown":"`malloc(sizeof(Pixel)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"replacements":[{"deletedRegion":{"charOffset":1551,"charLength":20},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\HexDecode.c"},"region":{"startLine":54,"startColumn":9,"endLine":54,"endColumn":17,"charOffset":946,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"region":{"startLine":317,"startColumn":3,"endLine":317,"endColumn":67,"charOffset":9883,"charLength":64,"snippet":{"text":"memcpy(&result[nBucketsA], bucketsB, sizeof(struct _ColorBucket)","rendered":{"text":"memcpy(&result[nBucketsA], bucketsB, sizeof(struct _ColorBucket)","markdown":"`memcpy(&result[nBucketsA], bucketsB, sizeof(struct _ColorBucket)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"replacements":[{"deletedRegion":{"charOffset":9883,"charLength":64},"insertedContent":{"text":"memcpy_s(&result[nBucketsA], <size of &result[nBucketsA]>,  bucketsB,  sizeof(struct _ColorBucket)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"region":{"startLine":316,"startColumn":3,"endLine":316,"endColumn":55,"charOffset":9812,"charLength":52,"snippet":{"text":"memcpy(result, bucketsA, sizeof(struct _ColorBucket)","rendered":{"text":"memcpy(result, bucketsA, sizeof(struct _ColorBucket)","markdown":"`memcpy(result, bucketsA, sizeof(struct _ColorBucket)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"replacements":[{"deletedRegion":{"charOffset":9812,"charLength":52},"insertedContent":{"text":"memcpy_s(result, <size of result>,  bucketsA,  sizeof(struct _ColorBucket)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"region":{"startLine":181,"startColumn":3,"endLine":181,"endColumn":8,"charOffset":5449,"charLength":5,"snippet":{"text":"qsort","rendered":{"text":"qsort","markdown":"`qsort`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"region":{"startLine":179,"startColumn":3,"endLine":179,"endColumn":61,"charOffset":5371,"charLength":58,"snippet":{"text":"memcpy(buckets, cube->buckets, sizeof(struct _ColorBucket)","rendered":{"text":"memcpy(buckets, cube->buckets, sizeof(struct _ColorBucket)","markdown":"`memcpy(buckets, cube->buckets, sizeof(struct _ColorBucket)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"replacements":[{"deletedRegion":{"charOffset":5371,"charLength":58},"insertedContent":{"text":"memcpy_s(buckets, <size of buckets>,  cube->buckets,  sizeof(struct _ColorBucket)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"region":{"startLine":58,"startColumn":10,"endLine":58,"endColumn":42,"charOffset":1999,"charLength":32,"snippet":{"text":"malloc(sizeof(struct _ColorCube)","rendered":{"text":"malloc(sizeof(struct _ColorCube)","markdown":"`malloc(sizeof(struct _ColorCube)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"replacements":[{"deletedRegion":{"charOffset":1999,"charLength":32},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GifEncode.c"},"region":{"startLine":294,"startColumn":20,"endLine":294,"endColumn":59,"charOffset":8498,"charLength":39,"snippet":{"text":"memcpy(ptr+1, block->data, block->size)","rendered":{"text":"memcpy(ptr+1, block->data, block->size)","markdown":"`memcpy(ptr+1, block->data, block->size)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GifEncode.c"},"replacements":[{"deletedRegion":{"charOffset":8498,"charLength":39},"insertedContent":{"text":"memcpy_s(ptr+1, <size of ptr+1>,  block->data,  block->size)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GifEncode.c"},"region":{"startLine":192,"startColumn":23,"endLine":192,"endColumn":31,"charOffset":5209,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GifEncode.c"},"region":{"startLine":65,"startColumn":20,"endLine":65,"endColumn":50,"charOffset":1896,"charLength":30,"snippet":{"text":"malloc(sizeof(GIFENCODERBLOCK)","rendered":{"text":"malloc(sizeof(GIFENCODERBLOCK)","markdown":"`malloc(sizeof(GIFENCODERBLOCK)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GifEncode.c"},"replacements":[{"deletedRegion":{"charOffset":1896,"charLength":30},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\FliDecode.c"},"region":{"startLine":197,"startColumn":2,"endLine":197,"endColumn":33,"charOffset":4821,"charLength":31,"snippet":{"text":"memcpy(buf, data, state->xsize)","rendered":{"text":"memcpy(buf, data, state->xsize)","markdown":"`memcpy(buf, data, state->xsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\FliDecode.c"},"replacements":[{"deletedRegion":{"charOffset":4821,"charLength":31},"insertedContent":{"text":"memcpy_s(buf, <size of buf>,  data,  state->xsize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\FliDecode.c"},"region":{"startLine":176,"startColumn":3,"endLine":176,"endColumn":31,"charOffset":4337,"charLength":28,"snippet":{"text":"memcpy(out + x, data + 1, i)","rendered":{"text":"memcpy(out + x, data + 1, i)","markdown":"`memcpy(out + x, data + 1, i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\FliDecode.c"},"replacements":[{"deletedRegion":{"charOffset":4337,"charLength":28},"insertedContent":{"text":"memcpy_s(out + x, <size of out + x>,  data + 1,  i)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\FliDecode.c"},"region":{"startLine":148,"startColumn":3,"endLine":148,"endColumn":31,"charOffset":3603,"charLength":28,"snippet":{"text":"memcpy(out + x, data + 2, i)","rendered":{"text":"memcpy(out + x, data + 2, i)","markdown":"`memcpy(out + x, data + 2, i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\FliDecode.c"},"replacements":[{"deletedRegion":{"charOffset":3603,"charLength":28},"insertedContent":{"text":"memcpy_s(out + x, <size of out + x>,  data + 2,  i)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\FliDecode.c"},"region":{"startLine":116,"startColumn":3,"endLine":116,"endColumn":31,"charOffset":2762,"charLength":28,"snippet":{"text":"memcpy(buf + x, data + 2, i)","rendered":{"text":"memcpy(buf + x, data + 2, i)","markdown":"`memcpy(buf + x, data + 2, i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\FliDecode.c"},"replacements":[{"deletedRegion":{"charOffset":2762,"charLength":28},"insertedContent":{"text":"memcpy_s(buf + x, <size of buf + x>,  data + 2,  i)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Negative.c"},"region":{"startLine":8,"startColumn":8,"endLine":8,"endColumn":13,"charOffset":88,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GifDecode.c"},"region":{"startLine":278,"startColumn":5,"endLine":278,"endColumn":22,"charOffset":6354,"charLength":17,"snippet":{"text":"memcpy(out, p, i)","rendered":{"text":"memcpy(out, p, i)","markdown":"`memcpy(out, p, i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GifDecode.c"},"replacements":[{"deletedRegion":{"charOffset":6354,"charLength":17},"insertedContent":{"text":"memcpy_s(out, <size of out>,  p,  i)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GifDecode.c"},"region":{"startLine":267,"startColumn":4,"endLine":267,"endColumn":9,"charOffset":6032,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ModeFilter.c"},"region":{"startLine":43,"startColumn":15,"endLine":43,"endColumn":20,"charOffset":1020,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"winbuild\\config.py"},"region":{"startLine":80,"startColumn":16,"endLine":80,"endColumn":48,"charOffset":2405,"charLength":32,"snippet":{"text":"http://downloads.webmproject.org","rendered":{"text":"http://downloads.webmproject.org","markdown":"`http://downloads.webmproject.org`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"winbuild\\config.py"},"replacements":[{"deletedRegion":{"charOffset":2405,"charLength":32},"insertedContent":{"text":"https://downloads.webmproject.org"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"winbuild\\config.py"},"region":{"startLine":33,"startColumn":16,"endLine":33,"endColumn":34,"charOffset":873,"charLength":18,"snippet":{"text":"http://www.ijg.org","rendered":{"text":"http://www.ijg.org","markdown":"`http://www.ijg.org`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"winbuild\\config.py"},"replacements":[{"deletedRegion":{"charOffset":873,"charLength":18},"insertedContent":{"text":"https://www.ijg.org"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"winbuild\\config.py"},"region":{"startLine":28,"startColumn":16,"endLine":28,"endColumn":31,"charOffset":734,"charLength":15,"snippet":{"text":"http://zlib.net","rendered":{"text":"http://zlib.net","markdown":"`http://zlib.net`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"winbuild\\config.py"},"replacements":[{"deletedRegion":{"charOffset":734,"charLength":15},"insertedContent":{"text":"https://zlib.net"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Matrix.c"},"region":{"startLine":50,"startColumn":15,"endLine":50,"endColumn":27,"charOffset":1088,"charLength":12,"snippet":{"text":"strlen(mode)","rendered":{"text":"strlen(mode)","markdown":"`strlen(mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Matrix.c"},"replacements":[{"deletedRegion":{"charOffset":1088,"charLength":12},"insertedContent":{"text":"strlen_s(mode, <size of mode>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Matrix.c"},"replacements":[{"deletedRegion":{"charOffset":1088,"charLength":12},"insertedContent":{"text":"strnlen(mode, <size of mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":323,"startColumn":4,"endLine":323,"endColumn":59,"charOffset":13542,"charLength":55,"snippet":{"text":"memcpy(imOut->image[y+1], im->image[y+1], im->linesize)","rendered":{"text":"memcpy(imOut->image[y+1], im->image[y+1], im->linesize)","markdown":"`memcpy(imOut->image[y+1], im->image[y+1], im->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":13542,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[y+1], <size of imOut->image[y+1]>,  im->image[y+1],  im->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":322,"startColumn":4,"endLine":322,"endColumn":55,"charOffset":13484,"charLength":51,"snippet":{"text":"memcpy(imOut->image[y], im->image[y], im->linesize)","rendered":{"text":"memcpy(imOut->image[y], im->image[y], im->linesize)","markdown":"`memcpy(imOut->image[y], im->image[y], im->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":13484,"charLength":51},"insertedContent":{"text":"memcpy_s(imOut->image[y], <size of imOut->image[y]>,  im->image[y],  im->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":319,"startColumn":12,"endLine":319,"endColumn":85,"charOffset":13381,"charLength":73,"snippet":{"text":"memcpy(out + x * sizeof(UINT32), in0 + x * sizeof(UINT32), sizeof(UINT32)","rendered":{"text":"memcpy(out + x * sizeof(UINT32), in0 + x * sizeof(UINT32), sizeof(UINT32)","markdown":"`memcpy(out + x * sizeof(UINT32), in0 + x * sizeof(UINT32), sizeof(UINT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":13381,"charLength":73},"insertedContent":{"text":"memcpy_s(out + x * sizeof(UINT32), <size of out + x * sizeof(UINT32)>,  in0 + x * sizeof(UINT32),  sizeof(UINT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":316,"startColumn":20,"endLine":316,"endColumn":61,"charOffset":13290,"charLength":41,"snippet":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(out + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":13290,"charLength":41},"insertedContent":{"text":"memcpy_s(out + x * sizeof(v), <size of out + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":285,"startColumn":20,"endLine":285,"endColumn":61,"charOffset":11464,"charLength":41,"snippet":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(out + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":11464,"charLength":41},"insertedContent":{"text":"memcpy_s(out + x * sizeof(v), <size of out + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":260,"startColumn":20,"endLine":260,"endColumn":61,"charOffset":10023,"charLength":41,"snippet":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(out + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":10023,"charLength":41},"insertedContent":{"text":"memcpy_s(out + x * sizeof(v), <size of out + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":243,"startColumn":12,"endLine":243,"endColumn":43,"charOffset":9025,"charLength":31,"snippet":{"text":"memcpy(out, in0, sizeof(UINT32)","rendered":{"text":"memcpy(out, in0, sizeof(UINT32)","markdown":"`memcpy(out, in0, sizeof(UINT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":9025,"charLength":31},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in0,  sizeof(UINT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":206,"startColumn":4,"endLine":206,"endColumn":55,"charOffset":7520,"charLength":51,"snippet":{"text":"memcpy(imOut->image[1], im->image[1], im->linesize)","rendered":{"text":"memcpy(imOut->image[1], im->image[1], im->linesize)","markdown":"`memcpy(imOut->image[1], im->image[1], im->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":7520,"charLength":51},"insertedContent":{"text":"memcpy_s(imOut->image[1], <size of imOut->image[1]>,  im->image[1],  im->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":205,"startColumn":4,"endLine":205,"endColumn":55,"charOffset":7462,"charLength":51,"snippet":{"text":"memcpy(imOut->image[0], im->image[0], im->linesize)","rendered":{"text":"memcpy(imOut->image[0], im->image[0], im->linesize)","markdown":"`memcpy(imOut->image[0], im->image[0], im->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":7462,"charLength":51},"insertedContent":{"text":"memcpy_s(imOut->image[0], <size of imOut->image[0]>,  im->image[0],  im->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":188,"startColumn":4,"endLine":188,"endColumn":55,"charOffset":6974,"charLength":51,"snippet":{"text":"memcpy(imOut->image[y], im->image[y], im->linesize)","rendered":{"text":"memcpy(imOut->image[y], im->image[y], im->linesize)","markdown":"`memcpy(imOut->image[y], im->image[y], im->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":6974,"charLength":51},"insertedContent":{"text":"memcpy_s(imOut->image[y], <size of imOut->image[y]>,  im->image[y],  im->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":185,"startColumn":12,"endLine":185,"endColumn":85,"charOffset":6875,"charLength":73,"snippet":{"text":"memcpy(out + x * sizeof(UINT32), in0 + x * sizeof(UINT32), sizeof(UINT32)","rendered":{"text":"memcpy(out + x * sizeof(UINT32), in0 + x * sizeof(UINT32), sizeof(UINT32)","markdown":"`memcpy(out + x * sizeof(UINT32), in0 + x * sizeof(UINT32), sizeof(UINT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":6875,"charLength":73},"insertedContent":{"text":"memcpy_s(out + x * sizeof(UINT32), <size of out + x * sizeof(UINT32)>,  in0 + x * sizeof(UINT32),  sizeof(UINT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":182,"startColumn":20,"endLine":182,"endColumn":61,"charOffset":6784,"charLength":41,"snippet":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(out + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":6784,"charLength":41},"insertedContent":{"text":"memcpy_s(out + x * sizeof(v), <size of out + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":159,"startColumn":20,"endLine":159,"endColumn":61,"charOffset":5502,"charLength":41,"snippet":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(out + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":5502,"charLength":41},"insertedContent":{"text":"memcpy_s(out + x * sizeof(v), <size of out + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":140,"startColumn":20,"endLine":140,"endColumn":61,"charOffset":4469,"charLength":41,"snippet":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(out + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":4469,"charLength":41},"insertedContent":{"text":"memcpy_s(out + x * sizeof(v), <size of out + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":127,"startColumn":12,"endLine":127,"endColumn":43,"charOffset":3747,"charLength":31,"snippet":{"text":"memcpy(out, in0, sizeof(UINT32)","rendered":{"text":"memcpy(out, in0, sizeof(UINT32)","markdown":"`memcpy(out, in0, sizeof(UINT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":3747,"charLength":31},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in0,  sizeof(UINT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":98,"startColumn":4,"endLine":98,"endColumn":55,"charOffset":2633,"charLength":51,"snippet":{"text":"memcpy(imOut->image[0], im->image[0], im->linesize)","rendered":{"text":"memcpy(imOut->image[0], im->image[0], im->linesize)","markdown":"`memcpy(imOut->image[0], im->image[0], im->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":2633,"charLength":51},"insertedContent":{"text":"memcpy_s(imOut->image[0], <size of imOut->image[0]>,  im->image[0],  im->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":24,"startColumn":3,"endLine":24,"endColumn":8,"charOffset":727,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":23,"startColumn":3,"endLine":23,"endColumn":8,"charOffset":658,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":22,"startColumn":3,"endLine":22,"endColumn":8,"charOffset":607,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\example\\DdsImagePlugin.py"},"region":{"startLine":177,"startColumn":6,"endLine":177,"endColumn":10,"charOffset":4819,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\example\\DdsImagePlugin.py"},"region":{"startLine":115,"startColumn":6,"endLine":115,"endColumn":10,"charOffset":2813,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\example\\DdsImagePlugin.py"},"region":{"startLine":6,"startColumn":45,"endLine":6,"endColumn":63,"charOffset":164,"charLength":18,"snippet":{"text":"http://oss.sgi.com","rendered":{"text":"http://oss.sgi.com","markdown":"`http://oss.sgi.com`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"docs\\example\\DdsImagePlugin.py"},"replacements":[{"deletedRegion":{"charOffset":164,"charLength":18},"insertedContent":{"text":"https://oss.sgi.com"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":222,"startColumn":7,"endLine":222,"endColumn":12,"charOffset":5645,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":204,"startColumn":10,"endLine":204,"endColumn":60,"charOffset":5193,"charLength":50,"snippet":{"text":"memcpy(((char*)extrema) + sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(((char*)extrema) + sizeof(v), &v, sizeof(v)","markdown":"`memcpy(((char*)extrema) + sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"replacements":[{"deletedRegion":{"charOffset":5193,"charLength":50},"insertedContent":{"text":"memcpy_s(((char*)extrema) + sizeof(v), <size of ((char*)extrema) + sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":202,"startColumn":10,"endLine":202,"endColumn":39,"charOffset":5120,"charLength":29,"snippet":{"text":"memcpy(extrema, &v, sizeof(v)","rendered":{"text":"memcpy(extrema, &v, sizeof(v)","markdown":"`memcpy(extrema, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"replacements":[{"deletedRegion":{"charOffset":5120,"charLength":29},"insertedContent":{"text":"memcpy_s(extrema, <size of extrema>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":193,"startColumn":18,"endLine":193,"endColumn":45,"charOffset":4874,"charLength":27,"snippet":{"text":"memcpy(&v, pixel, sizeof(v)","rendered":{"text":"memcpy(&v, pixel, sizeof(v)","markdown":"`memcpy(&v, pixel, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"replacements":[{"deletedRegion":{"charOffset":4874,"charLength":27},"insertedContent":{"text":"memcpy_s(&v, <size of &v>,  pixel,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":184,"startColumn":10,"endLine":184,"endColumn":37,"charOffset":4556,"charLength":27,"snippet":{"text":"memcpy(&v, pixel, sizeof(v)","rendered":{"text":"memcpy(&v, pixel, sizeof(v)","markdown":"`memcpy(&v, pixel, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"replacements":[{"deletedRegion":{"charOffset":4556,"charLength":27},"insertedContent":{"text":"memcpy_s(&v, <size of &v>,  pixel,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":175,"startColumn":8,"endLine":175,"endColumn":67,"charOffset":4257,"charLength":59,"snippet":{"text":"memcpy(((char*)extrema) + sizeof(fmin), &fmax, sizeof(fmax)","rendered":{"text":"memcpy(((char*)extrema) + sizeof(fmin), &fmax, sizeof(fmax)","markdown":"`memcpy(((char*)extrema) + sizeof(fmin), &fmax, sizeof(fmax)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"replacements":[{"deletedRegion":{"charOffset":4257,"charLength":59},"insertedContent":{"text":"memcpy_s(((char*)extrema) + sizeof(fmin), <size of ((char*)extrema) + sizeof(fmin)>,  &fmax,  sizeof(fmax)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":174,"startColumn":8,"endLine":174,"endColumn":43,"charOffset":4210,"charLength":35,"snippet":{"text":"memcpy(extrema, &fmin, sizeof(fmin)","rendered":{"text":"memcpy(extrema, &fmin, sizeof(fmin)","markdown":"`memcpy(extrema, &fmin, sizeof(fmin)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"replacements":[{"deletedRegion":{"charOffset":4210,"charLength":35},"insertedContent":{"text":"memcpy_s(extrema, <size of extrema>,  &fmin,  sizeof(fmin)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":161,"startColumn":8,"endLine":161,"endColumn":67,"charOffset":3721,"charLength":59,"snippet":{"text":"memcpy(((char*)extrema) + sizeof(imin), &imax, sizeof(imax)","rendered":{"text":"memcpy(((char*)extrema) + sizeof(imin), &imax, sizeof(imax)","markdown":"`memcpy(((char*)extrema) + sizeof(imin), &imax, sizeof(imax)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"replacements":[{"deletedRegion":{"charOffset":3721,"charLength":59},"insertedContent":{"text":"memcpy_s(((char*)extrema) + sizeof(imin), <size of ((char*)extrema) + sizeof(imin)>,  &imax,  sizeof(imax)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":160,"startColumn":8,"endLine":160,"endColumn":43,"charOffset":3674,"charLength":35,"snippet":{"text":"memcpy(extrema, &imin, sizeof(imin)","rendered":{"text":"memcpy(extrema, &imin, sizeof(imin)","markdown":"`memcpy(extrema, &imin, sizeof(imin)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"replacements":[{"deletedRegion":{"charOffset":3674,"charLength":35},"insertedContent":{"text":"memcpy_s(extrema, <size of extrema>,  &imin,  sizeof(imin)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageFile.py"},"region":{"startLine":487,"startColumn":6,"endLine":487,"endColumn":11,"charOffset":15401,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageFile.py"},"region":{"startLine":214,"startColumn":18,"endLine":214,"endColumn":23,"charOffset":6447,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":".github\\workflows\\test-windows.yml"},"region":{"startLine":85,"startColumn":12,"endLine":85,"endColumn":17,"charOffset":2789,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"yaml"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS425000","level":"note","message":{"text":"Do not deserialize untrusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_pickle.py"},"region":{"startLine":87,"startColumn":24,"endLine":87,"endColumn":35,"charOffset":2603,"charLength":11,"snippet":{"text":"pickle.load","rendered":{"text":"pickle.load","markdown":"`pickle.load`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Deserialization"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS425000","level":"note","message":{"text":"Do not deserialize untrusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_pickle.py"},"region":{"startLine":17,"startColumn":24,"endLine":17,"endColumn":35,"charOffset":445,"charLength":11,"snippet":{"text":"pickle.load","rendered":{"text":"pickle.load","markdown":"`pickle.load`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Deserialization"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Fill.c"},"region":{"startLine":90,"startColumn":8,"endLine":90,"endColumn":20,"charOffset":2167,"charLength":12,"snippet":{"text":"strlen(mode)","rendered":{"text":"strlen(mode)","markdown":"`strlen(mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Fill.c"},"replacements":[{"deletedRegion":{"charOffset":2167,"charLength":12},"insertedContent":{"text":"strlen_s(mode, <size of mode>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Fill.c"},"replacements":[{"deletedRegion":{"charOffset":2167,"charLength":12},"insertedContent":{"text":"strnlen(mode, <size of mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Fill.c"},"region":{"startLine":67,"startColumn":8,"endLine":67,"endColumn":20,"charOffset":1764,"charLength":12,"snippet":{"text":"strlen(mode)","rendered":{"text":"strlen(mode)","markdown":"`strlen(mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Fill.c"},"replacements":[{"deletedRegion":{"charOffset":1764,"charLength":12},"insertedContent":{"text":"strlen_s(mode, <size of mode>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Fill.c"},"replacements":[{"deletedRegion":{"charOffset":1764,"charLength":12},"insertedContent":{"text":"strnlen(mode, <size of mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Fill.c"},"region":{"startLine":45,"startColumn":8,"endLine":45,"endColumn":41,"charOffset":1189,"charLength":33,"snippet":{"text":"memcpy(&c, colour, im->pixelsize)","rendered":{"text":"memcpy(&c, colour, im->pixelsize)","markdown":"`memcpy(&c, colour, im->pixelsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Fill.c"},"replacements":[{"deletedRegion":{"charOffset":1189,"charLength":33},"insertedContent":{"text":"memcpy_s(&c, <size of &c>,  colour,  im->pixelsize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\File.c"},"region":{"startLine":71,"startColumn":8,"endLine":71,"endColumn":15,"charOffset":1570,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\File.c"},"region":{"startLine":68,"startColumn":8,"endLine":68,"endColumn":15,"charOffset":1431,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\File.c"},"region":{"startLine":60,"startColumn":9,"endLine":60,"endColumn":14,"charOffset":1220,"charLength":5,"snippet":{"text":"fopen","rendered":{"text":"fopen","markdown":"`fopen`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\File.c"},"region":{"startLine":31,"startColumn":20,"endLine":31,"endColumn":25,"charOffset":616,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Except.c"},"region":{"startLine":61,"startColumn":4,"endLine":61,"endColumn":11,"charOffset":1253,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Except.c"},"region":{"startLine":38,"startColumn":4,"endLine":38,"endColumn":11,"charOffset":806,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Except.c"},"region":{"startLine":31,"startColumn":4,"endLine":31,"endColumn":11,"charOffset":680,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_image_reduce.py"},"region":{"startLine":171,"startColumn":28,"endLine":171,"endColumn":52,"charOffset":5226,"charLength":24,"snippet":{"text":"eval(\"convert(abs(a - b)","rendered":{"text":"eval(\"convert(abs(a - b)","markdown":"`eval(\"convert(abs(a - b)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\EpsEncode.c"},"region":{"startLine":12,"startColumn":3,"endLine":12,"endColumn":8,"charOffset":191,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Effects.c"},"region":{"startLine":133,"startColumn":26,"endLine":133,"endColumn":34,"charOffset":3418,"charLength":8,"snippet":{"text":"rand() %","rendered":{"text":"rand() %","markdown":"`rand() %`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Effects.c"},"region":{"startLine":133,"startColumn":26,"endLine":133,"endColumn":31,"charOffset":3418,"charLength":5,"snippet":{"text":"rand(","rendered":{"text":"rand(","markdown":"`rand(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Effects.c"},"region":{"startLine":132,"startColumn":26,"endLine":132,"endColumn":34,"charOffset":3357,"charLength":8,"snippet":{"text":"rand() %","rendered":{"text":"rand() %","markdown":"`rand() %`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Effects.c"},"region":{"startLine":132,"startColumn":26,"endLine":132,"endColumn":31,"charOffset":3357,"charLength":5,"snippet":{"text":"rand(","rendered":{"text":"rand(","markdown":"`rand(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Effects.c"},"region":{"startLine":102,"startColumn":37,"endLine":102,"endColumn":45,"charOffset":2613,"charLength":8,"snippet":{"text":"RAND_MAX","rendered":{"text":"RAND_MAX","markdown":"`RAND_MAX`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Effects.c"},"region":{"startLine":102,"startColumn":25,"endLine":102,"endColumn":30,"charOffset":2601,"charLength":5,"snippet":{"text":"rand(","rendered":{"text":"rand(","markdown":"`rand(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Effects.c"},"region":{"startLine":101,"startColumn":37,"endLine":101,"endColumn":45,"charOffset":2558,"charLength":8,"snippet":{"text":"RAND_MAX","rendered":{"text":"RAND_MAX","markdown":"`RAND_MAX`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Effects.c"},"region":{"startLine":101,"startColumn":25,"endLine":101,"endColumn":30,"charOffset":2546,"charLength":5,"snippet":{"text":"rand(","rendered":{"text":"rand(","markdown":"`rand(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageDraw2.py"},"region":{"startLine":35,"startColumn":10,"endLine":35,"endColumn":15,"charOffset":836,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":1193,"startColumn":11,"endLine":1193,"endColumn":16,"charOffset":29743,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":1176,"startColumn":7,"endLine":1176,"endColumn":12,"charOffset":29369,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":615,"startColumn":8,"endLine":615,"endColumn":38,"charOffset":15470,"charLength":30,"snippet":{"text":"memcpy(&ink, ink_, sizeof(ink)","rendered":{"text":"memcpy(&ink, ink_, sizeof(ink)","markdown":"`memcpy(&ink, ink_, sizeof(ink)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"replacements":[{"deletedRegion":{"charOffset":15470,"charLength":30},"insertedContent":{"text":"memcpy_s(&ink, <size of &ink>,  ink_,  sizeof(ink)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":513,"startColumn":8,"endLine":513,"endColumn":13,"charOffset":12469,"charLength":5,"snippet":{"text":"qsort","rendered":{"text":"qsort","markdown":"`qsort`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":33,"startColumn":3,"endLine":33,"endColumn":8,"charOffset":1296,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":32,"startColumn":3,"endLine":32,"endColumn":8,"charOffset":1235,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":31,"startColumn":3,"endLine":31,"endColumn":8,"charOffset":1195,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":30,"startColumn":3,"endLine":30,"endColumn":8,"charOffset":1128,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageDraw.py"},"region":{"startLine":487,"startColumn":6,"endLine":487,"endColumn":11,"charOffset":16821,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageDraw.py"},"region":{"startLine":486,"startColumn":6,"endLine":486,"endColumn":11,"charOffset":16785,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageDraw.py"},"region":{"startLine":95,"startColumn":14,"endLine":95,"endColumn":19,"charOffset":3080,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageDraw.py"},"region":{"startLine":82,"startColumn":14,"endLine":82,"endColumn":19,"charOffset":2697,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":664,"startColumn":12,"endLine":664,"endColumn":19,"charOffset":21381,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":660,"startColumn":8,"endLine":660,"endColumn":15,"charOffset":21268,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":651,"startColumn":12,"endLine":651,"endColumn":19,"charOffset":21026,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":647,"startColumn":8,"endLine":647,"endColumn":15,"charOffset":20909,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":638,"startColumn":12,"endLine":638,"endColumn":19,"charOffset":20658,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":633,"startColumn":8,"endLine":633,"endColumn":15,"charOffset":20522,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":57,"startColumn":22,"endLine":57,"endColumn":29,"charOffset":1828,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":55,"startColumn":22,"endLine":55,"endColumn":29,"charOffset":1718,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_image_array.py"},"region":{"startLine":19,"startColumn":6,"endLine":19,"endColumn":11,"charOffset":489,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_image_array.py"},"region":{"startLine":17,"startColumn":6,"endLine":17,"endColumn":11,"charOffset":398,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"region":{"startLine":223,"startColumn":7,"endLine":223,"endColumn":12,"charOffset":6360,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"region":{"startLine":113,"startColumn":21,"endLine":113,"endColumn":33,"charOffset":2945,"charLength":12,"snippet":{"text":"strlen(mode)","rendered":{"text":"strlen(mode)","markdown":"`strlen(mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"replacements":[{"deletedRegion":{"charOffset":2945,"charLength":12},"insertedContent":{"text":"strlen_s(mode, <size of mode>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"replacements":[{"deletedRegion":{"charOffset":2945,"charLength":12},"insertedContent":{"text":"strnlen(mode, <size of mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"region":{"startLine":109,"startColumn":4,"endLine":109,"endColumn":27,"charOffset":2846,"charLength":23,"snippet":{"text":"strcpy(dib->mode, mode)","rendered":{"text":"strcpy(dib->mode, mode)","markdown":"`strcpy(dib->mode, mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"replacements":[{"deletedRegion":{"charOffset":2846,"charLength":23},"insertedContent":{"text":"strcpy_s(dib->mode, <size of dib->mode>,  mode)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"replacements":[{"deletedRegion":{"charOffset":2846,"charLength":23},"insertedContent":{"text":"strlcpy(dib->mode,  mode, <size of dib->mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"region":{"startLine":90,"startColumn":38,"endLine":90,"endColumn":50,"charOffset":2310,"charLength":12,"snippet":{"text":"strlen(mode)","rendered":{"text":"strlen(mode)","markdown":"`strlen(mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"replacements":[{"deletedRegion":{"charOffset":2310,"charLength":12},"insertedContent":{"text":"strlen_s(mode, <size of mode>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"replacements":[{"deletedRegion":{"charOffset":2310,"charLength":12},"insertedContent":{"text":"strnlen(mode, <size of mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"region":{"startLine":78,"startColumn":30,"endLine":78,"endColumn":61,"charOffset":1825,"charLength":31,"snippet":{"text":"malloc(sizeof(BITMAPINFOHEADER)","rendered":{"text":"malloc(sizeof(BITMAPINFOHEADER)","markdown":"`malloc(sizeof(BITMAPINFOHEADER)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"replacements":[{"deletedRegion":{"charOffset":1825,"charLength":31},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"region":{"startLine":74,"startColumn":23,"endLine":74,"endColumn":42,"charOffset":1646,"charLength":19,"snippet":{"text":"malloc(sizeof(*dib)","rendered":{"text":"malloc(sizeof(*dib)","markdown":"`malloc(sizeof(*dib)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"replacements":[{"deletedRegion":{"charOffset":1646,"charLength":19},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Copy.c"},"region":{"startLine":42,"startColumn":12,"endLine":42,"endColumn":67,"charOffset":927,"charLength":55,"snippet":{"text":"memcpy(imOut->image[y], imIn->image[y], imIn->linesize)","rendered":{"text":"memcpy(imOut->image[y], imIn->image[y], imIn->linesize)","markdown":"`memcpy(imOut->image[y], imIn->image[y], imIn->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Copy.c"},"replacements":[{"deletedRegion":{"charOffset":927,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[y], <size of imOut->image[y]>,  imIn->image[y],  imIn->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Copy.c"},"region":{"startLine":39,"startColumn":1,"endLine":39,"endColumn":64,"charOffset":796,"charLength":63,"snippet":{"text":"memcpy(imOut->block, imIn->block, imIn->ysize * imIn->linesize)","rendered":{"text":"memcpy(imOut->block, imIn->block, imIn->ysize * imIn->linesize)","markdown":"`memcpy(imOut->block, imIn->block, imIn->ysize * imIn->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Copy.c"},"replacements":[{"deletedRegion":{"charOffset":796,"charLength":63},"insertedContent":{"text":"memcpy_s(imOut->block, <size of imOut->block>,  imIn->block,  imIn->ysize * imIn->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\path.c"},"region":{"startLine":125,"startColumn":8,"endLine":125,"endColumn":61,"charOffset":3251,"charLength":53,"snippet":{"text":"memcpy(xy, path->xy, 2 * path->count * sizeof(double)","rendered":{"text":"memcpy(xy, path->xy, 2 * path->count * sizeof(double)","markdown":"`memcpy(xy, path->xy, 2 * path->count * sizeof(double)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\path.c"},"replacements":[{"deletedRegion":{"charOffset":3251,"charLength":53},"insertedContent":{"text":"memcpy_s(xy, <size of xy>,  path->xy,  2 * path->count * sizeof(double)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\path.c"},"region":{"startLine":79,"startColumn":8,"endLine":79,"endColumn":48,"charOffset":2179,"charLength":40,"snippet":{"text":"memcpy(p, xy, count * 2 * sizeof(double)","rendered":{"text":"memcpy(p, xy, count * 2 * sizeof(double)","markdown":"`memcpy(p, xy, count * 2 * sizeof(double)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\path.c"},"replacements":[{"deletedRegion":{"charOffset":2179,"charLength":40},"insertedContent":{"text":"memcpy_s(p, <size of p>,  xy,  count * 2 * sizeof(double)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\path.c"},"region":{"startLine":63,"startColumn":9,"endLine":63,"endColumn":42,"charOffset":1825,"charLength":33,"snippet":{"text":"malloc(2 * count * sizeof(double)","rendered":{"text":"malloc(2 * count * sizeof(double)","markdown":"`malloc(2 * count * sizeof(double)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\path.c"},"replacements":[{"deletedRegion":{"charOffset":1825,"charLength":33},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\path.c"},"region":{"startLine":20,"startColumn":3,"endLine":20,"endColumn":8,"charOffset":669,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagepalette.py"},"region":{"startLine":67,"startColumn":19,"endLine":67,"endColumn":24,"charOffset":1482,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageCms.py"},"region":{"startLine":970,"startColumn":10,"endLine":970,"endColumn":15,"charOffset":36403,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageCms.py"},"region":{"startLine":40,"startColumn":26,"endLine":40,"endColumn":50,"charOffset":967,"charLength":24,"snippet":{"text":"http://www.littlecms.com","rendered":{"text":"http://www.littlecms.com","markdown":"`http://www.littlecms.com`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"src\\PIL\\ImageCms.py"},"replacements":[{"deletedRegion":{"charOffset":967,"charLength":24},"insertedContent":{"text":"https://www.littlecms.com"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageCms.py"},"region":{"startLine":39,"startColumn":22,"endLine":39,"endColumn":44,"charOffset":911,"charLength":22,"snippet":{"text":"http://www.cazabon.com","rendered":{"text":"http://www.cazabon.com","markdown":"`http://www.cazabon.com`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"src\\PIL\\ImageCms.py"},"replacements":[{"deletedRegion":{"charOffset":911,"charLength":22},"insertedContent":{"text":"https://www.cazabon.com"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageCms.py"},"region":{"startLine":37,"startColumn":4,"endLine":37,"endColumn":26,"charOffset":863,"charLength":22,"snippet":{"text":"http://www.cazabon.com","rendered":{"text":"http://www.cazabon.com","markdown":"`http://www.cazabon.com`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"src\\PIL\\ImageCms.py"},"replacements":[{"deletedRegion":{"charOffset":863,"charLength":22},"insertedContent":{"text":"https://www.cazabon.com"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS425000","level":"note","message":{"text":"Do not deserialize untrusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_file_gif.py"},"region":{"startLine":808,"startColumn":35,"endLine":808,"endColumn":46,"charOffset":24131,"charLength":11,"snippet":{"text":"pickle.load","rendered":{"text":"pickle.load","markdown":"`pickle.load`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Deserialization"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1687,"startColumn":6,"endLine":1687,"endColumn":13,"charOffset":42356,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1686,"startColumn":9,"endLine":1686,"endColumn":14,"charOffset":42305,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1629,"startColumn":6,"endLine":1629,"endColumn":13,"charOffset":40854,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1628,"startColumn":9,"endLine":1628,"endColumn":14,"charOffset":40803,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1368,"startColumn":16,"endLine":1368,"endColumn":71,"charOffset":32832,"charLength":55,"snippet":{"text":"memcpy(imOut->image[y], imIn->image[y], imIn->linesize)","rendered":{"text":"memcpy(imOut->image[y], imIn->image[y], imIn->linesize)","markdown":"`memcpy(imOut->image[y], imIn->image[y], imIn->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":32832,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[y], <size of imOut->image[y]>,  imIn->image[y],  imIn->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1339,"startColumn":9,"endLine":1339,"endColumn":14,"charOffset":31893,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1151,"startColumn":8,"endLine":1151,"endColumn":34,"charOffset":26832,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":26832,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1132,"startColumn":8,"endLine":1132,"endColumn":34,"charOffset":26363,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":26363,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1119,"startColumn":7,"endLine":1119,"endColumn":12,"charOffset":25966,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1107,"startColumn":7,"endLine":1107,"endColumn":12,"charOffset":25635,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1085,"startColumn":7,"endLine":1085,"endColumn":12,"charOffset":25098,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1076,"startColumn":7,"endLine":1076,"endColumn":12,"charOffset":24867,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1067,"startColumn":7,"endLine":1067,"endColumn":12,"charOffset":24613,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1058,"startColumn":7,"endLine":1058,"endColumn":12,"charOffset":24365,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1048,"startColumn":3,"endLine":1048,"endColumn":8,"charOffset":24102,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":883,"startColumn":8,"endLine":883,"endColumn":34,"charOffset":20188,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":20188,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":872,"startColumn":8,"endLine":872,"endColumn":34,"charOffset":19955,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":19955,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":862,"startColumn":8,"endLine":862,"endColumn":34,"charOffset":19724,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":19724,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":851,"startColumn":8,"endLine":851,"endColumn":34,"charOffset":19493,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":19493,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":837,"startColumn":8,"endLine":837,"endColumn":33,"charOffset":19174,"charLength":25,"snippet":{"text":"memcpy(&i, in_, sizeof(i)","rendered":{"text":"memcpy(&i, in_, sizeof(i)","markdown":"`memcpy(&i, in_, sizeof(i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":19174,"charLength":25},"insertedContent":{"text":"memcpy_s(&i, <size of &i>,  in_,  sizeof(i)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":824,"startColumn":8,"endLine":824,"endColumn":33,"charOffset":18893,"charLength":25,"snippet":{"text":"memcpy(&i, in_, sizeof(i)","rendered":{"text":"memcpy(&i, in_, sizeof(i)","markdown":"`memcpy(&i, in_, sizeof(i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":18893,"charLength":25},"insertedContent":{"text":"memcpy_s(&i, <size of &i>,  in_,  sizeof(i)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":762,"startColumn":8,"endLine":762,"endColumn":34,"charOffset":17668,"charLength":26,"snippet":{"text":"memcpy(out_, &i, sizeof(i)","rendered":{"text":"memcpy(out_, &i, sizeof(i)","markdown":"`memcpy(out_, &i, sizeof(i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":17668,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &i,  sizeof(i)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":760,"startColumn":8,"endLine":760,"endColumn":33,"charOffset":17615,"charLength":25,"snippet":{"text":"memcpy(&f, in_, sizeof(f)","rendered":{"text":"memcpy(&f, in_, sizeof(f)","markdown":"`memcpy(&f, in_, sizeof(f)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":17615,"charLength":25},"insertedContent":{"text":"memcpy_s(&f, <size of &f>,  in_,  sizeof(f)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":743,"startColumn":8,"endLine":743,"endColumn":33,"charOffset":17251,"charLength":25,"snippet":{"text":"memcpy(&v, in_, sizeof(v)","rendered":{"text":"memcpy(&v, in_, sizeof(v)","markdown":"`memcpy(&v, in_, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":17251,"charLength":25},"insertedContent":{"text":"memcpy_s(&v, <size of &v>,  in_,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":733,"startColumn":8,"endLine":733,"endColumn":34,"charOffset":17055,"charLength":26,"snippet":{"text":"memcpy(out_, &f, sizeof(f)","rendered":{"text":"memcpy(out_, &f, sizeof(f)","markdown":"`memcpy(out_, &f, sizeof(f)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":17055,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &f,  sizeof(f)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":723,"startColumn":8,"endLine":723,"endColumn":34,"charOffset":16847,"charLength":26,"snippet":{"text":"memcpy(out_, &f, sizeof(f)","rendered":{"text":"memcpy(out_, &f, sizeof(f)","markdown":"`memcpy(out_, &f, sizeof(f)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":16847,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &f,  sizeof(f)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":674,"startColumn":8,"endLine":674,"endColumn":34,"charOffset":15752,"charLength":26,"snippet":{"text":"memcpy(out_, &f, sizeof(f)","rendered":{"text":"memcpy(out_, &f, sizeof(f)","markdown":"`memcpy(out_, &f, sizeof(f)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":15752,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &f,  sizeof(f)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":672,"startColumn":8,"endLine":672,"endColumn":33,"charOffset":15699,"charLength":25,"snippet":{"text":"memcpy(&i, in_, sizeof(i)","rendered":{"text":"memcpy(&i, in_, sizeof(i)","markdown":"`memcpy(&i, in_, sizeof(i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":15699,"charLength":25},"insertedContent":{"text":"memcpy_s(&i, <size of &i>,  in_,  sizeof(i)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":655,"startColumn":8,"endLine":655,"endColumn":33,"charOffset":15339,"charLength":25,"snippet":{"text":"memcpy(&v, in_, sizeof(v)","rendered":{"text":"memcpy(&v, in_, sizeof(v)","markdown":"`memcpy(&v, in_, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":15339,"charLength":25},"insertedContent":{"text":"memcpy_s(&v, <size of &v>,  in_,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":645,"startColumn":8,"endLine":645,"endColumn":34,"charOffset":15145,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":15145,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":635,"startColumn":8,"endLine":635,"endColumn":34,"charOffset":14949,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":14949,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":547,"startColumn":12,"endLine":547,"endColumn":43,"charOffset":13043,"charLength":31,"snippet":{"text":"memcpy(out, &repl, sizeof(repl)","rendered":{"text":"memcpy(out, &repl, sizeof(repl)","markdown":"`memcpy(out, &repl, sizeof(repl)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":13043,"charLength":31},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &repl,  sizeof(repl)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":545,"startColumn":8,"endLine":545,"endColumn":33,"charOffset":12978,"charLength":25,"snippet":{"text":"memcpy(&v, out, sizeof(v)","rendered":{"text":"memcpy(&v, out, sizeof(v)","markdown":"`memcpy(&v, out, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":12978,"charLength":25},"insertedContent":{"text":"memcpy_s(&v, <size of &v>,  out,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":310,"startColumn":8,"endLine":310,"endColumn":34,"charOffset":7435,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":7435,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":297,"startColumn":8,"endLine":297,"endColumn":34,"charOffset":7096,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":7096,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":284,"startColumn":8,"endLine":284,"endColumn":34,"charOffset":6757,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":6757,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":274,"startColumn":8,"endLine":274,"endColumn":34,"charOffset":6530,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":6530,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingmath.c"},"region":{"startLine":101,"startColumn":44,"endLine":101,"endColumn":49,"charOffset":2636,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingft.c"},"region":{"startLine":1034,"startColumn":17,"endLine":1034,"endColumn":42,"charOffset":34026,"charLength":25,"snippet":{"text":"malloc(2 * sizeof(coords)","rendered":{"text":"malloc(2 * sizeof(coords)","markdown":"`malloc(2 * sizeof(coords)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingft.c"},"replacements":[{"deletedRegion":{"charOffset":34026,"charLength":25},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingft.c"},"region":{"startLine":305,"startColumn":30,"endLine":305,"endColumn":44,"charOffset":10571,"charLength":14,"snippet":{"text":"strlen((char*)","rendered":{"text":"strlen((char*)","markdown":"`strlen((char*)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingft.c"},"replacements":[{"deletedRegion":{"charOffset":10571,"charLength":14},"insertedContent":{"text":"strlen_s((char*, <size of (char*>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingft.c"},"replacements":[{"deletedRegion":{"charOffset":10571,"charLength":14},"insertedContent":{"text":"strnlen((char*, <size of (char*>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingft.c"},"region":{"startLine":296,"startColumn":12,"endLine":296,"endColumn":57,"charOffset":10225,"charLength":45,"snippet":{"text":"memcpy(self->font_bytes, font_bytes, (size_t)","rendered":{"text":"memcpy(self->font_bytes, font_bytes, (size_t)","markdown":"`memcpy(self->font_bytes, font_bytes, (size_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingft.c"},"replacements":[{"deletedRegion":{"charOffset":10225,"charLength":45},"insertedContent":{"text":"memcpy_s(self->font_bytes, <size of self->font_bytes>,  font_bytes,  (size_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":79,"startColumn":27,"endLine":79,"endColumn":39,"charOffset":2815,"charLength":12,"snippet":{"text":"eval(\"abs(B)","rendered":{"text":"eval(\"abs(B)","markdown":"`eval(\"abs(B)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":78,"startColumn":27,"endLine":78,"endColumn":39,"charOffset":2757,"charLength":12,"snippet":{"text":"eval(\"abs(A)","rendered":{"text":"eval(\"abs(A)","markdown":"`eval(\"abs(A)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":50,"startColumn":27,"endLine":50,"endColumn":41,"charOffset":1770,"charLength":14,"snippet":{"text":"eval(\"float(B)","rendered":{"text":"eval(\"float(B)","markdown":"`eval(\"float(B)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":49,"startColumn":27,"endLine":49,"endColumn":41,"charOffset":1702,"charLength":14,"snippet":{"text":"eval(\"float(B)","rendered":{"text":"eval(\"float(B)","markdown":"`eval(\"float(B)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":48,"startColumn":27,"endLine":48,"endColumn":41,"charOffset":1635,"charLength":14,"snippet":{"text":"eval(\"float(A)","rendered":{"text":"eval(\"float(A)","markdown":"`eval(\"float(A)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":47,"startColumn":27,"endLine":47,"endColumn":41,"charOffset":1568,"charLength":14,"snippet":{"text":"eval(\"float(A)","rendered":{"text":"eval(\"float(A)","markdown":"`eval(\"float(A)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":46,"startColumn":27,"endLine":46,"endColumn":41,"charOffset":1500,"charLength":14,"snippet":{"text":"eval(\"float(A)","rendered":{"text":"eval(\"float(A)","markdown":"`eval(\"float(A)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":45,"startColumn":27,"endLine":45,"endColumn":41,"charOffset":1433,"charLength":14,"snippet":{"text":"eval(\"float(A)","rendered":{"text":"eval(\"float(A)","markdown":"`eval(\"float(A)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":31,"startColumn":27,"endLine":31,"endColumn":48,"charOffset":862,"charLength":21,"snippet":{"text":"eval(\"int(float(A)+B)","rendered":{"text":"eval(\"int(float(A)+B)","markdown":"`eval(\"int(float(A)+B)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":30,"startColumn":27,"endLine":30,"endColumn":41,"charOffset":795,"charLength":14,"snippet":{"text":"eval(\"float(A)","rendered":{"text":"eval(\"float(A)","markdown":"`eval(\"float(A)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":26,"startColumn":21,"endLine":26,"endColumn":30,"charOffset":590,"charLength":9,"snippet":{"text":"eval(\"1\")","rendered":{"text":"eval(\"1\")","markdown":"`eval(\"1\")`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\Image.py"},"region":{"startLine":2298,"startColumn":6,"endLine":2298,"endColumn":11,"charOffset":80272,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\Image.py"},"region":{"startLine":2013,"startColumn":14,"endLine":2013,"endColumn":19,"charOffset":69498,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\Image.py"},"region":{"startLine":1580,"startColumn":14,"endLine":1580,"endColumn":19,"charOffset":52093,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\Image.py"},"region":{"startLine":1473,"startColumn":18,"endLine":1473,"endColumn":23,"charOffset":47819,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\Image.py"},"region":{"startLine":531,"startColumn":10,"endLine":531,"endColumn":15,"charOffset":13694,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\Image.py"},"region":{"startLine":530,"startColumn":10,"endLine":530,"endColumn":15,"charOffset":13639,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\map.c"},"region":{"startLine":200,"startColumn":11,"endLine":200,"endColumn":16,"charOffset":4819,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\map.c"},"region":{"startLine":165,"startColumn":15,"endLine":165,"endColumn":20,"charOffset":4090,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\map.c"},"region":{"startLine":139,"startColumn":8,"endLine":139,"endColumn":74,"charOffset":3414,"charLength":66,"snippet":{"text":"memcpy(PyBytes_AsString(buf), mapper->base + mapper->offset, size)","rendered":{"text":"memcpy(PyBytes_AsString(buf), mapper->base + mapper->offset, size)","markdown":"`memcpy(PyBytes_AsString(buf), mapper->base + mapper->offset, size)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\map.c"},"replacements":[{"deletedRegion":{"charOffset":3414,"charLength":66},"insertedContent":{"text":"memcpy_s(PyBytes_AsString(buf), <size of PyBytes_AsString(buf)>,  mapper->base + mapper->offset,  size)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\map.c"},"region":{"startLine":64,"startColumn":7,"endLine":64,"endColumn":12,"charOffset":1522,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\map.c"},"region":{"startLine":18,"startColumn":3,"endLine":18,"endColumn":8,"charOffset":440,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":1074,"startColumn":4,"endLine":1074,"endColumn":77,"charOffset":33575,"charLength":73,"snippet":{"text":"strncpy(((JPEGENCODERSTATE*)encoder->state.context)->rawmode, rawmode, 8)","rendered":{"text":"strncpy(((JPEGENCODERSTATE*)encoder->state.context)->rawmode, rawmode, 8)","markdown":"`strncpy(((JPEGENCODERSTATE*)encoder->state.context)->rawmode, rawmode, 8)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":33575,"charLength":73},"insertedContent":{"text":"strcpy_s(((JPEGENCODERSTATE*)encoder->state.context)->rawmode,  8,  rawmode)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":33575,"charLength":73},"insertedContent":{"text":"strlcpy(((JPEGENCODERSTATE*)encoder->state.context)->rawmode,  rawmode,  8)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":1067,"startColumn":8,"endLine":1067,"endColumn":39,"charOffset":33431,"charLength":31,"snippet":{"text":"memcpy(pp, rawExif, rawExifLen)","rendered":{"text":"memcpy(pp, rawExif, rawExifLen)","markdown":"`memcpy(pp, rawExif, rawExifLen)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":33431,"charLength":31},"insertedContent":{"text":"memcpy_s(pp, <size of pp>,  rawExif,  rawExifLen)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":1062,"startColumn":19,"endLine":1062,"endColumn":37,"charOffset":33265,"charLength":18,"snippet":{"text":"malloc(rawExifLen)","rendered":{"text":"malloc(rawExifLen)","markdown":"`malloc(rawExifLen)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":33265,"charLength":18},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":1055,"startColumn":8,"endLine":1055,"endColumn":36,"charOffset":33057,"charLength":28,"snippet":{"text":"memcpy(p, extra, extra_size)","rendered":{"text":"memcpy(p, extra, extra_size)","markdown":"`memcpy(p, extra, extra_size)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":33057,"charLength":28},"insertedContent":{"text":"memcpy_s(p, <size of p>,  extra,  extra_size)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":1052,"startColumn":18,"endLine":1052,"endColumn":36,"charOffset":32942,"charLength":18,"snippet":{"text":"malloc(extra_size)","rendered":{"text":"malloc(extra_size)","markdown":"`malloc(extra_size)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":32942,"charLength":18},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":968,"startColumn":30,"endLine":968,"endColumn":81,"charOffset":30142,"charLength":51,"snippet":{"text":"malloc(num_tables * DCTSIZE2 * sizeof(unsigned int)","rendered":{"text":"malloc(num_tables * DCTSIZE2 * sizeof(unsigned int)","markdown":"`malloc(num_tables * DCTSIZE2 * sizeof(unsigned int)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":30142,"charLength":51},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":581,"startColumn":8,"endLine":581,"endColumn":46,"charOffset":15949,"charLength":38,"snippet":{"text":"memcpy(p, dictionary, dictionary_size)","rendered":{"text":"memcpy(p, dictionary, dictionary_size)","markdown":"`memcpy(p, dictionary, dictionary_size)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":15949,"charLength":38},"insertedContent":{"text":"memcpy_s(p, <size of p>,  dictionary,  dictionary_size)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":578,"startColumn":18,"endLine":578,"endColumn":41,"charOffset":15860,"charLength":23,"snippet":{"text":"malloc(dictionary_size)","rendered":{"text":"malloc(dictionary_size)","markdown":"`malloc(dictionary_size)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":15860,"charLength":23},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":266,"startColumn":33,"endLine":266,"endColumn":53,"charOffset":6981,"charLength":20,"snippet":{"text":"malloc(state->bytes)","rendered":{"text":"malloc(state->bytes)","markdown":"`malloc(state->bytes)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":6981,"charLength":20},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":230,"startColumn":7,"endLine":230,"endColumn":12,"charOffset":5848,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ColorLUT.c"},"region":{"startLine":161,"startColumn":16,"endLine":161,"endColumn":60,"charOffset":6928,"charLength":44,"snippet":{"text":"memcpy(rowOut + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(rowOut + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(rowOut + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ColorLUT.c"},"replacements":[{"deletedRegion":{"charOffset":6928,"charLength":44},"insertedContent":{"text":"memcpy_s(rowOut + x * sizeof(v), <size of rowOut + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ColorLUT.c"},"region":{"startLine":140,"startColumn":16,"endLine":140,"endColumn":60,"charOffset":5901,"charLength":44,"snippet":{"text":"memcpy(rowOut + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(rowOut + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(rowOut + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ColorLUT.c"},"replacements":[{"deletedRegion":{"charOffset":5901,"charLength":44},"insertedContent":{"text":"memcpy_s(rowOut + x * sizeof(v), <size of rowOut + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":187,"startColumn":19,"endLine":187,"endColumn":34,"charOffset":4850,"charLength":15,"snippet":{"text":"malloc(bufsize)","rendered":{"text":"malloc(bufsize)","markdown":"`malloc(bufsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":4850,"charLength":15},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":23,"startColumn":3,"endLine":23,"endColumn":8,"charOffset":734,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\codec_fd.c"},"region":{"startLine":27,"startColumn":4,"endLine":27,"endColumn":32,"charOffset":559,"charLength":28,"snippet":{"text":"memcpy(dest, buffer, length)","rendered":{"text":"memcpy(dest, buffer, length)","markdown":"`memcpy(dest, buffer, length)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\codec_fd.c"},"replacements":[{"deletedRegion":{"charOffset":559,"charLength":28},"insertedContent":{"text":"memcpy_s(dest, <size of dest>,  buffer,  length)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingcms.c"},"region":{"startLine":666,"startColumn":38,"endLine":666,"endColumn":44,"charOffset":19467,"charLength":6,"snippet":{"text":"wcslen","rendered":{"text":"wcslen","markdown":"`wcslen`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingcms.c"},"region":{"startLine":656,"startColumn":10,"endLine":656,"endColumn":21,"charOffset":19154,"charLength":11,"snippet":{"text":"malloc(len)","rendered":{"text":"malloc(len)","markdown":"`malloc(len)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingcms.c"},"replacements":[{"deletedRegion":{"charOffset":19154,"charLength":11},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingcms.c"},"region":{"startLine":371,"startColumn":16,"endLine":371,"endColumn":97,"charOffset":10599,"charLength":81,"snippet":{"text":"memcpy(pDstExtras + x * dstChunkSize, pSrcExtras + x * srcChunkSize, channelSize)","rendered":{"text":"memcpy(pDstExtras + x * dstChunkSize, pSrcExtras + x * srcChunkSize, channelSize)","markdown":"`memcpy(pDstExtras + x * dstChunkSize, pSrcExtras + x * srcChunkSize, channelSize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingcms.c"},"replacements":[{"deletedRegion":{"charOffset":10599,"charLength":81},"insertedContent":{"text":"memcpy_s(pDstExtras + x * dstChunkSize, <size of pDstExtras + x * dstChunkSize>,  pSrcExtras + x * srcChunkSize,  channelSize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingcms.c"},"region":{"startLine":207,"startColumn":4,"endLine":207,"endColumn":36,"charOffset":5430,"charLength":32,"snippet":{"text":"strcpy(self->mode_out, mode_out)","rendered":{"text":"strcpy(self->mode_out, mode_out)","markdown":"`strcpy(self->mode_out, mode_out)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingcms.c"},"replacements":[{"deletedRegion":{"charOffset":5430,"charLength":32},"insertedContent":{"text":"strcpy_s(self->mode_out, <size of self->mode_out>,  mode_out)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingcms.c"},"replacements":[{"deletedRegion":{"charOffset":5430,"charLength":32},"insertedContent":{"text":"strlcpy(self->mode_out,  mode_out, <size of self->mode_out>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingcms.c"},"region":{"startLine":206,"startColumn":4,"endLine":206,"endColumn":34,"charOffset":5393,"charLength":30,"snippet":{"text":"strcpy(self->mode_in, mode_in)","rendered":{"text":"strcpy(self->mode_in, mode_in)","markdown":"`strcpy(self->mode_in, mode_in)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingcms.c"},"replacements":[{"deletedRegion":{"charOffset":5393,"charLength":30},"insertedContent":{"text":"strcpy_s(self->mode_in, <size of self->mode_in>,  mode_in)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingcms.c"},"replacements":[{"deletedRegion":{"charOffset":5393,"charLength":30},"insertedContent":{"text":"strlcpy(self->mode_in,  mode_in, <size of self->mode_in>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingcms.c"},"region":{"startLine":157,"startColumn":22,"endLine":157,"endColumn":38,"charOffset":4239,"charLength":16,"snippet":{"text":"malloc(nProfile)","rendered":{"text":"malloc(nProfile)","markdown":"`malloc(nProfile)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingcms.c"},"replacements":[{"deletedRegion":{"charOffset":4239,"charLength":16},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingcms.c"},"region":{"startLine":25,"endLine":25,"endColumn":25,"charOffset":794,"charLength":25,"snippet":{"text":"http://www.cazabon.com\\n\\","rendered":{"text":"http://www.cazabon.com\\n\\","markdown":"`http://www.cazabon.com\\n\\`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingcms.c"},"replacements":[{"deletedRegion":{"charOffset":794,"charLength":25},"insertedContent":{"text":"https://www.cazabon.com\\n\\"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\BoxBlur.c"},"region":{"startLine":222,"startColumn":16,"endLine":222,"endColumn":67,"charOffset":6995,"charLength":51,"snippet":{"text":"memcpy(imOut->image32[y], lineOut, imIn->xsize * 4)","rendered":{"text":"memcpy(imOut->image32[y], lineOut, imIn->xsize * 4)","markdown":"`memcpy(imOut->image32[y], lineOut, imIn->xsize * 4)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\BoxBlur.c"},"replacements":[{"deletedRegion":{"charOffset":6995,"charLength":51},"insertedContent":{"text":"memcpy_s(imOut->image32[y], <size of imOut->image32[y]>,  lineOut,  imIn->xsize * 4)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\BoxBlur.c"},"region":{"startLine":206,"startColumn":16,"endLine":206,"endColumn":62,"charOffset":6498,"charLength":46,"snippet":{"text":"memcpy(imOut->image8[y], lineOut, imIn->xsize)","rendered":{"text":"memcpy(imOut->image8[y], lineOut, imIn->xsize)","markdown":"`memcpy(imOut->image8[y], lineOut, imIn->xsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\BoxBlur.c"},"replacements":[{"deletedRegion":{"charOffset":6498,"charLength":46},"insertedContent":{"text":"memcpy_s(imOut->image8[y], <size of imOut->image8[y]>,  lineOut,  imIn->xsize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"setup.py"},"region":{"startLine":602,"startColumn":18,"endLine":602,"endColumn":23,"charOffset":19987,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"setup.py"},"region":{"startLine":507,"startColumn":10,"endLine":507,"endColumn":15,"charOffset":15767,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\BcnDecode.c"},"region":{"startLine":800,"startColumn":3,"endLine":800,"endColumn":38,"charOffset":21517,"charLength":35,"snippet":{"text":"memcpy(dst, col + sz*(j*4), 4 * sz)","rendered":{"text":"memcpy(dst, col + sz*(j*4), 4 * sz)","markdown":"`memcpy(dst, col + sz*(j*4), 4 * sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\BcnDecode.c"},"replacements":[{"deletedRegion":{"charOffset":21517,"charLength":35},"insertedContent":{"text":"memcpy_s(dst, <size of dst>,  col + sz*(j*4),  4 * sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\BcnDecode.c"},"region":{"startLine":792,"startColumn":4,"endLine":792,"endColumn":46,"charOffset":21331,"charLength":42,"snippet":{"text":"memcpy(dst + sz*x, col + sz*(j*4 + i), sz)","rendered":{"text":"memcpy(dst + sz*x, col + sz*(j*4 + i), sz)","markdown":"`memcpy(dst + sz*x, col + sz*(j*4 + i), sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\BcnDecode.c"},"replacements":[{"deletedRegion":{"charOffset":21331,"charLength":42},"insertedContent":{"text":"memcpy_s(dst + sz*x, <size of dst + sz*x>,  col + sz*(j*4 + i),  sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\BcnDecode.c"},"region":{"startLine":53,"startColumn":1,"endLine":53,"endColumn":35,"charOffset":1044,"charLength":34,"snippet":{"text":"memcpy(dst, src, sizeof(bc3_alpha)","rendered":{"text":"memcpy(dst, src, sizeof(bc3_alpha)","markdown":"`memcpy(dst, src, sizeof(bc3_alpha)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\BcnDecode.c"},"replacements":[{"deletedRegion":{"charOffset":1044,"charLength":34},"insertedContent":{"text":"memcpy_s(dst, <size of dst>,  src,  sizeof(bc3_alpha)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":".appveyor.yml"},"region":{"startLine":80,"startColumn":66,"endLine":80,"endColumn":70,"charOffset":2576,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"yaml"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\display.c"},"region":{"startLine":792,"startColumn":7,"endLine":792,"endColumn":12,"charOffset":20834,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\display.c"},"region":{"startLine":670,"startColumn":36,"endLine":670,"endColumn":41,"charOffset":17776,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\display.c"},"region":{"startLine":486,"startColumn":11,"endLine":486,"endColumn":16,"charOffset":12617,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\display.c"},"region":{"startLine":482,"startColumn":7,"endLine":482,"endColumn":12,"charOffset":12514,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\display.c"},"region":{"startLine":197,"startColumn":4,"endLine":197,"endColumn":42,"charOffset":4380,"charLength":38,"snippet":{"text":"memcpy(display->dib->bits, ptr, bytes)","rendered":{"text":"memcpy(display->dib->bits, ptr, bytes)","markdown":"`memcpy(display->dib->bits, ptr, bytes)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\display.c"},"replacements":[{"deletedRegion":{"charOffset":4380,"charLength":38},"insertedContent":{"text":"memcpy_s(display->dib->bits, <size of display->dib->bits>,  ptr,  bytes)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":153,"startColumn":16,"endLine":153,"endColumn":46,"charOffset":4791,"charLength":30,"snippet":{"text":"memcpy(out3 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out3 + x, &v, sizeof(v)","markdown":"`memcpy(out3 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":4791,"charLength":30},"insertedContent":{"text":"memcpy_s(out3 + x, <size of out3 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":151,"startColumn":16,"endLine":151,"endColumn":46,"charOffset":4670,"charLength":30,"snippet":{"text":"memcpy(out2 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out2 + x, &v, sizeof(v)","markdown":"`memcpy(out2 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":4670,"charLength":30},"insertedContent":{"text":"memcpy_s(out2 + x, <size of out2 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":149,"startColumn":16,"endLine":149,"endColumn":46,"charOffset":4549,"charLength":30,"snippet":{"text":"memcpy(out1 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out1 + x, &v, sizeof(v)","markdown":"`memcpy(out1 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":4549,"charLength":30},"insertedContent":{"text":"memcpy_s(out1 + x, <size of out1 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":147,"startColumn":16,"endLine":147,"endColumn":46,"charOffset":4428,"charLength":30,"snippet":{"text":"memcpy(out0 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out0 + x, &v, sizeof(v)","markdown":"`memcpy(out0 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":4428,"charLength":30},"insertedContent":{"text":"memcpy_s(out0 + x, <size of out0 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":127,"startColumn":16,"endLine":127,"endColumn":46,"charOffset":3696,"charLength":30,"snippet":{"text":"memcpy(out2 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out2 + x, &v, sizeof(v)","markdown":"`memcpy(out2 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":3696,"charLength":30},"insertedContent":{"text":"memcpy_s(out2 + x, <size of out2 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":125,"startColumn":16,"endLine":125,"endColumn":46,"charOffset":3575,"charLength":30,"snippet":{"text":"memcpy(out1 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out1 + x, &v, sizeof(v)","markdown":"`memcpy(out1 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":3575,"charLength":30},"insertedContent":{"text":"memcpy_s(out1 + x, <size of out1 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":123,"startColumn":16,"endLine":123,"endColumn":46,"charOffset":3454,"charLength":30,"snippet":{"text":"memcpy(out0 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out0 + x, &v, sizeof(v)","markdown":"`memcpy(out0 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":3454,"charLength":30},"insertedContent":{"text":"memcpy_s(out0 + x, <size of out0 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":105,"startColumn":16,"endLine":105,"endColumn":46,"charOffset":2782,"charLength":30,"snippet":{"text":"memcpy(out1 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out1 + x, &v, sizeof(v)","markdown":"`memcpy(out1 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":2782,"charLength":30},"insertedContent":{"text":"memcpy_s(out1 + x, <size of out1 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":103,"startColumn":16,"endLine":103,"endColumn":46,"charOffset":2661,"charLength":30,"snippet":{"text":"memcpy(out0 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out0 + x, &v, sizeof(v)","markdown":"`memcpy(out0 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":2661,"charLength":30},"insertedContent":{"text":"memcpy_s(out0 + x, <size of out0 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":54,"startColumn":12,"endLine":54,"endColumn":41,"charOffset":1415,"charLength":29,"snippet":{"text":"memcpy(out + x, &v, sizeof(v)","rendered":{"text":"memcpy(out + x, &v, sizeof(v)","markdown":"`memcpy(out + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":1415,"charLength":29},"insertedContent":{"text":"memcpy_s(out + x, <size of out + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"selftest.py"},"region":{"startLine":152,"startColumn":8,"endLine":152,"endColumn":33,"charOffset":4408,"charLength":25,"snippet":{"text":"http://www.pythonware.com","rendered":{"text":"http://www.pythonware.com","markdown":"`http://www.pythonware.com`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"selftest.py"},"replacements":[{"deletedRegion":{"charOffset":4408,"charLength":25},"insertedContent":{"text":"https://www.pythonware.com"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\helper.py"},"region":{"startLine":125,"startColumn":27,"endLine":125,"endColumn":43,"charOffset":3158,"charLength":16,"snippet":{"text":"eval(\"abs(a - b)","rendered":{"text":"eval(\"abs(a - b)","markdown":"`eval(\"abs(a - b)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"selftest.py"},"region":{"startLine":145,"startColumn":23,"endLine":145,"endColumn":43,"charOffset":4170,"charLength":20,"snippet":{"text":"eval(\"float(im + 20)","rendered":{"text":"eval(\"float(im + 20)","markdown":"`eval(\"float(im + 20)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS172411","level":"note","message":{"text":"Review setTimeout for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\resources\\js\\script.js"},"region":{"startLine":42,"startColumn":24,"endLine":42,"endColumn":46,"charOffset":2151,"charLength":22,"snippet":{"text":"setTimeout(function ()","rendered":{"text":"setTimeout(function ()","markdown":"`setTimeout(function ()`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS172411","level":"note","message":{"text":"Review setTimeout for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\resources\\js\\script.js"},"region":{"startLine":2,"startColumn":4,"endLine":2,"endColumn":26,"charOffset":43,"charLength":22,"snippet":{"text":"setTimeout(function ()","rendered":{"text":"setTimeout(function ()","markdown":"`setTimeout(function ()`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imageenhance.py"},"region":{"startLine":7,"startColumn":6,"endLine":7,"endColumn":11,"charOffset":117,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":3775,"startColumn":3,"endLine":3775,"endColumn":8,"charOffset":102065,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":3169,"startColumn":19,"endLine":3169,"endColumn":24,"charOffset":83619,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":2545,"startColumn":8,"endLine":2545,"endColumn":34,"charOffset":69132,"charLength":26,"snippet":{"text":"memcpy(*text, buffer, len)","rendered":{"text":"memcpy(*text, buffer, len)","markdown":"`memcpy(*text, buffer, len)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":69132,"charLength":26},"insertedContent":{"text":"memcpy_s(*text, <size of *text>,  buffer,  len)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":2138,"startColumn":15,"endLine":2138,"endColumn":41,"charOffset":58801,"charLength":26,"snippet":{"text":"malloc(self->image->ysize)","rendered":{"text":"malloc(self->image->ysize)","markdown":"`malloc(self->image->ysize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":58801,"charLength":26},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":2137,"startColumn":15,"endLine":2137,"endColumn":41,"charOffset":58757,"charLength":26,"snippet":{"text":"malloc(self->image->xsize)","rendered":{"text":"malloc(self->image->xsize)","markdown":"`malloc(self->image->xsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":58757,"charLength":26},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":1865,"startColumn":8,"endLine":1865,"endColumn":30,"charOffset":52126,"charLength":22,"snippet":{"text":"strcpy(im->mode, mode)","rendered":{"text":"strcpy(im->mode, mode)","markdown":"`strcpy(im->mode, mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":52126,"charLength":22},"insertedContent":{"text":"strcpy_s(im->mode, <size of im->mode>,  mode)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":52126,"charLength":22},"insertedContent":{"text":"strlcpy(im->mode,  mode, <size of im->mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":1678,"startColumn":4,"endLine":1678,"endColumn":46,"charOffset":47211,"charLength":42,"snippet":{"text":"strcpy(self->image->palette->mode, \"RGBA\")","rendered":{"text":"strcpy(self->image->palette->mode, \"RGBA\")","markdown":"`strcpy(self->image->palette->mode, \"RGBA\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":47211,"charLength":42},"insertedContent":{"text":"strcpy_s(self->image->palette->mode, <size of self->image->palette->mode>,  \"RGBA\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":47211,"charLength":42},"insertedContent":{"text":"strlcpy(self->image->palette->mode,  \"RGBA\", <size of self->image->palette->mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":1652,"startColumn":4,"endLine":1652,"endColumn":46,"charOffset":46592,"charLength":42,"snippet":{"text":"strcpy(self->image->palette->mode, \"RGBA\")","rendered":{"text":"strcpy(self->image->palette->mode, \"RGBA\")","markdown":"`strcpy(self->image->palette->mode, \"RGBA\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":46592,"charLength":42},"insertedContent":{"text":"strcpy_s(self->image->palette->mode, <size of self->image->palette->mode>,  \"RGBA\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":46592,"charLength":42},"insertedContent":{"text":"strlcpy(self->image->palette->mode,  \"RGBA\", <size of self->image->palette->mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":1624,"startColumn":30,"endLine":1624,"endColumn":55,"charOffset":45909,"charLength":25,"snippet":{"text":"strlen(self->image->mode)","rendered":{"text":"strlen(self->image->mode)","markdown":"`strlen(self->image->mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":45909,"charLength":25},"insertedContent":{"text":"strlen_s(self->image->mode, <size of self->image->mode>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":45909,"charLength":25},"insertedContent":{"text":"strnlen(self->image->mode, <size of self->image->mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":1624,"startColumn":4,"endLine":1624,"endColumn":55,"charOffset":45883,"charLength":51,"snippet":{"text":"strcpy(self->image->mode, strlen(self->image->mode)","rendered":{"text":"strcpy(self->image->mode, strlen(self->image->mode)","markdown":"`strcpy(self->image->mode, strlen(self->image->mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":45883,"charLength":51},"insertedContent":{"text":"strcpy_s(self->image->mode, <size of self->image->mode>,  strlen(self->image->mode)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":45883,"charLength":51},"insertedContent":{"text":"strlcpy(self->image->mode,  strlen(self->image->mode, <size of self->image->mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":1554,"startColumn":19,"endLine":1554,"endColumn":24,"charOffset":44040,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":1472,"startColumn":20,"endLine":1472,"endColumn":52,"charOffset":40944,"charLength":32,"snippet":{"text":"memcpy(image->image8[y], p+i, x)","rendered":{"text":"memcpy(image->image8[y], p+i, x)","markdown":"`memcpy(image->image8[y], p+i, x)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":40944,"charLength":32},"insertedContent":{"text":"memcpy_s(image->image8[y], <size of image->image8[y]>,  p+i,  x)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":1374,"startColumn":11,"endLine":1374,"endColumn":16,"charOffset":37975,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":782,"startColumn":16,"endLine":782,"endColumn":83,"charOffset":22748,"charLength":67,"snippet":{"text":"memcpy(&dtmp, ((char*) table_data) + i * sizeof(dtmp), sizeof(dtmp)","rendered":{"text":"memcpy(&dtmp, ((char*) table_data) + i * sizeof(dtmp), sizeof(dtmp)","markdown":"`memcpy(&dtmp, ((char*) table_data) + i * sizeof(dtmp), sizeof(dtmp)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":22748,"charLength":67},"insertedContent":{"text":"memcpy_s(&dtmp, <size of &dtmp>,  ((char*) table_data) + i * sizeof(dtmp),  sizeof(dtmp)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":199,"startColumn":4,"endLine":199,"endColumn":51,"charOffset":4374,"charLength":47,"snippet":{"text":"memcpy(&im->image32[y][x], color, sizeof(INT32)","rendered":{"text":"memcpy(&im->image32[y][x], color, sizeof(INT32)","markdown":"`memcpy(&im->image32[y][x], color, sizeof(INT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":4374,"charLength":47},"insertedContent":{"text":"memcpy_s(&im->image32[y][x], <size of &im->image32[y][x]>,  color,  sizeof(INT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":779,"startColumn":16,"endLine":779,"endColumn":89,"charOffset":22600,"charLength":73,"snippet":{"text":"memcpy(&item, ((char*) table_data) + i * sizeof(FLOAT32), sizeof(FLOAT32)","rendered":{"text":"memcpy(&item, ((char*) table_data) + i * sizeof(FLOAT32), sizeof(FLOAT32)","markdown":"`memcpy(&item, ((char*) table_data) + i * sizeof(FLOAT32), sizeof(FLOAT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":22600,"charLength":73},"insertedContent":{"text":"memcpy_s(&item, <size of &item>,  ((char*) table_data) + i * sizeof(FLOAT32),  sizeof(FLOAT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":182,"startColumn":4,"endLine":182,"endColumn":41,"charOffset":4008,"charLength":37,"snippet":{"text":"memcpy(&im->image8[y][x*4], color, 4)","rendered":{"text":"memcpy(&im->image8[y][x*4], color, 4)","markdown":"`memcpy(&im->image8[y][x*4], color, 4)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":4008,"charLength":37},"insertedContent":{"text":"memcpy_s(&im->image8[y][x*4], <size of &im->image8[y][x*4]>,  color,  4)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":167,"startColumn":4,"endLine":167,"endColumn":41,"charOffset":3683,"charLength":37,"snippet":{"text":"memcpy(&im->image8[y][x+x], color, 2)","rendered":{"text":"memcpy(&im->image8[y][x+x], color, 2)","markdown":"`memcpy(&im->image8[y][x+x], color, 2)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":3683,"charLength":37},"insertedContent":{"text":"memcpy_s(&im->image8[y][x+x], <size of &im->image8[y][x+x]>,  color,  2)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":775,"startColumn":16,"endLine":775,"endColumn":83,"charOffset":22409,"charLength":67,"snippet":{"text":"memcpy(&htmp, ((char*) table_data) + i * sizeof(htmp), sizeof(htmp)","rendered":{"text":"memcpy(&htmp, ((char*) table_data) + i * sizeof(htmp), sizeof(htmp)","markdown":"`memcpy(&htmp, ((char*) table_data) + i * sizeof(htmp), sizeof(htmp)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":22409,"charLength":67},"insertedContent":{"text":"memcpy_s(&htmp, <size of &htmp>,  ((char*) table_data) + i * sizeof(htmp),  sizeof(htmp)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":155,"startColumn":8,"endLine":155,"endColumn":55,"charOffset":3425,"charLength":47,"snippet":{"text":"memcpy(&im->image32[y][x], color, sizeof(INT32)","rendered":{"text":"memcpy(&im->image32[y][x], color, sizeof(INT32)","markdown":"`memcpy(&im->image32[y][x], color, sizeof(INT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":3425,"charLength":47},"insertedContent":{"text":"memcpy_s(&im->image32[y][x], <size of &im->image32[y][x]>,  color,  sizeof(INT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":763,"startColumn":24,"endLine":763,"endColumn":44,"charOffset":22072,"charLength":20,"snippet":{"text":"malloc(sizeof(INT16)","rendered":{"text":"malloc(sizeof(INT16)","markdown":"`malloc(sizeof(INT16)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":22072,"charLength":20},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":143,"startColumn":4,"endLine":143,"endColumn":35,"charOffset":3187,"charLength":31,"snippet":{"text":"memcpy(color, &out, sizeof(out)","rendered":{"text":"memcpy(color, &out, sizeof(out)","markdown":"`memcpy(color, &out, sizeof(out)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":3187,"charLength":31},"insertedContent":{"text":"memcpy_s(color, <size of color>,  &out,  sizeof(out)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":733,"startColumn":20,"endLine":733,"endColumn":46,"charOffset":21014,"charLength":26,"snippet":{"text":"strlen(buffer_info.format)","rendered":{"text":"strlen(buffer_info.format)","markdown":"`strlen(buffer_info.format)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":21014,"charLength":26},"insertedContent":{"text":"strlen_s(buffer_info.format, <size of buffer_info.format>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":21014,"charLength":26},"insertedContent":{"text":"strnlen(buffer_info.format, <size of buffer_info.format>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":140,"startColumn":4,"endLine":140,"endColumn":35,"charOffset":3076,"charLength":31,"snippet":{"text":"memcpy(color, in, sizeof(INT32)","rendered":{"text":"memcpy(color, in, sizeof(INT32)","markdown":"`memcpy(color, in, sizeof(INT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":3076,"charLength":31},"insertedContent":{"text":"memcpy_s(color, <size of color>,  in,  sizeof(INT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":131,"startColumn":4,"endLine":131,"endColumn":35,"charOffset":2884,"charLength":31,"snippet":{"text":"memcpy(color, in, sizeof(INT32)","rendered":{"text":"memcpy(color, in, sizeof(INT32)","markdown":"`memcpy(color, in, sizeof(INT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":2884,"charLength":31},"insertedContent":{"text":"memcpy_s(color, <size of color>,  in,  sizeof(INT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":576,"startColumn":8,"endLine":576,"endColumn":39,"charOffset":16890,"charLength":31,"snippet":{"text":"memcpy(ink, &ftmp, sizeof(ftmp)","rendered":{"text":"memcpy(ink, &ftmp, sizeof(ftmp)","markdown":"`memcpy(ink, &ftmp, sizeof(ftmp)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":16890,"charLength":31},"insertedContent":{"text":"memcpy_s(ink, <size of ink>,  &ftmp,  sizeof(ftmp)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":129,"startColumn":4,"endLine":129,"endColumn":35,"charOffset":2838,"charLength":31,"snippet":{"text":"memcpy(color, &out, sizeof(out)","rendered":{"text":"memcpy(color, &out, sizeof(out)","markdown":"`memcpy(color, &out, sizeof(out)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":2838,"charLength":31},"insertedContent":{"text":"memcpy_s(color, <size of color>,  &out,  sizeof(out)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\decode.c"},"region":{"startLine":853,"startColumn":4,"endLine":853,"endColumn":72,"charOffset":23628,"charLength":68,"snippet":{"text":"strncpy(((JPEGSTATE*)decoder->state.context)->jpegmode, jpegmode, 8)","rendered":{"text":"strncpy(((JPEGSTATE*)decoder->state.context)->jpegmode, jpegmode, 8)","markdown":"`strncpy(((JPEGSTATE*)decoder->state.context)->jpegmode, jpegmode, 8)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\decode.c"},"replacements":[{"deletedRegion":{"charOffset":23628,"charLength":68},"insertedContent":{"text":"strcpy_s(((JPEGSTATE*)decoder->state.context)->jpegmode,  8,  jpegmode)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\decode.c"},"replacements":[{"deletedRegion":{"charOffset":23628,"charLength":68},"insertedContent":{"text":"strlcpy(((JPEGSTATE*)decoder->state.context)->jpegmode,  jpegmode,  8)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":568,"startColumn":8,"endLine":568,"endColumn":39,"charOffset":16637,"charLength":31,"snippet":{"text":"memcpy(ink, &itmp, sizeof(itmp)","rendered":{"text":"memcpy(ink, &itmp, sizeof(itmp)","markdown":"`memcpy(ink, &itmp, sizeof(itmp)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":16637,"charLength":31},"insertedContent":{"text":"memcpy_s(ink, <size of ink>,  &itmp,  sizeof(itmp)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":120,"startColumn":4,"endLine":120,"endColumn":51,"charOffset":2573,"charLength":47,"snippet":{"text":"memcpy(color, &im->image32[y][x], sizeof(INT32)","rendered":{"text":"memcpy(color, &im->image32[y][x], sizeof(INT32)","markdown":"`memcpy(color, &im->image32[y][x], sizeof(INT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":2573,"charLength":47},"insertedContent":{"text":"memcpy_s(color, <size of color>,  &im->image32[y][x],  sizeof(INT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":442,"startColumn":4,"endLine":442,"endColumn":23,"charOffset":13027,"charLength":19,"snippet":{"text":"memcpy(out, &t1, 4)","rendered":{"text":"memcpy(out, &t1, 4)","markdown":"`memcpy(out, &t1, 4)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":13027,"charLength":19},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &t1,  4)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":113,"startColumn":4,"endLine":113,"endColumn":35,"charOffset":2452,"charLength":31,"snippet":{"text":"memcpy(color, &out, sizeof(out)","rendered":{"text":"memcpy(color, &out, sizeof(out)","markdown":"`memcpy(color, &out, sizeof(out)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":2452,"charLength":31},"insertedContent":{"text":"memcpy_s(color, <size of color>,  &out,  sizeof(out)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\decode.c"},"region":{"startLine":852,"startColumn":4,"endLine":852,"endColumn":70,"charOffset":23555,"charLength":66,"snippet":{"text":"strncpy(((JPEGSTATE*)decoder->state.context)->rawmode, rawmode, 8)","rendered":{"text":"strncpy(((JPEGSTATE*)decoder->state.context)->rawmode, rawmode, 8)","markdown":"`strncpy(((JPEGSTATE*)decoder->state.context)->rawmode, rawmode, 8)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\decode.c"},"replacements":[{"deletedRegion":{"charOffset":23555,"charLength":66},"insertedContent":{"text":"strcpy_s(((JPEGSTATE*)decoder->state.context)->rawmode,  8,  rawmode)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\decode.c"},"replacements":[{"deletedRegion":{"charOffset":23555,"charLength":66},"insertedContent":{"text":"strlcpy(((JPEGSTATE*)decoder->state.context)->rawmode,  rawmode,  8)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":110,"startColumn":4,"endLine":110,"endColumn":36,"charOffset":2367,"charLength":32,"snippet":{"text":"memcpy(color, in, sizeof(UINT16)","rendered":{"text":"memcpy(color, in, sizeof(UINT16)","markdown":"`memcpy(color, in, sizeof(UINT16)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":2367,"charLength":32},"insertedContent":{"text":"memcpy_s(color, <size of color>,  in,  sizeof(UINT16)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":404,"startColumn":12,"endLine":404,"endColumn":66,"charOffset":12107,"charLength":54,"snippet":{"text":"memcpy(list + i * sizeof(dtemp), &dtemp, sizeof(dtemp)","rendered":{"text":"memcpy(list + i * sizeof(dtemp), &dtemp, sizeof(dtemp)","markdown":"`memcpy(list + i * sizeof(dtemp), &dtemp, sizeof(dtemp)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":12107,"charLength":54},"insertedContent":{"text":"memcpy_s(list + i * sizeof(dtemp), <size of list + i * sizeof(dtemp)>,  &dtemp,  sizeof(dtemp)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":101,"startColumn":4,"endLine":101,"endColumn":36,"charOffset":2174,"charLength":32,"snippet":{"text":"memcpy(color, in, sizeof(UINT16)","rendered":{"text":"memcpy(color, in, sizeof(UINT16)","markdown":"`memcpy(color, in, sizeof(UINT16)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":2174,"charLength":32},"insertedContent":{"text":"memcpy_s(color, <size of color>,  in,  sizeof(UINT16)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":400,"startColumn":12,"endLine":400,"endColumn":66,"charOffset":11947,"charLength":54,"snippet":{"text":"memcpy(list + i * sizeof(ftemp), &ftemp, sizeof(ftemp)","rendered":{"text":"memcpy(list + i * sizeof(ftemp), &ftemp, sizeof(ftemp)","markdown":"`memcpy(list + i * sizeof(ftemp), &ftemp, sizeof(ftemp)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":11947,"charLength":54},"insertedContent":{"text":"memcpy_s(list + i * sizeof(ftemp), <size of list + i * sizeof(ftemp)>,  &ftemp,  sizeof(ftemp)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":99,"startColumn":4,"endLine":99,"endColumn":35,"charOffset":2128,"charLength":31,"snippet":{"text":"memcpy(color, &out, sizeof(out)","rendered":{"text":"memcpy(color, &out, sizeof(out)","markdown":"`memcpy(color, &out, sizeof(out)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":2128,"charLength":31},"insertedContent":{"text":"memcpy_s(color, <size of color>,  &out,  sizeof(out)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\decode.c"},"region":{"startLine":384,"startColumn":11,"endLine":384,"endColumn":15,"charOffset":11066,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":396,"startColumn":12,"endLine":396,"endColumn":66,"charOffset":11777,"charLength":54,"snippet":{"text":"memcpy(list + i * sizeof(INT32), &itemp, sizeof(itemp)","rendered":{"text":"memcpy(list + i * sizeof(INT32), &itemp, sizeof(itemp)","markdown":"`memcpy(list + i * sizeof(INT32), &itemp, sizeof(itemp)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":11777,"charLength":54},"insertedContent":{"text":"memcpy_s(list + i * sizeof(INT32), <size of list + i * sizeof(INT32)>,  &itemp,  sizeof(itemp)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\decode.c"},"region":{"startLine":205,"startColumn":33,"endLine":205,"endColumn":53,"charOffset":5619,"charLength":20,"snippet":{"text":"malloc(state->bytes)","rendered":{"text":"malloc(state->bytes)","markdown":"`malloc(state->bytes)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\decode.c"},"replacements":[{"deletedRegion":{"charOffset":5619,"charLength":20},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":82,"startColumn":8,"endLine":82,"endColumn":37,"charOffset":1773,"charLength":29,"snippet":{"text":"memcpy(out, p, im->pixelsize)","rendered":{"text":"memcpy(out, p, im->pixelsize)","markdown":"`memcpy(out, p, im->pixelsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":1773,"charLength":29},"insertedContent":{"text":"memcpy_s(out, <size of out>,  p,  im->pixelsize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\decode.c"},"region":{"startLine":166,"startColumn":7,"endLine":166,"endColumn":12,"charOffset":4381,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":323,"startColumn":7,"endLine":323,"endColumn":12,"charOffset":9634,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":197,"startColumn":4,"endLine":197,"endColumn":10,"charOffset":6170,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\decode.c"},"region":{"startLine":30,"startColumn":3,"endLine":30,"endColumn":8,"charOffset":1135,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\IcoImagePlugin.py"},"region":{"startLine":66,"startColumn":10,"endLine":66,"endColumn":14,"charOffset":1907,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":36,"startColumn":8,"endLine":36,"endColumn":15,"charOffset":815,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":183,"startColumn":4,"endLine":183,"endColumn":10,"charOffset":5932,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"}],"columnKind":"utf16CodeUnits"}]}
