{"$schema":"https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json","version":"2.1.0","runs":[{"tool":{"driver":{"name":"devskim","fullName":"Microsoft DevSkim Command Line Interface","version":"1.0.23+607c9a5eda","informationUri":"https://github.com/microsoft/DevSkim/","rules":[{"id":"DS176209","name":"SuspiciousComment","fullDescription":{"text":"Suspicious comment: A \"TODO\" or similar was left in source code, possibly indicating incomplete functionality"},"help":{"text":"A \"TODO\" or similar was left in source code, possibly indicating incomplete functionality","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS176209.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS176209.md) for guidance on this issue."},"shortDescription":{"text":"A \"TODO\" or similar was left in source code, possibly indicating incomplete functionality"},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS176209.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS185832","name":"BannedCFunctionDetectedStrcpy","fullDescription":{"text":"Banned C function detected (strcpy): strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"help":{"text":"Use strcpy_s or strlcpy if possible. If no safe function is viable, strcpy/strncpy should be proceeded by conditional checks to verify that the source string will fit in the destination with a null termnator.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS185832.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS185832.md) for guidance on this issue."},"shortDescription":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS185832.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS161085","name":"ProblematicCFunctionDetectedMalloc","fullDescription":{"text":"Problematic C function detected (malloc): If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"help":{"text":"calloc handles the most common integer math in memory allocation (# of elements * their size) with error handling to prevent overflows in most implementations, and zeros out memory","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS161085.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS161085.md) for guidance on this issue."},"shortDescription":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS161085.md","properties":{"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"id":"DS140021","name":"ProblematicCFunctionDetectedStrlen","fullDescription":{"text":"Problematic C function detected (strlen): If a string is missing a null terminator, strlen will read past the end of the buffer"},"help":{"text":"In instances where you know the maximum size of a string's buffer, use strlen_s or strnlen to prevent over-reading","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS140021.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS140021.md) for guidance on this issue."},"shortDescription":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS140021.md","properties":{"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"id":"DS141863","name":"BannedCFunctionDetectedStrcat","fullDescription":{"text":"Banned C function detected (strcat): If the combination of strings is larger than the destination buffer, strcat will cbuffer overflow the destination buffer"},"help":{"text":"Use strcat_s or strlcat if possible. strncat's size parameter excludes the null terminator, which leads to frequent mistakes","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS141863.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS141863.md) for guidance on this issue."},"shortDescription":{"text":"If the combination of strings is larger than the destination buffer, strcat will cbuffer overflow the destination buffer"},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS141863.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS162092","name":"DoNotLeaveDebugCodeInProduction","fullDescription":{"text":"Do not leave debug code in production: Accessing localhost could indicate debug code, or could hinder scaling."},"help":{"text":"Accessing localhost could indicate debug code, or could hinder scaling.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS162092.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS162092.md) for guidance on this issue."},"shortDescription":{"text":"Accessing localhost could indicate debug code, or could hinder scaling."},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS162092.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS148264","name":"DoNotUseWeaknoncryptographicRandomNumberGenerators","fullDescription":{"text":"Do not use weak/non-cryptographic random number generators: Use cryptographic random numbers generators for anything even close to a security function."},"help":{"text":"Replacements depend on language.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS148264.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS148264.md) for guidance on this issue."},"shortDescription":{"text":"Use cryptographic random numbers generators for anything even close to a security function."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS148264.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS121708","name":"ProblematicCFunctionDetectedMemcpy","fullDescription":{"text":"Problematic C function detected (memcpy): There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"help":{"text":"Use memcpy_s if possible.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS121708.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS121708.md) for guidance on this issue."},"shortDescription":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS121708.md","properties":{"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"id":"DS111237","name":"BannedCFunctionDetectedStrncpy","fullDescription":{"text":"Banned C function detected (strncpy): strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"help":{"text":"Use strcpy_s or strlcpy if possible. If no safe function is viable, strcpy/strncpy should be proceeded by conditional checks to verify tha that the source string will fit in the destination with a null termnator.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS111237.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS111237.md) for guidance on this issue."},"shortDescription":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS111237.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS189424","name":"ReviewEvalForUntrustedData","fullDescription":{"text":"Review eval for untrusted data: If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an eval statement it can allow an attacker to inject their own code."},"help":{"text":"Edit the eval so that no untrusted data is included. If untrusted data is absolutely necessary a great deal of care should be taken to ensure it is properly escaped so that it cannot be executed. This is not as simple as just escaping quotes.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md) for guidance on this issue."},"shortDescription":{"text":"If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an eval statement it can allow an attacker to inject their own code."},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS126858","name":"WeakbrokenHashAlgorithm","fullDescription":{"text":"Weak/Broken Hash Algorithm: A weak or broken hash algorithm was detected."},"help":{"text":"Consider switching to use SHA-256 or SHA-512 instead.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS126858.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS126858.md) for guidance on this issue."},"shortDescription":{"text":"A weak or broken hash algorithm was detected."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS126858.md","properties":{"DevSkimSeverity":"Critical","DevSkimConfidence":"Unspecified"}},{"id":"DS137138","name":"InsecureUrl","fullDescription":{"text":"Insecure URL: An HTTP-based URL without TLS was detected."},"help":{"text":"Update to an HTTPS-based URL if possible.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS137138.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS137138.md) for guidance on this issue."},"shortDescription":{"text":"An HTTP-based URL without TLS was detected."},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS137138.md","properties":{"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"defaultConfiguration":{"level":"warning"}},{"id":"DS154189","name":"BannedCFunctionDetected","fullDescription":{"text":"Banned C function detected: These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'."},"help":{"text":"These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS154189.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS154189.md) for guidance on this issue."},"shortDescription":{"text":"These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'."},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS154189.md","properties":{"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"defaultConfiguration":{"level":"warning"}}]}},"versionControlProvenance":[{"repositoryUri":"https://github.com/kovidgoyal/kitty","revisionId":"8845bd6ed35ab7efa53b7d6cdfc3ea250fc83cc5","branch":"(no branch)"}],"results":[{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\unicode_names.c"},"region":{"startLine":75,"startColumn":37,"endLine":75,"endColumn":49,"charOffset":2784,"charLength":12,"snippet":{"text":"strlen(word)","rendered":{"text":"strlen(word)","markdown":"`strlen(word)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\unicode_input\\unicode_names.c"},"replacements":[{"deletedRegion":{"charOffset":2784,"charLength":12},"insertedContent":{"text":"strlen_s(word, <size of word>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\unicode_input\\unicode_names.c"},"replacements":[{"deletedRegion":{"charOffset":2784,"charLength":12},"insertedContent":{"text":"strnlen(word, <size of word>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":58184,"startColumn":19,"endLine":58184,"endColumn":24,"charOffset":4027646,"charLength":5,"snippet":{"text":"32969","rendered":{"text":"32969","markdown":"`32969`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":37243,"startColumn":874413,"endLine":37243,"endColumn":874418,"charOffset":2894671,"charLength":5,"snippet":{"text":"32969","rendered":{"text":"32969","markdown":"`32969`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":37243,"startColumn":572325,"endLine":37243,"endColumn":572330,"charOffset":2592583,"charLength":5,"snippet":{"text":"18273","rendered":{"text":"18273","markdown":"`18273`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":37243,"startColumn":550831,"endLine":37243,"endColumn":550836,"charOffset":2571089,"charLength":5,"snippet":{"text":"18273","rendered":{"text":"18273","markdown":"`18273`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":37243,"startColumn":498199,"endLine":37243,"endColumn":498204,"charOffset":2518457,"charLength":5,"snippet":{"text":"32969","rendered":{"text":"32969","markdown":"`32969`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":37243,"startColumn":348943,"endLine":37243,"endColumn":348948,"charOffset":2369201,"charLength":5,"snippet":{"text":"18273","rendered":{"text":"18273","markdown":"`18273`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":37243,"startColumn":231173,"endLine":37243,"endColumn":231178,"charOffset":2251431,"charLength":5,"snippet":{"text":"32969","rendered":{"text":"32969","markdown":"`32969`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":37243,"startColumn":14680,"endLine":37243,"endColumn":14685,"charOffset":2034938,"charLength":5,"snippet":{"text":"32969","rendered":{"text":"32969","markdown":"`32969`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5586,"startColumn":19,"endLine":5586,"endColumn":23,"charOffset":172160,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5585,"startColumn":19,"endLine":5585,"endColumn":23,"charOffset":172121,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5532,"startColumn":19,"endLine":5532,"endColumn":23,"charOffset":170346,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5531,"startColumn":19,"endLine":5531,"endColumn":23,"charOffset":170315,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5530,"startColumn":19,"endLine":5530,"endColumn":23,"charOffset":170284,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5529,"startColumn":19,"endLine":5529,"endColumn":23,"charOffset":170253,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5528,"startColumn":19,"endLine":5528,"endColumn":23,"charOffset":170222,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5527,"startColumn":19,"endLine":5527,"endColumn":23,"charOffset":170192,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5526,"startColumn":19,"endLine":5526,"endColumn":23,"charOffset":170162,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5525,"startColumn":19,"endLine":5525,"endColumn":23,"charOffset":170132,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5524,"startColumn":19,"endLine":5524,"endColumn":23,"charOffset":170101,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5523,"startColumn":19,"endLine":5523,"endColumn":23,"charOffset":170071,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5522,"startColumn":19,"endLine":5522,"endColumn":23,"charOffset":170040,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5521,"startColumn":19,"endLine":5521,"endColumn":23,"charOffset":170010,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5520,"startColumn":19,"endLine":5520,"endColumn":23,"charOffset":169980,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5519,"startColumn":19,"endLine":5519,"endColumn":23,"charOffset":169950,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5518,"startColumn":19,"endLine":5518,"endColumn":23,"charOffset":169920,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5517,"startColumn":19,"endLine":5517,"endColumn":23,"charOffset":169890,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5516,"startColumn":19,"endLine":5516,"endColumn":23,"charOffset":169860,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5515,"startColumn":19,"endLine":5515,"endColumn":23,"charOffset":169830,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5514,"startColumn":19,"endLine":5514,"endColumn":23,"charOffset":169799,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5513,"startColumn":19,"endLine":5513,"endColumn":23,"charOffset":169769,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5512,"startColumn":19,"endLine":5512,"endColumn":23,"charOffset":169739,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5511,"startColumn":19,"endLine":5511,"endColumn":23,"charOffset":169710,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5510,"startColumn":19,"endLine":5510,"endColumn":23,"charOffset":169681,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5509,"startColumn":19,"endLine":5509,"endColumn":23,"charOffset":169652,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5508,"startColumn":19,"endLine":5508,"endColumn":23,"charOffset":169623,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5507,"startColumn":19,"endLine":5507,"endColumn":23,"charOffset":169580,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5453,"startColumn":12,"endLine":5453,"endColumn":16,"charOffset":168112,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\desktop.c"},"region":{"startLine":144,"startColumn":8,"endLine":144,"endColumn":15,"charOffset":5131,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\desktop.c"},"region":{"startLine":135,"startColumn":8,"endLine":135,"endColumn":15,"charOffset":4784,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.h"},"region":{"startLine":332,"startColumn":62,"endLine":332,"endColumn":68,"charOffset":12330,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.h"},"region":{"startLine":328,"startColumn":4,"endLine":328,"endColumn":10,"charOffset":12143,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.h"},"region":{"startLine":278,"startColumn":8,"endLine":278,"endColumn":15,"charOffset":9765,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.h"},"region":{"startLine":38,"startColumn":61,"endLine":38,"endColumn":67,"charOffset":1323,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.c"},"region":{"startLine":114,"startColumn":140,"endLine":114,"endColumn":148,"charOffset":3732,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.c"},"region":{"startLine":65,"startColumn":8,"endLine":65,"endColumn":15,"charOffset":1943,"charLength":7,"snippet":{"text":"freopen","rendered":{"text":"freopen","markdown":"`freopen`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.c"},"region":{"startLine":64,"startColumn":8,"endLine":64,"endColumn":15,"charOffset":1853,"charLength":7,"snippet":{"text":"freopen","rendered":{"text":"freopen","markdown":"`freopen`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.c"},"region":{"startLine":63,"startColumn":8,"endLine":63,"endColumn":15,"charOffset":1764,"charLength":7,"snippet":{"text":"freopen","rendered":{"text":"freopen","markdown":"`freopen`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.c"},"region":{"startLine":43,"startColumn":17,"endLine":43,"endColumn":32,"charOffset":1037,"charLength":15,"snippet":{"text":"malloc(bufsize)","rendered":{"text":"malloc(bufsize)","markdown":"`malloc(bufsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\data-types.c"},"replacements":[{"deletedRegion":{"charOffset":1037,"charLength":15},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\core_text.m"},"region":{"startLine":476,"startColumn":20,"endLine":476,"endColumn":74,"charOffset":20901,"charLength":54,"snippet":{"text":"memcpy(ans.canvas, render_buf, ans.width * ans.height)","rendered":{"text":"memcpy(ans.canvas, render_buf, ans.width * ans.height)","markdown":"`memcpy(ans.canvas, render_buf, ans.width * ans.height)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\core_text.m"},"replacements":[{"deletedRegion":{"charOffset":20901,"charLength":54},"insertedContent":{"text":"memcpy_s(ans.canvas, <size of ans.canvas>,  render_buf,  ans.width * ans.height)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\core_text.m"},"region":{"startLine":475,"startColumn":17,"endLine":475,"endColumn":47,"charOffset":20848,"charLength":30,"snippet":{"text":"malloc(ans.width * ans.height)","rendered":{"text":"malloc(ans.width * ans.height)","markdown":"`malloc(ans.width * ans.height)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\core_text.m"},"replacements":[{"deletedRegion":{"charOffset":20848,"charLength":30},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\core_text.m"},"region":{"startLine":432,"startColumn":17,"endLine":432,"endColumn":38,"charOffset":18561,"charLength":21,"snippet":{"text":"malloc(render_buf_sz)","rendered":{"text":"malloc(render_buf_sz)","markdown":"`malloc(render_buf_sz)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\core_text.m"},"replacements":[{"deletedRegion":{"charOffset":18561,"charLength":21},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\keys.c"},"region":{"startLine":195,"startColumn":52,"endLine":195,"endColumn":64,"charOffset":7860,"charLength":12,"snippet":{"text":"strlen(text)","rendered":{"text":"strlen(text)","markdown":"`strlen(text)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\keys.c"},"replacements":[{"deletedRegion":{"charOffset":7860,"charLength":12},"insertedContent":{"text":"strlen_s(text, <size of text>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\keys.c"},"replacements":[{"deletedRegion":{"charOffset":7860,"charLength":12},"insertedContent":{"text":"strnlen(text, <size of text>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\keys.c"},"region":{"startLine":146,"startColumn":56,"endLine":146,"endColumn":68,"charOffset":5658,"charLength":12,"snippet":{"text":"strlen(text)","rendered":{"text":"strlen(text)","markdown":"`strlen(text)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\keys.c"},"replacements":[{"deletedRegion":{"charOffset":5658,"charLength":12},"insertedContent":{"text":"strlen_s(text, <size of text>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\keys.c"},"replacements":[{"deletedRegion":{"charOffset":5658,"charLength":12},"insertedContent":{"text":"strnlen(text, <size of text>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\keys.c"},"region":{"startLine":123,"startColumn":44,"endLine":123,"endColumn":50,"charOffset":4535,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"region":{"startLine":288,"startColumn":21,"endLine":288,"endColumn":34,"charOffset":10473,"charLength":13,"snippet":{"text":"http://a.b.')","rendered":{"text":"http://a.b.')","markdown":"`http://a.b.')`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"replacements":[{"deletedRegion":{"charOffset":10473,"charLength":13},"insertedContent":{"text":"https://a.b.')"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"region":{"startLine":285,"startColumn":25,"endLine":285,"endColumn":40,"charOffset":10372,"charLength":15,"snippet":{"text":"http://a.b?q=1'","rendered":{"text":"http://a.b?q=1'","markdown":"`http://a.b?q=1'`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"replacements":[{"deletedRegion":{"charOffset":10372,"charLength":15},"insertedContent":{"text":"https://a.b?q=1'"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"region":{"startLine":253,"startColumn":21,"endLine":253,"endColumn":33,"charOffset":9104,"charLength":12,"snippet":{"text":"http://ab.de","rendered":{"text":"http://ab.de","markdown":"`http://ab.de`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"replacements":[{"deletedRegion":{"charOffset":9104,"charLength":12},"insertedContent":{"text":"https://ab.de"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"region":{"startLine":251,"startColumn":21,"endLine":251,"endColumn":34,"charOffset":9017,"charLength":13,"snippet":{"text":"http://-abcd]","rendered":{"text":"http://-abcd]","markdown":"`http://-abcd]`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"replacements":[{"deletedRegion":{"charOffset":9017,"charLength":13},"insertedContent":{"text":"https://-abcd]"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"region":{"startLine":247,"startColumn":25,"endLine":247,"endColumn":39,"charOffset":8835,"charLength":14,"snippet":{"text":"http://xyz.com","rendered":{"text":"http://xyz.com","markdown":"`http://xyz.com`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"replacements":[{"deletedRegion":{"charOffset":8835,"charLength":14},"insertedContent":{"text":"https://xyz.com"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"region":{"startLine":132,"startColumn":4,"endLine":132,"endColumn":42,"charOffset":3985,"charLength":38,"snippet":{"text":"memcpy((void*)s->key, key, keylen + 1)","rendered":{"text":"memcpy((void*)s->key, key, keylen + 1)","markdown":"`memcpy((void*)s->key, key, keylen + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"replacements":[{"deletedRegion":{"charOffset":3985,"charLength":38},"insertedContent":{"text":"memcpy_s((void*)s->key, <size of (void*)s->key>,  key,  keylen + 1)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"region":{"startLine":130,"startColumn":13,"endLine":130,"endColumn":31,"charOffset":3918,"charLength":18,"snippet":{"text":"malloc(keylen + 1)","rendered":{"text":"malloc(keylen + 1)","markdown":"`malloc(keylen + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"replacements":[{"deletedRegion":{"charOffset":3918,"charLength":18},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"region":{"startLine":128,"startColumn":8,"endLine":128,"endColumn":37,"charOffset":3835,"charLength":29,"snippet":{"text":"malloc(sizeof(HyperLinkEntry)","rendered":{"text":"malloc(sizeof(HyperLinkEntry)","markdown":"`malloc(sizeof(HyperLinkEntry)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"replacements":[{"deletedRegion":{"charOffset":3835,"charLength":29},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"region":{"startLine":115,"startColumn":58,"endLine":115,"endColumn":72,"charOffset":3243,"charLength":14,"snippet":{"text":"strlen(s->key)","rendered":{"text":"strlen(s->key)","markdown":"`strlen(s->key)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"replacements":[{"deletedRegion":{"charOffset":3243,"charLength":14},"insertedContent":{"text":"strlen_s(s->key, <size of s->key>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"replacements":[{"deletedRegion":{"charOffset":3243,"charLength":14},"insertedContent":{"text":"strnlen(s->key, <size of s->key>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"region":{"startLine":105,"startColumn":29,"endLine":105,"endColumn":40,"charOffset":2691,"charLength":11,"snippet":{"text":"strlen(key)","rendered":{"text":"strlen(key)","markdown":"`strlen(key)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"replacements":[{"deletedRegion":{"charOffset":2691,"charLength":11},"insertedContent":{"text":"strlen_s(key, <size of key>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"replacements":[{"deletedRegion":{"charOffset":2691,"charLength":11},"insertedContent":{"text":"strnlen(key, <size of key>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\parser.py"},"region":{"startLine":235,"startColumn":96,"endLine":235,"endColumn":114,"charOffset":10424,"charLength":18,"snippet":{"text":"http://yay;.com'))","rendered":{"text":"http://yay;.com'))","markdown":"`http://yay;.com'))`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\parser.py"},"replacements":[{"deletedRegion":{"charOffset":10424,"charLength":18},"insertedContent":{"text":"https://yay;.com'))"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\parser.py"},"region":{"startLine":235,"startColumn":41,"endLine":235,"endColumn":62,"charOffset":10369,"charLength":21,"snippet":{"text":"http://yay;.com\\x07',","rendered":{"text":"http://yay;.com\\x07',","markdown":"`http://yay;.com\\x07',`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\parser.py"},"replacements":[{"deletedRegion":{"charOffset":10369,"charLength":21},"insertedContent":{"text":"https://yay;.com\\x07',"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\history.c"},"region":{"startLine":559,"startColumn":12,"endLine":559,"endColumn":118,"charOffset":19920,"charLength":106,"snippet":{"text":"memcpy(other->segments[i].line_attrs, self->segments[i].line_attrs, SEGMENT_SIZE * sizeof(line_attrs_type)","rendered":{"text":"memcpy(other->segments[i].line_attrs, self->segments[i].line_attrs, SEGMENT_SIZE * sizeof(line_attrs_type)","markdown":"`memcpy(other->segments[i].line_attrs, self->segments[i].line_attrs, SEGMENT_SIZE * sizeof(line_attrs_type)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\history.c"},"replacements":[{"deletedRegion":{"charOffset":19920,"charLength":106},"insertedContent":{"text":"memcpy_s(other->segments[i].line_attrs, <size of other->segments[i].line_attrs>,  self->segments[i].line_attrs,  SEGMENT_SIZE * sizeof(line_attrs_type)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\history.c"},"region":{"startLine":558,"startColumn":12,"endLine":558,"endColumn":121,"charOffset":19795,"charLength":109,"snippet":{"text":"memcpy(other->segments[i].gpu_cells, self->segments[i].gpu_cells, SEGMENT_SIZE * self->xnum * sizeof(GPUCell)","rendered":{"text":"memcpy(other->segments[i].gpu_cells, self->segments[i].gpu_cells, SEGMENT_SIZE * self->xnum * sizeof(GPUCell)","markdown":"`memcpy(other->segments[i].gpu_cells, self->segments[i].gpu_cells, SEGMENT_SIZE * self->xnum * sizeof(GPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\history.c"},"replacements":[{"deletedRegion":{"charOffset":19795,"charLength":109},"insertedContent":{"text":"memcpy_s(other->segments[i].gpu_cells, <size of other->segments[i].gpu_cells>,  self->segments[i].gpu_cells,  SEGMENT_SIZE * self->xnum * sizeof(GPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\history.c"},"region":{"startLine":557,"startColumn":12,"endLine":557,"endColumn":121,"charOffset":19670,"charLength":109,"snippet":{"text":"memcpy(other->segments[i].cpu_cells, self->segments[i].cpu_cells, SEGMENT_SIZE * self->xnum * sizeof(CPUCell)","rendered":{"text":"memcpy(other->segments[i].cpu_cells, self->segments[i].cpu_cells, SEGMENT_SIZE * self->xnum * sizeof(CPUCell)","markdown":"`memcpy(other->segments[i].cpu_cells, self->segments[i].cpu_cells, SEGMENT_SIZE * self->xnum * sizeof(CPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\history.c"},"replacements":[{"deletedRegion":{"charOffset":19670,"charLength":109},"insertedContent":{"text":"memcpy_s(other->segments[i].cpu_cells, <size of other->segments[i].cpu_cells>,  self->segments[i].cpu_cells,  SEGMENT_SIZE * self->xnum * sizeof(CPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\history.c"},"region":{"startLine":433,"startColumn":29,"endLine":433,"endColumn":83,"charOffset":15795,"charLength":54,"snippet":{"text":"memcpy(buf + copied, ph->buffer, (ph->length - copied)","rendered":{"text":"memcpy(buf + copied, ph->buffer, (ph->length - copied)","markdown":"`memcpy(buf + copied, ph->buffer, (ph->length - copied)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\history.c"},"replacements":[{"deletedRegion":{"charOffset":15795,"charLength":54},"insertedContent":{"text":"memcpy_s(buf + copied, <size of buf + copied>,  ph->buffer,  (ph->length - copied)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\history.c"},"region":{"startLine":432,"startColumn":16,"endLine":432,"endColumn":59,"charOffset":15720,"charLength":43,"snippet":{"text":"memcpy(buf, ph->buffer + ph->start, copied)","rendered":{"text":"memcpy(buf, ph->buffer + ph->start, copied)","markdown":"`memcpy(buf, ph->buffer + ph->start, copied)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\history.c"},"replacements":[{"deletedRegion":{"charOffset":15720,"charLength":43},"insertedContent":{"text":"memcpy_s(buf, <size of buf>,  ph->buffer + ph->start,  copied)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\history.c"},"region":{"startLine":202,"startColumn":21,"endLine":202,"endColumn":67,"charOffset":7054,"charLength":46,"snippet":{"text":"memcpy(ph->buffer, buf + copied, (sz - copied)","rendered":{"text":"memcpy(ph->buffer, buf + copied, (sz - copied)","markdown":"`memcpy(ph->buffer, buf + copied, (sz - copied)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\history.c"},"replacements":[{"deletedRegion":{"charOffset":7054,"charLength":46},"insertedContent":{"text":"memcpy_s(ph->buffer, <size of ph->buffer>,  buf + copied,  (sz - copied)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\history.c"},"region":{"startLine":201,"startColumn":16,"endLine":201,"endColumn":66,"charOffset":6980,"charLength":50,"snippet":{"text":"memcpy(ph->buffer + start_writing_at, buf, copied)","rendered":{"text":"memcpy(ph->buffer + start_writing_at, buf, copied)","markdown":"`memcpy(ph->buffer + start_writing_at, buf, copied)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\history.c"},"replacements":[{"deletedRegion":{"charOffset":6980,"charLength":50},"insertedContent":{"text":"memcpy_s(ph->buffer + start_writing_at, <size of ph->buffer + start_writing_at>,  buf,  copied)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\history.c"},"region":{"startLine":86,"startColumn":29,"endLine":86,"endColumn":86,"charOffset":2986,"charLength":57,"snippet":{"text":"memcpy(newbuf + copied, ph->buffer, (ph->length - copied)","rendered":{"text":"memcpy(newbuf + copied, ph->buffer, (ph->length - copied)","markdown":"`memcpy(newbuf + copied, ph->buffer, (ph->length - copied)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\history.c"},"replacements":[{"deletedRegion":{"charOffset":2986,"charLength":57},"insertedContent":{"text":"memcpy_s(newbuf + copied, <size of newbuf + copied>,  ph->buffer,  (ph->length - copied)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\history.c"},"region":{"startLine":85,"startColumn":16,"endLine":85,"endColumn":62,"charOffset":2908,"charLength":46,"snippet":{"text":"memcpy(newbuf, ph->buffer + ph->start, copied)","rendered":{"text":"memcpy(newbuf, ph->buffer + ph->start, copied)","markdown":"`memcpy(newbuf, ph->buffer + ph->start, copied)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\history.c"},"replacements":[{"deletedRegion":{"charOffset":2908,"charLength":46},"insertedContent":{"text":"memcpy_s(newbuf, <size of newbuf>,  ph->buffer + ph->start,  copied)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS126858","level":"error","message":{"text":"Weak/Broken Hash Algorithm"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\config_data.py"},"region":{"startLine":1501,"startColumn":28,"endLine":1501,"endColumn":32,"charOffset":64421,"charLength":4,"snippet":{"text":"sha1","rendered":{"text":"sha1","markdown":"`sha1`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\config_data.py"},"replacements":[{"deletedRegion":{"charOffset":64421,"charLength":4},"insertedContent":{"text":"sha512"}}]}]},{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\config_data.py"},"replacements":[{"deletedRegion":{"charOffset":64421,"charLength":4},"insertedContent":{"text":"sha256"}}]}]}],"properties":{"tags":["Cryptography.BannedHashAlgorithm"],"DevSkimSeverity":"Critical","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":6099,"startColumn":30,"endLine":6099,"endColumn":49,"charOffset":407777,"charLength":19,"snippet":{"text":"strlen(prefixes[i])","rendered":{"text":"strlen(prefixes[i])","markdown":"`strlen(prefixes[i])`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":407777,"charLength":19},"insertedContent":{"text":"strlen_s(prefixes[i], <size of prefixes[i]>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":407777,"charLength":19},"insertedContent":{"text":"strnlen(prefixes[i], <size of prefixes[i]>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":6053,"startColumn":31,"endLine":6053,"endColumn":42,"charOffset":405894,"charLength":11,"snippet":{"text":"strlen(ext)","rendered":{"text":"strlen(ext)","markdown":"`strlen(ext)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":405894,"charLength":11},"insertedContent":{"text":"strlen_s(ext, <size of ext>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":405894,"charLength":11},"insertedContent":{"text":"strnlen(ext, <size of ext>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":6019,"startColumn":16,"endLine":6019,"endColumn":64,"charOffset":404792,"charLength":48,"snippet":{"text":"memcpy(local_str, gl_str_tmp, len * sizeof(char)","rendered":{"text":"memcpy(local_str, gl_str_tmp, len * sizeof(char)","markdown":"`memcpy(local_str, gl_str_tmp, len * sizeof(char)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":404792,"charLength":48},"insertedContent":{"text":"memcpy_s(local_str, <size of local_str>,  gl_str_tmp,  len * sizeof(char)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":6017,"startColumn":38,"endLine":6017,"endColumn":63,"charOffset":404710,"charLength":25,"snippet":{"text":"malloc(len * sizeof(char)","rendered":{"text":"malloc(len * sizeof(char)","markdown":"`malloc(len * sizeof(char)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":404710,"charLength":25},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":6016,"startColumn":25,"endLine":6016,"endColumn":43,"charOffset":404647,"charLength":18,"snippet":{"text":"strlen(gl_str_tmp)","rendered":{"text":"strlen(gl_str_tmp)","markdown":"`strlen(gl_str_tmp)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":404647,"charLength":18},"insertedContent":{"text":"strlen_s(gl_str_tmp, <size of gl_str_tmp>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":404647,"charLength":18},"insertedContent":{"text":"strnlen(gl_str_tmp, <size of gl_str_tmp>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":6009,"startColumn":31,"endLine":6009,"endColumn":67,"charOffset":404358,"charLength":36,"snippet":{"text":"malloc(num_exts_i * (sizeof *exts_i)","rendered":{"text":"malloc(num_exts_i * (sizeof *exts_i)","markdown":"`malloc(num_exts_i * (sizeof *exts_i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":404358,"charLength":36},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":2903,"startColumn":8,"endLine":2903,"endColumn":15,"charOffset":161423,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":2891,"startColumn":8,"endLine":2891,"endColumn":15,"charOffset":161028,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":2887,"startColumn":8,"endLine":2887,"endColumn":15,"charOffset":160907,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":2864,"startColumn":30,"endLine":2864,"endColumn":36,"charOffset":160172,"charLength":6,"snippet":{"text":"sscanf","rendered":{"text":"sscanf","markdown":"`sscanf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":912,"startColumn":4,"endLine":912,"endColumn":26,"charOffset":36765,"charLength":22,"snippet":{"text":"memcpy(addr, data, sz)","rendered":{"text":"memcpy(addr, data, sz)","markdown":"`memcpy(addr, data, sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\graphics.c"},"replacements":[{"deletedRegion":{"charOffset":36765,"charLength":22},"insertedContent":{"text":"memcpy_s(addr, <size of addr>,  data,  sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":629,"startColumn":4,"endLine":629,"endColumn":9,"charOffset":25223,"charLength":5,"snippet":{"text":"qsort","rendered":{"text":"qsort","markdown":"`qsort`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":405,"startColumn":124,"endLine":405,"endColumn":132,"charOffset":14594,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":394,"startColumn":12,"endLine":394,"endColumn":88,"charOffset":13835,"charLength":76,"snippet":{"text":"memcpy(img->load_data.buf + img->load_data.buf_used, payload, g->payload_sz)","rendered":{"text":"memcpy(img->load_data.buf + img->load_data.buf_used, payload, g->payload_sz)","markdown":"`memcpy(img->load_data.buf + img->load_data.buf_used, payload, g->payload_sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\graphics.c"},"replacements":[{"deletedRegion":{"charOffset":13835,"charLength":76},"insertedContent":{"text":"memcpy_s(img->load_data.buf + img->load_data.buf_used, <size of img->load_data.buf + img->load_data.buf_used>,  payload,  g->payload_sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\parser.c"},"region":{"startLine":869,"startColumn":15,"endLine":869,"endColumn":29,"charOffset":31400,"charLength":14,"snippet":{"text":"strlen(prefix)","rendered":{"text":"strlen(prefix)","markdown":"`strlen(prefix)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\parser.c"},"replacements":[{"deletedRegion":{"charOffset":31400,"charLength":14},"insertedContent":{"text":"strlen_s(prefix, <size of prefix>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\parser.c"},"replacements":[{"deletedRegion":{"charOffset":31400,"charLength":14},"insertedContent":{"text":"strnlen(prefix, <size of prefix>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":362,"startColumn":33,"endLine":362,"endColumn":68,"charOffset":12296,"charLength":35,"snippet":{"text":"malloc(img->load_data.buf_capacity)","rendered":{"text":"malloc(img->load_data.buf_capacity)","markdown":"`malloc(img->load_data.buf_capacity)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\graphics.c"},"replacements":[{"deletedRegion":{"charOffset":12296,"charLength":35},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\parser.c"},"region":{"startLine":336,"startColumn":17,"endLine":336,"endColumn":33,"charOffset":11397,"charLength":16,"snippet":{"text":"malloc(size + 1)","rendered":{"text":"malloc(size + 1)","markdown":"`malloc(size + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\parser.c"},"replacements":[{"deletedRegion":{"charOffset":11397,"charLength":16},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":273,"startColumn":81,"endLine":273,"endColumn":89,"charOffset":8734,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":258,"startColumn":25,"endLine":258,"endColumn":41,"charOffset":8013,"charLength":16,"snippet":{"text":"malloc(capacity)","rendered":{"text":"malloc(capacity)","markdown":"`malloc(capacity)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\graphics.c"},"replacements":[{"deletedRegion":{"charOffset":8013,"charLength":16},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\parser.c"},"region":{"startLine":320,"startColumn":21,"endLine":320,"endColumn":34,"charOffset":10730,"charLength":13,"snippet":{"text":"strlen(token)","rendered":{"text":"strlen(token)","markdown":"`strlen(token)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\parser.c"},"replacements":[{"deletedRegion":{"charOffset":10730,"charLength":13},"insertedContent":{"text":"strlen_s(token, <size of token>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\parser.c"},"replacements":[{"deletedRegion":{"charOffset":10730,"charLength":13},"insertedContent":{"text":"strnlen(token, <size of token>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":254,"startColumn":80,"endLine":254,"endColumn":88,"charOffset":7898,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":252,"startColumn":15,"endLine":252,"endColumn":20,"charOffset":7776,"charLength":5,"snippet":{"text":"fopen","rendered":{"text":"fopen","markdown":"`fopen`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":197,"startColumn":28,"endLine":197,"endColumn":58,"charOffset":5828,"charLength":30,"snippet":{"text":"malloc(img->load_data.data_sz)","rendered":{"text":"malloc(img->load_data.data_sz)","markdown":"`malloc(img->load_data.data_sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\graphics.c"},"replacements":[{"deletedRegion":{"charOffset":5828,"charLength":30},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":180,"startColumn":19,"endLine":180,"endColumn":27,"charOffset":5357,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":165,"startColumn":148,"endLine":165,"endColumn":156,"charOffset":5033,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":161,"startColumn":112,"endLine":161,"endColumn":120,"charOffset":4768,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":149,"startColumn":4,"endLine":149,"endColumn":13,"charOffset":4296,"charLength":9,"snippet":{"text":"vsnprintf","rendered":{"text":"vsnprintf","markdown":"`vsnprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":133,"startColumn":4,"endLine":133,"endColumn":9,"charOffset":3682,"charLength":5,"snippet":{"text":"qsort","rendered":{"text":"qsort","markdown":"`qsort`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\window.py"},"region":{"startLine":598,"startColumn":16,"endLine":598,"endColumn":20,"charOffset":23388,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\window.py"},"region":{"startLine":543,"startColumn":95,"endLine":543,"endColumn":104,"charOffset":20927,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":208,"startColumn":12,"endLine":208,"endColumn":19,"charOffset":7016,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":194,"startColumn":38,"endLine":194,"endColumn":45,"charOffset":6476,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":183,"startColumn":15,"endLine":183,"endColumn":21,"charOffset":6096,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":174,"startColumn":57,"endLine":174,"endColumn":64,"charOffset":5853,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":166,"startColumn":4,"endLine":166,"endColumn":11,"charOffset":5644,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":164,"startColumn":16,"endLine":164,"endColumn":22,"charOffset":5613,"charLength":6,"snippet":{"text":"strtok","rendered":{"text":"strtok","markdown":"`strtok`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":159,"startColumn":18,"endLine":159,"endColumn":24,"charOffset":5404,"charLength":6,"snippet":{"text":"strtok","rendered":{"text":"strtok","markdown":"`strtok`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":158,"startColumn":4,"endLine":158,"endColumn":32,"charOffset":5355,"charLength":28,"snippet":{"text":"strncpy(buf, path, PATH_MAX)","rendered":{"text":"strncpy(buf, path, PATH_MAX)","markdown":"`strncpy(buf, path, PATH_MAX)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"launcher.c"},"replacements":[{"deletedRegion":{"charOffset":5355,"charLength":28},"insertedContent":{"text":"strcpy_s(buf,  PATH_MAX,  path)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"launcher.c"},"replacements":[{"deletedRegion":{"charOffset":5355,"charLength":28},"insertedContent":{"text":"strlcpy(buf,  path,  PATH_MAX)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":156,"startColumn":17,"endLine":156,"endColumn":24,"charOffset":5234,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":155,"startColumn":23,"endLine":155,"endColumn":29,"charOffset":5200,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":148,"startColumn":60,"endLine":148,"endColumn":67,"charOffset":4991,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":139,"startColumn":8,"endLine":139,"endColumn":15,"charOffset":4715,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":126,"startColumn":46,"endLine":126,"endColumn":53,"charOffset":4272,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":125,"startColumn":51,"endLine":125,"endColumn":58,"charOffset":4154,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":106,"startColumn":27,"endLine":106,"endColumn":34,"charOffset":3617,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":93,"startColumn":28,"endLine":93,"endColumn":35,"charOffset":3030,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":91,"startColumn":40,"endLine":91,"endColumn":47,"charOffset":2867,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":89,"startColumn":25,"endLine":89,"endColumn":32,"charOffset":2694,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":81,"startColumn":38,"endLine":81,"endColumn":45,"charOffset":2334,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":76,"startColumn":10,"endLine":76,"endColumn":18,"charOffset":2048,"charLength":8,"snippet":{"text":"swprintf","rendered":{"text":"swprintf","markdown":"`swprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":69,"startColumn":27,"endLine":69,"endColumn":34,"charOffset":1775,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":51,"startColumn":8,"endLine":51,"endColumn":16,"charOffset":1199,"charLength":8,"snippet":{"text":"swprintf","rendered":{"text":"swprintf","markdown":"`swprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"launcher.c"},"region":{"startLine":47,"startColumn":4,"endLine":47,"endColumn":12,"charOffset":1020,"charLength":8,"snippet":{"text":"swprintf","rendered":{"text":"swprintf","markdown":"`swprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\hints.py"},"region":{"startLine":26,"startColumn":14,"endLine":26,"endColumn":28,"charOffset":773,"charLength":14,"snippet":{"text":"http://test.me","rendered":{"text":"http://test.me","markdown":"`http://test.me`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\hints.py"},"replacements":[{"deletedRegion":{"charOffset":773,"charLength":14},"insertedContent":{"text":"https://test.me"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\hints.py"},"region":{"startLine":25,"startColumn":13,"endLine":25,"endColumn":27,"charOffset":741,"charLength":14,"snippet":{"text":"http://test.me","rendered":{"text":"http://test.me","markdown":"`http://test.me`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\hints.py"},"replacements":[{"deletedRegion":{"charOffset":741,"charLength":14},"insertedContent":{"text":"https://test.me"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\rewrap.h"},"region":{"startLine":48,"startColumn":4,"endLine":48,"endColumn":84,"charOffset":1480,"charLength":80,"snippet":{"text":"memcpy(dest->gpu_cells + dest_at, src->gpu_cells + src_at, num * sizeof(GPUCell)","rendered":{"text":"memcpy(dest->gpu_cells + dest_at, src->gpu_cells + src_at, num * sizeof(GPUCell)","markdown":"`memcpy(dest->gpu_cells + dest_at, src->gpu_cells + src_at, num * sizeof(GPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\rewrap.h"},"replacements":[{"deletedRegion":{"charOffset":1480,"charLength":80},"insertedContent":{"text":"memcpy_s(dest->gpu_cells + dest_at, <size of dest->gpu_cells + dest_at>,  src->gpu_cells + src_at,  num * sizeof(GPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\rewrap.h"},"region":{"startLine":47,"startColumn":4,"endLine":47,"endColumn":84,"charOffset":1392,"charLength":80,"snippet":{"text":"memcpy(dest->cpu_cells + dest_at, src->cpu_cells + src_at, num * sizeof(CPUCell)","rendered":{"text":"memcpy(dest->cpu_cells + dest_at, src->cpu_cells + src_at, num * sizeof(CPUCell)","markdown":"`memcpy(dest->cpu_cells + dest_at, src->cpu_cells + src_at, num * sizeof(CPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\rewrap.h"},"replacements":[{"deletedRegion":{"charOffset":1392,"charLength":80},"insertedContent":{"text":"memcpy_s(dest->cpu_cells + dest_at, <size of dest->cpu_cells + dest_at>,  src->cpu_cells + src_at,  num * sizeof(CPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\glfw.c"},"region":{"startLine":407,"startColumn":21,"endLine":407,"endColumn":55,"charOffset":15145,"charLength":34,"snippet":{"text":"memcpy(logo.pixels, logo_data, sz)","rendered":{"text":"memcpy(logo.pixels, logo_data, sz)","markdown":"`memcpy(logo.pixels, logo_data, sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\glfw.c"},"replacements":[{"deletedRegion":{"charOffset":15145,"charLength":34},"insertedContent":{"text":"memcpy_s(logo.pixels, <size of logo.pixels>,  logo_data,  sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\glfw.c"},"region":{"startLine":406,"startColumn":18,"endLine":406,"endColumn":28,"charOffset":15111,"charLength":10,"snippet":{"text":"malloc(sz)","rendered":{"text":"malloc(sz)","markdown":"`malloc(sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\glfw.c"},"replacements":[{"deletedRegion":{"charOffset":15111,"charLength":10},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\glfw.c"},"region":{"startLine":92,"startColumn":8,"endLine":92,"endColumn":15,"charOffset":3805,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\glfw.c"},"region":{"startLine":90,"startColumn":8,"endLine":90,"endColumn":16,"charOffset":3745,"charLength":8,"snippet":{"text":"vfprintf","rendered":{"text":"vfprintf","markdown":"`vfprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\glfw.c"},"region":{"startLine":88,"startColumn":8,"endLine":88,"endColumn":15,"charOffset":3637,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_notify.c"},"region":{"startLine":73,"startColumn":36,"endLine":73,"endColumn":74,"charOffset":2987,"charLength":38,"snippet":{"text":"malloc(sizeof(NotificationCreatedData)","rendered":{"text":"malloc(sizeof(NotificationCreatedData)","markdown":"`malloc(sizeof(NotificationCreatedData)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\linux_notify.c"},"replacements":[{"deletedRegion":{"charOffset":2987,"charLength":38},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\png-reader.c"},"region":{"startLine":113,"startColumn":22,"endLine":113,"endColumn":58,"charOffset":4469,"charLength":36,"snippet":{"text":"malloc(d->height * sizeof(png_bytep)","rendered":{"text":"malloc(d->height * sizeof(png_bytep)","markdown":"`malloc(d->height * sizeof(png_bytep)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\png-reader.c"},"replacements":[{"deletedRegion":{"charOffset":4469,"charLength":36},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\png-reader.c"},"region":{"startLine":111,"startColumn":22,"endLine":111,"endColumn":40,"charOffset":4321,"charLength":18,"snippet":{"text":"malloc(d->sz + 16)","rendered":{"text":"malloc(d->sz + 16)","markdown":"`malloc(d->sz + 16)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\png-reader.c"},"replacements":[{"deletedRegion":{"charOffset":4321,"charLength":18},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\png-reader.c"},"region":{"startLine":21,"startColumn":8,"endLine":21,"endColumn":41,"charOffset":522,"charLength":33,"snippet":{"text":"memcpy(out, f->buf + f->cur, amt)","rendered":{"text":"memcpy(out, f->buf + f->cur, amt)","markdown":"`memcpy(out, f->buf + f->cur, amt)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\png-reader.c"},"replacements":[{"deletedRegion":{"charOffset":522,"charLength":33},"insertedContent":{"text":"memcpy_s(out, <size of out>,  f->buf + f->cur,  amt)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"region":{"startLine":360,"startColumn":4,"endLine":360,"endColumn":9,"charOffset":11137,"charLength":5,"snippet":{"text":"qsort","rendered":{"text":"qsort","markdown":"`qsort`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"region":{"startLine":317,"startColumn":11,"endLine":317,"endColumn":15,"charOffset":9926,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"region":{"startLine":234,"startColumn":4,"endLine":234,"endColumn":44,"charOffset":7539,"charLength":40,"snippet":{"text":"memcpy(&js->linjs, &linjs, sizeof(linjs)","rendered":{"text":"memcpy(&js->linjs, &linjs, sizeof(linjs)","markdown":"`memcpy(&js->linjs, &linjs, sizeof(linjs)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"replacements":[{"deletedRegion":{"charOffset":7539,"charLength":40},"insertedContent":{"text":"memcpy_s(&js->linjs, <size of &js->linjs>,  &linjs,  sizeof(linjs)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"region":{"startLine":233,"startColumn":4,"endLine":233,"endColumn":48,"charOffset":7483,"charLength":44,"snippet":{"text":"strncpy(linjs.path, path, sizeof(linjs.path)","rendered":{"text":"strncpy(linjs.path, path, sizeof(linjs.path)","markdown":"`strncpy(linjs.path, path, sizeof(linjs.path)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"replacements":[{"deletedRegion":{"charOffset":7483,"charLength":44},"insertedContent":{"text":"strcpy_s(linjs.path,  sizeof(linjs.path,  path)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"replacements":[{"deletedRegion":{"charOffset":7483,"charLength":44},"insertedContent":{"text":"strlcpy(linjs.path,  path,  sizeof(linjs.path)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"region":{"startLine":184,"startColumn":8,"endLine":184,"endColumn":15,"charOffset":6163,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"region":{"startLine":176,"startColumn":8,"endLine":176,"endColumn":15,"charOffset":5852,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"region":{"startLine":169,"startColumn":8,"endLine":169,"endColumn":46,"charOffset":5654,"charLength":38,"snippet":{"text":"strncpy(name, \"Unknown\", sizeof(name))","rendered":{"text":"strncpy(name, \"Unknown\", sizeof(name))","markdown":"`strncpy(name, \"Unknown\", sizeof(name))`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"replacements":[{"deletedRegion":{"charOffset":5654,"charLength":38},"insertedContent":{"text":"strcpy_s(name,  sizeof(name,  \"Unknown\")"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"replacements":[{"deletedRegion":{"charOffset":5654,"charLength":38},"insertedContent":{"text":"strlcpy(name,  \"Unknown\",  sizeof(name)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"region":{"startLine":154,"startColumn":24,"endLine":154,"endColumn":32,"charOffset":5270,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\logging.c"},"region":{"startLine":71,"startColumn":8,"endLine":71,"endColumn":14,"charOffset":1986,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\logging.c"},"region":{"startLine":51,"startColumn":21,"endLine":51,"endColumn":28,"charOffset":1464,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\logging.c"},"region":{"startLine":46,"startColumn":9,"endLine":46,"endColumn":17,"charOffset":1305,"charLength":8,"snippet":{"text":"vfprintf","rendered":{"text":"vfprintf","markdown":"`vfprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\logging.c"},"region":{"startLine":45,"startColumn":31,"endLine":45,"endColumn":40,"charOffset":1272,"charLength":9,"snippet":{"text":"vsnprintf","rendered":{"text":"vsnprintf","markdown":"`vsnprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\logging.c"},"region":{"startLine":40,"startColumn":16,"endLine":40,"endColumn":23,"charOffset":1151,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\lineops.h"},"region":{"startLine":54,"startColumn":4,"endLine":54,"endColumn":70,"charOffset":2058,"charLength":66,"snippet":{"text":"memcpy(line->cpu_cells + start, cpu_cells + start, sizeof(CPUCell)","rendered":{"text":"memcpy(line->cpu_cells + start, cpu_cells + start, sizeof(CPUCell)","markdown":"`memcpy(line->cpu_cells + start, cpu_cells + start, sizeof(CPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\lineops.h"},"replacements":[{"deletedRegion":{"charOffset":2058,"charLength":66},"insertedContent":{"text":"memcpy_s(line->cpu_cells + start, <size of line->cpu_cells + start>,  cpu_cells + start,  sizeof(CPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\lineops.h"},"region":{"startLine":53,"startColumn":4,"endLine":53,"endColumn":70,"charOffset":1978,"charLength":66,"snippet":{"text":"memcpy(line->gpu_cells + start, gpu_cells + start, sizeof(GPUCell)","rendered":{"text":"memcpy(line->gpu_cells + start, gpu_cells + start, sizeof(GPUCell)","markdown":"`memcpy(line->gpu_cells + start, gpu_cells + start, sizeof(GPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\lineops.h"},"replacements":[{"deletedRegion":{"charOffset":1978,"charLength":66},"insertedContent":{"text":"memcpy_s(line->gpu_cells + start, <size of line->gpu_cells + start>,  gpu_cells + start,  sizeof(GPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\lineops.h"},"region":{"startLine":48,"startColumn":4,"endLine":48,"endColumn":70,"charOffset":1767,"charLength":66,"snippet":{"text":"memcpy(cpu_cells + start, line->cpu_cells + start, sizeof(CPUCell)","rendered":{"text":"memcpy(cpu_cells + start, line->cpu_cells + start, sizeof(CPUCell)","markdown":"`memcpy(cpu_cells + start, line->cpu_cells + start, sizeof(CPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\lineops.h"},"replacements":[{"deletedRegion":{"charOffset":1767,"charLength":66},"insertedContent":{"text":"memcpy_s(cpu_cells + start, <size of cpu_cells + start>,  line->cpu_cells + start,  sizeof(CPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\lineops.h"},"region":{"startLine":47,"startColumn":4,"endLine":47,"endColumn":70,"charOffset":1687,"charLength":66,"snippet":{"text":"memcpy(gpu_cells + start, line->gpu_cells + start, sizeof(GPUCell)","rendered":{"text":"memcpy(gpu_cells + start, line->gpu_cells + start, sizeof(GPUCell)","markdown":"`memcpy(gpu_cells + start, line->gpu_cells + start, sizeof(GPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\lineops.h"},"replacements":[{"deletedRegion":{"charOffset":1687,"charLength":66},"insertedContent":{"text":"memcpy_s(gpu_cells + start, <size of gpu_cells + start>,  line->gpu_cells + start,  sizeof(GPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\lineops.h"},"region":{"startLine":24,"startColumn":4,"endLine":24,"endColumn":59,"charOffset":723,"charLength":55,"snippet":{"text":"memcpy(dest->gpu_cells, src->gpu_cells, sizeof(GPUCell)","rendered":{"text":"memcpy(dest->gpu_cells, src->gpu_cells, sizeof(GPUCell)","markdown":"`memcpy(dest->gpu_cells, src->gpu_cells, sizeof(GPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\lineops.h"},"replacements":[{"deletedRegion":{"charOffset":723,"charLength":55},"insertedContent":{"text":"memcpy_s(dest->gpu_cells, <size of dest->gpu_cells>,  src->gpu_cells,  sizeof(GPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\lineops.h"},"region":{"startLine":23,"startColumn":4,"endLine":23,"endColumn":59,"charOffset":631,"charLength":55,"snippet":{"text":"memcpy(dest->cpu_cells, src->cpu_cells, sizeof(CPUCell)","rendered":{"text":"memcpy(dest->cpu_cells, src->cpu_cells, sizeof(CPUCell)","markdown":"`memcpy(dest->cpu_cells, src->cpu_cells, sizeof(CPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\lineops.h"},"replacements":[{"deletedRegion":{"charOffset":631,"charLength":55},"insertedContent":{"text":"memcpy_s(dest->cpu_cells, <size of dest->cpu_cells>,  src->cpu_cells,  sizeof(CPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\line.c"},"region":{"startLine":664,"startColumn":55,"endLine":664,"endColumn":72,"charOffset":24639,"charLength":17,"snippet":{"text":"memcpy(p, s, len)","rendered":{"text":"memcpy(p, s, len)","markdown":"`memcpy(p, s, len)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\line.c"},"replacements":[{"deletedRegion":{"charOffset":24639,"charLength":17},"insertedContent":{"text":"memcpy_s(p, <size of p>,  s,  len)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\line.c"},"region":{"startLine":664,"startColumn":28,"endLine":664,"endColumn":37,"charOffset":24612,"charLength":9,"snippet":{"text":"strlen(s)","rendered":{"text":"strlen(s)","markdown":"`strlen(s)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\line.c"},"replacements":[{"deletedRegion":{"charOffset":24612,"charLength":9},"insertedContent":{"text":"strlen_s(s, <size of s>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\line.c"},"replacements":[{"deletedRegion":{"charOffset":24612,"charLength":9},"insertedContent":{"text":"strnlen(s, <size of s>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\internal.h"},"region":{"startLine":793,"startColumn":26,"endLine":793,"endColumn":32,"charOffset":29199,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\internal.h"},"region":{"startLine":791,"startColumn":26,"endLine":791,"endColumn":32,"charOffset":29113,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\internal.h"},"region":{"startLine":207,"startColumn":8,"endLine":207,"endColumn":15,"charOffset":7527,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\mouse.c"},"region":{"startLine":425,"startColumn":39,"endLine":425,"endColumn":46,"charOffset":15854,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":1487,"startColumn":15,"endLine":1487,"endColumn":19,"charOffset":47588,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":1486,"startColumn":15,"endLine":1486,"endColumn":19,"charOffset":47520,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":1351,"startColumn":16,"endLine":1351,"endColumn":39,"charOffset":44158,"charLength":23,"snippet":{"text":"memcpy(line, c, length)","rendered":{"text":"memcpy(line, c, length)","markdown":"`memcpy(line, c, length)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":44158,"charLength":23},"insertedContent":{"text":"memcpy_s(line, <size of line>,  c,  length)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":449,"startColumn":4,"endLine":449,"endColumn":44,"charOffset":14848,"charLength":40,"snippet":{"text":"strncpy(js->guid, guid, sizeof(js->guid)","rendered":{"text":"strncpy(js->guid, guid, sizeof(js->guid)","markdown":"`strncpy(js->guid, guid, sizeof(js->guid)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":14848,"charLength":40},"insertedContent":{"text":"strcpy_s(js->guid,  sizeof(js->guid,  guid)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":14848,"charLength":40},"insertedContent":{"text":"strlcpy(js->guid,  guid,  sizeof(js->guid)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":310,"startColumn":7,"endLine":310,"endColumn":12,"charOffset":10329,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":249,"startColumn":25,"endLine":249,"endColumn":60,"charOffset":8654,"charLength":35,"snippet":{"text":"strlen(_GLFW_PLATFORM_MAPPING_NAME)","rendered":{"text":"strlen(_GLFW_PLATFORM_MAPPING_NAME)","markdown":"`strlen(_GLFW_PLATFORM_MAPPING_NAME)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":8654,"charLength":35},"insertedContent":{"text":"strlen_s(_GLFW_PLATFORM_MAPPING_NAME, <size of _GLFW_PLATFORM_MAPPING_NAME>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":8654,"charLength":35},"insertedContent":{"text":"strnlen(_GLFW_PLATFORM_MAPPING_NAME, <size of _GLFW_PLATFORM_MAPPING_NAME>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":194,"startColumn":21,"endLine":194,"endColumn":43,"charOffset":6820,"charLength":22,"snippet":{"text":"strlen(fields[i].name)","rendered":{"text":"strlen(fields[i].name)","markdown":"`strlen(fields[i].name)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":6820,"charLength":22},"insertedContent":{"text":"strlen_s(fields[i].name, <size of fields[i].name>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":6820,"charLength":22},"insertedContent":{"text":"strnlen(fields[i].name, <size of fields[i].name>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":188,"startColumn":11,"endLine":188,"endColumn":15,"charOffset":6620,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":183,"startColumn":4,"endLine":183,"endColumn":36,"charOffset":6527,"charLength":32,"snippet":{"text":"memcpy(mapping->name, c, length)","rendered":{"text":"memcpy(mapping->name, c, length)","markdown":"`memcpy(mapping->name, c, length)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":6527,"charLength":32},"insertedContent":{"text":"memcpy_s(mapping->name, <size of mapping->name>,  c,  length)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":324,"startColumn":8,"endLine":324,"endColumn":15,"charOffset":11979,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":269,"startColumn":4,"endLine":269,"endColumn":71,"charOffset":9976,"charLength":67,"snippet":{"text":"memcpy(self->color_table, self->orig_color_table, sizeof(FG_BG_256)","rendered":{"text":"memcpy(self->color_table, self->orig_color_table, sizeof(FG_BG_256)","markdown":"`memcpy(self->color_table, self->orig_color_table, sizeof(FG_BG_256)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\colors.c"},"replacements":[{"deletedRegion":{"charOffset":9976,"charLength":67},"insertedContent":{"text":"memcpy_s(self->color_table, <size of self->color_table>,  self->orig_color_table,  sizeof(FG_BG_256)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":173,"startColumn":4,"endLine":173,"endColumn":36,"charOffset":6280,"charLength":32,"snippet":{"text":"memcpy(mapping->guid, c, length)","rendered":{"text":"memcpy(mapping->guid, c, length)","markdown":"`memcpy(mapping->guid, c, length)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":6280,"charLength":32},"insertedContent":{"text":"memcpy_s(mapping->guid, <size of mapping->guid>,  c,  length)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":109,"startColumn":4,"endLine":109,"endColumn":72,"charOffset":3528,"charLength":68,"snippet":{"text":"memcpy(&dest->overridden, &src->overridden, sizeof(dest->overridden)","rendered":{"text":"memcpy(&dest->overridden, &src->overridden, sizeof(dest->overridden)","markdown":"`memcpy(&dest->overridden, &src->overridden, sizeof(dest->overridden)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\colors.c"},"replacements":[{"deletedRegion":{"charOffset":3528,"charLength":68},"insertedContent":{"text":"memcpy_s(&dest->overridden, <size of &dest->overridden>,  &src->overridden,  sizeof(dest->overridden)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":108,"startColumn":4,"endLine":108,"endColumn":72,"charOffset":3452,"charLength":68,"snippet":{"text":"memcpy(&dest->configured, &src->configured, sizeof(dest->configured)","rendered":{"text":"memcpy(&dest->configured, &src->configured, sizeof(dest->configured)","markdown":"`memcpy(&dest->configured, &src->configured, sizeof(dest->configured)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\colors.c"},"replacements":[{"deletedRegion":{"charOffset":3452,"charLength":68},"insertedContent":{"text":"memcpy_s(&dest->configured, <size of &dest->configured>,  &src->configured,  sizeof(dest->configured)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":107,"startColumn":4,"endLine":107,"endColumn":83,"charOffset":3365,"charLength":79,"snippet":{"text":"memcpy(dest->orig_color_table, src->orig_color_table, sizeof(dest->color_table)","rendered":{"text":"memcpy(dest->orig_color_table, src->orig_color_table, sizeof(dest->color_table)","markdown":"`memcpy(dest->orig_color_table, src->orig_color_table, sizeof(dest->color_table)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\colors.c"},"replacements":[{"deletedRegion":{"charOffset":3365,"charLength":79},"insertedContent":{"text":"memcpy_s(dest->orig_color_table, <size of dest->orig_color_table>,  src->orig_color_table,  sizeof(dest->color_table)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":106,"startColumn":4,"endLine":106,"endColumn":73,"charOffset":3288,"charLength":69,"snippet":{"text":"memcpy(dest->color_table, src->color_table, sizeof(dest->color_table)","rendered":{"text":"memcpy(dest->color_table, src->color_table, sizeof(dest->color_table)","markdown":"`memcpy(dest->color_table, src->color_table, sizeof(dest->color_table)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\colors.c"},"replacements":[{"deletedRegion":{"charOffset":3288,"charLength":69},"insertedContent":{"text":"memcpy_s(dest->color_table, <size of dest->color_table>,  src->color_table,  sizeof(dest->color_table)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":71,"startColumn":8,"endLine":71,"endColumn":67,"charOffset":2049,"charLength":59,"snippet":{"text":"memcpy(self->orig_color_table, FG_BG_256, sizeof(FG_BG_256)","rendered":{"text":"memcpy(self->orig_color_table, FG_BG_256, sizeof(FG_BG_256)","markdown":"`memcpy(self->orig_color_table, FG_BG_256, sizeof(FG_BG_256)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\colors.c"},"replacements":[{"deletedRegion":{"charOffset":2049,"charLength":59},"insertedContent":{"text":"memcpy_s(self->orig_color_table, <size of self->orig_color_table>,  FG_BG_256,  sizeof(FG_BG_256)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":70,"startColumn":8,"endLine":70,"endColumn":62,"charOffset":1983,"charLength":54,"snippet":{"text":"memcpy(self->color_table, FG_BG_256, sizeof(FG_BG_256)","rendered":{"text":"memcpy(self->color_table, FG_BG_256, sizeof(FG_BG_256)","markdown":"`memcpy(self->color_table, FG_BG_256, sizeof(FG_BG_256)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\colors.c"},"replacements":[{"deletedRegion":{"charOffset":1983,"charLength":54},"insertedContent":{"text":"memcpy_s(self->color_table, <size of self->color_table>,  FG_BG_256,  sizeof(FG_BG_256)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\line-buf.c"},"region":{"startLine":549,"startColumn":8,"endLine":549,"endColumn":64,"charOffset":20312,"charLength":56,"snippet":{"text":"memcpy(other->gpu_cell_buf, self->gpu_cell_buf, (size_t)","rendered":{"text":"memcpy(other->gpu_cell_buf, self->gpu_cell_buf, (size_t)","markdown":"`memcpy(other->gpu_cell_buf, self->gpu_cell_buf, (size_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\line-buf.c"},"replacements":[{"deletedRegion":{"charOffset":20312,"charLength":56},"insertedContent":{"text":"memcpy_s(other->gpu_cell_buf, <size of other->gpu_cell_buf>,  self->gpu_cell_buf,  (size_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\line-buf.c"},"region":{"startLine":548,"startColumn":8,"endLine":548,"endColumn":64,"charOffset":20203,"charLength":56,"snippet":{"text":"memcpy(other->cpu_cell_buf, self->cpu_cell_buf, (size_t)","rendered":{"text":"memcpy(other->cpu_cell_buf, self->cpu_cell_buf, (size_t)","markdown":"`memcpy(other->cpu_cell_buf, self->cpu_cell_buf, (size_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\line-buf.c"},"replacements":[{"deletedRegion":{"charOffset":20203,"charLength":56},"insertedContent":{"text":"memcpy_s(other->cpu_cell_buf, <size of other->cpu_cell_buf>,  self->cpu_cell_buf,  (size_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\line-buf.c"},"region":{"startLine":547,"startColumn":8,"endLine":547,"endColumn":64,"charOffset":20122,"charLength":56,"snippet":{"text":"memcpy(other->line_attrs, self->line_attrs, sizeof(bool)","rendered":{"text":"memcpy(other->line_attrs, self->line_attrs, sizeof(bool)","markdown":"`memcpy(other->line_attrs, self->line_attrs, sizeof(bool)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\line-buf.c"},"replacements":[{"deletedRegion":{"charOffset":20122,"charLength":56},"insertedContent":{"text":"memcpy_s(other->line_attrs, <size of other->line_attrs>,  self->line_attrs,  sizeof(bool)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\line-buf.c"},"region":{"startLine":546,"startColumn":8,"endLine":546,"endColumn":66,"charOffset":20039,"charLength":58,"snippet":{"text":"memcpy(other->line_map, self->line_map, sizeof(index_type)","rendered":{"text":"memcpy(other->line_map, self->line_map, sizeof(index_type)","markdown":"`memcpy(other->line_map, self->line_map, sizeof(index_type)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\line-buf.c"},"replacements":[{"deletedRegion":{"charOffset":20039,"charLength":58},"insertedContent":{"text":"memcpy_s(other->line_map, <size of other->line_map>,  self->line_map,  sizeof(index_type)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\uthash.h"},"region":{"startLine":522,"startColumn":28,"endLine":522,"endColumn":35,"charOffset":30598,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\uthash.h"},"region":{"startLine":92,"startColumn":25,"endLine":92,"endColumn":34,"charOffset":3706,"charLength":9,"snippet":{"text":"strlen(s)","rendered":{"text":"strlen(s)","markdown":"`strlen(s)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\uthash.h"},"replacements":[{"deletedRegion":{"charOffset":3706,"charLength":9},"insertedContent":{"text":"strlen_s(s, <size of s>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\uthash.h"},"replacements":[{"deletedRegion":{"charOffset":3706,"charLength":9},"insertedContent":{"text":"strnlen(s, <size of s>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\uthash.h"},"region":{"startLine":83,"startColumn":26,"endLine":83,"endColumn":36,"charOffset":3411,"charLength":10,"snippet":{"text":"malloc(sz)","rendered":{"text":"malloc(sz)","markdown":"`malloc(sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\uthash.h"},"replacements":[{"deletedRegion":{"charOffset":3411,"charLength":10},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"region":{"startLine":221,"startColumn":8,"endLine":221,"endColumn":69,"charOffset":6451,"charLength":61,"snippet":{"text":"memcpy(procenv + (arg_ptr - env_start), arg_ptr, s - arg_ptr)","rendered":{"text":"memcpy(procenv + (arg_ptr - env_start), arg_ptr, s - arg_ptr)","markdown":"`memcpy(procenv + (arg_ptr - env_start), arg_ptr, s - arg_ptr)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"replacements":[{"deletedRegion":{"charOffset":6451,"charLength":61},"insertedContent":{"text":"memcpy_s(procenv + (arg_ptr - env_start), <size of procenv + (arg_ptr - env_start)>,  arg_ptr,  s - arg_ptr)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"region":{"startLine":185,"startColumn":4,"endLine":185,"endColumn":42,"charOffset":5542,"charLength":38,"snippet":{"text":"memcpy(&nargs, procargs, sizeof(nargs)","rendered":{"text":"memcpy(&nargs, procargs, sizeof(nargs)","markdown":"`memcpy(&nargs, procargs, sizeof(nargs)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"replacements":[{"deletedRegion":{"charOffset":5542,"charLength":38},"insertedContent":{"text":"memcpy_s(&nargs, <size of &nargs>,  procargs,  sizeof(nargs)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"region":{"startLine":163,"startColumn":23,"endLine":163,"endColumn":37,"charOffset":4799,"charLength":14,"snippet":{"text":"malloc(argmax)","rendered":{"text":"malloc(argmax)","markdown":"`malloc(argmax)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"replacements":[{"deletedRegion":{"charOffset":4799,"charLength":14},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"region":{"startLine":91,"startColumn":10,"endLine":91,"endColumn":25,"charOffset":2841,"charLength":15,"snippet":{"text":"strlen(arg_ptr)","rendered":{"text":"strlen(arg_ptr)","markdown":"`strlen(arg_ptr)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"replacements":[{"deletedRegion":{"charOffset":2841,"charLength":15},"insertedContent":{"text":"strlen_s(arg_ptr, <size of arg_ptr>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"replacements":[{"deletedRegion":{"charOffset":2841,"charLength":15},"insertedContent":{"text":"strnlen(arg_ptr, <size of arg_ptr>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"region":{"startLine":88,"startColumn":4,"endLine":88,"endColumn":42,"charOffset":2746,"charLength":38,"snippet":{"text":"memcpy(&nargs, procargs, sizeof(nargs)","rendered":{"text":"memcpy(&nargs, procargs, sizeof(nargs)","markdown":"`memcpy(&nargs, procargs, sizeof(nargs)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"replacements":[{"deletedRegion":{"charOffset":2746,"charLength":38},"insertedContent":{"text":"memcpy_s(&nargs, <size of &nargs>,  procargs,  sizeof(nargs)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"region":{"startLine":67,"startColumn":23,"endLine":67,"endColumn":37,"charOffset":2062,"charLength":14,"snippet":{"text":"malloc(argmax)","rendered":{"text":"malloc(argmax)","markdown":"`malloc(argmax)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"replacements":[{"deletedRegion":{"charOffset":2062,"charLength":14},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\loop-utils.c"},"region":{"startLine":142,"startColumn":119,"endLine":142,"endColumn":127,"charOffset":4367,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\loop-utils.c"},"region":{"startLine":125,"startColumn":82,"endLine":125,"endColumn":90,"charOffset":3650,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\loop-utils.c"},"region":{"startLine":89,"startColumn":107,"endLine":89,"endColumn":115,"charOffset":2488,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":213,"startColumn":8,"endLine":213,"endColumn":15,"charOffset":7085,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":211,"startColumn":8,"endLine":211,"endColumn":16,"charOffset":7025,"charLength":8,"snippet":{"text":"vfprintf","rendered":{"text":"vfprintf","markdown":"`vfprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":209,"startColumn":8,"endLine":209,"endColumn":15,"charOffset":6917,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":197,"startColumn":4,"endLine":197,"endColumn":43,"charOffset":6691,"charLength":39,"snippet":{"text":"strcpy(error->description, description)","rendered":{"text":"strcpy(error->description, description)","markdown":"`strcpy(error->description, description)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":6691,"charLength":39},"insertedContent":{"text":"strcpy_s(error->description, <size of error->description>,  description)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":6691,"charLength":39},"insertedContent":{"text":"strlcpy(error->description,  description, <size of error->description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":177,"startColumn":12,"endLine":177,"endColumn":60,"charOffset":6096,"charLength":48,"snippet":{"text":"strcpy(description, \"ERROR: UNKNOWN GLFW ERROR\")","rendered":{"text":"strcpy(description, \"ERROR: UNKNOWN GLFW ERROR\")","markdown":"`strcpy(description, \"ERROR: UNKNOWN GLFW ERROR\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":6096,"charLength":48},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"ERROR: UNKNOWN GLFW ERROR\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":6096,"charLength":48},"insertedContent":{"text":"strlcpy(description,  \"ERROR: UNKNOWN GLFW ERROR\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":175,"startColumn":12,"endLine":175,"endColumn":103,"charOffset":5976,"charLength":91,"snippet":{"text":"strcpy(description, \"The requested feature has not yet been implemented for this platform\")","rendered":{"text":"strcpy(description, \"The requested feature has not yet been implemented for this platform\")","markdown":"`strcpy(description, \"The requested feature has not yet been implemented for this platform\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5976,"charLength":91},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"The requested feature has not yet been implemented for this platform\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5976,"charLength":91},"insertedContent":{"text":"strlcpy(description,  \"The requested feature has not yet been implemented for this platform\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":173,"startColumn":12,"endLine":173,"endColumn":96,"charOffset":5823,"charLength":84,"snippet":{"text":"strcpy(description, \"The requested feature cannot be implemented for this platform\")","rendered":{"text":"strcpy(description, \"The requested feature cannot be implemented for this platform\")","markdown":"`strcpy(description, \"The requested feature cannot be implemented for this platform\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5823,"charLength":84},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"The requested feature cannot be implemented for this platform\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5823,"charLength":84},"insertedContent":{"text":"strlcpy(description,  \"The requested feature cannot be implemented for this platform\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":171,"startColumn":12,"endLine":171,"endColumn":70,"charOffset":5698,"charLength":58,"snippet":{"text":"strcpy(description, \"The specified window has no context\")","rendered":{"text":"strcpy(description, \"The specified window has no context\")","markdown":"`strcpy(description, \"The specified window has no context\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5698,"charLength":58},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"The specified window has no context\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5698,"charLength":58},"insertedContent":{"text":"strlcpy(description,  \"The specified window has no context\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":169,"startColumn":12,"endLine":169,"endColumn":70,"charOffset":5575,"charLength":58,"snippet":{"text":"strcpy(description, \"The requested format is unavailable\")","rendered":{"text":"strcpy(description, \"The requested format is unavailable\")","markdown":"`strcpy(description, \"The requested format is unavailable\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5575,"charLength":58},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"The requested format is unavailable\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5575,"charLength":58},"insertedContent":{"text":"strlcpy(description,  \"The requested format is unavailable\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":167,"startColumn":12,"endLine":167,"endColumn":69,"charOffset":5452,"charLength":57,"snippet":{"text":"strcpy(description, \"A platform-specific error occurred\")","rendered":{"text":"strcpy(description, \"A platform-specific error occurred\")","markdown":"`strcpy(description, \"A platform-specific error occurred\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5452,"charLength":57},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"A platform-specific error occurred\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5452,"charLength":57},"insertedContent":{"text":"strlcpy(description,  \"A platform-specific error occurred\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":165,"startColumn":12,"endLine":165,"endColumn":75,"charOffset":5327,"charLength":63,"snippet":{"text":"strcpy(description, \"The requested API version is unavailable\")","rendered":{"text":"strcpy(description, \"The requested API version is unavailable\")","markdown":"`strcpy(description, \"The requested API version is unavailable\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5327,"charLength":63},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"The requested API version is unavailable\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5327,"charLength":63},"insertedContent":{"text":"strlcpy(description,  \"The requested API version is unavailable\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":163,"startColumn":12,"endLine":163,"endColumn":67,"charOffset":5205,"charLength":55,"snippet":{"text":"strcpy(description, \"The requested API is unavailable\")","rendered":{"text":"strcpy(description, \"The requested API is unavailable\")","markdown":"`strcpy(description, \"The requested API is unavailable\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5205,"charLength":55},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"The requested API is unavailable\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5205,"charLength":55},"insertedContent":{"text":"strlcpy(description,  \"The requested API is unavailable\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":161,"startColumn":12,"endLine":161,"endColumn":48,"charOffset":5106,"charLength":36,"snippet":{"text":"strcpy(description, \"Out of memory\")","rendered":{"text":"strcpy(description, \"Out of memory\")","markdown":"`strcpy(description, \"Out of memory\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5106,"charLength":36},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"Out of memory\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5106,"charLength":36},"insertedContent":{"text":"strlcpy(description,  \"Out of memory\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":159,"startColumn":12,"endLine":159,"endColumn":62,"charOffset":4995,"charLength":50,"snippet":{"text":"strcpy(description, \"Invalid value for parameter\")","rendered":{"text":"strcpy(description, \"Invalid value for parameter\")","markdown":"`strcpy(description, \"Invalid value for parameter\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":4995,"charLength":50},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"Invalid value for parameter\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":4995,"charLength":50},"insertedContent":{"text":"strlcpy(description,  \"Invalid value for parameter\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":157,"startColumn":12,"endLine":157,"endColumn":70,"charOffset":4876,"charLength":58,"snippet":{"text":"strcpy(description, \"Invalid argument for enum parameter\")","rendered":{"text":"strcpy(description, \"Invalid argument for enum parameter\")","markdown":"`strcpy(description, \"Invalid argument for enum parameter\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":4876,"charLength":58},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"Invalid argument for enum parameter\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":4876,"charLength":58},"insertedContent":{"text":"strlcpy(description,  \"Invalid argument for enum parameter\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":155,"startColumn":12,"endLine":155,"endColumn":62,"charOffset":4766,"charLength":50,"snippet":{"text":"strcpy(description, \"There is no current context\")","rendered":{"text":"strcpy(description, \"There is no current context\")","markdown":"`strcpy(description, \"There is no current context\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":4766,"charLength":50},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"There is no current context\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":4766,"charLength":50},"insertedContent":{"text":"strlcpy(description,  \"There is no current context\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":153,"startColumn":12,"endLine":153,"endColumn":70,"charOffset":4642,"charLength":58,"snippet":{"text":"strcpy(description, \"The GLFW library is not initialized\")","rendered":{"text":"strcpy(description, \"The GLFW library is not initialized\")","markdown":"`strcpy(description, \"The GLFW library is not initialized\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":4642,"charLength":58},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"The GLFW library is not initialized\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":4642,"charLength":58},"insertedContent":{"text":"strlcpy(description,  \"The GLFW library is not initialized\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":145,"startColumn":8,"endLine":145,"endColumn":17,"charOffset":4428,"charLength":9,"snippet":{"text":"vsnprintf","rendered":{"text":"vsnprintf","markdown":"`vsnprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":123,"startColumn":4,"endLine":123,"endColumn":34,"charOffset":3857,"charLength":30,"snippet":{"text":"memcpy(result, source, length)","rendered":{"text":"memcpy(result, source, length)","markdown":"`memcpy(result, source, length)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":3857,"charLength":30},"insertedContent":{"text":"memcpy_s(result, <size of result>,  source,  length)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":122,"startColumn":19,"endLine":122,"endColumn":37,"charOffset":3832,"charLength":18,"snippet":{"text":"malloc(length + 1)","rendered":{"text":"malloc(length + 1)","markdown":"`malloc(length + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":3832,"charLength":18},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":121,"startColumn":26,"endLine":121,"endColumn":40,"charOffset":3796,"charLength":14,"snippet":{"text":"strlen(source)","rendered":{"text":"strlen(source)","markdown":"`strlen(source)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":3796,"charLength":14},"insertedContent":{"text":"strlen_s(source, <size of source>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":3796,"charLength":14},"insertedContent":{"text":"strnlen(source, <size of source>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\xkb_glfw.c"},"region":{"startLine":360,"startColumn":26,"endLine":360,"endColumn":32,"charOffset":12560,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\xkb_glfw.c"},"region":{"startLine":359,"startColumn":26,"endLine":359,"endColumn":32,"charOffset":12513,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\xkb_glfw.c"},"region":{"startLine":358,"startColumn":25,"endLine":358,"endColumn":31,"charOffset":12468,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\xkb_glfw.c"},"region":{"startLine":34,"startColumn":55,"endLine":34,"endColumn":61,"charOffset":1390,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":423,"startColumn":26,"endLine":423,"endColumn":100,"charOffset":15029,"charLength":74,"snippet":{"text":"strncpy(ev->__embedded_text, ev->glfw_ev.text, sizeof(ev->__embedded_text)","rendered":{"text":"strncpy(ev->__embedded_text, ev->glfw_ev.text, sizeof(ev->__embedded_text)","markdown":"`strncpy(ev->__embedded_text, ev->glfw_ev.text, sizeof(ev->__embedded_text)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":15029,"charLength":74},"insertedContent":{"text":"strcpy_s(ev->__embedded_text,  sizeof(ev->__embedded_text,  ev->glfw_ev.text)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":15029,"charLength":74},"insertedContent":{"text":"strlcpy(ev->__embedded_text,  ev->glfw_ev.text,  sizeof(ev->__embedded_text)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":421,"startColumn":4,"endLine":421,"endColumn":45,"charOffset":14876,"charLength":41,"snippet":{"text":"memcpy(ev, ev_, sizeof(_GLFWIBUSKeyEvent)","rendered":{"text":"memcpy(ev, ev_, sizeof(_GLFWIBUSKeyEvent)","markdown":"`memcpy(ev, ev_, sizeof(_GLFWIBUSKeyEvent)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":14876,"charLength":41},"insertedContent":{"text":"memcpy_s(ev, <size of ev>,  ev_,  sizeof(_GLFWIBUSKeyEvent)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":222,"startColumn":125,"endLine":222,"endColumn":133,"charOffset":7732,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":213,"startColumn":24,"endLine":213,"endColumn":35,"charOffset":7355,"charLength":11,"snippet":{"text":"strlen(buf)","rendered":{"text":"strlen(buf)","markdown":"`strlen(buf)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":7355,"charLength":11},"insertedContent":{"text":"strlen_s(buf, <size of buf>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":7355,"charLength":11},"insertedContent":{"text":"strnlen(buf, <size of buf>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":206,"startColumn":125,"endLine":206,"endColumn":133,"charOffset":7076,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":204,"startColumn":22,"endLine":204,"endColumn":27,"charOffset":6890,"charLength":5,"snippet":{"text":"fopen","rendered":{"text":"fopen","markdown":"`fopen`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":184,"startColumn":19,"endLine":184,"endColumn":25,"charOffset":6235,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":180,"startColumn":27,"endLine":180,"endColumn":33,"charOffset":6076,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":162,"startColumn":21,"endLine":162,"endColumn":27,"charOffset":5488,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":158,"startColumn":35,"endLine":158,"endColumn":47,"charOffset":5407,"charLength":12,"snippet":{"text":"strlen(addr)","rendered":{"text":"strlen(addr)","markdown":"`strlen(addr)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":5407,"charLength":12},"insertedContent":{"text":"strlen_s(addr, <size of addr>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":5407,"charLength":12},"insertedContent":{"text":"strnlen(addr, <size of addr>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":158,"startColumn":8,"endLine":158,"endColumn":47,"charOffset":5380,"charLength":39,"snippet":{"text":"memcpy(ans, addr, GLFW_MIN(strlen(addr)","rendered":{"text":"memcpy(ans, addr, GLFW_MIN(strlen(addr)","markdown":"`memcpy(ans, addr, GLFW_MIN(strlen(addr)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":5380,"charLength":39},"insertedContent":{"text":"memcpy_s(ans, <size of ans>,  addr,  GLFW_MIN(strlen(addr)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":155,"startColumn":11,"endLine":155,"endColumn":17,"charOffset":5298,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":55,"startColumn":20,"endLine":55,"endColumn":26,"charOffset":2157,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":38,"startColumn":55,"endLine":38,"endColumn":61,"charOffset":1472,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":2152,"startColumn":11,"endLine":2152,"endColumn":15,"charOffset":73368,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":2048,"startColumn":7,"endLine":2048,"endColumn":11,"charOffset":70141,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":1978,"startColumn":44,"endLine":1978,"endColumn":57,"charOffset":68091,"charLength":13,"snippet":{"text":"strlen(title)","rendered":{"text":"strlen(title)","markdown":"`strlen(title)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":68091,"charLength":13},"insertedContent":{"text":"strlen_s(title, <size of title>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":68091,"charLength":13},"insertedContent":{"text":"strnlen(title, <size of title>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":1973,"startColumn":44,"endLine":1973,"endColumn":57,"charOffset":67854,"charLength":13,"snippet":{"text":"strlen(title)","rendered":{"text":"strlen(title)","markdown":"`strlen(title)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":67854,"charLength":13},"insertedContent":{"text":"strlen_s(title, <size of title>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":67854,"charLength":13},"insertedContent":{"text":"strnlen(title, <size of title>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":1537,"startColumn":32,"endLine":1537,"endColumn":108,"charOffset":52530,"charLength":76,"snippet":{"text":"strncpy(_glfw.x11.xdnd.format, atom_names[i], arraysz(_glfw.x11.xdnd.format)","rendered":{"text":"strncpy(_glfw.x11.xdnd.format, atom_names[i], arraysz(_glfw.x11.xdnd.format)","markdown":"`strncpy(_glfw.x11.xdnd.format, atom_names[i], arraysz(_glfw.x11.xdnd.format)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":52530,"charLength":76},"insertedContent":{"text":"strcpy_s(_glfw.x11.xdnd.format,  arraysz(_glfw.x11.xdnd.format,  atom_names[i])"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":52530,"charLength":76},"insertedContent":{"text":"strlcpy(_glfw.x11.xdnd.format,  atom_names[i],  arraysz(_glfw.x11.xdnd.format)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":1364,"startColumn":15,"endLine":1364,"endColumn":19,"charOffset":45587,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":1265,"startColumn":27,"endLine":1265,"endColumn":31,"charOffset":41416,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":1252,"startColumn":19,"endLine":1252,"endColumn":23,"charOffset":40700,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":1204,"startColumn":52,"endLine":1204,"endColumn":58,"charOffset":39184,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":1189,"startColumn":52,"endLine":1189,"endColumn":58,"charOffset":38386,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS141863","level":"error","message":{"text":"Banned C function detected (strcat)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":987,"startColumn":20,"endLine":987,"endColumn":40,"charOffset":32239,"charLength":20,"snippet":{"text":"strcat(string, data)","rendered":{"text":"strcat(string, data)","markdown":"`strcat(string, data)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the combination of strings is larger than the destination buffer, strcat will cbuffer overflow the destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":32239,"charLength":20},"insertedContent":{"text":"strcat_s(string, <size of string>,  data)"}}]}]},{"description":{"text":"If the combination of strings is larger than the destination buffer, strcat will cbuffer overflow the destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":32239,"charLength":20},"insertedContent":{"text":"strlcat(string,  data, <size of string>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":837,"startColumn":28,"endLine":837,"endColumn":51,"charOffset":26950,"charLength":23,"snippet":{"text":"strlen(selectionString)","rendered":{"text":"strlen(selectionString)","markdown":"`strlen(selectionString)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":26950,"charLength":23},"insertedContent":{"text":"strlen_s(selectionString, <size of selectionString>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":26950,"charLength":23},"insertedContent":{"text":"strnlen(selectionString, <size of selectionString>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":785,"startColumn":32,"endLine":785,"endColumn":55,"charOffset":25293,"charLength":23,"snippet":{"text":"strlen(selectionString)","rendered":{"text":"strlen(selectionString)","markdown":"`strlen(selectionString)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":25293,"charLength":23},"insertedContent":{"text":"strlen_s(selectionString, <size of selectionString>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":25293,"charLength":23},"insertedContent":{"text":"strnlen(selectionString, <size of selectionString>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":687,"startColumn":16,"endLine":687,"endColumn":40,"charOffset":21898,"charLength":24,"snippet":{"text":"strlen(wndconfig->title)","rendered":{"text":"strlen(wndconfig->title)","markdown":"`strlen(wndconfig->title)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21898,"charLength":24},"insertedContent":{"text":"strlen_s(wndconfig->title, <size of wndconfig->title>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21898,"charLength":24},"insertedContent":{"text":"strnlen(wndconfig->title, <size of wndconfig->title>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":682,"startColumn":21,"endLine":682,"endColumn":45,"charOffset":21713,"charLength":24,"snippet":{"text":"strlen(wndconfig->title)","rendered":{"text":"strlen(wndconfig->title)","markdown":"`strlen(wndconfig->title)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21713,"charLength":24},"insertedContent":{"text":"strlen_s(wndconfig->title, <size of wndconfig->title>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21713,"charLength":24},"insertedContent":{"text":"strnlen(wndconfig->title, <size of wndconfig->title>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":680,"startColumn":32,"endLine":680,"endColumn":52,"charOffset":21613,"charLength":20,"snippet":{"text":"strlen(resourceName)","rendered":{"text":"strlen(resourceName)","markdown":"`strlen(resourceName)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21613,"charLength":20},"insertedContent":{"text":"strlen_s(resourceName, <size of resourceName>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21613,"charLength":20},"insertedContent":{"text":"strnlen(resourceName, <size of resourceName>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":679,"startColumn":39,"endLine":679,"endColumn":45,"charOffset":21555,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":672,"startColumn":12,"endLine":672,"endColumn":44,"charOffset":21302,"charLength":32,"snippet":{"text":"strlen(wndconfig->x11.className)","rendered":{"text":"strlen(wndconfig->x11.className)","markdown":"`strlen(wndconfig->x11.className)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21302,"charLength":32},"insertedContent":{"text":"strlen_s(wndconfig->x11.className, <size of wndconfig->x11.className>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21302,"charLength":32},"insertedContent":{"text":"strnlen(wndconfig->x11.className, <size of wndconfig->x11.className>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":671,"startColumn":12,"endLine":671,"endColumn":47,"charOffset":21250,"charLength":35,"snippet":{"text":"strlen(wndconfig->x11.instanceName)","rendered":{"text":"strlen(wndconfig->x11.instanceName)","markdown":"`strlen(wndconfig->x11.instanceName)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21250,"charLength":35},"insertedContent":{"text":"strlen_s(wndconfig->x11.instanceName, <size of wndconfig->x11.instanceName>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21250,"charLength":35},"insertedContent":{"text":"strnlen(wndconfig->x11.instanceName, <size of wndconfig->x11.instanceName>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child.c"},"region":{"startLine":135,"startColumn":28,"endLine":135,"endColumn":36,"charOffset":5279,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child.c"},"region":{"startLine":58,"startColumn":84,"endLine":58,"endColumn":92,"charOffset":1483,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child.c"},"region":{"startLine":45,"startColumn":16,"endLine":45,"endColumn":28,"charOffset":1085,"charLength":12,"snippet":{"text":"strlen(text)","rendered":{"text":"strlen(text)","markdown":"`strlen(text)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child.c"},"replacements":[{"deletedRegion":{"charOffset":1085,"charLength":12},"insertedContent":{"text":"strlen_s(text, <size of text>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child.c"},"replacements":[{"deletedRegion":{"charOffset":1085,"charLength":12},"insertedContent":{"text":"strnlen(text, <size of text>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child.c"},"region":{"startLine":29,"startColumn":8,"endLine":29,"endColumn":34,"charOffset":796,"charLength":26,"snippet":{"text":"memcpy(ans[i], pysrc, len)","rendered":{"text":"memcpy(ans[i], pysrc, len)","markdown":"`memcpy(ans[i], pysrc, len)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child.c"},"replacements":[{"deletedRegion":{"charOffset":796,"charLength":26},"insertedContent":{"text":"memcpy_s(ans[i], <size of ans[i]>,  pysrc,  len)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child.c"},"region":{"startLine":26,"startColumn":21,"endLine":26,"endColumn":34,"charOffset":670,"charLength":13,"snippet":{"text":"strlen(pysrc)","rendered":{"text":"strlen(pysrc)","markdown":"`strlen(pysrc)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child.c"},"replacements":[{"deletedRegion":{"charOffset":670,"charLength":13},"insertedContent":{"text":"strlen_s(pysrc, <size of pysrc>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child.c"},"replacements":[{"deletedRegion":{"charOffset":670,"charLength":13},"insertedContent":{"text":"strnlen(pysrc, <size of pysrc>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl.c"},"region":{"startLine":62,"startColumn":42,"endLine":62,"endColumn":48,"charOffset":2437,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\cli.py"},"region":{"startLine":642,"startColumn":36,"endLine":642,"endColumn":45,"charOffset":21646,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\cli.py"},"region":{"startLine":182,"startColumn":56,"endLine":185,"endColumn":62,"charOffset":5262,"charLength":123,"snippet":{"text":"eval(v))\r\n        elif state is HELP:\r\n            if line:\r\n                spc = '' if current_cmd['help'].endswith('\\n')","rendered":{"text":"eval(v))\r\n        elif state is HELP:\r\n            if line:\r\n                spc = '' if current_cmd['help'].endswith('\\n')","markdown":"`eval(v))\r\n        elif state is HELP:\r\n            if line:\r\n                spc = '' if current_cmd['help'].endswith('\\n')`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1542,"startColumn":25,"endLine":1542,"endColumn":81,"charOffset":59467,"charLength":56,"snippet":{"text":"memcpy(peer->write.data + peer->write.used, msg, msg_sz)","rendered":{"text":"memcpy(peer->write.data + peer->write.used, msg, msg_sz)","markdown":"`memcpy(peer->write.data + peer->write.used, msg, msg_sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":59467,"charLength":56},"insertedContent":{"text":"memcpy_s(peer->write.data + peer->write.used, <size of peer->write.data + peer->write.used>,  msg,  msg_sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1468,"startColumn":120,"endLine":1468,"endColumn":128,"charOffset":56083,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1439,"startColumn":42,"endLine":1439,"endColumn":49,"charOffset":55085,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1437,"startColumn":88,"endLine":1437,"endColumn":96,"charOffset":54959,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1423,"startColumn":35,"endLine":1423,"endColumn":43,"charOffset":54395,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1399,"startColumn":12,"endLine":1399,"endColumn":19,"charOffset":53164,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1365,"startColumn":12,"endLine":1365,"endColumn":61,"charOffset":51954,"charLength":49,"snippet":{"text":"memcpy(m->data, peer->read.data, peer->read.used)","rendered":{"text":"memcpy(m->data, peer->read.data, peer->read.used)","markdown":"`memcpy(m->data, peer->read.data, peer->read.used)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":51954,"charLength":49},"insertedContent":{"text":"memcpy_s(m->data, <size of m->data>,  peer->read.data,  peer->read.used)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1363,"startColumn":18,"endLine":1363,"endColumn":41,"charOffset":51892,"charLength":23,"snippet":{"text":"malloc(peer->read.used)","rendered":{"text":"malloc(peer->read.used)","markdown":"`malloc(peer->read.used)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":51892,"charLength":23},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1266,"startColumn":37,"endLine":1266,"endColumn":43,"charOffset":48705,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1194,"startColumn":12,"endLine":1194,"endColumn":19,"charOffset":45374,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1091,"startColumn":8,"endLine":1091,"endColumn":15,"charOffset":42409,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1056,"startColumn":20,"endLine":1056,"endColumn":27,"charOffset":41256,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1055,"startColumn":20,"endLine":1055,"endColumn":27,"charOffset":41164,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":800,"startColumn":4,"endLine":800,"endColumn":36,"charOffset":31519,"charLength":32,"snippet":{"text":"memcpy(data->buf, buf, data->sz)","rendered":{"text":"memcpy(data->buf, buf, data->sz)","markdown":"`memcpy(data->buf, buf, data->sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":31519,"charLength":32},"insertedContent":{"text":"memcpy_s(data->buf, <size of data->buf>,  buf,  data->sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":783,"startColumn":87,"endLine":783,"endColumn":95,"charOffset":31065,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":722,"startColumn":20,"endLine":722,"endColumn":30,"charOffset":29264,"charLength":10,"snippet":{"text":"malloc(sz)","rendered":{"text":"malloc(sz)","markdown":"`malloc(sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":29264,"charLength":10},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":435,"startColumn":92,"endLine":435,"endColumn":100,"charOffset":15326,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":364,"startColumn":12,"endLine":364,"endColumn":56,"charOffset":12770,"charLength":44,"snippet":{"text":"memcpy(msgs, self->messages, sizeof(Message)","rendered":{"text":"memcpy(msgs, self->messages, sizeof(Message)","markdown":"`memcpy(msgs, self->messages, sizeof(Message)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":12770,"charLength":44},"insertedContent":{"text":"memcpy_s(msgs, <size of msgs>,  self->messages,  sizeof(Message)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":362,"startColumn":15,"endLine":362,"endColumn":37,"charOffset":12688,"charLength":22,"snippet":{"text":"malloc(sizeof(Message)","rendered":{"text":"malloc(sizeof(Message)","markdown":"`malloc(sizeof(Message)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":12688,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":302,"startColumn":104,"endLine":302,"endColumn":112,"charOffset":10507,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":299,"startColumn":99,"endLine":299,"endColumn":107,"charOffset":10300,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":264,"startColumn":16,"endLine":264,"endColumn":77,"charOffset":8825,"charLength":61,"snippet":{"text":"memcpy(screen->write_buf + screen->write_buf_used, data, dsz)","rendered":{"text":"memcpy(screen->write_buf + screen->write_buf_used, data, dsz)","markdown":"`memcpy(screen->write_buf + screen->write_buf_used, data, dsz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":8825,"charLength":61},"insertedContent":{"text":"memcpy_s(screen->write_buf + screen->write_buf_used, <size of screen->write_buf + screen->write_buf_used>,  data,  dsz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":134,"startColumn":81,"endLine":134,"endColumn":89,"charOffset":3833,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":130,"startColumn":85,"endLine":130,"endColumn":93,"charOffset":3644,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\glx_context.c"},"region":{"startLine":561,"startColumn":11,"endLine":561,"endColumn":15,"charOffset":19758,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\glx_context.c"},"region":{"startLine":94,"startColumn":7,"endLine":94,"endColumn":11,"charOffset":4113,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\context.c"},"region":{"startLine":427,"startColumn":29,"endLine":427,"endColumn":43,"charOffset":15792,"charLength":14,"snippet":{"text":"strlen(string)","rendered":{"text":"strlen(string)","markdown":"`strlen(string)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\context.c"},"replacements":[{"deletedRegion":{"charOffset":15792,"charLength":14},"insertedContent":{"text":"strlen_s(string, <size of string>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\context.c"},"replacements":[{"deletedRegion":{"charOffset":15792,"charLength":14},"insertedContent":{"text":"strnlen(string, <size of string>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\context.c"},"region":{"startLine":345,"startColumn":19,"endLine":345,"endColumn":23,"charOffset":12777,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\context.c"},"region":{"startLine":322,"startColumn":19,"endLine":322,"endColumn":23,"charOffset":11752,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\context.c"},"region":{"startLine":239,"startColumn":9,"endLine":239,"endColumn":15,"charOffset":8534,"charLength":6,"snippet":{"text":"sscanf","rendered":{"text":"sscanf","markdown":"`sscanf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\context.c"},"region":{"startLine":229,"startColumn":30,"endLine":229,"endColumn":49,"charOffset":8303,"charLength":19,"snippet":{"text":"strlen(prefixes[i])","rendered":{"text":"strlen(prefixes[i])","markdown":"`strlen(prefixes[i])`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\context.c"},"replacements":[{"deletedRegion":{"charOffset":8303,"charLength":19},"insertedContent":{"text":"strlen_s(prefixes[i], <size of prefixes[i]>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\context.c"},"replacements":[{"deletedRegion":{"charOffset":8303,"charLength":19},"insertedContent":{"text":"strnlen(prefixes[i], <size of prefixes[i]>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"region":{"startLine":157,"startColumn":4,"endLine":157,"endColumn":63,"charOffset":5437,"charLength":59,"snippet":{"text":"memcpy(monitor->null.ramp.blue,  ramp->blue,  sizeof(short)","rendered":{"text":"memcpy(monitor->null.ramp.blue,  ramp->blue,  sizeof(short)","markdown":"`memcpy(monitor->null.ramp.blue,  ramp->blue,  sizeof(short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":5437,"charLength":59},"insertedContent":{"text":"memcpy_s(monitor->null.ramp.blue, <size of monitor->null.ramp.blue>,   ramp->blue,   sizeof(short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"region":{"startLine":156,"startColumn":4,"endLine":156,"endColumn":63,"charOffset":5357,"charLength":59,"snippet":{"text":"memcpy(monitor->null.ramp.green, ramp->green, sizeof(short)","rendered":{"text":"memcpy(monitor->null.ramp.green, ramp->green, sizeof(short)","markdown":"`memcpy(monitor->null.ramp.green, ramp->green, sizeof(short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":5357,"charLength":59},"insertedContent":{"text":"memcpy_s(monitor->null.ramp.green, <size of monitor->null.ramp.green>,  ramp->green,  sizeof(short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"region":{"startLine":155,"startColumn":4,"endLine":155,"endColumn":63,"charOffset":5277,"charLength":59,"snippet":{"text":"memcpy(monitor->null.ramp.red,   ramp->red,   sizeof(short)","rendered":{"text":"memcpy(monitor->null.ramp.red,   ramp->red,   sizeof(short)","markdown":"`memcpy(monitor->null.ramp.red,   ramp->red,   sizeof(short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":5277,"charLength":59},"insertedContent":{"text":"memcpy_s(monitor->null.ramp.red, <size of monitor->null.ramp.red>,    ramp->red,    sizeof(short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"region":{"startLine":142,"startColumn":4,"endLine":142,"endColumn":63,"charOffset":4882,"charLength":59,"snippet":{"text":"memcpy(ramp->blue,  monitor->null.ramp.blue,  sizeof(short)","rendered":{"text":"memcpy(ramp->blue,  monitor->null.ramp.blue,  sizeof(short)","markdown":"`memcpy(ramp->blue,  monitor->null.ramp.blue,  sizeof(short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":4882,"charLength":59},"insertedContent":{"text":"memcpy_s(ramp->blue, <size of ramp->blue>,   monitor->null.ramp.blue,   sizeof(short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"region":{"startLine":141,"startColumn":4,"endLine":141,"endColumn":63,"charOffset":4802,"charLength":59,"snippet":{"text":"memcpy(ramp->green, monitor->null.ramp.green, sizeof(short)","rendered":{"text":"memcpy(ramp->green, monitor->null.ramp.green, sizeof(short)","markdown":"`memcpy(ramp->green, monitor->null.ramp.green, sizeof(short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":4802,"charLength":59},"insertedContent":{"text":"memcpy_s(ramp->green, <size of ramp->green>,  monitor->null.ramp.green,  sizeof(short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"region":{"startLine":140,"startColumn":4,"endLine":140,"endColumn":63,"charOffset":4722,"charLength":59,"snippet":{"text":"memcpy(ramp->red,   monitor->null.ramp.red,   sizeof(short)","rendered":{"text":"memcpy(ramp->red,   monitor->null.ramp.red,   sizeof(short)","markdown":"`memcpy(ramp->red,   monitor->null.ramp.red,   sizeof(short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":4722,"charLength":59},"insertedContent":{"text":"memcpy_s(ramp->red, <size of ramp->red>,    monitor->null.ramp.red,    sizeof(short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_monitor.m"},"region":{"startLine":377,"startColumn":11,"endLine":377,"endColumn":15,"charOffset":12837,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_monitor.m"},"region":{"startLine":367,"startColumn":8,"endLine":369,"endColumn":57,"charOffset":12574,"charLength":111,"snippet":{"text":"memcpy(disconnected,\r\n               _glfw.monitors,\r\n               _glfw.monitorCount * sizeof(_GLFWmonitor*)","rendered":{"text":"memcpy(disconnected,\r\n               _glfw.monitors,\r\n               _glfw.monitorCount * sizeof(_GLFWmonitor*)","markdown":"`memcpy(disconnected,\r\n               _glfw.monitors,\r\n               _glfw.monitorCount * sizeof(_GLFWmonitor*)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_monitor.m"},"replacements":[{"deletedRegion":{"charOffset":12574,"charLength":111},"insertedContent":{"text":"memcpy_s(disconnected, <size of disconnected>, \r\n               _glfw.monitors, \r\n               _glfw.monitorCount * sizeof(_GLFWmonitor*)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_monitor.m"},"region":{"startLine":225,"startColumn":11,"endLine":225,"endColumn":15,"charOffset":7243,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":2504,"startColumn":8,"endLine":2504,"endColumn":105,"charOffset":86301,"charLength":97,"snippet":{"text":"strncpy(cocoa_key, [[NSString stringWithCharacters:&utf_16_key length:1] UTF8String], key_sz - 1)","rendered":{"text":"strncpy(cocoa_key, [[NSString stringWithCharacters:&utf_16_key length:1] UTF8String], key_sz - 1)","markdown":"`strncpy(cocoa_key, [[NSString stringWithCharacters:&utf_16_key length:1] UTF8String], key_sz - 1)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"replacements":[{"deletedRegion":{"charOffset":86301,"charLength":97},"insertedContent":{"text":"strcpy_s(cocoa_key,  key_sz - 1,  [[NSString stringWithCharacters:&utf_16_key length:1] UTF8String])"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"replacements":[{"deletedRegion":{"charOffset":86301,"charLength":97},"insertedContent":{"text":"strlcpy(cocoa_key,  [[NSString stringWithCharacters:&utf_16_key length:1] UTF8String],  key_sz - 1)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\nsgl_context.m"},"region":{"startLine":168,"startColumn":11,"endLine":168,"endColumn":15,"charOffset":5636,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":2213,"startColumn":7,"endLine":2213,"endColumn":11,"charOffset":75339,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":2012,"startColumn":8,"endLine":2012,"endColumn":75,"charOffset":67911,"charLength":67,"snippet":{"text":"memcpy([rep bitmapData], src->pixels, src->width * src->height * 4)","rendered":{"text":"memcpy([rep bitmapData], src->pixels, src->width * src->height * 4)","markdown":"`memcpy([rep bitmapData], src->pixels, src->width * src->height * 4)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"replacements":[{"deletedRegion":{"charOffset":67911,"charLength":67},"insertedContent":{"text":"memcpy_s([rep bitmapData], <size of [rep bitmapData]>,  src->pixels,  src->width * src->height * 4)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":1798,"startColumn":11,"endLine":1798,"endColumn":15,"charOffset":61355,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":1753,"startColumn":7,"endLine":1753,"endColumn":11,"charOffset":59558,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":1712,"startColumn":7,"endLine":1712,"endColumn":11,"charOffset":58134,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":1532,"startColumn":7,"endLine":1532,"endColumn":11,"charOffset":51975,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":1416,"startColumn":8,"endLine":1416,"endColumn":39,"charOffset":48198,"charLength":31,"snippet":{"text":"strlen(wndconfig->ns.frameName)","rendered":{"text":"strlen(wndconfig->ns.frameName)","markdown":"`strlen(wndconfig->ns.frameName)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"replacements":[{"deletedRegion":{"charOffset":48198,"charLength":31},"insertedContent":{"text":"strlen_s(wndconfig->ns.frameName, <size of wndconfig->ns.frameName>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"replacements":[{"deletedRegion":{"charOffset":48198,"charLength":31},"insertedContent":{"text":"strnlen(wndconfig->ns.frameName, <size of wndconfig->ns.frameName>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":1170,"startColumn":73,"endLine":1170,"endColumn":85,"charOffset":41050,"charLength":12,"snippet":{"text":"strlen(text)","rendered":{"text":"strlen(text)","markdown":"`strlen(text)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"replacements":[{"deletedRegion":{"charOffset":41050,"charLength":12},"insertedContent":{"text":"strlen_s(text, <size of text>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"replacements":[{"deletedRegion":{"charOffset":41050,"charLength":12},"insertedContent":{"text":"strnlen(text, <size of text>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":1167,"startColumn":73,"endLine":1167,"endColumn":85,"charOffset":40843,"charLength":12,"snippet":{"text":"strlen(path)","rendered":{"text":"strlen(path)","markdown":"`strlen(path)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"replacements":[{"deletedRegion":{"charOffset":40843,"charLength":12},"insertedContent":{"text":"strlen_s(path, <size of path>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"replacements":[{"deletedRegion":{"charOffset":40843,"charLength":12},"insertedContent":{"text":"strnlen(path, <size of path>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":1142,"startColumn":7,"endLine":1142,"endColumn":11,"charOffset":39703,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\tab_bar.py"},"region":{"startLine":86,"startColumn":16,"endLine":86,"endColumn":47,"charOffset":2579,"charLength":31,"snippet":{"text":"eval(compile_template(template)","rendered":{"text":"eval(compile_template(template)","markdown":"`eval(compile_template(template)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"region":{"startLine":580,"startColumn":8,"endLine":580,"endColumn":77,"charOffset":19121,"charLength":69,"snippet":{"text":"memcpy(gamma->blue,  ramp->blue,  ramp->size * sizeof(unsigned short)","rendered":{"text":"memcpy(gamma->blue,  ramp->blue,  ramp->size * sizeof(unsigned short)","markdown":"`memcpy(gamma->blue,  ramp->blue,  ramp->size * sizeof(unsigned short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":19121,"charLength":69},"insertedContent":{"text":"memcpy_s(gamma->blue, <size of gamma->blue>,   ramp->blue,   ramp->size * sizeof(unsigned short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"region":{"startLine":579,"startColumn":8,"endLine":579,"endColumn":77,"charOffset":19040,"charLength":69,"snippet":{"text":"memcpy(gamma->green, ramp->green, ramp->size * sizeof(unsigned short)","rendered":{"text":"memcpy(gamma->green, ramp->green, ramp->size * sizeof(unsigned short)","markdown":"`memcpy(gamma->green, ramp->green, ramp->size * sizeof(unsigned short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":19040,"charLength":69},"insertedContent":{"text":"memcpy_s(gamma->green, <size of gamma->green>,  ramp->green,  ramp->size * sizeof(unsigned short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"region":{"startLine":578,"startColumn":8,"endLine":578,"endColumn":77,"charOffset":18959,"charLength":69,"snippet":{"text":"memcpy(gamma->red,   ramp->red,   ramp->size * sizeof(unsigned short)","rendered":{"text":"memcpy(gamma->red,   ramp->red,   ramp->size * sizeof(unsigned short)","markdown":"`memcpy(gamma->red,   ramp->red,   ramp->size * sizeof(unsigned short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":18959,"charLength":69},"insertedContent":{"text":"memcpy_s(gamma->red, <size of gamma->red>,    ramp->red,    ramp->size * sizeof(unsigned short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"region":{"startLine":540,"startColumn":8,"endLine":540,"endColumn":71,"charOffset":17747,"charLength":63,"snippet":{"text":"memcpy(ramp->blue,  gamma->blue,  size * sizeof(unsigned short)","rendered":{"text":"memcpy(ramp->blue,  gamma->blue,  size * sizeof(unsigned short)","markdown":"`memcpy(ramp->blue,  gamma->blue,  size * sizeof(unsigned short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":17747,"charLength":63},"insertedContent":{"text":"memcpy_s(ramp->blue, <size of ramp->blue>,   gamma->blue,   size * sizeof(unsigned short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"region":{"startLine":539,"startColumn":8,"endLine":539,"endColumn":71,"charOffset":17672,"charLength":63,"snippet":{"text":"memcpy(ramp->green, gamma->green, size * sizeof(unsigned short)","rendered":{"text":"memcpy(ramp->green, gamma->green, size * sizeof(unsigned short)","markdown":"`memcpy(ramp->green, gamma->green, size * sizeof(unsigned short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":17672,"charLength":63},"insertedContent":{"text":"memcpy_s(ramp->green, <size of ramp->green>,  gamma->green,  size * sizeof(unsigned short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"region":{"startLine":538,"startColumn":8,"endLine":538,"endColumn":71,"charOffset":17597,"charLength":63,"snippet":{"text":"memcpy(ramp->red,   gamma->red,   size * sizeof(unsigned short)","rendered":{"text":"memcpy(ramp->red,   gamma->red,   size * sizeof(unsigned short)","markdown":"`memcpy(ramp->red,   gamma->red,   size * sizeof(unsigned short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":17597,"charLength":63},"insertedContent":{"text":"memcpy_s(ramp->red, <size of ramp->red>,    gamma->red,    size * sizeof(unsigned short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"region":{"startLine":171,"startColumn":19,"endLine":171,"endColumn":23,"charOffset":5671,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"region":{"startLine":120,"startColumn":12,"endLine":122,"endColumn":61,"charOffset":4114,"charLength":119,"snippet":{"text":"memcpy(disconnected,\r\n                   _glfw.monitors,\r\n                   _glfw.monitorCount * sizeof(_GLFWmonitor*)","rendered":{"text":"memcpy(disconnected,\r\n                   _glfw.monitors,\r\n                   _glfw.monitorCount * sizeof(_GLFWmonitor*)","markdown":"`memcpy(disconnected,\r\n                   _glfw.monitors,\r\n                   _glfw.monitorCount * sizeof(_GLFWmonitor*)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":4114,"charLength":119},"insertedContent":{"text":"memcpy_s(disconnected, <size of disconnected>, \r\n                   _glfw.monitors, \r\n                   _glfw.monitorCount * sizeof(_GLFWmonitor*)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\monitor.c"},"region":{"startLine":107,"startColumn":12,"endLine":107,"endColumn":19,"charOffset":3496,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\monitor.c"},"region":{"startLine":81,"startColumn":4,"endLine":81,"endColumn":9,"charOffset":2682,"charLength":5,"snippet":{"text":"qsort","rendered":{"text":"qsort","markdown":"`qsort`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_init.c"},"region":{"startLine":621,"startColumn":30,"endLine":621,"endColumn":36,"charOffset":24315,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_init.c"},"region":{"startLine":493,"startColumn":41,"endLine":493,"endColumn":45,"charOffset":20810,"charLength":4,"snippet":{"text":"atof","rendered":{"text":"atof","markdown":"`atof`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"region":{"startLine":479,"startColumn":8,"endLine":479,"endColumn":15,"charOffset":15974,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"region":{"startLine":478,"startColumn":8,"endLine":478,"endColumn":48,"charOffset":15918,"charLength":40,"snippet":{"text":"strncpy(original, guid, sizeof(original)","rendered":{"text":"strncpy(original, guid, sizeof(original)","markdown":"`strncpy(original, guid, sizeof(original)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"replacements":[{"deletedRegion":{"charOffset":15918,"charLength":40},"insertedContent":{"text":"strcpy_s(original,  sizeof(original,  guid)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"replacements":[{"deletedRegion":{"charOffset":15918,"charLength":40},"insertedContent":{"text":"strlcpy(original,  guid,  sizeof(original)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"region":{"startLine":179,"startColumn":8,"endLine":179,"endColumn":15,"charOffset":5764,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"region":{"startLine":172,"startColumn":8,"endLine":172,"endColumn":15,"charOffset":5484,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"region":{"startLine":155,"startColumn":8,"endLine":155,"endColumn":46,"charOffset":4839,"charLength":38,"snippet":{"text":"strncpy(name, \"Unknown\", sizeof(name))","rendered":{"text":"strncpy(name, \"Unknown\", sizeof(name))","markdown":"`strncpy(name, \"Unknown\", sizeof(name))`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"replacements":[{"deletedRegion":{"charOffset":4839,"charLength":38},"insertedContent":{"text":"strcpy_s(name,  sizeof(name,  \"Unknown\")"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"replacements":[{"deletedRegion":{"charOffset":4839,"charLength":38},"insertedContent":{"text":"strlcpy(name,  \"Unknown\",  sizeof(name)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1597,"startColumn":84,"endLine":1597,"endColumn":92,"charOffset":54437,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1582,"startColumn":84,"endLine":1582,"endColumn":92,"charOffset":53748,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1541,"startColumn":95,"endLine":1541,"endColumn":103,"charOffset":52403,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1534,"startColumn":21,"endLine":1534,"endColumn":33,"charOffset":51953,"charLength":12,"snippet":{"text":"strlen(text)","rendered":{"text":"strlen(text)","markdown":"`strlen(text)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":51953,"charLength":12},"insertedContent":{"text":"strlen_s(text, <size of text>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":51953,"charLength":12},"insertedContent":{"text":"strnlen(text, <size of text>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1256,"startColumn":7,"endLine":1256,"endColumn":11,"charOffset":43503,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1238,"startColumn":7,"endLine":1238,"endColumn":11,"charOffset":43029,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1172,"startColumn":7,"endLine":1172,"endColumn":11,"charOffset":41215,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1161,"startColumn":7,"endLine":1161,"endColumn":11,"charOffset":40911,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1063,"startColumn":7,"endLine":1063,"endColumn":11,"charOffset":38080,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1054,"startColumn":7,"endLine":1054,"endColumn":11,"charOffset":37664,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":887,"startColumn":4,"endLine":887,"endColumn":76,"charOffset":32225,"charLength":72,"snippet":{"text":"strncpy(window->wl.appId, wndconfig->wl.appId, sizeof(window->wl.appId))","rendered":{"text":"strncpy(window->wl.appId, wndconfig->wl.appId, sizeof(window->wl.appId))","markdown":"`strncpy(window->wl.appId, wndconfig->wl.appId, sizeof(window->wl.appId))`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":32225,"charLength":72},"insertedContent":{"text":"strcpy_s(window->wl.appId,  sizeof(window->wl.appId,  wndconfig->wl.appId)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":32225,"charLength":72},"insertedContent":{"text":"strlcpy(window->wl.appId,  wndconfig->wl.appId,  sizeof(window->wl.appId)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":767,"startColumn":81,"endLine":767,"endColumn":89,"charOffset":27516,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":732,"startColumn":8,"endLine":732,"endColumn":32,"charOffset":26275,"charLength":24,"snippet":{"text":"strlen(window->wl.appId)","rendered":{"text":"strlen(window->wl.appId)","markdown":"`strlen(window->wl.appId)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":26275,"charLength":24},"insertedContent":{"text":"strlen_s(window->wl.appId, <size of window->wl.appId>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":26275,"charLength":24},"insertedContent":{"text":"strnlen(window->wl.appId, <size of window->wl.appId>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":321,"startColumn":52,"endLine":321,"endColumn":60,"charOffset":11697,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":313,"startColumn":32,"endLine":313,"endColumn":40,"charOffset":11438,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS141863","level":"error","message":{"text":"Banned C function detected (strcat)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":279,"startColumn":4,"endLine":279,"endColumn":26,"charOffset":10585,"charLength":22,"snippet":{"text":"strcat(name, template)","rendered":{"text":"strcat(name, template)","markdown":"`strcat(name, template)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the combination of strings is larger than the destination buffer, strcat will cbuffer overflow the destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":10585,"charLength":22},"insertedContent":{"text":"strcat_s(name, <size of name>,  template)"}}]}]},{"description":{"text":"If the combination of strings is larger than the destination buffer, strcat will cbuffer overflow the destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":10585,"charLength":22},"insertedContent":{"text":"strlcat(name,  template, <size of name>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":278,"startColumn":4,"endLine":278,"endColumn":22,"charOffset":10560,"charLength":18,"snippet":{"text":"strcpy(name, path)","rendered":{"text":"strcpy(name, path)","markdown":"`strcpy(name, path)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":10560,"charLength":18},"insertedContent":{"text":"strcpy_s(name, <size of name>,  path)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":10560,"charLength":18},"insertedContent":{"text":"strlcpy(name,  path, <size of name>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":277,"startColumn":18,"endLine":277,"endColumn":30,"charOffset":10518,"charLength":12,"snippet":{"text":"strlen(path)","rendered":{"text":"strlen(path)","markdown":"`strlen(path)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":10518,"charLength":12},"insertedContent":{"text":"strlen_s(path, <size of path>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":10518,"charLength":12},"insertedContent":{"text":"strnlen(path, <size of path>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":270,"startColumn":11,"endLine":270,"endColumn":17,"charOffset":10395,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\state.c"},"region":{"startLine":553,"startColumn":31,"endLine":553,"endColumn":67,"charOffset":21067,"charLength":36,"snippet":{"text":"memcpy(OPT(background_image), s, sz)","rendered":{"text":"memcpy(OPT(background_image), s, sz)","markdown":"`memcpy(OPT(background_image), s, sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\state.c"},"replacements":[{"deletedRegion":{"charOffset":21067,"charLength":36},"insertedContent":{"text":"memcpy_s(OPT(background_image), <size of OPT(background_image)>,  s,  sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\state.c"},"region":{"startLine":314,"startColumn":16,"endLine":314,"endColumn":70,"charOffset":11388,"charLength":54,"snippet":{"text":"memcpy(w, detached_windows.windows + i, sizeof(Window)","rendered":{"text":"memcpy(w, detached_windows.windows + i, sizeof(Window)","markdown":"`memcpy(w, detached_windows.windows + i, sizeof(Window)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\state.c"},"replacements":[{"deletedRegion":{"charOffset":11388,"charLength":54},"insertedContent":{"text":"memcpy_s(w, <size of w>,  detached_windows.windows + i,  sizeof(Window)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\state.c"},"region":{"startLine":277,"startColumn":4,"endLine":277,"endColumn":87,"charOffset":9897,"charLength":83,"snippet":{"text":"memcpy(detached_windows.windows + detached_windows.num_windows++, w, sizeof(Window)","rendered":{"text":"memcpy(detached_windows.windows + detached_windows.num_windows++, w, sizeof(Window)","markdown":"`memcpy(detached_windows.windows + detached_windows.num_windows++, w, sizeof(Window)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\state.c"},"replacements":[{"deletedRegion":{"charOffset":9897,"charLength":83},"insertedContent":{"text":"memcpy_s(detached_windows.windows + detached_windows.num_windows++, <size of detached_windows.windows + detached_windows.num_windows++>,  w,  sizeof(Window)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_init.m"},"region":{"startLine":628,"startColumn":20,"endLine":628,"endColumn":39,"charOffset":22365,"charLength":19,"snippet":{"text":"http://cocoadev.com","rendered":{"text":"http://cocoadev.com","markdown":"`http://cocoadev.com`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_init.m"},"replacements":[{"deletedRegion":{"charOffset":22365,"charLength":19},"insertedContent":{"text":"https://cocoadev.com"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_init.m"},"region":{"startLine":165,"startColumn":7,"endLine":165,"endColumn":11,"charOffset":6014,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\freetype.c"},"region":{"startLine":663,"startColumn":17,"endLine":663,"endColumn":47,"charOffset":28485,"charLength":30,"snippet":{"text":"malloc(ans.width * ans.height)","rendered":{"text":"malloc(ans.width * ans.height)","markdown":"`malloc(ans.width * ans.height)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\freetype.c"},"replacements":[{"deletedRegion":{"charOffset":28485,"charLength":30},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\freetype.c"},"region":{"startLine":398,"startColumn":8,"endLine":398,"endColumn":65,"charOffset":15693,"charLength":57,"snippet":{"text":"memcpy(ans->buf, bitmap->buffer, ans->rows * ans->stride)","rendered":{"text":"memcpy(ans->buf, bitmap->buffer, ans->rows * ans->stride)","markdown":"`memcpy(ans->buf, bitmap->buffer, ans->rows * ans->stride)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\freetype.c"},"replacements":[{"deletedRegion":{"charOffset":15693,"charLength":57},"insertedContent":{"text":"memcpy_s(ans->buf, <size of ans->buf>,  bitmap->buffer,  ans->rows * ans->stride)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\freetype.c"},"region":{"startLine":130,"startColumn":50,"endLine":130,"endColumn":56,"charOffset":3990,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\egl_context.c"},"region":{"startLine":697,"startColumn":15,"endLine":697,"endColumn":19,"charOffset":23728,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\egl_context.c"},"region":{"startLine":605,"startColumn":7,"endLine":605,"endColumn":11,"charOffset":20976,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS126858","level":"error","message":{"text":"Weak/Broken Hash Algorithm"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\diff\\collect.py"},"region":{"startLine":178,"startColumn":11,"endLine":178,"endColumn":14,"charOffset":5900,"charLength":3,"snippet":{"text":"md5","rendered":{"text":"md5","markdown":"`md5`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\diff\\collect.py"},"replacements":[{"deletedRegion":{"charOffset":5900,"charLength":3},"insertedContent":{"text":"sha512"}}]}]},{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\diff\\collect.py"},"replacements":[{"deletedRegion":{"charOffset":5900,"charLength":3},"insertedContent":{"text":"sha256"}}]}]}],"properties":{"tags":["Cryptography.BannedHashAlgorithm"],"DevSkimSeverity":"Critical","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS126858","level":"error","message":{"text":"Weak/Broken Hash Algorithm"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\diff\\collect.py"},"region":{"startLine":9,"startColumn":20,"endLine":9,"endColumn":23,"charOffset":234,"charLength":3,"snippet":{"text":"md5","rendered":{"text":"md5","markdown":"`md5`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\diff\\collect.py"},"replacements":[{"deletedRegion":{"charOffset":234,"charLength":3},"insertedContent":{"text":"sha512"}}]}]},{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\diff\\collect.py"},"replacements":[{"deletedRegion":{"charOffset":234,"charLength":3},"insertedContent":{"text":"sha256"}}]}]}],"properties":{"tags":["Cryptography.BannedHashAlgorithm"],"DevSkimSeverity":"Critical","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.h"},"region":{"startLine":49,"startColumn":8,"endLine":49,"endColumn":15,"charOffset":2462,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\dbus_glfw.c"},"region":{"startLine":244,"startColumn":34,"endLine":244,"endColumn":63,"charOffset":8322,"charLength":29,"snippet":{"text":"malloc(sizeof(MethodResponse)","rendered":{"text":"malloc(sizeof(MethodResponse)","markdown":"`malloc(sizeof(MethodResponse)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\dbus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":8322,"charLength":29},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\dbus_glfw.c"},"region":{"startLine":115,"startColumn":19,"endLine":115,"endColumn":41,"charOffset":4045,"charLength":22,"snippet":{"text":"malloc(sizeof(id_type)","rendered":{"text":"malloc(sizeof(id_type)","markdown":"`malloc(sizeof(id_type)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\dbus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":4045,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\dbus_glfw.c"},"region":{"startLine":80,"startColumn":19,"endLine":80,"endColumn":41,"charOffset":2915,"charLength":22,"snippet":{"text":"malloc(sizeof(id_type)","rendered":{"text":"malloc(sizeof(id_type)","markdown":"`malloc(sizeof(id_type)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\dbus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":2915,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\dbus_glfw.c"},"region":{"startLine":39,"startColumn":12,"endLine":39,"endColumn":21,"charOffset":1504,"charLength":9,"snippet":{"text":"vsnprintf","rendered":{"text":"vsnprintf","markdown":"`vsnprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":898,"startColumn":8,"endLine":898,"endColumn":14,"charOffset":36684,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":727,"startColumn":94,"endLine":727,"endColumn":142,"charOffset":28636,"charLength":48,"snippet":{"text":"memcpy(dest, src, fg->cell_width * sizeof(pixel)","rendered":{"text":"memcpy(dest, src, fg->cell_width * sizeof(pixel)","markdown":"`memcpy(dest, src, fg->cell_width * sizeof(pixel)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fonts.c"},"replacements":[{"deletedRegion":{"charOffset":28636,"charLength":48},"insertedContent":{"text":"memcpy_s(dest, <size of dest>,  src,  fg->cell_width * sizeof(pixel)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":540,"startColumn":12,"endLine":540,"endColumn":18,"charOffset":21038,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":538,"startColumn":12,"endLine":538,"endColumn":18,"charOffset":20960,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":536,"startColumn":16,"endLine":536,"endColumn":22,"charOffset":20878,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":534,"startColumn":12,"endLine":534,"endColumn":18,"charOffset":20747,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":533,"startColumn":12,"endLine":533,"endColumn":18,"charOffset":20682,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":508,"startColumn":4,"endLine":508,"endColumn":10,"charOffset":19365,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":507,"startColumn":18,"endLine":507,"endColumn":24,"charOffset":19337,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":505,"startColumn":28,"endLine":505,"endColumn":34,"charOffset":19249,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":504,"startColumn":16,"endLine":504,"endColumn":22,"charOffset":19201,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":503,"startColumn":14,"endLine":503,"endColumn":20,"charOffset":19167,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":501,"startColumn":8,"endLine":501,"endColumn":14,"charOffset":19091,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":499,"startColumn":4,"endLine":499,"endColumn":10,"charOffset":18976,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":399,"startColumn":8,"endLine":399,"endColumn":110,"charOffset":13855,"charLength":102,"snippet":{"text":"memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[CALT_FEATURE], sizeof(hb_feature_t)","rendered":{"text":"memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[CALT_FEATURE], sizeof(hb_feature_t)","markdown":"`memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[CALT_FEATURE], sizeof(hb_feature_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fonts.c"},"replacements":[{"deletedRegion":{"charOffset":13855,"charLength":102},"insertedContent":{"text":"memcpy_s(f->ffs_hb_features + f->num_ffs_hb_features++, <size of f->ffs_hb_features + f->num_ffs_hb_features++>,  &hb_features[CALT_FEATURE],  sizeof(hb_feature_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":397,"startColumn":12,"endLine":397,"endColumn":114,"charOffset":13730,"charLength":102,"snippet":{"text":"memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[DLIG_FEATURE], sizeof(hb_feature_t)","rendered":{"text":"memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[DLIG_FEATURE], sizeof(hb_feature_t)","markdown":"`memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[DLIG_FEATURE], sizeof(hb_feature_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fonts.c"},"replacements":[{"deletedRegion":{"charOffset":13730,"charLength":102},"insertedContent":{"text":"memcpy_s(f->ffs_hb_features + f->num_ffs_hb_features++, <size of f->ffs_hb_features + f->num_ffs_hb_features++>,  &hb_features[DLIG_FEATURE],  sizeof(hb_feature_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":396,"startColumn":12,"endLine":396,"endColumn":114,"charOffset":13612,"charLength":102,"snippet":{"text":"memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[LIGA_FEATURE], sizeof(hb_feature_t)","rendered":{"text":"memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[LIGA_FEATURE], sizeof(hb_feature_t)","markdown":"`memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[LIGA_FEATURE], sizeof(hb_feature_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fonts.c"},"replacements":[{"deletedRegion":{"charOffset":13612,"charLength":102},"insertedContent":{"text":"memcpy_s(f->ffs_hb_features + f->num_ffs_hb_features++, <size of f->ffs_hb_features + f->num_ffs_hb_features++>,  &hb_features[LIGA_FEATURE],  sizeof(hb_feature_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":388,"startColumn":16,"endLine":388,"endColumn":97,"charOffset":13277,"charLength":81,"snippet":{"text":"memcpy(f->ffs_hb_features + len, &hb_features[CALT_FEATURE], sizeof(hb_feature_t)","rendered":{"text":"memcpy(f->ffs_hb_features + len, &hb_features[CALT_FEATURE], sizeof(hb_feature_t)","markdown":"`memcpy(f->ffs_hb_features + len, &hb_features[CALT_FEATURE], sizeof(hb_feature_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fonts.c"},"replacements":[{"deletedRegion":{"charOffset":13277,"charLength":81},"insertedContent":{"text":"memcpy_s(f->ffs_hb_features + len, <size of f->ffs_hb_features + len>,  &hb_features[CALT_FEATURE],  sizeof(hb_feature_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":384,"startColumn":24,"endLine":384,"endColumn":102,"charOffset":13093,"charLength":78,"snippet":{"text":"memcpy(f->ffs_hb_features + i, PyBytes_AS_STRING(parsed), sizeof(hb_feature_t)","rendered":{"text":"memcpy(f->ffs_hb_features + i, PyBytes_AS_STRING(parsed), sizeof(hb_feature_t)","markdown":"`memcpy(f->ffs_hb_features + i, PyBytes_AS_STRING(parsed), sizeof(hb_feature_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fonts.c"},"replacements":[{"deletedRegion":{"charOffset":13093,"charLength":78},"insertedContent":{"text":"memcpy_s(f->ffs_hb_features + i, <size of f->ffs_hb_features + i>,  PyBytes_AS_STRING(parsed),  sizeof(hb_feature_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":283,"startColumn":4,"endLine":283,"endColumn":62,"charOffset":9080,"charLength":58,"snippet":{"text":"memcpy(&s->extra_glyphs, extra_glyphs, sizeof(ExtraGlyphs)","rendered":{"text":"memcpy(&s->extra_glyphs, extra_glyphs, sizeof(ExtraGlyphs)","markdown":"`memcpy(&s->extra_glyphs, extra_glyphs, sizeof(ExtraGlyphs)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fonts.c"},"replacements":[{"deletedRegion":{"charOffset":9080,"charLength":58},"insertedContent":{"text":"memcpy_s(&s->extra_glyphs, <size of &s->extra_glyphs>,  extra_glyphs,  sizeof(ExtraGlyphs)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":177,"startColumn":12,"endLine":177,"endColumn":19,"charOffset":5237,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\shaders.c"},"region":{"startLine":700,"startColumn":37,"endLine":700,"endColumn":78,"charOffset":34876,"charLength":41,"snippet":{"text":"memcpy(borders_buf_address, rect_buf, sz)","rendered":{"text":"memcpy(borders_buf_address, rect_buf, sz)","markdown":"`memcpy(borders_buf_address, rect_buf, sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\shaders.c"},"replacements":[{"deletedRegion":{"charOffset":34876,"charLength":41},"insertedContent":{"text":"memcpy_s(borders_buf_address, <size of borders_buf_address>,  rect_buf,  sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\shaders.c"},"region":{"startLine":248,"startColumn":54,"endLine":248,"endColumn":120,"charOffset":11386,"charLength":66,"snippet":{"text":"memcpy(a, render_data[i].vertices, sizeof(render_data[0].vertices)","rendered":{"text":"memcpy(a, render_data[i].vertices, sizeof(render_data[0].vertices)","markdown":"`memcpy(a, render_data[i].vertices, sizeof(render_data[0].vertices)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\shaders.c"},"replacements":[{"deletedRegion":{"charOffset":11386,"charLength":66},"insertedContent":{"text":"memcpy_s(a, <size of a>,  render_data[i].vertices,  sizeof(render_data[0].vertices)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\shaders.c"},"region":{"startLine":69,"startColumn":21,"endLine":69,"endColumn":46,"charOffset":2855,"charLength":25,"snippet":{"text":"malloc(sz * sizeof(pixel)","rendered":{"text":"malloc(sz * sizeof(pixel)","markdown":"`malloc(sz * sizeof(pixel)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\shaders.c"},"replacements":[{"deletedRegion":{"charOffset":2855,"charLength":25},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_init.c"},"region":{"startLine":155,"startColumn":7,"endLine":155,"endColumn":11,"charOffset":4823,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\windows_compat.c"},"region":{"startLine":64,"startColumn":32,"endLine":64,"endColumn":42,"charOffset":1465,"charLength":10,"snippet":{"text":"malloc(*n)","rendered":{"text":"malloc(*n)","markdown":"`malloc(*n)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\choose\\windows_compat.c"},"replacements":[{"deletedRegion":{"charOffset":1465,"charLength":10},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\vector.h"},"region":{"startLine":21,"startColumn":22,"endLine":21,"endColumn":56,"charOffset":431,"charLength":34,"snippet":{"text":"malloc(vec.capacity * sizeof(TYPE)","rendered":{"text":"malloc(vec.capacity * sizeof(TYPE)","markdown":"`malloc(vec.capacity * sizeof(TYPE)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\choose\\vector.h"},"replacements":[{"deletedRegion":{"charOffset":431,"charLength":34},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\unix_compat.c"},"region":{"startLine":36,"startColumn":69,"endLine":36,"endColumn":77,"charOffset":812,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\unix_compat.c"},"region":{"startLine":36,"startColumn":8,"endLine":36,"endColumn":15,"charOffset":751,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\output.c"},"region":{"startLine":99,"startColumn":4,"endLine":99,"endColumn":9,"charOffset":3317,"charLength":5,"snippet":{"text":"qsort","rendered":{"text":"qsort","markdown":"`qsort`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\output.c"},"region":{"startLine":75,"startColumn":18,"endLine":75,"endColumn":26,"charOffset":2392,"charLength":8,"snippet":{"text":"swprintf","rendered":{"text":"swprintf","markdown":"`swprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\output.c"},"region":{"startLine":43,"startColumn":8,"endLine":43,"endColumn":72,"charOffset":1169,"charLength":64,"snippet":{"text":"memcpy(global->output + global->output_pos, data, sizeof(text_t)","rendered":{"text":"memcpy(global->output + global->output_pos, data, sizeof(text_t)","markdown":"`memcpy(global->output + global->output_pos, data, sizeof(text_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\choose\\output.c"},"replacements":[{"deletedRegion":{"charOffset":1169,"charLength":64},"insertedContent":{"text":"memcpy_s(global->output + global->output_pos, <size of global->output + global->output_pos>,  data,  sizeof(text_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_cursors.c"},"region":{"startLine":42,"startColumn":55,"endLine":42,"endColumn":61,"charOffset":1267,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_cursors.c"},"region":{"startLine":18,"startColumn":31,"endLine":18,"endColumn":35,"charOffset":471,"charLength":4,"snippet":{"text":"atoi","rendered":{"text":"atoi","markdown":"`atoi`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_cursors.c"},"region":{"startLine":16,"startColumn":26,"endLine":16,"endColumn":32,"charOffset":395,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\window.c"},"region":{"startLine":491,"startColumn":12,"endLine":492,"endColumn":55,"charOffset":16979,"charLength":100,"snippet":{"text":"strncpy(_glfw.hints.window.wl.appId, value,\r\n                    sizeof(_glfw.hints.window.wl.appId)","rendered":{"text":"strncpy(_glfw.hints.window.wl.appId, value,\r\n                    sizeof(_glfw.hints.window.wl.appId)","markdown":"`strncpy(_glfw.hints.window.wl.appId, value,\r\n                    sizeof(_glfw.hints.window.wl.appId)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\window.c"},"replacements":[{"deletedRegion":{"charOffset":16979,"charLength":100},"insertedContent":{"text":"strcpy_s(_glfw.hints.window.wl.appId, \r\n                    sizeof(_glfw.hints.window.wl.appId,  value)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\window.c"},"replacements":[{"deletedRegion":{"charOffset":16979,"charLength":100},"insertedContent":{"text":"strlcpy(_glfw.hints.window.wl.appId,  value, \r\n                    sizeof(_glfw.hints.window.wl.appId)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\window.c"},"region":{"startLine":487,"startColumn":12,"endLine":488,"endColumn":63,"charOffset":16787,"charLength":116,"snippet":{"text":"strncpy(_glfw.hints.window.x11.instanceName, value,\r\n                    sizeof(_glfw.hints.window.x11.instanceName)","rendered":{"text":"strncpy(_glfw.hints.window.x11.instanceName, value,\r\n                    sizeof(_glfw.hints.window.x11.instanceName)","markdown":"`strncpy(_glfw.hints.window.x11.instanceName, value,\r\n                    sizeof(_glfw.hints.window.x11.instanceName)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\window.c"},"replacements":[{"deletedRegion":{"charOffset":16787,"charLength":116},"insertedContent":{"text":"strcpy_s(_glfw.hints.window.x11.instanceName, \r\n                    sizeof(_glfw.hints.window.x11.instanceName,  value)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\window.c"},"replacements":[{"deletedRegion":{"charOffset":16787,"charLength":116},"insertedContent":{"text":"strlcpy(_glfw.hints.window.x11.instanceName,  value, \r\n                    sizeof(_glfw.hints.window.x11.instanceName)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\window.c"},"region":{"startLine":483,"startColumn":12,"endLine":484,"endColumn":60,"charOffset":16598,"charLength":110,"snippet":{"text":"strncpy(_glfw.hints.window.x11.className, value,\r\n                    sizeof(_glfw.hints.window.x11.className)","rendered":{"text":"strncpy(_glfw.hints.window.x11.className, value,\r\n                    sizeof(_glfw.hints.window.x11.className)","markdown":"`strncpy(_glfw.hints.window.x11.className, value,\r\n                    sizeof(_glfw.hints.window.x11.className)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\window.c"},"replacements":[{"deletedRegion":{"charOffset":16598,"charLength":110},"insertedContent":{"text":"strcpy_s(_glfw.hints.window.x11.className, \r\n                    sizeof(_glfw.hints.window.x11.className,  value)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\window.c"},"replacements":[{"deletedRegion":{"charOffset":16598,"charLength":110},"insertedContent":{"text":"strlcpy(_glfw.hints.window.x11.className,  value, \r\n                    sizeof(_glfw.hints.window.x11.className)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":2494,"startColumn":4,"endLine":2494,"endColumn":9,"charOffset":94550,"charLength":5,"snippet":{"text":"qsort","rendered":{"text":"qsort","markdown":"`qsort`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":1657,"startColumn":4,"endLine":1657,"endColumn":69,"charOffset":61936,"charLength":65,"snippet":{"text":"memcpy(data + base, line->gpu_cells, line->xnum * sizeof(GPUCell)","rendered":{"text":"memcpy(data + base, line->gpu_cells, line->xnum * sizeof(GPUCell)","markdown":"`memcpy(data + base, line->gpu_cells, line->xnum * sizeof(GPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":61936,"charLength":65},"insertedContent":{"text":"memcpy_s(data + base, <size of data + base>,  line->gpu_cells,  line->xnum * sizeof(GPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":679,"startColumn":57,"endLine":679,"endColumn":71,"charOffset":27687,"charLength":14,"snippet":{"text":"strlen(suffix)","rendered":{"text":"strlen(suffix)","markdown":"`strlen(suffix)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":27687,"charLength":14},"insertedContent":{"text":"strlen_s(suffix, <size of suffix>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":27687,"charLength":14},"insertedContent":{"text":"strnlen(suffix, <size of suffix>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":678,"startColumn":40,"endLine":678,"endColumn":52,"charOffset":27614,"charLength":12,"snippet":{"text":"strlen(data)","rendered":{"text":"strlen(data)","markdown":"`strlen(data)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":27614,"charLength":12},"insertedContent":{"text":"strlen_s(data, <size of data>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":27614,"charLength":12},"insertedContent":{"text":"strnlen(data, <size of data>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":677,"startColumn":42,"endLine":677,"endColumn":56,"charOffset":27556,"charLength":14,"snippet":{"text":"strlen(prefix)","rendered":{"text":"strlen(prefix)","markdown":"`strlen(prefix)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":27556,"charLength":14},"insertedContent":{"text":"strlen_s(prefix, <size of prefix>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":27556,"charLength":14},"insertedContent":{"text":"strnlen(prefix, <size of prefix>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"region":{"startLine":349,"startColumn":4,"endLine":349,"endColumn":34,"charOffset":11392,"charLength":30,"snippet":{"text":"memcpy(result, source, length)","rendered":{"text":"memcpy(result, source, length)","markdown":"`memcpy(result, source, length)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"replacements":[{"deletedRegion":{"charOffset":11392,"charLength":30},"insertedContent":{"text":"memcpy_s(result, <size of result>,  source,  length)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":673,"startColumn":86,"endLine":673,"endColumn":98,"charOffset":27440,"charLength":12,"snippet":{"text":"strlen(data)","rendered":{"text":"strlen(data)","markdown":"`strlen(data)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":27440,"charLength":12},"insertedContent":{"text":"strlen_s(data, <size of data>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":27440,"charLength":12},"insertedContent":{"text":"strnlen(data, <size of data>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":673,"startColumn":64,"endLine":673,"endColumn":78,"charOffset":27418,"charLength":14,"snippet":{"text":"strlen(prefix)","rendered":{"text":"strlen(prefix)","markdown":"`strlen(prefix)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":27418,"charLength":14},"insertedContent":{"text":"strlen_s(prefix, <size of prefix>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":27418,"charLength":14},"insertedContent":{"text":"strnlen(prefix, <size of prefix>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"bypy\\sources.json"},"region":{"startLine":221,"startColumn":22,"endLine":221,"endColumn":47,"charOffset":6750,"charLength":25,"snippet":{"text":"http://www.fontconfig.org","rendered":{"text":"http://www.fontconfig.org","markdown":"`http://www.fontconfig.org`"}},"sourceLanguage":"json"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"bypy\\sources.json"},"replacements":[{"deletedRegion":{"charOffset":6750,"charLength":25},"insertedContent":{"text":"https://www.fontconfig.org"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"bypy\\sources.json"},"region":{"startLine":171,"startColumn":22,"endLine":171,"endColumn":54,"charOffset":5208,"charLength":32,"snippet":{"text":"http://downloads.sourceforge.net","rendered":{"text":"http://downloads.sourceforge.net","markdown":"`http://downloads.sourceforge.net`"}},"sourceLanguage":"json"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"bypy\\sources.json"},"replacements":[{"deletedRegion":{"charOffset":5208,"charLength":32},"insertedContent":{"text":"https://downloads.sourceforge.net"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":671,"startColumn":108,"endLine":671,"endColumn":122,"charOffset":27318,"charLength":14,"snippet":{"text":"strlen(suffix)","rendered":{"text":"strlen(suffix)","markdown":"`strlen(suffix)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":27318,"charLength":14},"insertedContent":{"text":"strlen_s(suffix, <size of suffix>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":27318,"charLength":14},"insertedContent":{"text":"strnlen(suffix, <size of suffix>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"bypy\\sources.json"},"region":{"startLine":152,"startColumn":22,"endLine":152,"endColumn":54,"charOffset":4613,"charLength":32,"snippet":{"text":"http://downloads.sourceforge.net","rendered":{"text":"http://downloads.sourceforge.net","markdown":"`http://downloads.sourceforge.net`"}},"sourceLanguage":"json"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"bypy\\sources.json"},"replacements":[{"deletedRegion":{"charOffset":4613,"charLength":32},"insertedContent":{"text":"https://downloads.sourceforge.net"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fontconfig.c"},"region":{"startLine":160,"startColumn":18,"endLine":160,"endColumn":32,"charOffset":5567,"charLength":14,"snippet":{"text":"strlen(family)","rendered":{"text":"strlen(family)","markdown":"`strlen(family)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fontconfig.c"},"replacements":[{"deletedRegion":{"charOffset":5567,"charLength":14},"insertedContent":{"text":"strlen_s(family, <size of family>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fontconfig.c"},"replacements":[{"deletedRegion":{"charOffset":5567,"charLength":14},"insertedContent":{"text":"strnlen(family, <size of family>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":671,"startColumn":86,"endLine":671,"endColumn":98,"charOffset":27296,"charLength":12,"snippet":{"text":"strlen(data)","rendered":{"text":"strlen(data)","markdown":"`strlen(data)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":27296,"charLength":12},"insertedContent":{"text":"strlen_s(data, <size of data>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":27296,"charLength":12},"insertedContent":{"text":"strnlen(data, <size of data>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"bypy\\sources.json"},"region":{"startLine":96,"startColumn":22,"endLine":96,"endColumn":40,"charOffset":2948,"charLength":18,"snippet":{"text":"http://ftp.gnu.org","rendered":{"text":"http://ftp.gnu.org","markdown":"`http://ftp.gnu.org`"}},"sourceLanguage":"json"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"bypy\\sources.json"},"replacements":[{"deletedRegion":{"charOffset":2948,"charLength":18},"insertedContent":{"text":"https://ftp.gnu.org"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\main.c"},"region":{"startLine":209,"startColumn":20,"endLine":209,"endColumn":41,"charOffset":7498,"charLength":21,"snippet":{"text":"malloc(sizeof(size_t)","rendered":{"text":"malloc(sizeof(size_t)","markdown":"`malloc(sizeof(size_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\choose\\main.c"},"replacements":[{"deletedRegion":{"charOffset":7498,"charLength":21},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fontconfig.c"},"region":{"startLine":32,"startColumn":47,"endLine":32,"endColumn":67,"charOffset":848,"charLength":20,"snippet":{"text":"strlen((const char*)","rendered":{"text":"strlen((const char*)","markdown":"`strlen((const char*)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fontconfig.c"},"replacements":[{"deletedRegion":{"charOffset":848,"charLength":20},"insertedContent":{"text":"strlen_s((const char*, <size of (const char*>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fontconfig.c"},"replacements":[{"deletedRegion":{"charOffset":848,"charLength":20},"insertedContent":{"text":"strnlen((const char*, <size of (const char*>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\main.c"},"region":{"startLine":207,"startColumn":20,"endLine":207,"endColumn":40,"charOffset":7395,"charLength":20,"snippet":{"text":"malloc(sizeof(char*)","rendered":{"text":"malloc(sizeof(char*)","markdown":"`malloc(sizeof(char*)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\choose\\main.c"},"replacements":[{"deletedRegion":{"charOffset":7395,"charLength":20},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"bypy\\sources.json"},"region":{"startLine":48,"startColumn":22,"endLine":48,"endColumn":42,"charOffset":1497,"charLength":20,"snippet":{"text":"http://xkbcommon.org","rendered":{"text":"http://xkbcommon.org","markdown":"`http://xkbcommon.org`"}},"sourceLanguage":"json"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"bypy\\sources.json"},"replacements":[{"deletedRegion":{"charOffset":1497,"charLength":20},"insertedContent":{"text":"https://xkbcommon.org"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":671,"startColumn":64,"endLine":671,"endColumn":78,"charOffset":27274,"charLength":14,"snippet":{"text":"strlen(prefix)","rendered":{"text":"strlen(prefix)","markdown":"`strlen(prefix)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":27274,"charLength":14},"insertedContent":{"text":"strlen_s(prefix, <size of prefix>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":27274,"charLength":14},"insertedContent":{"text":"strnlen(prefix, <size of prefix>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"region":{"startLine":348,"startColumn":19,"endLine":348,"endColumn":37,"charOffset":11367,"charLength":18,"snippet":{"text":"malloc(length + 1)","rendered":{"text":"malloc(length + 1)","markdown":"`malloc(length + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"replacements":[{"deletedRegion":{"charOffset":11367,"charLength":18},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\window.c"},"region":{"startLine":479,"startColumn":12,"endLine":480,"endColumn":59,"charOffset":16414,"charLength":108,"snippet":{"text":"strncpy(_glfw.hints.window.ns.frameName, value,\r\n                    sizeof(_glfw.hints.window.ns.frameName)","rendered":{"text":"strncpy(_glfw.hints.window.ns.frameName, value,\r\n                    sizeof(_glfw.hints.window.ns.frameName)","markdown":"`strncpy(_glfw.hints.window.ns.frameName, value,\r\n                    sizeof(_glfw.hints.window.ns.frameName)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\window.c"},"replacements":[{"deletedRegion":{"charOffset":16414,"charLength":108},"insertedContent":{"text":"strcpy_s(_glfw.hints.window.ns.frameName, \r\n                    sizeof(_glfw.hints.window.ns.frameName,  value)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\window.c"},"replacements":[{"deletedRegion":{"charOffset":16414,"charLength":108},"insertedContent":{"text":"strlcpy(_glfw.hints.window.ns.frameName,  value, \r\n                    sizeof(_glfw.hints.window.ns.frameName)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"region":{"startLine":95,"startColumn":31,"endLine":95,"endColumn":36,"charOffset":2800,"charLength":5,"snippet":{"text":"qsort","rendered":{"text":"qsort","markdown":"`qsort`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":95,"startColumn":113,"endLine":95,"endColumn":121,"charOffset":3430,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"region":{"startLine":62,"startColumn":16,"endLine":62,"endColumn":23,"charOffset":1809,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":91,"startColumn":112,"endLine":91,"endColumn":120,"charOffset":3186,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"}],"columnKind":"utf16CodeUnits"}]}
