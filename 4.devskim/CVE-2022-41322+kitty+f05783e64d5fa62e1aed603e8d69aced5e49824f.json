{"$schema":"https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json","version":"2.1.0","runs":[{"tool":{"driver":{"name":"devskim","fullName":"Microsoft DevSkim Command Line Interface","version":"1.0.23+607c9a5eda","informationUri":"https://github.com/microsoft/DevSkim/","rules":[{"id":"DS161085","name":"ProblematicCFunctionDetectedMalloc","fullDescription":{"text":"Problematic C function detected (malloc): If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"help":{"text":"calloc handles the most common integer math in memory allocation (# of elements * their size) with error handling to prevent overflows in most implementations, and zeros out memory","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS161085.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS161085.md) for guidance on this issue."},"shortDescription":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS161085.md","properties":{"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"id":"DS176209","name":"SuspiciousComment","fullDescription":{"text":"Suspicious comment: A \"TODO\" or similar was left in source code, possibly indicating incomplete functionality"},"help":{"text":"A \"TODO\" or similar was left in source code, possibly indicating incomplete functionality","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS176209.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS176209.md) for guidance on this issue."},"shortDescription":{"text":"A \"TODO\" or similar was left in source code, possibly indicating incomplete functionality"},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS176209.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS121708","name":"ProblematicCFunctionDetectedMemcpy","fullDescription":{"text":"Problematic C function detected (memcpy): There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"help":{"text":"Use memcpy_s if possible.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS121708.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS121708.md) for guidance on this issue."},"shortDescription":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS121708.md","properties":{"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"id":"DS111237","name":"BannedCFunctionDetectedStrncpy","fullDescription":{"text":"Banned C function detected (strncpy): strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"help":{"text":"Use strcpy_s or strlcpy if possible. If no safe function is viable, strcpy/strncpy should be proceeded by conditional checks to verify tha that the source string will fit in the destination with a null termnator.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS111237.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS111237.md) for guidance on this issue."},"shortDescription":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS111237.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS154189","name":"BannedCFunctionDetected","fullDescription":{"text":"Banned C function detected: These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'."},"help":{"text":"These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS154189.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS154189.md) for guidance on this issue."},"shortDescription":{"text":"These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'."},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS154189.md","properties":{"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"defaultConfiguration":{"level":"warning"}},{"id":"DS108330","name":"BannedCFunctionDetectedStrncat","fullDescription":{"text":"Banned C function detected (strncat): strncat adds the null terminator at character 'n + 1', rather than at the nth character. this frequently leads to the null terminator being added in the memory adjacent to the destination buffer, rather than in the destination buffer."},"help":{"text":"Use strcat_s or strlcat if possible. ","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS108330.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS108330.md) for guidance on this issue."},"shortDescription":{"text":"strncat adds the null terminator at character 'n + 1', rather than at the nth character. this frequently leads to the null terminator being added in the memory adjacent to the destination buffer, rather than in the destination buffer."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS108330.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS141863","name":"BannedCFunctionDetectedStrcat","fullDescription":{"text":"Banned C function detected (strcat): If the combination of strings is larger than the destination buffer, strcat will cbuffer overflow the destination buffer"},"help":{"text":"Use strcat_s or strlcat if possible. strncat's size parameter excludes the null terminator, which leads to frequent mistakes","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS141863.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS141863.md) for guidance on this issue."},"shortDescription":{"text":"If the combination of strings is larger than the destination buffer, strcat will cbuffer overflow the destination buffer"},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS141863.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS440011","name":"OpensslDoNotHardcodeSsltlsVersionsWithinAnApplication","fullDescription":{"text":"OpenSSL: Do not hardcode SSL/TLS versions within an application.: SSL/TLS version usage should be based on an OS or external configuration."},"help":{"text":"SSL/TLS version usage should be based on an OS or external configuration.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS440000.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS440000.md) for guidance on this issue."},"shortDescription":{"text":"SSL/TLS version usage should be based on an OS or external configuration."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS440000.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS185832","name":"BannedCFunctionDetectedStrcpy","fullDescription":{"text":"Banned C function detected (strcpy): strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"help":{"text":"Use strcpy_s or strlcpy if possible. If no safe function is viable, strcpy/strncpy should be proceeded by conditional checks to verify that the source string will fit in the destination with a null termnator.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS185832.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS185832.md) for guidance on this issue."},"shortDescription":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS185832.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS189424","name":"ReviewEvalForUntrustedData","fullDescription":{"text":"Review eval for untrusted data: If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an eval statement it can allow an attacker to inject their own code."},"help":{"text":"Edit the eval so that no untrusted data is included. If untrusted data is absolutely necessary a great deal of care should be taken to ensure it is properly escaped so that it cannot be executed. This is not as simple as just escaping quotes.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md) for guidance on this issue."},"shortDescription":{"text":"If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an eval statement it can allow an attacker to inject their own code."},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS173237","name":"DoNotStoreTokensOrKeysInSourceCode","fullDescription":{"text":"Do not store tokens or keys in source code.: A token or key was found in source code. If this represents a secret, it should be moved somewhere else."},"help":{"text":"A token or key was found in source code. If this represents a secret, it should be moved somewhere else.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS173237.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS173237.md) for guidance on this issue."},"shortDescription":{"text":"A token or key was found in source code. If this represents a secret, it should be moved somewhere else."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS173237.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS140021","name":"ProblematicCFunctionDetectedStrlen","fullDescription":{"text":"Problematic C function detected (strlen): If a string is missing a null terminator, strlen will read past the end of the buffer"},"help":{"text":"In instances where you know the maximum size of a string's buffer, use strlen_s or strnlen to prevent over-reading","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS140021.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS140021.md) for guidance on this issue."},"shortDescription":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS140021.md","properties":{"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"id":"DS126858","name":"WeakbrokenHashAlgorithm","fullDescription":{"text":"Weak/Broken Hash Algorithm: A weak or broken hash algorithm was detected."},"help":{"text":"Consider switching to use SHA-256 or SHA-512 instead.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS126858.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS126858.md) for guidance on this issue."},"shortDescription":{"text":"A weak or broken hash algorithm was detected."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS126858.md","properties":{"DevSkimSeverity":"Critical","DevSkimConfidence":"Unspecified"}},{"id":"DS137138","name":"InsecureUrl","fullDescription":{"text":"Insecure URL: An HTTP-based URL without TLS was detected."},"help":{"text":"Update to an HTTPS-based URL if possible.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS137138.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS137138.md) for guidance on this issue."},"shortDescription":{"text":"An HTTP-based URL without TLS was detected."},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS137138.md","properties":{"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"defaultConfiguration":{"level":"warning"}},{"id":"DS148264","name":"DoNotUseWeaknoncryptographicRandomNumberGenerators","fullDescription":{"text":"Do not use weak/non-cryptographic random number generators: Use cryptographic random numbers generators for anything even close to a security function."},"help":{"text":"Replacements depend on language.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS148264.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS148264.md) for guidance on this issue."},"shortDescription":{"text":"Use cryptographic random numbers generators for anything even close to a security function."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS148264.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS162092","name":"DoNotLeaveDebugCodeInProduction","fullDescription":{"text":"Do not leave debug code in production: Accessing localhost could indicate debug code, or could hinder scaling."},"help":{"text":"Accessing localhost could indicate debug code, or could hinder scaling.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS162092.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS162092.md) for guidance on this issue."},"shortDescription":{"text":"Accessing localhost could indicate debug code, or could hinder scaling."},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS162092.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS440100","name":"GenericHardcodedEllipticCurve","fullDescription":{"text":"Generic: Hard-coded Elliptic Curve: Generic: Hard-coded Elliptic Curve"},"help":{"text":"Review to ensure that a TLS protocol agility is maintained.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS440001.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS440001.md) for guidance on this issue."},"shortDescription":{"text":"Generic: Hard-coded Elliptic Curve"},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS440001.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}}]}},"versionControlProvenance":[{"repositoryUri":"https://github.com/kovidgoyal/kitty","revisionId":"c455fea72919aab26a2e82d8ea0e4353ab74c59c","branch":"(no branch)"}],"results":[{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\conf\\types.py"},"region":{"startLine":83,"startColumn":60,"endLine":83,"endColumn":71,"charOffset":2483,"charLength":11,"snippet":{"text":"http://')):","rendered":{"text":"http://')):","markdown":"`http://')):`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\conf\\types.py"},"replacements":[{"deletedRegion":{"charOffset":2483,"charLength":11},"insertedContent":{"text":"https://')):"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\unicode_names.c"},"region":{"startLine":75,"startColumn":37,"endLine":75,"endColumn":49,"charOffset":2500,"charLength":12,"snippet":{"text":"strlen(word)","rendered":{"text":"strlen(word)","markdown":"`strlen(word)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\unicode_input\\unicode_names.c"},"replacements":[{"deletedRegion":{"charOffset":2500,"charLength":12},"insertedContent":{"text":"strlen_s(word, <size of word>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\unicode_input\\unicode_names.c"},"replacements":[{"deletedRegion":{"charOffset":2500,"charLength":12},"insertedContent":{"text":"strnlen(word, <size of word>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":38086,"startColumn":929456,"endLine":38086,"endColumn":929461,"charOffset":2998967,"charLength":5,"snippet":{"text":"32969","rendered":{"text":"32969","markdown":"`32969`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":38086,"startColumn":801318,"endLine":38086,"endColumn":801323,"charOffset":2870829,"charLength":5,"snippet":{"text":"32969","rendered":{"text":"32969","markdown":"`32969`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":38086,"startColumn":788593,"endLine":38086,"endColumn":788598,"charOffset":2858104,"charLength":5,"snippet":{"text":"18273","rendered":{"text":"18273","markdown":"`18273`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":38086,"startColumn":308538,"endLine":38086,"endColumn":308543,"charOffset":2378049,"charLength":5,"snippet":{"text":"32969","rendered":{"text":"32969","markdown":"`32969`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":38086,"startColumn":273908,"endLine":38086,"endColumn":273913,"charOffset":2343419,"charLength":5,"snippet":{"text":"32969","rendered":{"text":"32969","markdown":"`32969`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":38086,"startColumn":150863,"endLine":38086,"endColumn":150868,"charOffset":2220374,"charLength":5,"snippet":{"text":"18273","rendered":{"text":"18273","markdown":"`18273`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":38086,"startColumn":144504,"endLine":38086,"endColumn":144509,"charOffset":2214015,"charLength":5,"snippet":{"text":"18273","rendered":{"text":"18273","markdown":"`18273`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":38086,"startColumn":9309,"endLine":38086,"endColumn":9314,"charOffset":2078820,"charLength":5,"snippet":{"text":"32969","rendered":{"text":"32969","markdown":"`32969`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5647,"startColumn":19,"endLine":5647,"endColumn":23,"charOffset":174677,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5646,"startColumn":19,"endLine":5646,"endColumn":23,"charOffset":174638,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5593,"startColumn":19,"endLine":5593,"endColumn":23,"charOffset":172863,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5592,"startColumn":19,"endLine":5592,"endColumn":23,"charOffset":172832,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5591,"startColumn":19,"endLine":5591,"endColumn":23,"charOffset":172801,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5590,"startColumn":19,"endLine":5590,"endColumn":23,"charOffset":172770,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5589,"startColumn":19,"endLine":5589,"endColumn":23,"charOffset":172739,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5588,"startColumn":19,"endLine":5588,"endColumn":23,"charOffset":172709,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5587,"startColumn":19,"endLine":5587,"endColumn":23,"charOffset":172679,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5586,"startColumn":19,"endLine":5586,"endColumn":23,"charOffset":172649,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5585,"startColumn":19,"endLine":5585,"endColumn":23,"charOffset":172618,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5584,"startColumn":19,"endLine":5584,"endColumn":23,"charOffset":172588,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5583,"startColumn":19,"endLine":5583,"endColumn":23,"charOffset":172557,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5582,"startColumn":19,"endLine":5582,"endColumn":23,"charOffset":172527,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5581,"startColumn":19,"endLine":5581,"endColumn":23,"charOffset":172497,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5580,"startColumn":19,"endLine":5580,"endColumn":23,"charOffset":172467,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5579,"startColumn":19,"endLine":5579,"endColumn":23,"charOffset":172437,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5578,"startColumn":19,"endLine":5578,"endColumn":23,"charOffset":172407,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5577,"startColumn":19,"endLine":5577,"endColumn":23,"charOffset":172377,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5576,"startColumn":19,"endLine":5576,"endColumn":23,"charOffset":172347,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5575,"startColumn":19,"endLine":5575,"endColumn":23,"charOffset":172316,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5574,"startColumn":19,"endLine":5574,"endColumn":23,"charOffset":172286,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5573,"startColumn":19,"endLine":5573,"endColumn":23,"charOffset":172256,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5572,"startColumn":19,"endLine":5572,"endColumn":23,"charOffset":172227,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5571,"startColumn":19,"endLine":5571,"endColumn":23,"charOffset":172198,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5570,"startColumn":19,"endLine":5570,"endColumn":23,"charOffset":172169,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5569,"startColumn":19,"endLine":5569,"endColumn":23,"charOffset":172140,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5568,"startColumn":19,"endLine":5568,"endColumn":23,"charOffset":172097,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\unicode_input\\names.h"},"region":{"startLine":5513,"startColumn":12,"endLine":5513,"endColumn":16,"charOffset":170585,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\state.c"},"region":{"startLine":393,"startColumn":16,"endLine":393,"endColumn":70,"charOffset":14115,"charLength":54,"snippet":{"text":"memcpy(w, detached_windows.windows + i, sizeof(Window)","rendered":{"text":"memcpy(w, detached_windows.windows + i, sizeof(Window)","markdown":"`memcpy(w, detached_windows.windows + i, sizeof(Window)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\state.c"},"replacements":[{"deletedRegion":{"charOffset":14115,"charLength":54},"insertedContent":{"text":"memcpy_s(w, <size of w>,  detached_windows.windows + i,  sizeof(Window)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\state.c"},"region":{"startLine":356,"startColumn":4,"endLine":356,"endColumn":87,"charOffset":12645,"charLength":83,"snippet":{"text":"memcpy(detached_windows.windows + detached_windows.num_windows++, w, sizeof(Window)","rendered":{"text":"memcpy(detached_windows.windows + detached_windows.num_windows++, w, sizeof(Window)","markdown":"`memcpy(detached_windows.windows + detached_windows.num_windows++, w, sizeof(Window)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\state.c"},"replacements":[{"deletedRegion":{"charOffset":12645,"charLength":83},"insertedContent":{"text":"memcpy_s(detached_windows.windows + detached_windows.num_windows++, <size of detached_windows.windows + detached_windows.num_windows++>,  w,  sizeof(Window)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl.c"},"region":{"startLine":62,"startColumn":42,"endLine":62,"endColumn":48,"charOffset":2437,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":6099,"startColumn":30,"endLine":6099,"endColumn":49,"charOffset":407777,"charLength":19,"snippet":{"text":"strlen(prefixes[i])","rendered":{"text":"strlen(prefixes[i])","markdown":"`strlen(prefixes[i])`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":407777,"charLength":19},"insertedContent":{"text":"strlen_s(prefixes[i], <size of prefixes[i]>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":407777,"charLength":19},"insertedContent":{"text":"strnlen(prefixes[i], <size of prefixes[i]>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":6053,"startColumn":31,"endLine":6053,"endColumn":42,"charOffset":405894,"charLength":11,"snippet":{"text":"strlen(ext)","rendered":{"text":"strlen(ext)","markdown":"`strlen(ext)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":405894,"charLength":11},"insertedContent":{"text":"strlen_s(ext, <size of ext>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":405894,"charLength":11},"insertedContent":{"text":"strnlen(ext, <size of ext>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":6019,"startColumn":16,"endLine":6019,"endColumn":64,"charOffset":404792,"charLength":48,"snippet":{"text":"memcpy(local_str, gl_str_tmp, len * sizeof(char)","rendered":{"text":"memcpy(local_str, gl_str_tmp, len * sizeof(char)","markdown":"`memcpy(local_str, gl_str_tmp, len * sizeof(char)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":404792,"charLength":48},"insertedContent":{"text":"memcpy_s(local_str, <size of local_str>,  gl_str_tmp,  len * sizeof(char)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":6017,"startColumn":38,"endLine":6017,"endColumn":63,"charOffset":404710,"charLength":25,"snippet":{"text":"malloc(len * sizeof(char)","rendered":{"text":"malloc(len * sizeof(char)","markdown":"`malloc(len * sizeof(char)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":404710,"charLength":25},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":6016,"startColumn":25,"endLine":6016,"endColumn":43,"charOffset":404647,"charLength":18,"snippet":{"text":"strlen(gl_str_tmp)","rendered":{"text":"strlen(gl_str_tmp)","markdown":"`strlen(gl_str_tmp)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":404647,"charLength":18},"insertedContent":{"text":"strlen_s(gl_str_tmp, <size of gl_str_tmp>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":404647,"charLength":18},"insertedContent":{"text":"strnlen(gl_str_tmp, <size of gl_str_tmp>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":6009,"startColumn":31,"endLine":6009,"endColumn":67,"charOffset":404358,"charLength":36,"snippet":{"text":"malloc(num_exts_i * (sizeof *exts_i)","rendered":{"text":"malloc(num_exts_i * (sizeof *exts_i)","markdown":"`malloc(num_exts_i * (sizeof *exts_i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"replacements":[{"deletedRegion":{"charOffset":404358,"charLength":36},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":2903,"startColumn":8,"endLine":2903,"endColumn":15,"charOffset":161423,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":2891,"startColumn":8,"endLine":2891,"endColumn":15,"charOffset":161028,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":2887,"startColumn":8,"endLine":2887,"endColumn":15,"charOffset":160907,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\gl-wrapper.h"},"region":{"startLine":2864,"startColumn":30,"endLine":2864,"endColumn":36,"charOffset":160172,"charLength":6,"snippet":{"text":"sscanf","rendered":{"text":"sscanf","markdown":"`sscanf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\shaders.c"},"region":{"startLine":973,"startColumn":37,"endLine":973,"endColumn":78,"charOffset":50266,"charLength":41,"snippet":{"text":"memcpy(borders_buf_address, rect_buf, sz)","rendered":{"text":"memcpy(borders_buf_address, rect_buf, sz)","markdown":"`memcpy(borders_buf_address, rect_buf, sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\shaders.c"},"replacements":[{"deletedRegion":{"charOffset":50266,"charLength":41},"insertedContent":{"text":"memcpy_s(borders_buf_address, <size of borders_buf_address>,  rect_buf,  sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\shaders.c"},"region":{"startLine":566,"startColumn":37,"endLine":566,"endColumn":52,"charOffset":28203,"charLength":15,"snippet":{"text":"malloc((size_t)","rendered":{"text":"malloc((size_t)","markdown":"`malloc((size_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\shaders.c"},"replacements":[{"deletedRegion":{"charOffset":28203,"charLength":15},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\shaders.c"},"region":{"startLine":266,"startColumn":54,"endLine":266,"endColumn":120,"charOffset":12033,"charLength":66,"snippet":{"text":"memcpy(a, render_data[i].vertices, sizeof(render_data[0].vertices)","rendered":{"text":"memcpy(a, render_data[i].vertices, sizeof(render_data[0].vertices)","markdown":"`memcpy(a, render_data[i].vertices, sizeof(render_data[0].vertices)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\shaders.c"},"replacements":[{"deletedRegion":{"charOffset":12033,"charLength":66},"insertedContent":{"text":"memcpy_s(a, <size of a>,  render_data[i].vertices,  sizeof(render_data[0].vertices)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\shaders.c"},"region":{"startLine":74,"startColumn":21,"endLine":74,"endColumn":46,"charOffset":3121,"charLength":25,"snippet":{"text":"malloc(sz * sizeof(pixel)","rendered":{"text":"malloc(sz * sizeof(pixel)","markdown":"`malloc(sz * sizeof(pixel)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\shaders.c"},"replacements":[{"deletedRegion":{"charOffset":3121,"charLength":25},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\options\\to-c.h"},"region":{"startLine":96,"startColumn":20,"endLine":96,"endColumn":45,"charOffset":2653,"charLength":25,"snippet":{"text":"memcpy(opts->name, s, sz)","rendered":{"text":"memcpy(opts->name, s, sz)","markdown":"`memcpy(opts->name, s, sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\options\\to-c.h"},"replacements":[{"deletedRegion":{"charOffset":2653,"charLength":25},"insertedContent":{"text":"memcpy_s(opts->name, <size of opts->name>,  s,  sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":213,"startColumn":8,"endLine":213,"endColumn":15,"charOffset":7125,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":211,"startColumn":8,"endLine":211,"endColumn":16,"charOffset":7065,"charLength":8,"snippet":{"text":"vfprintf","rendered":{"text":"vfprintf","markdown":"`vfprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":209,"startColumn":8,"endLine":209,"endColumn":15,"charOffset":6957,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":197,"startColumn":4,"endLine":197,"endColumn":43,"charOffset":6731,"charLength":39,"snippet":{"text":"strcpy(error->description, description)","rendered":{"text":"strcpy(error->description, description)","markdown":"`strcpy(error->description, description)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":6731,"charLength":39},"insertedContent":{"text":"strcpy_s(error->description, <size of error->description>,  description)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":6731,"charLength":39},"insertedContent":{"text":"strlcpy(error->description,  description, <size of error->description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":177,"startColumn":12,"endLine":177,"endColumn":60,"charOffset":6136,"charLength":48,"snippet":{"text":"strcpy(description, \"ERROR: UNKNOWN GLFW ERROR\")","rendered":{"text":"strcpy(description, \"ERROR: UNKNOWN GLFW ERROR\")","markdown":"`strcpy(description, \"ERROR: UNKNOWN GLFW ERROR\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":6136,"charLength":48},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"ERROR: UNKNOWN GLFW ERROR\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":6136,"charLength":48},"insertedContent":{"text":"strlcpy(description,  \"ERROR: UNKNOWN GLFW ERROR\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":175,"startColumn":12,"endLine":175,"endColumn":103,"charOffset":6016,"charLength":91,"snippet":{"text":"strcpy(description, \"The requested feature has not yet been implemented for this platform\")","rendered":{"text":"strcpy(description, \"The requested feature has not yet been implemented for this platform\")","markdown":"`strcpy(description, \"The requested feature has not yet been implemented for this platform\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":6016,"charLength":91},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"The requested feature has not yet been implemented for this platform\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":6016,"charLength":91},"insertedContent":{"text":"strlcpy(description,  \"The requested feature has not yet been implemented for this platform\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":173,"startColumn":12,"endLine":173,"endColumn":96,"charOffset":5863,"charLength":84,"snippet":{"text":"strcpy(description, \"The requested feature cannot be implemented for this platform\")","rendered":{"text":"strcpy(description, \"The requested feature cannot be implemented for this platform\")","markdown":"`strcpy(description, \"The requested feature cannot be implemented for this platform\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5863,"charLength":84},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"The requested feature cannot be implemented for this platform\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5863,"charLength":84},"insertedContent":{"text":"strlcpy(description,  \"The requested feature cannot be implemented for this platform\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":171,"startColumn":12,"endLine":171,"endColumn":70,"charOffset":5738,"charLength":58,"snippet":{"text":"strcpy(description, \"The specified window has no context\")","rendered":{"text":"strcpy(description, \"The specified window has no context\")","markdown":"`strcpy(description, \"The specified window has no context\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5738,"charLength":58},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"The specified window has no context\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5738,"charLength":58},"insertedContent":{"text":"strlcpy(description,  \"The specified window has no context\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":169,"startColumn":12,"endLine":169,"endColumn":70,"charOffset":5615,"charLength":58,"snippet":{"text":"strcpy(description, \"The requested format is unavailable\")","rendered":{"text":"strcpy(description, \"The requested format is unavailable\")","markdown":"`strcpy(description, \"The requested format is unavailable\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5615,"charLength":58},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"The requested format is unavailable\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5615,"charLength":58},"insertedContent":{"text":"strlcpy(description,  \"The requested format is unavailable\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":167,"startColumn":12,"endLine":167,"endColumn":69,"charOffset":5492,"charLength":57,"snippet":{"text":"strcpy(description, \"A platform-specific error occurred\")","rendered":{"text":"strcpy(description, \"A platform-specific error occurred\")","markdown":"`strcpy(description, \"A platform-specific error occurred\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5492,"charLength":57},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"A platform-specific error occurred\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5492,"charLength":57},"insertedContent":{"text":"strlcpy(description,  \"A platform-specific error occurred\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":165,"startColumn":12,"endLine":165,"endColumn":75,"charOffset":5367,"charLength":63,"snippet":{"text":"strcpy(description, \"The requested API version is unavailable\")","rendered":{"text":"strcpy(description, \"The requested API version is unavailable\")","markdown":"`strcpy(description, \"The requested API version is unavailable\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5367,"charLength":63},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"The requested API version is unavailable\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5367,"charLength":63},"insertedContent":{"text":"strlcpy(description,  \"The requested API version is unavailable\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":163,"startColumn":12,"endLine":163,"endColumn":67,"charOffset":5245,"charLength":55,"snippet":{"text":"strcpy(description, \"The requested API is unavailable\")","rendered":{"text":"strcpy(description, \"The requested API is unavailable\")","markdown":"`strcpy(description, \"The requested API is unavailable\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5245,"charLength":55},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"The requested API is unavailable\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5245,"charLength":55},"insertedContent":{"text":"strlcpy(description,  \"The requested API is unavailable\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":161,"startColumn":12,"endLine":161,"endColumn":48,"charOffset":5146,"charLength":36,"snippet":{"text":"strcpy(description, \"Out of memory\")","rendered":{"text":"strcpy(description, \"Out of memory\")","markdown":"`strcpy(description, \"Out of memory\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5146,"charLength":36},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"Out of memory\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5146,"charLength":36},"insertedContent":{"text":"strlcpy(description,  \"Out of memory\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":159,"startColumn":12,"endLine":159,"endColumn":62,"charOffset":5035,"charLength":50,"snippet":{"text":"strcpy(description, \"Invalid value for parameter\")","rendered":{"text":"strcpy(description, \"Invalid value for parameter\")","markdown":"`strcpy(description, \"Invalid value for parameter\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5035,"charLength":50},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"Invalid value for parameter\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":5035,"charLength":50},"insertedContent":{"text":"strlcpy(description,  \"Invalid value for parameter\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":157,"startColumn":12,"endLine":157,"endColumn":70,"charOffset":4916,"charLength":58,"snippet":{"text":"strcpy(description, \"Invalid argument for enum parameter\")","rendered":{"text":"strcpy(description, \"Invalid argument for enum parameter\")","markdown":"`strcpy(description, \"Invalid argument for enum parameter\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":4916,"charLength":58},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"Invalid argument for enum parameter\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":4916,"charLength":58},"insertedContent":{"text":"strlcpy(description,  \"Invalid argument for enum parameter\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":155,"startColumn":12,"endLine":155,"endColumn":62,"charOffset":4806,"charLength":50,"snippet":{"text":"strcpy(description, \"There is no current context\")","rendered":{"text":"strcpy(description, \"There is no current context\")","markdown":"`strcpy(description, \"There is no current context\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":4806,"charLength":50},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"There is no current context\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":4806,"charLength":50},"insertedContent":{"text":"strlcpy(description,  \"There is no current context\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":153,"startColumn":12,"endLine":153,"endColumn":70,"charOffset":4682,"charLength":58,"snippet":{"text":"strcpy(description, \"The GLFW library is not initialized\")","rendered":{"text":"strcpy(description, \"The GLFW library is not initialized\")","markdown":"`strcpy(description, \"The GLFW library is not initialized\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":4682,"charLength":58},"insertedContent":{"text":"strcpy_s(description, <size of description>,  \"The GLFW library is not initialized\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":4682,"charLength":58},"insertedContent":{"text":"strlcpy(description,  \"The GLFW library is not initialized\", <size of description>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":145,"startColumn":8,"endLine":145,"endColumn":17,"charOffset":4468,"charLength":9,"snippet":{"text":"vsnprintf","rendered":{"text":"vsnprintf","markdown":"`vsnprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":123,"startColumn":4,"endLine":123,"endColumn":34,"charOffset":3897,"charLength":30,"snippet":{"text":"memcpy(result, source, length)","rendered":{"text":"memcpy(result, source, length)","markdown":"`memcpy(result, source, length)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":3897,"charLength":30},"insertedContent":{"text":"memcpy_s(result, <size of result>,  source,  length)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":122,"startColumn":19,"endLine":122,"endColumn":37,"charOffset":3872,"charLength":18,"snippet":{"text":"malloc(length + 1)","rendered":{"text":"malloc(length + 1)","markdown":"`malloc(length + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":3872,"charLength":18},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\init.c"},"region":{"startLine":121,"startColumn":26,"endLine":121,"endColumn":40,"charOffset":3836,"charLength":14,"snippet":{"text":"strlen(source)","rendered":{"text":"strlen(source)","markdown":"`strlen(source)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":3836,"charLength":14},"insertedContent":{"text":"strlen_s(source, <size of source>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\init.c"},"replacements":[{"deletedRegion":{"charOffset":3836,"charLength":14},"insertedContent":{"text":"strnlen(source, <size of source>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\freetype_render_ui_text.c"},"region":{"startLine":487,"startColumn":8,"endLine":487,"endColumn":48,"charOffset":20035,"charLength":40,"snippet":{"text":"memcpy(dest_row, src_row, *result_width)","rendered":{"text":"memcpy(dest_row, src_row, *result_width)","markdown":"`memcpy(dest_row, src_row, *result_width)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\freetype_render_ui_text.c"},"replacements":[{"deletedRegion":{"charOffset":20035,"charLength":40},"insertedContent":{"text":"memcpy_s(dest_row, <size of dest_row>,  src_row,  *result_width)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\freetype_render_ui_text.c"},"region":{"startLine":482,"startColumn":24,"endLine":482,"endColumn":62,"charOffset":19771,"charLength":38,"snippet":{"text":"malloc(*result_width * *result_height)","rendered":{"text":"malloc(*result_width * *result_height)","markdown":"`malloc(*result_width * *result_height)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\freetype_render_ui_text.c"},"replacements":[{"deletedRegion":{"charOffset":19771,"charLength":38},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\freetype_render_ui_text.c"},"region":{"startLine":444,"startColumn":22,"endLine":444,"endColumn":34,"charOffset":18163,"charLength":12,"snippet":{"text":"strlen(text)","rendered":{"text":"strlen(text)","markdown":"`strlen(text)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\freetype_render_ui_text.c"},"replacements":[{"deletedRegion":{"charOffset":18163,"charLength":12},"insertedContent":{"text":"strlen_s(text, <size of text>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\freetype_render_ui_text.c"},"replacements":[{"deletedRegion":{"charOffset":18163,"charLength":12},"insertedContent":{"text":"strnlen(text, <size of text>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":507,"startColumn":26,"endLine":507,"endColumn":100,"charOffset":18043,"charLength":74,"snippet":{"text":"strncpy(ev->__embedded_text, ev->glfw_ev.text, sizeof(ev->__embedded_text)","rendered":{"text":"strncpy(ev->__embedded_text, ev->glfw_ev.text, sizeof(ev->__embedded_text)","markdown":"`strncpy(ev->__embedded_text, ev->glfw_ev.text, sizeof(ev->__embedded_text)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":18043,"charLength":74},"insertedContent":{"text":"strcpy_s(ev->__embedded_text,  sizeof(ev->__embedded_text,  ev->glfw_ev.text)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":18043,"charLength":74},"insertedContent":{"text":"strlcpy(ev->__embedded_text,  ev->glfw_ev.text,  sizeof(ev->__embedded_text)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":505,"startColumn":4,"endLine":505,"endColumn":45,"charOffset":17890,"charLength":41,"snippet":{"text":"memcpy(ev, ev_, sizeof(_GLFWIBUSKeyEvent)","rendered":{"text":"memcpy(ev, ev_, sizeof(_GLFWIBUSKeyEvent)","markdown":"`memcpy(ev, ev_, sizeof(_GLFWIBUSKeyEvent)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":17890,"charLength":41},"insertedContent":{"text":"memcpy_s(ev, <size of ev>,  ev_,  sizeof(_GLFWIBUSKeyEvent)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":353,"startColumn":125,"endLine":353,"endColumn":133,"charOffset":11851,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":344,"startColumn":24,"endLine":344,"endColumn":35,"charOffset":11474,"charLength":11,"snippet":{"text":"strlen(buf)","rendered":{"text":"strlen(buf)","markdown":"`strlen(buf)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":11474,"charLength":11},"insertedContent":{"text":"strlen_s(buf, <size of buf>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":11474,"charLength":11},"insertedContent":{"text":"strnlen(buf, <size of buf>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":337,"startColumn":125,"endLine":337,"endColumn":133,"charOffset":11195,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":335,"startColumn":22,"endLine":335,"endColumn":27,"charOffset":11009,"charLength":5,"snippet":{"text":"fopen","rendered":{"text":"fopen","markdown":"`fopen`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":315,"startColumn":19,"endLine":315,"endColumn":25,"charOffset":10361,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":311,"startColumn":27,"endLine":311,"endColumn":33,"charOffset":10202,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":293,"startColumn":21,"endLine":293,"endColumn":27,"charOffset":9614,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":289,"startColumn":35,"endLine":289,"endColumn":47,"charOffset":9533,"charLength":12,"snippet":{"text":"strlen(addr)","rendered":{"text":"strlen(addr)","markdown":"`strlen(addr)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":9533,"charLength":12},"insertedContent":{"text":"strlen_s(addr, <size of addr>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":9533,"charLength":12},"insertedContent":{"text":"strnlen(addr, <size of addr>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":289,"startColumn":8,"endLine":289,"endColumn":47,"charOffset":9506,"charLength":39,"snippet":{"text":"memcpy(ans, addr, GLFW_MIN(strlen(addr)","rendered":{"text":"memcpy(ans, addr, GLFW_MIN(strlen(addr)","markdown":"`memcpy(ans, addr, GLFW_MIN(strlen(addr)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":9506,"charLength":39},"insertedContent":{"text":"memcpy_s(ans, <size of ans>,  addr,  GLFW_MIN(strlen(addr)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":286,"startColumn":11,"endLine":286,"endColumn":17,"charOffset":9424,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":130,"startColumn":20,"endLine":130,"endColumn":26,"charOffset":4373,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\ibus_glfw.c"},"region":{"startLine":49,"startColumn":55,"endLine":49,"endColumn":61,"charOffset":1784,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":2176,"startColumn":4,"endLine":2176,"endColumn":69,"charOffset":84258,"charLength":65,"snippet":{"text":"memcpy(data + base, line->gpu_cells, line->xnum * sizeof(GPUCell)","rendered":{"text":"memcpy(data + base, line->gpu_cells, line->xnum * sizeof(GPUCell)","markdown":"`memcpy(data + base, line->gpu_cells, line->xnum * sizeof(GPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":84258,"charLength":65},"insertedContent":{"text":"memcpy_s(data + base, <size of data + base>,  line->gpu_cells,  line->xnum * sizeof(GPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":2037,"startColumn":8,"endLine":2037,"endColumn":15,"charOffset":78912,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":2035,"startColumn":8,"endLine":2035,"endColumn":15,"charOffset":78777,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":1120,"startColumn":31,"endLine":1120,"endColumn":38,"charOffset":45743,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":911,"startColumn":57,"endLine":911,"endColumn":71,"charOffset":37719,"charLength":14,"snippet":{"text":"strlen(suffix)","rendered":{"text":"strlen(suffix)","markdown":"`strlen(suffix)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":37719,"charLength":14},"insertedContent":{"text":"strlen_s(suffix, <size of suffix>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":37719,"charLength":14},"insertedContent":{"text":"strnlen(suffix, <size of suffix>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":901,"startColumn":42,"endLine":901,"endColumn":56,"charOffset":37216,"charLength":14,"snippet":{"text":"strlen(prefix)","rendered":{"text":"strlen(prefix)","markdown":"`strlen(prefix)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":37216,"charLength":14},"insertedContent":{"text":"strlen_s(prefix, <size of prefix>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":37216,"charLength":14},"insertedContent":{"text":"strnlen(prefix, <size of prefix>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":889,"startColumn":57,"endLine":889,"endColumn":71,"charOffset":36739,"charLength":14,"snippet":{"text":"strlen(suffix)","rendered":{"text":"strlen(suffix)","markdown":"`strlen(suffix)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":36739,"charLength":14},"insertedContent":{"text":"strlen_s(suffix, <size of suffix>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":36739,"charLength":14},"insertedContent":{"text":"strnlen(suffix, <size of suffix>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":888,"startColumn":40,"endLine":888,"endColumn":52,"charOffset":36666,"charLength":12,"snippet":{"text":"strlen(data)","rendered":{"text":"strlen(data)","markdown":"`strlen(data)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":36666,"charLength":12},"insertedContent":{"text":"strlen_s(data, <size of data>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":36666,"charLength":12},"insertedContent":{"text":"strnlen(data, <size of data>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":887,"startColumn":42,"endLine":887,"endColumn":56,"charOffset":36608,"charLength":14,"snippet":{"text":"strlen(prefix)","rendered":{"text":"strlen(prefix)","markdown":"`strlen(prefix)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":36608,"charLength":14},"insertedContent":{"text":"strlen_s(prefix, <size of prefix>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":36608,"charLength":14},"insertedContent":{"text":"strnlen(prefix, <size of prefix>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":883,"startColumn":96,"endLine":883,"endColumn":108,"charOffset":36492,"charLength":12,"snippet":{"text":"strlen(data)","rendered":{"text":"strlen(data)","markdown":"`strlen(data)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":36492,"charLength":12},"insertedContent":{"text":"strlen_s(data, <size of data>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":36492,"charLength":12},"insertedContent":{"text":"strnlen(data, <size of data>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":883,"startColumn":74,"endLine":883,"endColumn":88,"charOffset":36470,"charLength":14,"snippet":{"text":"strlen(prefix)","rendered":{"text":"strlen(prefix)","markdown":"`strlen(prefix)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":36470,"charLength":14},"insertedContent":{"text":"strlen_s(prefix, <size of prefix>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":36470,"charLength":14},"insertedContent":{"text":"strnlen(prefix, <size of prefix>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":881,"startColumn":118,"endLine":881,"endColumn":132,"charOffset":36360,"charLength":14,"snippet":{"text":"strlen(suffix)","rendered":{"text":"strlen(suffix)","markdown":"`strlen(suffix)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":36360,"charLength":14},"insertedContent":{"text":"strlen_s(suffix, <size of suffix>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":36360,"charLength":14},"insertedContent":{"text":"strnlen(suffix, <size of suffix>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":881,"startColumn":96,"endLine":881,"endColumn":108,"charOffset":36338,"charLength":12,"snippet":{"text":"strlen(data)","rendered":{"text":"strlen(data)","markdown":"`strlen(data)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":36338,"charLength":12},"insertedContent":{"text":"strlen_s(data, <size of data>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":36338,"charLength":12},"insertedContent":{"text":"strnlen(data, <size of data>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":881,"startColumn":74,"endLine":881,"endColumn":88,"charOffset":36316,"charLength":14,"snippet":{"text":"strlen(prefix)","rendered":{"text":"strlen(prefix)","markdown":"`strlen(prefix)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":36316,"charLength":14},"insertedContent":{"text":"strlen_s(prefix, <size of prefix>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\screen.c"},"replacements":[{"deletedRegion":{"charOffset":36316,"charLength":14},"insertedContent":{"text":"strnlen(prefix, <size of prefix>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":97,"startColumn":113,"endLine":97,"endColumn":121,"charOffset":3449,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\screen.c"},"region":{"startLine":93,"startColumn":112,"endLine":93,"endColumn":120,"charOffset":3205,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\freetype.c"},"region":{"startLine":689,"startColumn":17,"endLine":689,"endColumn":47,"charOffset":29597,"charLength":30,"snippet":{"text":"malloc(ans.width * ans.height)","rendered":{"text":"malloc(ans.width * ans.height)","markdown":"`malloc(ans.width * ans.height)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\freetype.c"},"replacements":[{"deletedRegion":{"charOffset":29597,"charLength":30},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\freetype.c"},"region":{"startLine":628,"startColumn":29,"endLine":628,"endColumn":35,"charOffset":26838,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\freetype.c"},"region":{"startLine":624,"startColumn":29,"endLine":624,"endColumn":35,"charOffset":26549,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\freetype.c"},"region":{"startLine":569,"startColumn":25,"endLine":569,"endColumn":31,"charOffset":23579,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\freetype.c"},"region":{"startLine":406,"startColumn":8,"endLine":406,"endColumn":65,"charOffset":15364,"charLength":57,"snippet":{"text":"memcpy(ans->buf, bitmap->buffer, ans->rows * ans->stride)","rendered":{"text":"memcpy(ans->buf, bitmap->buffer, ans->rows * ans->stride)","markdown":"`memcpy(ans->buf, bitmap->buffer, ans->rows * ans->stride)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\freetype.c"},"replacements":[{"deletedRegion":{"charOffset":15364,"charLength":57},"insertedContent":{"text":"memcpy_s(ans->buf, <size of ans->buf>,  bitmap->buffer,  ans->rows * ans->stride)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\freetype.c"},"region":{"startLine":134,"startColumn":50,"endLine":134,"endColumn":56,"charOffset":3977,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\glx_context.c"},"region":{"startLine":571,"startColumn":11,"endLine":571,"endColumn":15,"charOffset":20271,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\glx_context.c"},"region":{"startLine":100,"startColumn":7,"endLine":100,"endColumn":11,"charOffset":4463,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\screen.py"},"region":{"startLine":974,"startColumn":11,"endLine":974,"endColumn":27,"charOffset":34722,"charLength":16,"snippet":{"text":"http://moo.com',","rendered":{"text":"http://moo.com',","markdown":"`http://moo.com',`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\screen.py"},"replacements":[{"deletedRegion":{"charOffset":34722,"charLength":16},"insertedContent":{"text":"https://moo.com',"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\screen.py"},"region":{"startLine":973,"startColumn":15,"endLine":973,"endColumn":31,"charOffset":34678,"charLength":16,"snippet":{"text":"http://moo.com',","rendered":{"text":"http://moo.com',","markdown":"`http://moo.com',`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\screen.py"},"replacements":[{"deletedRegion":{"charOffset":34678,"charLength":16},"insertedContent":{"text":"https://moo.com',"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\screen.py"},"region":{"startLine":971,"startColumn":15,"endLine":971,"endColumn":30,"charOffset":34604,"charLength":15,"snippet":{"text":"http://moo.com'","rendered":{"text":"http://moo.com'","markdown":"`http://moo.com'`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\screen.py"},"replacements":[{"deletedRegion":{"charOffset":34604,"charLength":15},"insertedContent":{"text":"https://moo.com'"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\screen.py"},"region":{"startLine":969,"startColumn":15,"endLine":969,"endColumn":31,"charOffset":34518,"charLength":16,"snippet":{"text":"http://moo.com',","rendered":{"text":"http://moo.com',","markdown":"`http://moo.com',`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\screen.py"},"replacements":[{"deletedRegion":{"charOffset":34518,"charLength":16},"insertedContent":{"text":"https://moo.com',"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\screen.py"},"region":{"startLine":967,"startColumn":11,"endLine":967,"endColumn":25,"charOffset":34415,"charLength":14,"snippet":{"text":"http://moo.com","rendered":{"text":"http://moo.com","markdown":"`http://moo.com`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\screen.py"},"replacements":[{"deletedRegion":{"charOffset":34415,"charLength":14},"insertedContent":{"text":"https://moo.com"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\screen.py"},"region":{"startLine":966,"startColumn":11,"endLine":966,"endColumn":27,"charOffset":34386,"charLength":16,"snippet":{"text":"http://moo.com')","rendered":{"text":"http://moo.com')","markdown":"`http://moo.com')`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\screen.py"},"replacements":[{"deletedRegion":{"charOffset":34386,"charLength":16},"insertedContent":{"text":"https://moo.com')"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\tab_bar.py"},"region":{"startLine":229,"startColumn":16,"endLine":229,"endColumn":47,"charOffset":7269,"charLength":31,"snippet":{"text":"eval(compile_template(template)","rendered":{"text":"eval(compile_template(template)","markdown":"`eval(compile_template(template)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\rewrap.h"},"region":{"startLine":46,"startColumn":4,"endLine":46,"endColumn":84,"charOffset":1544,"charLength":80,"snippet":{"text":"memcpy(dest->gpu_cells + dest_at, src->gpu_cells + src_at, num * sizeof(GPUCell)","rendered":{"text":"memcpy(dest->gpu_cells + dest_at, src->gpu_cells + src_at, num * sizeof(GPUCell)","markdown":"`memcpy(dest->gpu_cells + dest_at, src->gpu_cells + src_at, num * sizeof(GPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\rewrap.h"},"replacements":[{"deletedRegion":{"charOffset":1544,"charLength":80},"insertedContent":{"text":"memcpy_s(dest->gpu_cells + dest_at, <size of dest->gpu_cells + dest_at>,  src->gpu_cells + src_at,  num * sizeof(GPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS126858","level":"error","message":{"text":"Weak/Broken Hash Algorithm"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\options\\definition.py"},"region":{"startLine":3781,"startColumn":32,"endLine":3781,"endColumn":36,"charOffset":114075,"charLength":4,"snippet":{"text":"SHA1","rendered":{"text":"SHA1","markdown":"`SHA1`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\options\\definition.py"},"replacements":[{"deletedRegion":{"charOffset":114075,"charLength":4},"insertedContent":{"text":"SHA256"}}]}]},{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\options\\definition.py"},"replacements":[{"deletedRegion":{"charOffset":114075,"charLength":4},"insertedContent":{"text":"SHA512"}}]}]}],"properties":{"tags":["Cryptography.BannedHashAlgorithm"],"DevSkimSeverity":"Critical","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\rewrap.h"},"region":{"startLine":45,"startColumn":4,"endLine":45,"endColumn":84,"charOffset":1456,"charLength":80,"snippet":{"text":"memcpy(dest->cpu_cells + dest_at, src->cpu_cells + src_at, num * sizeof(CPUCell)","rendered":{"text":"memcpy(dest->cpu_cells + dest_at, src->cpu_cells + src_at, num * sizeof(CPUCell)","markdown":"`memcpy(dest->cpu_cells + dest_at, src->cpu_cells + src_at, num * sizeof(CPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\rewrap.h"},"replacements":[{"deletedRegion":{"charOffset":1456,"charLength":80},"insertedContent":{"text":"memcpy_s(dest->cpu_cells + dest_at, <size of dest->cpu_cells + dest_at>,  src->cpu_cells + src_at,  num * sizeof(CPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.h"},"region":{"startLine":48,"startColumn":8,"endLine":48,"endColumn":15,"charOffset":2437,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":1174,"startColumn":91,"endLine":1174,"endColumn":146,"charOffset":51061,"charLength":55,"snippet":{"text":"malloc(sz * sizeof(global_glyph_render_scratch.what[0])","rendered":{"text":"malloc(sz * sizeof(global_glyph_render_scratch.what[0])","markdown":"`malloc(sz * sizeof(global_glyph_render_scratch.what[0])`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fonts.c"},"replacements":[{"deletedRegion":{"charOffset":51061,"charLength":55},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":1123,"startColumn":8,"endLine":1123,"endColumn":14,"charOffset":49030,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":1060,"startColumn":8,"endLine":1060,"endColumn":14,"charOffset":45641,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":663,"startColumn":94,"endLine":663,"endColumn":154,"charOffset":26879,"charLength":60,"snippet":{"text":"memcpy(dest, src, fg->cell_width * sizeof(fg->canvas.buf[0])","rendered":{"text":"memcpy(dest, src, fg->cell_width * sizeof(fg->canvas.buf[0])","markdown":"`memcpy(dest, src, fg->cell_width * sizeof(fg->canvas.buf[0])`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fonts.c"},"replacements":[{"deletedRegion":{"charOffset":26879,"charLength":60},"insertedContent":{"text":"memcpy_s(dest, <size of dest>,  src,  fg->cell_width * sizeof(fg->canvas.buf[0])"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":483,"startColumn":12,"endLine":483,"endColumn":18,"charOffset":19475,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":481,"startColumn":12,"endLine":481,"endColumn":18,"charOffset":19397,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":479,"startColumn":16,"endLine":479,"endColumn":22,"charOffset":19315,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":477,"startColumn":12,"endLine":477,"endColumn":18,"charOffset":19184,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":476,"startColumn":12,"endLine":476,"endColumn":18,"charOffset":19119,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":451,"startColumn":4,"endLine":451,"endColumn":10,"charOffset":17826,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":450,"startColumn":18,"endLine":450,"endColumn":24,"charOffset":17798,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":448,"startColumn":28,"endLine":448,"endColumn":34,"charOffset":17710,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":447,"startColumn":16,"endLine":447,"endColumn":22,"charOffset":17662,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":446,"startColumn":14,"endLine":446,"endColumn":20,"charOffset":17628,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":444,"startColumn":8,"endLine":444,"endColumn":14,"charOffset":17552,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":442,"startColumn":4,"endLine":442,"endColumn":10,"charOffset":17437,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":309,"startColumn":8,"endLine":309,"endColumn":110,"charOffset":11111,"charLength":102,"snippet":{"text":"memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[CALT_FEATURE], sizeof(hb_feature_t)","rendered":{"text":"memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[CALT_FEATURE], sizeof(hb_feature_t)","markdown":"`memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[CALT_FEATURE], sizeof(hb_feature_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fonts.c"},"replacements":[{"deletedRegion":{"charOffset":11111,"charLength":102},"insertedContent":{"text":"memcpy_s(f->ffs_hb_features + f->num_ffs_hb_features++, <size of f->ffs_hb_features + f->num_ffs_hb_features++>,  &hb_features[CALT_FEATURE],  sizeof(hb_feature_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":307,"startColumn":12,"endLine":307,"endColumn":114,"charOffset":10986,"charLength":102,"snippet":{"text":"memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[DLIG_FEATURE], sizeof(hb_feature_t)","rendered":{"text":"memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[DLIG_FEATURE], sizeof(hb_feature_t)","markdown":"`memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[DLIG_FEATURE], sizeof(hb_feature_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fonts.c"},"replacements":[{"deletedRegion":{"charOffset":10986,"charLength":102},"insertedContent":{"text":"memcpy_s(f->ffs_hb_features + f->num_ffs_hb_features++, <size of f->ffs_hb_features + f->num_ffs_hb_features++>,  &hb_features[DLIG_FEATURE],  sizeof(hb_feature_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":306,"startColumn":12,"endLine":306,"endColumn":114,"charOffset":10868,"charLength":102,"snippet":{"text":"memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[LIGA_FEATURE], sizeof(hb_feature_t)","rendered":{"text":"memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[LIGA_FEATURE], sizeof(hb_feature_t)","markdown":"`memcpy(f->ffs_hb_features + f->num_ffs_hb_features++, &hb_features[LIGA_FEATURE], sizeof(hb_feature_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fonts.c"},"replacements":[{"deletedRegion":{"charOffset":10868,"charLength":102},"insertedContent":{"text":"memcpy_s(f->ffs_hb_features + f->num_ffs_hb_features++, <size of f->ffs_hb_features + f->num_ffs_hb_features++>,  &hb_features[LIGA_FEATURE],  sizeof(hb_feature_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":298,"startColumn":16,"endLine":298,"endColumn":97,"charOffset":10533,"charLength":81,"snippet":{"text":"memcpy(f->ffs_hb_features + len, &hb_features[CALT_FEATURE], sizeof(hb_feature_t)","rendered":{"text":"memcpy(f->ffs_hb_features + len, &hb_features[CALT_FEATURE], sizeof(hb_feature_t)","markdown":"`memcpy(f->ffs_hb_features + len, &hb_features[CALT_FEATURE], sizeof(hb_feature_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fonts.c"},"replacements":[{"deletedRegion":{"charOffset":10533,"charLength":81},"insertedContent":{"text":"memcpy_s(f->ffs_hb_features + len, <size of f->ffs_hb_features + len>,  &hb_features[CALT_FEATURE],  sizeof(hb_feature_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":294,"startColumn":24,"endLine":294,"endColumn":102,"charOffset":10349,"charLength":78,"snippet":{"text":"memcpy(f->ffs_hb_features + i, PyBytes_AS_STRING(parsed), sizeof(hb_feature_t)","rendered":{"text":"memcpy(f->ffs_hb_features + i, PyBytes_AS_STRING(parsed), sizeof(hb_feature_t)","markdown":"`memcpy(f->ffs_hb_features + i, PyBytes_AS_STRING(parsed), sizeof(hb_feature_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fonts.c"},"replacements":[{"deletedRegion":{"charOffset":10349,"charLength":78},"insertedContent":{"text":"memcpy_s(f->ffs_hb_features + i, <size of f->ffs_hb_features + i>,  PyBytes_AS_STRING(parsed),  sizeof(hb_feature_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":168,"startColumn":12,"endLine":168,"endColumn":19,"charOffset":5461,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fonts.c"},"region":{"startLine":96,"startColumn":25,"endLine":96,"endColumn":57,"charOffset":3021,"charLength":32,"snippet":{"text":"malloc(sizeof(fg->canvas.buf[0])","rendered":{"text":"malloc(sizeof(fg->canvas.buf[0])","markdown":"`malloc(sizeof(fg->canvas.buf[0])`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fonts.c"},"replacements":[{"deletedRegion":{"charOffset":3021,"charLength":32},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\parser.py"},"region":{"startLine":240,"startColumn":96,"endLine":240,"endColumn":114,"charOffset":10826,"charLength":18,"snippet":{"text":"http://yay;.com'))","rendered":{"text":"http://yay;.com'))","markdown":"`http://yay;.com'))`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\parser.py"},"replacements":[{"deletedRegion":{"charOffset":10826,"charLength":18},"insertedContent":{"text":"https://yay;.com'))"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\parser.py"},"region":{"startLine":240,"startColumn":41,"endLine":240,"endColumn":62,"charOffset":10771,"charLength":21,"snippet":{"text":"http://yay;.com\\x07',","rendered":{"text":"http://yay;.com\\x07',","markdown":"`http://yay;.com\\x07',`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\parser.py"},"replacements":[{"deletedRegion":{"charOffset":10771,"charLength":21},"insertedContent":{"text":"https://yay;.com\\x07',"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":355,"startColumn":12,"endLine":355,"endColumn":19,"charOffset":13177,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":339,"startColumn":4,"endLine":339,"endColumn":89,"charOffset":12387,"charLength":85,"snippet":{"text":"memcpy(self->color_table, self->color_stack[i].color_table, sizeof(self->color_table)","rendered":{"text":"memcpy(self->color_table, self->color_stack[i].color_table, sizeof(self->color_table)","markdown":"`memcpy(self->color_table, self->color_stack[i].color_table, sizeof(self->color_table)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\colors.c"},"replacements":[{"deletedRegion":{"charOffset":12387,"charLength":85},"insertedContent":{"text":"memcpy_s(self->color_table, <size of self->color_table>,  self->color_stack[i].color_table,  sizeof(self->color_table)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":333,"startColumn":4,"endLine":333,"endColumn":102,"charOffset":12138,"charLength":98,"snippet":{"text":"memcpy(self->color_stack[i].color_table, self->color_table, sizeof(self->color_stack->color_table)","rendered":{"text":"memcpy(self->color_stack[i].color_table, self->color_table, sizeof(self->color_stack->color_table)","markdown":"`memcpy(self->color_stack[i].color_table, self->color_table, sizeof(self->color_stack->color_table)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\colors.c"},"replacements":[{"deletedRegion":{"charOffset":12138,"charLength":98},"insertedContent":{"text":"memcpy_s(self->color_stack[i].color_table, <size of self->color_stack[i].color_table>,  self->color_table,  sizeof(self->color_stack->color_table)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":275,"startColumn":4,"endLine":275,"endColumn":71,"charOffset":9911,"charLength":67,"snippet":{"text":"memcpy(self->color_table, self->orig_color_table, sizeof(FG_BG_256)","rendered":{"text":"memcpy(self->color_table, self->orig_color_table, sizeof(FG_BG_256)","markdown":"`memcpy(self->color_table, self->orig_color_table, sizeof(FG_BG_256)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\colors.c"},"replacements":[{"deletedRegion":{"charOffset":9911,"charLength":67},"insertedContent":{"text":"memcpy_s(self->color_table, <size of self->color_table>,  self->orig_color_table,  sizeof(FG_BG_256)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":109,"startColumn":4,"endLine":109,"endColumn":72,"charOffset":3361,"charLength":68,"snippet":{"text":"memcpy(&dest->overridden, &src->overridden, sizeof(dest->overridden)","rendered":{"text":"memcpy(&dest->overridden, &src->overridden, sizeof(dest->overridden)","markdown":"`memcpy(&dest->overridden, &src->overridden, sizeof(dest->overridden)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\colors.c"},"replacements":[{"deletedRegion":{"charOffset":3361,"charLength":68},"insertedContent":{"text":"memcpy_s(&dest->overridden, <size of &dest->overridden>,  &src->overridden,  sizeof(dest->overridden)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":108,"startColumn":4,"endLine":108,"endColumn":72,"charOffset":3285,"charLength":68,"snippet":{"text":"memcpy(&dest->configured, &src->configured, sizeof(dest->configured)","rendered":{"text":"memcpy(&dest->configured, &src->configured, sizeof(dest->configured)","markdown":"`memcpy(&dest->configured, &src->configured, sizeof(dest->configured)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\colors.c"},"replacements":[{"deletedRegion":{"charOffset":3285,"charLength":68},"insertedContent":{"text":"memcpy_s(&dest->configured, <size of &dest->configured>,  &src->configured,  sizeof(dest->configured)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":107,"startColumn":4,"endLine":107,"endColumn":83,"charOffset":3198,"charLength":79,"snippet":{"text":"memcpy(dest->orig_color_table, src->orig_color_table, sizeof(dest->color_table)","rendered":{"text":"memcpy(dest->orig_color_table, src->orig_color_table, sizeof(dest->color_table)","markdown":"`memcpy(dest->orig_color_table, src->orig_color_table, sizeof(dest->color_table)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\colors.c"},"replacements":[{"deletedRegion":{"charOffset":3198,"charLength":79},"insertedContent":{"text":"memcpy_s(dest->orig_color_table, <size of dest->orig_color_table>,  src->orig_color_table,  sizeof(dest->color_table)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":106,"startColumn":4,"endLine":106,"endColumn":73,"charOffset":3121,"charLength":69,"snippet":{"text":"memcpy(dest->color_table, src->color_table, sizeof(dest->color_table)","rendered":{"text":"memcpy(dest->color_table, src->color_table, sizeof(dest->color_table)","markdown":"`memcpy(dest->color_table, src->color_table, sizeof(dest->color_table)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\colors.c"},"replacements":[{"deletedRegion":{"charOffset":3121,"charLength":69},"insertedContent":{"text":"memcpy_s(dest->color_table, <size of dest->color_table>,  src->color_table,  sizeof(dest->color_table)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":70,"startColumn":8,"endLine":70,"endColumn":67,"charOffset":1943,"charLength":59,"snippet":{"text":"memcpy(self->orig_color_table, FG_BG_256, sizeof(FG_BG_256)","rendered":{"text":"memcpy(self->orig_color_table, FG_BG_256, sizeof(FG_BG_256)","markdown":"`memcpy(self->orig_color_table, FG_BG_256, sizeof(FG_BG_256)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\colors.c"},"replacements":[{"deletedRegion":{"charOffset":1943,"charLength":59},"insertedContent":{"text":"memcpy_s(self->orig_color_table, <size of self->orig_color_table>,  FG_BG_256,  sizeof(FG_BG_256)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\colors.c"},"region":{"startLine":69,"startColumn":8,"endLine":69,"endColumn":62,"charOffset":1877,"charLength":54,"snippet":{"text":"memcpy(self->color_table, FG_BG_256, sizeof(FG_BG_256)","rendered":{"text":"memcpy(self->color_table, FG_BG_256, sizeof(FG_BG_256)","markdown":"`memcpy(self->color_table, FG_BG_256, sizeof(FG_BG_256)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\colors.c"},"replacements":[{"deletedRegion":{"charOffset":1877,"charLength":54},"insertedContent":{"text":"memcpy_s(self->color_table, <size of self->color_table>,  FG_BG_256,  sizeof(FG_BG_256)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\png-reader.c"},"region":{"startLine":114,"startColumn":22,"endLine":114,"endColumn":58,"charOffset":4491,"charLength":36,"snippet":{"text":"malloc(d->height * sizeof(png_bytep)","rendered":{"text":"malloc(d->height * sizeof(png_bytep)","markdown":"`malloc(d->height * sizeof(png_bytep)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\png-reader.c"},"replacements":[{"deletedRegion":{"charOffset":4491,"charLength":36},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\png-reader.c"},"region":{"startLine":112,"startColumn":22,"endLine":112,"endColumn":40,"charOffset":4343,"charLength":18,"snippet":{"text":"malloc(d->sz + 16)","rendered":{"text":"malloc(d->sz + 16)","markdown":"`malloc(d->sz + 16)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\png-reader.c"},"replacements":[{"deletedRegion":{"charOffset":4343,"charLength":18},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\png-reader.c"},"region":{"startLine":22,"startColumn":8,"endLine":22,"endColumn":41,"charOffset":544,"charLength":33,"snippet":{"text":"memcpy(out, f->buf + f->cur, amt)","rendered":{"text":"memcpy(out, f->buf + f->cur, amt)","markdown":"`memcpy(out, f->buf + f->cur, amt)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\png-reader.c"},"replacements":[{"deletedRegion":{"charOffset":544,"charLength":33},"insertedContent":{"text":"memcpy_s(out, <size of out>,  f->buf + f->cur,  amt)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fontconfig.c"},"region":{"startLine":353,"startColumn":18,"endLine":353,"endColumn":32,"charOffset":13262,"charLength":14,"snippet":{"text":"strlen(family)","rendered":{"text":"strlen(family)","markdown":"`strlen(family)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fontconfig.c"},"replacements":[{"deletedRegion":{"charOffset":13262,"charLength":14},"insertedContent":{"text":"strlen_s(family, <size of family>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fontconfig.c"},"replacements":[{"deletedRegion":{"charOffset":13262,"charLength":14},"insertedContent":{"text":"strnlen(family, <size of family>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fontconfig.c"},"region":{"startLine":330,"startColumn":18,"endLine":330,"endColumn":32,"charOffset":12368,"charLength":14,"snippet":{"text":"strlen(family)","rendered":{"text":"strlen(family)","markdown":"`strlen(family)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fontconfig.c"},"replacements":[{"deletedRegion":{"charOffset":12368,"charLength":14},"insertedContent":{"text":"strlen_s(family, <size of family>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fontconfig.c"},"replacements":[{"deletedRegion":{"charOffset":12368,"charLength":14},"insertedContent":{"text":"strnlen(family, <size of family>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fontconfig.c"},"region":{"startLine":158,"startColumn":47,"endLine":158,"endColumn":67,"charOffset":6225,"charLength":20,"snippet":{"text":"strlen((const char*)","rendered":{"text":"strlen((const char*)","markdown":"`strlen((const char*)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fontconfig.c"},"replacements":[{"deletedRegion":{"charOffset":6225,"charLength":20},"insertedContent":{"text":"strlen_s((const char*, <size of (const char*>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fontconfig.c"},"replacements":[{"deletedRegion":{"charOffset":6225,"charLength":20},"insertedContent":{"text":"strnlen((const char*, <size of (const char*>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\parser.c"},"region":{"startLine":341,"startColumn":17,"endLine":341,"endColumn":33,"charOffset":11526,"charLength":16,"snippet":{"text":"malloc(size + 1)","rendered":{"text":"malloc(size + 1)","markdown":"`malloc(size + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\parser.c"},"replacements":[{"deletedRegion":{"charOffset":11526,"charLength":16},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\parser.c"},"region":{"startLine":325,"startColumn":21,"endLine":325,"endColumn":34,"charOffset":10866,"charLength":13,"snippet":{"text":"strlen(token)","rendered":{"text":"strlen(token)","markdown":"`strlen(token)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\parser.c"},"replacements":[{"deletedRegion":{"charOffset":10866,"charLength":13},"insertedContent":{"text":"strlen_s(token, <size of token>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\parser.c"},"replacements":[{"deletedRegion":{"charOffset":10866,"charLength":13},"insertedContent":{"text":"strnlen(token, <size of token>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\safe-wrappers.h"},"region":{"startLine":36,"startColumn":4,"endLine":36,"endColumn":10,"charOffset":764,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\cocoa_window.m"},"region":{"startLine":84,"startColumn":50,"endLine":84,"endColumn":57,"charOffset":2359,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\ringbuf.c"},"region":{"startLine":374,"startColumn":8,"endLine":374,"endColumn":39,"charOffset":9431,"charLength":31,"snippet":{"text":"memcpy(dst->head, src->tail, n)","rendered":{"text":"memcpy(dst->head, src->tail, n)","markdown":"`memcpy(dst->head, src->tail, n)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\ringbuf.c"},"replacements":[{"deletedRegion":{"charOffset":9431,"charLength":31},"insertedContent":{"text":"memcpy_s(dst->head, <size of dst->head>,  src->tail,  n)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\ringbuf.c"},"region":{"startLine":319,"startColumn":8,"endLine":319,"endColumn":41,"charOffset":7966,"charLength":33,"snippet":{"text":"memcpy(u8dst + nwritten, tail, n)","rendered":{"text":"memcpy(u8dst + nwritten, tail, n)","markdown":"`memcpy(u8dst + nwritten, tail, n)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\ringbuf.c"},"replacements":[{"deletedRegion":{"charOffset":7966,"charLength":33},"insertedContent":{"text":"memcpy_s(u8dst + nwritten, <size of u8dst + nwritten>,  tail,  n)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\ringbuf.c"},"region":{"startLine":281,"startColumn":8,"endLine":281,"endColumn":46,"charOffset":6928,"charLength":38,"snippet":{"text":"memcpy(u8dst + nwritten, src->tail, n)","rendered":{"text":"memcpy(u8dst + nwritten, src->tail, n)","markdown":"`memcpy(u8dst + nwritten, src->tail, n)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\ringbuf.c"},"replacements":[{"deletedRegion":{"charOffset":6928,"charLength":38},"insertedContent":{"text":"memcpy_s(u8dst + nwritten, <size of u8dst + nwritten>,  src->tail,  n)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\ringbuf.c"},"region":{"startLine":223,"startColumn":8,"endLine":223,"endColumn":43,"charOffset":5434,"charLength":35,"snippet":{"text":"memcpy(dst->head, u8src + nread, n)","rendered":{"text":"memcpy(dst->head, u8src + nread, n)","markdown":"`memcpy(dst->head, u8src + nread, n)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\ringbuf.c"},"replacements":[{"deletedRegion":{"charOffset":5434,"charLength":35},"insertedContent":{"text":"memcpy_s(dst->head, <size of dst->head>,  u8src + nread,  n)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\ringbuf.c"},"region":{"startLine":57,"startColumn":18,"endLine":57,"endColumn":34,"charOffset":1479,"charLength":16,"snippet":{"text":"malloc(rb->size)","rendered":{"text":"malloc(rb->size)","markdown":"`malloc(rb->size)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\ringbuf.c"},"replacements":[{"deletedRegion":{"charOffset":1479,"charLength":16},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\ringbuf.c"},"region":{"startLine":52,"startColumn":19,"endLine":52,"endColumn":50,"charOffset":1309,"charLength":31,"snippet":{"text":"malloc(sizeof(struct ringbuf_t)","rendered":{"text":"malloc(sizeof(struct ringbuf_t)","markdown":"`malloc(sizeof(struct ringbuf_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\ringbuf.c"},"replacements":[{"deletedRegion":{"charOffset":1309,"charLength":31},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\fast-file-copy.c"},"region":{"startLine":22,"startColumn":19,"endLine":22,"endColumn":34,"charOffset":492,"charLength":15,"snippet":{"text":"malloc(fcb->sz)","rendered":{"text":"malloc(fcb->sz)","markdown":"`malloc(fcb->sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\fast-file-copy.c"},"replacements":[{"deletedRegion":{"charOffset":492,"charLength":15},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.c"},"region":{"startLine":123,"startColumn":140,"endLine":123,"endColumn":148,"charOffset":3884,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.c"},"region":{"startLine":74,"startColumn":8,"endLine":74,"endColumn":15,"charOffset":2094,"charLength":7,"snippet":{"text":"freopen","rendered":{"text":"freopen","markdown":"`freopen`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.c"},"region":{"startLine":73,"startColumn":8,"endLine":73,"endColumn":15,"charOffset":2004,"charLength":7,"snippet":{"text":"freopen","rendered":{"text":"freopen","markdown":"`freopen`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.c"},"region":{"startLine":72,"startColumn":8,"endLine":72,"endColumn":15,"charOffset":1915,"charLength":7,"snippet":{"text":"freopen","rendered":{"text":"freopen","markdown":"`freopen`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.c"},"region":{"startLine":53,"startColumn":37,"endLine":53,"endColumn":52,"charOffset":1226,"charLength":15,"snippet":{"text":"malloc(bufsize)","rendered":{"text":"malloc(bufsize)","markdown":"`malloc(bufsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\data-types.c"},"replacements":[{"deletedRegion":{"charOffset":1226,"charLength":15},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\hints.py"},"region":{"startLine":37,"startColumn":59,"endLine":37,"endColumn":73,"charOffset":1264,"charLength":14,"snippet":{"text":"http://test.me","rendered":{"text":"http://test.me","markdown":"`http://test.me`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\hints.py"},"replacements":[{"deletedRegion":{"charOffset":1264,"charLength":14},"insertedContent":{"text":"https://test.me"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\hints.py"},"region":{"startLine":37,"startColumn":17,"endLine":37,"endColumn":31,"charOffset":1222,"charLength":14,"snippet":{"text":"http://test.me","rendered":{"text":"http://test.me","markdown":"`http://test.me`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\hints.py"},"replacements":[{"deletedRegion":{"charOffset":1222,"charLength":14},"insertedContent":{"text":"https://test.me"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\hints.py"},"region":{"startLine":36,"startColumn":49,"endLine":36,"endColumn":63,"charOffset":1182,"charLength":14,"snippet":{"text":"http://test.me","rendered":{"text":"http://test.me","markdown":"`http://test.me`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\hints.py"},"replacements":[{"deletedRegion":{"charOffset":1182,"charLength":14},"insertedContent":{"text":"https://test.me"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\hints.py"},"region":{"startLine":36,"startColumn":17,"endLine":36,"endColumn":31,"charOffset":1150,"charLength":14,"snippet":{"text":"http://test.me","rendered":{"text":"http://test.me","markdown":"`http://test.me`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\hints.py"},"replacements":[{"deletedRegion":{"charOffset":1150,"charLength":14},"insertedContent":{"text":"https://test.me"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\hints.py"},"region":{"startLine":29,"startColumn":14,"endLine":29,"endColumn":28,"charOffset":923,"charLength":14,"snippet":{"text":"http://test.me","rendered":{"text":"http://test.me","markdown":"`http://test.me`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\hints.py"},"replacements":[{"deletedRegion":{"charOffset":923,"charLength":14},"insertedContent":{"text":"https://test.me"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\hints.py"},"region":{"startLine":28,"startColumn":13,"endLine":28,"endColumn":27,"charOffset":891,"charLength":14,"snippet":{"text":"http://test.me","rendered":{"text":"http://test.me","markdown":"`http://test.me`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\hints.py"},"replacements":[{"deletedRegion":{"charOffset":891,"charLength":14},"insertedContent":{"text":"https://test.me"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS173237","level":"error","message":{"text":"Do not store tokens or keys in source code."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\graphics.py"},"region":{"startLine":728,"startColumn":43,"endLine":728,"endColumn":81,"charOffset":27059,"charLength":38,"snippet":{"text":"'444444333333444444333333333333333333'","rendered":{"text":"'444444333333444444333333333333333333'","markdown":"`'444444333333444444333333333333333333'`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Implementation.Privacy.Token"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS173237","level":"error","message":{"text":"Do not store tokens or keys in source code."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\graphics.py"},"region":{"startLine":719,"startColumn":43,"endLine":719,"endColumn":81,"charOffset":26600,"charLength":38,"snippet":{"text":"'444444333333444444333333333333333333'","rendered":{"text":"'444444333333444444333333333333333333'","markdown":"`'444444333333444444333333333333333333'`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Implementation.Privacy.Token"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS173237","level":"error","message":{"text":"Do not store tokens or keys in source code."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\graphics.py"},"region":{"startLine":696,"startColumn":43,"endLine":696,"endColumn":81,"charOffset":25575,"charLength":38,"snippet":{"text":"'444444333333444444333333333333333333'","rendered":{"text":"'444444333333444444333333333333333333'","markdown":"`'444444333333444444333333333333333333'`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Implementation.Privacy.Token"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS126858","level":"error","message":{"text":"Weak/Broken Hash Algorithm"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\crypto.c"},"region":{"startLine":465,"startColumn":7,"endLine":465,"endColumn":11,"charOffset":19738,"charLength":4,"snippet":{"text":"SHA1","rendered":{"text":"SHA1","markdown":"`SHA1`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\crypto.c"},"replacements":[{"deletedRegion":{"charOffset":19738,"charLength":4},"insertedContent":{"text":"SHA256"}}]}]},{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\crypto.c"},"replacements":[{"deletedRegion":{"charOffset":19738,"charLength":4},"insertedContent":{"text":"SHA512"}}]}]}],"properties":{"tags":["Cryptography.BannedHashAlgorithm"],"DevSkimSeverity":"Critical","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS440100","level":"note","message":{"text":"Generic: Hard-coded Elliptic Curve"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\crypto.c"},"region":{"startLine":463,"startColumn":59,"endLine":463,"endColumn":65,"charOffset":19623,"charLength":6,"snippet":{"text":"X25519","rendered":{"text":"X25519","markdown":"`X25519`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.Protocol.TLS.Elliptic-Curve.Hard-Coded"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS440100","level":"note","message":{"text":"Generic: Hard-coded Elliptic Curve"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\crypto.c"},"region":{"startLine":463,"startColumn":41,"endLine":463,"endColumn":47,"charOffset":19605,"charLength":6,"snippet":{"text":"X25519","rendered":{"text":"X25519","markdown":"`X25519`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.Protocol.TLS.Elliptic-Curve.Hard-Coded"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS440011","level":"error","message":{"text":"OpenSSL: Do not hardcode SSL/TLS versions within an application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\crypto.c"},"region":{"startLine":407,"startColumn":25,"endLine":407,"endColumn":41,"charOffset":16926,"charLength":16,"snippet":{"text":"AES256GCMDecrypt","rendered":{"text":"AES256GCMDecrypt","markdown":"`AES256GCMDecrypt`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.Protocol.TLS.Hardcoded"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS440011","level":"error","message":{"text":"OpenSSL: Do not hardcode SSL/TLS versions within an application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\crypto.c"},"region":{"startLine":397,"startColumn":47,"endLine":397,"endColumn":63,"charOffset":16400,"charLength":16,"snippet":{"text":"AES256GCMDecrypt","rendered":{"text":"AES256GCMDecrypt","markdown":"`AES256GCMDecrypt`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.Protocol.TLS.Hardcoded"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS440011","level":"error","message":{"text":"OpenSSL: Do not hardcode SSL/TLS versions within an application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\crypto.c"},"region":{"startLine":375,"startColumn":30,"endLine":375,"endColumn":46,"charOffset":15051,"charLength":16,"snippet":{"text":"AES256GCMDecrypt","rendered":{"text":"AES256GCMDecrypt","markdown":"`AES256GCMDecrypt`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.Protocol.TLS.Hardcoded"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS440011","level":"error","message":{"text":"OpenSSL: Do not hardcode SSL/TLS versions within an application."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\crypto.c"},"region":{"startLine":375,"startColumn":4,"endLine":375,"endColumn":20,"charOffset":15025,"charLength":16,"snippet":{"text":"AES256GCMDecrypt","rendered":{"text":"AES256GCMDecrypt","markdown":"`AES256GCMDecrypt`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.Protocol.TLS.Hardcoded"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS126858","level":"error","message":{"text":"Weak/Broken Hash Algorithm"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\crypto.c"},"region":{"startLine":162,"startColumn":48,"endLine":162,"endColumn":52,"charOffset":5108,"charLength":4,"snippet":{"text":"SHA1","rendered":{"text":"SHA1","markdown":"`SHA1`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\crypto.c"},"replacements":[{"deletedRegion":{"charOffset":5108,"charLength":4},"insertedContent":{"text":"SHA256"}}]}]},{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\crypto.c"},"replacements":[{"deletedRegion":{"charOffset":5108,"charLength":4},"insertedContent":{"text":"SHA512"}}]}]}],"properties":{"tags":["Cryptography.BannedHashAlgorithm"],"DevSkimSeverity":"Critical","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS126858","level":"error","message":{"text":"Weak/Broken Hash Algorithm"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\crypto.c"},"region":{"startLine":155,"startColumn":10,"endLine":155,"endColumn":14,"charOffset":4659,"charLength":4,"snippet":{"text":"SHA1","rendered":{"text":"SHA1","markdown":"`SHA1`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\crypto.c"},"replacements":[{"deletedRegion":{"charOffset":4659,"charLength":4},"insertedContent":{"text":"SHA256"}}]}]},{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\crypto.c"},"replacements":[{"deletedRegion":{"charOffset":4659,"charLength":4},"insertedContent":{"text":"SHA512"}}]}]}],"properties":{"tags":["Cryptography.BannedHashAlgorithm"],"DevSkimSeverity":"Critical","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS440100","level":"note","message":{"text":"Generic: Hard-coded Elliptic Curve"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\crypto.c"},"region":{"startLine":121,"startColumn":22,"endLine":121,"endColumn":28,"charOffset":3358,"charLength":6,"snippet":{"text":"X25519","rendered":{"text":"X25519","markdown":"`X25519`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.Protocol.TLS.Elliptic-Curve.Hard-Coded"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS440100","level":"note","message":{"text":"Generic: Hard-coded Elliptic Curve"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\crypto.c"},"region":{"startLine":118,"startColumn":47,"endLine":118,"endColumn":53,"charOffset":3204,"charLength":6,"snippet":{"text":"X25519","rendered":{"text":"X25519","markdown":"`X25519`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.Protocol.TLS.Elliptic-Curve.Hard-Coded"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS440100","level":"note","message":{"text":"Generic: Hard-coded Elliptic Curve"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\crypto.c"},"region":{"startLine":118,"startColumn":29,"endLine":118,"endColumn":35,"charOffset":3186,"charLength":6,"snippet":{"text":"X25519","rendered":{"text":"X25519","markdown":"`X25519`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.Protocol.TLS.Elliptic-Curve.Hard-Coded"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS126858","level":"error","message":{"text":"Weak/Broken Hash Algorithm"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\crypto.c"},"region":{"startLine":22,"startColumn":30,"endLine":22,"endColumn":34,"charOffset":487,"charLength":4,"snippet":{"text":"SHA1","rendered":{"text":"SHA1","markdown":"`SHA1`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\crypto.c"},"replacements":[{"deletedRegion":{"charOffset":487,"charLength":4},"insertedContent":{"text":"SHA256"}}]}]},{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\crypto.c"},"replacements":[{"deletedRegion":{"charOffset":487,"charLength":4},"insertedContent":{"text":"SHA512"}}]}]}],"properties":{"tags":["Cryptography.BannedHashAlgorithm"],"DevSkimSeverity":"Critical","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS126858","level":"error","message":{"text":"Weak/Broken Hash Algorithm"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\crypto.c"},"region":{"startLine":20,"startColumn":8,"endLine":20,"endColumn":12,"charOffset":417,"charLength":4,"snippet":{"text":"SHA1","rendered":{"text":"SHA1","markdown":"`SHA1`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\crypto.c"},"replacements":[{"deletedRegion":{"charOffset":417,"charLength":4},"insertedContent":{"text":"SHA256"}}]}]},{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\crypto.c"},"replacements":[{"deletedRegion":{"charOffset":417,"charLength":4},"insertedContent":{"text":"SHA512"}}]}]}],"properties":{"tags":["Cryptography.BannedHashAlgorithm"],"DevSkimSeverity":"Critical","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\mouse.c"},"region":{"startLine":423,"startColumn":39,"endLine":423,"endColumn":46,"charOffset":15698,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\mouse.c"},"region":{"startLine":22,"startColumn":44,"endLine":22,"endColumn":50,"charOffset":541,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.h"},"region":{"startLine":25,"startColumn":11,"endLine":25,"endColumn":21,"charOffset":1092,"charLength":10,"snippet":{"text":"malloc(sz)","rendered":{"text":"malloc(sz)","markdown":"`malloc(sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\disk-cache.h"},"replacements":[{"deletedRegion":{"charOffset":1092,"charLength":10},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"region":{"startLine":648,"startColumn":4,"endLine":648,"endColumn":31,"charOffset":21621,"charLength":27,"snippet":{"text":"memcpy(dest, data, data_sz)","rendered":{"text":"memcpy(dest, data, data_sz)","markdown":"`memcpy(dest, data, data_sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"replacements":[{"deletedRegion":{"charOffset":21621,"charLength":27},"insertedContent":{"text":"memcpy_s(dest, <size of dest>,  data,  data_sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"region":{"startLine":564,"startColumn":12,"endLine":564,"endColumn":42,"charOffset":19213,"charLength":30,"snippet":{"text":"memcpy(copy, data, s->data_sz)","rendered":{"text":"memcpy(copy, data, s->data_sz)","markdown":"`memcpy(copy, data, s->data_sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"replacements":[{"deletedRegion":{"charOffset":19213,"charLength":30},"insertedContent":{"text":"memcpy_s(copy, <size of copy>,  data,  s->data_sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"region":{"startLine":562,"startColumn":21,"endLine":562,"endColumn":39,"charOffset":19159,"charLength":18,"snippet":{"text":"malloc(s->data_sz)","rendered":{"text":"malloc(s->data_sz)","markdown":"`malloc(s->data_sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"replacements":[{"deletedRegion":{"charOffset":19159,"charLength":18},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"region":{"startLine":554,"startColumn":8,"endLine":554,"endColumn":62,"charOffset":18791,"charLength":54,"snippet":{"text":"memcpy(data, self->currently_writing.data, s->data_sz)","rendered":{"text":"memcpy(data, self->currently_writing.data, s->data_sz)","markdown":"`memcpy(data, self->currently_writing.data, s->data_sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"replacements":[{"deletedRegion":{"charOffset":18791,"charLength":54},"insertedContent":{"text":"memcpy_s(data, <size of data>,  self->currently_writing.data,  s->data_sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"region":{"startLine":552,"startColumn":19,"endLine":552,"endColumn":52,"charOffset":18552,"charLength":33,"snippet":{"text":"memcpy(data, s->data, s->data_sz)","rendered":{"text":"memcpy(data, s->data, s->data_sz)","markdown":"`memcpy(data, s->data, s->data_sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"replacements":[{"deletedRegion":{"charOffset":18552,"charLength":33},"insertedContent":{"text":"memcpy_s(data, <size of data>,  s->data,  s->data_sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"region":{"startLine":446,"startColumn":4,"endLine":446,"endColumn":38,"charOffset":15102,"charLength":34,"snippet":{"text":"memcpy(copied_data, data, data_sz)","rendered":{"text":"memcpy(copied_data, data, data_sz)","markdown":"`memcpy(copied_data, data, data_sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"replacements":[{"deletedRegion":{"charOffset":15102,"charLength":34},"insertedContent":{"text":"memcpy_s(copied_data, <size of copied_data>,  data,  data_sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"region":{"startLine":444,"startColumn":47,"endLine":444,"endColumn":62,"charOffset":15021,"charLength":15,"snippet":{"text":"malloc(data_sz)","rendered":{"text":"malloc(data_sz)","markdown":"`malloc(data_sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"replacements":[{"deletedRegion":{"charOffset":15021,"charLength":15},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"region":{"startLine":433,"startColumn":4,"endLine":433,"endColumn":36,"charOffset":14556,"charLength":32,"snippet":{"text":"memcpy(s->hash_key, key, key_sz)","rendered":{"text":"memcpy(s->hash_key, key, key_sz)","markdown":"`memcpy(s->hash_key, key, key_sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"replacements":[{"deletedRegion":{"charOffset":14556,"charLength":32},"insertedContent":{"text":"memcpy_s(s->hash_key, <size of s->hash_key>,  key,  key_sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"region":{"startLine":430,"startColumn":18,"endLine":430,"endColumn":32,"charOffset":14438,"charLength":14,"snippet":{"text":"malloc(key_sz)","rendered":{"text":"malloc(key_sz)","markdown":"`malloc(key_sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"replacements":[{"deletedRegion":{"charOffset":14438,"charLength":14},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"region":{"startLine":350,"startColumn":98,"endLine":350,"endColumn":106,"charOffset":11682,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"region":{"startLine":342,"startColumn":86,"endLine":342,"endColumn":94,"charOffset":11362,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"region":{"startLine":336,"startColumn":43,"endLine":336,"endColumn":63,"charOffset":11062,"charLength":20,"snippet":{"text":"malloc(MAX_KEY_SIZE)","rendered":{"text":"malloc(MAX_KEY_SIZE)","markdown":"`malloc(MAX_KEY_SIZE)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"replacements":[{"deletedRegion":{"charOffset":11062,"charLength":20},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"region":{"startLine":267,"startColumn":12,"endLine":267,"endColumn":19,"charOffset":8886,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"region":{"startLine":234,"startColumn":16,"endLine":234,"endColumn":106,"charOffset":7680,"charLength":90,"snippet":{"text":"memcpy(self->currently_writing.hash_key, s->hash_key, self->currently_writing.hash_keylen)","rendered":{"text":"memcpy(self->currently_writing.hash_key, s->hash_key, self->currently_writing.hash_keylen)","markdown":"`memcpy(self->currently_writing.hash_key, s->hash_key, self->currently_writing.hash_keylen)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"replacements":[{"deletedRegion":{"charOffset":7680,"charLength":90},"insertedContent":{"text":"memcpy_s(self->currently_writing.hash_key, <size of self->currently_writing.hash_key>,  s->hash_key,  self->currently_writing.hash_keylen)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"region":{"startLine":159,"startColumn":29,"endLine":159,"endColumn":77,"charOffset":4739,"charLength":48,"snippet":{"text":"memcpy(e->hash_key, s->hash_key, s->hash_keylen)","rendered":{"text":"memcpy(e->hash_key, s->hash_key, s->hash_keylen)","markdown":"`memcpy(e->hash_key, s->hash_key, s->hash_keylen)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"replacements":[{"deletedRegion":{"charOffset":4739,"charLength":48},"insertedContent":{"text":"memcpy_s(e->hash_key, <size of e->hash_key>,  s->hash_key,  s->hash_keylen)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"region":{"startLine":82,"startColumn":22,"endLine":82,"endColumn":40,"charOffset":2280,"charLength":18,"snippet":{"text":"strlen(cache_path)","rendered":{"text":"strlen(cache_path)","markdown":"`strlen(cache_path)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"replacements":[{"deletedRegion":{"charOffset":2280,"charLength":18},"insertedContent":{"text":"strlen_s(cache_path, <size of cache_path>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\disk-cache.c"},"replacements":[{"deletedRegion":{"charOffset":2280,"charLength":18},"insertedContent":{"text":"strnlen(cache_path, <size of cache_path>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\egl_context.c"},"region":{"startLine":701,"startColumn":15,"endLine":701,"endColumn":19,"charOffset":23929,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\egl_context.c"},"region":{"startLine":609,"startColumn":7,"endLine":609,"endColumn":11,"charOffset":21177,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\cli.py"},"region":{"startLine":773,"startColumn":17,"endLine":773,"endColumn":26,"charOffset":24888,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\cli.py"},"region":{"startLine":277,"startColumn":56,"endLine":280,"endColumn":47,"charOffset":7131,"charLength":163,"snippet":{"text":"eval(v))\r\n                    elif k == 'completion':\r\n                        cv = current_cmd['completion'] = {}\r\n                        for x in shlex.split(v)","rendered":{"text":"eval(v))\r\n                    elif k == 'completion':\r\n                        cv = current_cmd['completion'] = {}\r\n                        for x in shlex.split(v)","markdown":"`eval(v))\r\n                    elif k == 'completion':\r\n                        cv = current_cmd['completion'] = {}\r\n                        for x in shlex.split(v)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\cli.py"},"region":{"startLine":184,"startColumn":36,"endLine":184,"endColumn":45,"charOffset":4258,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\cross-platform-random.h"},"region":{"startLine":52,"startColumn":4,"endLine":52,"endColumn":14,"charOffset":1341,"charLength":10,"snippet":{"text":"arc4random","rendered":{"text":"arc4random","markdown":"`arc4random`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\core_text.m"},"region":{"startLine":649,"startColumn":29,"endLine":649,"endColumn":35,"charOffset":31383,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\core_text.m"},"region":{"startLine":638,"startColumn":29,"endLine":638,"endColumn":35,"charOffset":30598,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\core_text.m"},"region":{"startLine":625,"startColumn":33,"endLine":625,"endColumn":39,"charOffset":29794,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\core_text.m"},"region":{"startLine":605,"startColumn":7,"endLine":605,"endColumn":13,"charOffset":28283,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\core_text.m"},"region":{"startLine":528,"startColumn":20,"endLine":528,"endColumn":82,"charOffset":24039,"charLength":62,"snippet":{"text":"memcpy(ans.canvas, buffers.render_buf, ans.width * ans.height)","rendered":{"text":"memcpy(ans.canvas, buffers.render_buf, ans.width * ans.height)","markdown":"`memcpy(ans.canvas, buffers.render_buf, ans.width * ans.height)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\core_text.m"},"replacements":[{"deletedRegion":{"charOffset":24039,"charLength":62},"insertedContent":{"text":"memcpy_s(ans.canvas, <size of ans.canvas>,  buffers.render_buf,  ans.width * ans.height)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\core_text.m"},"region":{"startLine":527,"startColumn":17,"endLine":527,"endColumn":47,"charOffset":23986,"charLength":30,"snippet":{"text":"malloc(ans.width * ans.height)","rendered":{"text":"malloc(ans.width * ans.height)","markdown":"`malloc(ans.width * ans.height)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\core_text.m"},"replacements":[{"deletedRegion":{"charOffset":23986,"charLength":30},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\core_text.m"},"region":{"startLine":469,"startColumn":29,"endLine":469,"endColumn":58,"charOffset":20909,"charLength":29,"snippet":{"text":"malloc(buffers.render_buf_sz)","rendered":{"text":"malloc(buffers.render_buf_sz)","markdown":"`malloc(buffers.render_buf_sz)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\core_text.m"},"replacements":[{"deletedRegion":{"charOffset":20909,"charLength":29},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\core_text.m"},"region":{"startLine":24,"startColumn":55,"endLine":24,"endColumn":62,"charOffset":609,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\desktop.c"},"region":{"startLine":141,"startColumn":8,"endLine":141,"endColumn":15,"charOffset":5000,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\desktop.c"},"region":{"startLine":131,"startColumn":8,"endLine":131,"endColumn":15,"charOffset":4636,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\dbus_glfw.c"},"region":{"startLine":244,"startColumn":34,"endLine":244,"endColumn":63,"charOffset":8308,"charLength":29,"snippet":{"text":"malloc(sizeof(MethodResponse)","rendered":{"text":"malloc(sizeof(MethodResponse)","markdown":"`malloc(sizeof(MethodResponse)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\dbus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":8308,"charLength":29},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\dbus_glfw.c"},"region":{"startLine":115,"startColumn":19,"endLine":115,"endColumn":41,"charOffset":4031,"charLength":22,"snippet":{"text":"malloc(sizeof(id_type)","rendered":{"text":"malloc(sizeof(id_type)","markdown":"`malloc(sizeof(id_type)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\dbus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":4031,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\dbus_glfw.c"},"region":{"startLine":80,"startColumn":19,"endLine":80,"endColumn":41,"charOffset":2901,"charLength":22,"snippet":{"text":"malloc(sizeof(id_type)","rendered":{"text":"malloc(sizeof(id_type)","markdown":"`malloc(sizeof(id_type)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\dbus_glfw.c"},"replacements":[{"deletedRegion":{"charOffset":2901,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\dbus_glfw.c"},"region":{"startLine":39,"startColumn":12,"endLine":39,"endColumn":21,"charOffset":1497,"charLength":9,"snippet":{"text":"vsnprintf","rendered":{"text":"vsnprintf","markdown":"`vsnprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\debug_config.py"},"region":{"startLine":131,"startColumn":38,"endLine":131,"endColumn":47,"charOffset":4732,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.h"},"region":{"startLine":384,"startColumn":62,"endLine":384,"endColumn":68,"charOffset":14289,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.h"},"region":{"startLine":320,"startColumn":8,"endLine":320,"endColumn":15,"charOffset":11122,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\data-types.h"},"region":{"startLine":41,"startColumn":61,"endLine":41,"endColumn":67,"charOffset":1457,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\context.c"},"region":{"startLine":418,"startColumn":29,"endLine":418,"endColumn":43,"charOffset":15461,"charLength":14,"snippet":{"text":"strlen(string)","rendered":{"text":"strlen(string)","markdown":"`strlen(string)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\context.c"},"replacements":[{"deletedRegion":{"charOffset":15461,"charLength":14},"insertedContent":{"text":"strlen_s(string, <size of string>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\context.c"},"replacements":[{"deletedRegion":{"charOffset":15461,"charLength":14},"insertedContent":{"text":"strnlen(string, <size of string>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\context.c"},"region":{"startLine":345,"startColumn":19,"endLine":345,"endColumn":23,"charOffset":12777,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\context.c"},"region":{"startLine":322,"startColumn":19,"endLine":322,"endColumn":23,"charOffset":11752,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\context.c"},"region":{"startLine":239,"startColumn":9,"endLine":239,"endColumn":15,"charOffset":8534,"charLength":6,"snippet":{"text":"sscanf","rendered":{"text":"sscanf","markdown":"`sscanf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\context.c"},"region":{"startLine":229,"startColumn":30,"endLine":229,"endColumn":49,"charOffset":8303,"charLength":19,"snippet":{"text":"strlen(prefixes[i])","rendered":{"text":"strlen(prefixes[i])","markdown":"`strlen(prefixes[i])`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\context.c"},"replacements":[{"deletedRegion":{"charOffset":8303,"charLength":19},"insertedContent":{"text":"strlen_s(prefixes[i], <size of prefixes[i]>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\context.c"},"replacements":[{"deletedRegion":{"charOffset":8303,"charLength":19},"insertedContent":{"text":"strnlen(prefixes[i], <size of prefixes[i]>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":335,"startColumn":38,"endLine":335,"endColumn":45,"charOffset":10805,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":329,"startColumn":4,"endLine":329,"endColumn":50,"charOffset":10549,"charLength":46,"snippet":{"text":"strncpy(exe_dir_buf, exe, sizeof(exe_dir_buf))","rendered":{"text":"strncpy(exe_dir_buf, exe, sizeof(exe_dir_buf))","markdown":"`strncpy(exe_dir_buf, exe, sizeof(exe_dir_buf))`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"replacements":[{"deletedRegion":{"charOffset":10549,"charLength":46},"insertedContent":{"text":"strcpy_s(exe_dir_buf,  sizeof(exe_dir_buf,  exe)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"replacements":[{"deletedRegion":{"charOffset":10549,"charLength":46},"insertedContent":{"text":"strlcpy(exe_dir_buf,  exe,  sizeof(exe_dir_buf)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":325,"startColumn":15,"endLine":325,"endColumn":21,"charOffset":10415,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":319,"startColumn":29,"endLine":319,"endColumn":36,"charOffset":10157,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":298,"startColumn":12,"endLine":298,"endColumn":19,"charOffset":9513,"charLength":7,"snippet":{"text":"freopen","rendered":{"text":"freopen","markdown":"`freopen`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":267,"startColumn":57,"endLine":267,"endColumn":64,"charOffset":8738,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":259,"startColumn":4,"endLine":259,"endColumn":11,"charOffset":8536,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":257,"startColumn":16,"endLine":257,"endColumn":22,"charOffset":8505,"charLength":6,"snippet":{"text":"strtok","rendered":{"text":"strtok","markdown":"`strtok`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":252,"startColumn":18,"endLine":252,"endColumn":24,"charOffset":8296,"charLength":6,"snippet":{"text":"strtok","rendered":{"text":"strtok","markdown":"`strtok`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":251,"startColumn":4,"endLine":251,"endColumn":32,"charOffset":8247,"charLength":28,"snippet":{"text":"strncpy(buf, path, PATH_MAX)","rendered":{"text":"strncpy(buf, path, PATH_MAX)","markdown":"`strncpy(buf, path, PATH_MAX)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"replacements":[{"deletedRegion":{"charOffset":8247,"charLength":28},"insertedContent":{"text":"strcpy_s(buf,  PATH_MAX,  path)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"replacements":[{"deletedRegion":{"charOffset":8247,"charLength":28},"insertedContent":{"text":"strlcpy(buf,  path,  PATH_MAX)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":249,"startColumn":17,"endLine":249,"endColumn":24,"charOffset":8126,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":248,"startColumn":23,"endLine":248,"endColumn":29,"charOffset":8092,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":241,"startColumn":60,"endLine":241,"endColumn":67,"charOffset":7890,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":232,"startColumn":8,"endLine":232,"endColumn":15,"charOffset":7621,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":219,"startColumn":46,"endLine":219,"endColumn":53,"charOffset":7185,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":218,"startColumn":51,"endLine":218,"endColumn":58,"charOffset":7067,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":162,"startColumn":8,"endLine":162,"endColumn":15,"charOffset":5130,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":159,"startColumn":38,"endLine":159,"endColumn":45,"charOffset":4901,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":156,"startColumn":8,"endLine":156,"endColumn":15,"charOffset":4660,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":153,"startColumn":38,"endLine":153,"endColumn":45,"charOffset":4419,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":138,"startColumn":4,"endLine":138,"endColumn":12,"charOffset":3860,"charLength":8,"snippet":{"text":"mbstowcs","rendered":{"text":"mbstowcs","markdown":"`mbstowcs`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":118,"startColumn":8,"endLine":118,"endColumn":36,"charOffset":3446,"charLength":28,"snippet":{"text":"memcpy(s, tokv[i], token_sz)","rendered":{"text":"memcpy(s, tokv[i], token_sz)","markdown":"`memcpy(s, tokv[i], token_sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"replacements":[{"deletedRegion":{"charOffset":3446,"charLength":28},"insertedContent":{"text":"memcpy_s(s, <size of s>,  tokv[i],  token_sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":108,"startColumn":26,"endLine":108,"endColumn":41,"charOffset":3244,"charLength":15,"snippet":{"text":"strlen(tokv[i])","rendered":{"text":"strlen(tokv[i])","markdown":"`strlen(tokv[i])`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"replacements":[{"deletedRegion":{"charOffset":3244,"charLength":15},"insertedContent":{"text":"strlen_s(tokv[i], <size of tokv[i]>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"replacements":[{"deletedRegion":{"charOffset":3244,"charLength":15},"insertedContent":{"text":"strnlen(tokv[i], <size of tokv[i]>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":92,"startColumn":4,"endLine":92,"endColumn":31,"charOffset":2828,"charLength":27,"snippet":{"text":"memcpy(wtmp, srcpath, plen)","rendered":{"text":"memcpy(wtmp, srcpath, plen)","markdown":"`memcpy(wtmp, srcpath, plen)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"replacements":[{"deletedRegion":{"charOffset":2828,"charLength":27},"insertedContent":{"text":"memcpy_s(wtmp, <size of wtmp>,  srcpath,  plen)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":86,"startColumn":38,"endLine":86,"endColumn":58,"charOffset":2643,"charLength":20,"snippet":{"text":"malloc(sizeof(char*)","rendered":{"text":"malloc(sizeof(char*)","markdown":"`malloc(sizeof(char*)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"replacements":[{"deletedRegion":{"charOffset":2643,"charLength":20},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":85,"startColumn":37,"endLine":85,"endColumn":49,"charOffset":2590,"charLength":12,"snippet":{"text":"malloc(plen)","rendered":{"text":"malloc(plen)","markdown":"`malloc(plen)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"replacements":[{"deletedRegion":{"charOffset":2590,"charLength":12},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":84,"startColumn":18,"endLine":84,"endColumn":33,"charOffset":2526,"charLength":15,"snippet":{"text":"strlen(srcpath)","rendered":{"text":"strlen(srcpath)","markdown":"`strlen(srcpath)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"replacements":[{"deletedRegion":{"charOffset":2526,"charLength":15},"insertedContent":{"text":"strlen_s(srcpath, <size of srcpath>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"replacements":[{"deletedRegion":{"charOffset":2526,"charLength":15},"insertedContent":{"text":"strnlen(srcpath, <size of srcpath>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":62,"startColumn":76,"endLine":62,"endColumn":102,"charOffset":1938,"charLength":26,"snippet":{"text":"strlen(run_data->lc_ctype)","rendered":{"text":"strlen(run_data->lc_ctype)","markdown":"`strlen(run_data->lc_ctype)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"replacements":[{"deletedRegion":{"charOffset":1938,"charLength":26},"insertedContent":{"text":"strlen_s(run_data->lc_ctype, <size of run_data->lc_ctype>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"replacements":[{"deletedRegion":{"charOffset":1938,"charLength":26},"insertedContent":{"text":"strnlen(run_data->lc_ctype, <size of run_data->lc_ctype>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"region":{"startLine":240,"startColumn":8,"endLine":240,"endColumn":69,"charOffset":7150,"charLength":61,"snippet":{"text":"memcpy(procenv + (arg_ptr - env_start), arg_ptr, s - arg_ptr)","rendered":{"text":"memcpy(procenv + (arg_ptr - env_start), arg_ptr, s - arg_ptr)","markdown":"`memcpy(procenv + (arg_ptr - env_start), arg_ptr, s - arg_ptr)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"replacements":[{"deletedRegion":{"charOffset":7150,"charLength":61},"insertedContent":{"text":"memcpy_s(procenv + (arg_ptr - env_start), <size of procenv + (arg_ptr - env_start)>,  arg_ptr,  s - arg_ptr)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":54,"startColumn":27,"endLine":54,"endColumn":34,"charOffset":1352,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"region":{"startLine":53,"startColumn":76,"endLine":53,"endColumn":101,"charOffset":1296,"charLength":25,"snippet":{"text":"strlen(run_data->exe_dir)","rendered":{"text":"strlen(run_data->exe_dir)","markdown":"`strlen(run_data->exe_dir)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"replacements":[{"deletedRegion":{"charOffset":1296,"charLength":25},"insertedContent":{"text":"strlen_s(run_data->exe_dir, <size of run_data->exe_dir>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\launcher\\main.c"},"replacements":[{"deletedRegion":{"charOffset":1296,"charLength":25},"insertedContent":{"text":"strnlen(run_data->exe_dir, <size of run_data->exe_dir>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"region":{"startLine":204,"startColumn":4,"endLine":204,"endColumn":42,"charOffset":6241,"charLength":38,"snippet":{"text":"memcpy(&nargs, procargs, sizeof(nargs)","rendered":{"text":"memcpy(&nargs, procargs, sizeof(nargs)","markdown":"`memcpy(&nargs, procargs, sizeof(nargs)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"replacements":[{"deletedRegion":{"charOffset":6241,"charLength":38},"insertedContent":{"text":"memcpy_s(&nargs, <size of &nargs>,  procargs,  sizeof(nargs)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"region":{"startLine":182,"startColumn":23,"endLine":182,"endColumn":37,"charOffset":5498,"charLength":14,"snippet":{"text":"malloc(argmax)","rendered":{"text":"malloc(argmax)","markdown":"`malloc(argmax)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"replacements":[{"deletedRegion":{"charOffset":5498,"charLength":14},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"region":{"startLine":110,"startColumn":10,"endLine":110,"endColumn":25,"charOffset":3540,"charLength":15,"snippet":{"text":"strlen(arg_ptr)","rendered":{"text":"strlen(arg_ptr)","markdown":"`strlen(arg_ptr)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"replacements":[{"deletedRegion":{"charOffset":3540,"charLength":15},"insertedContent":{"text":"strlen_s(arg_ptr, <size of arg_ptr>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"replacements":[{"deletedRegion":{"charOffset":3540,"charLength":15},"insertedContent":{"text":"strnlen(arg_ptr, <size of arg_ptr>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"region":{"startLine":107,"startColumn":4,"endLine":107,"endColumn":42,"charOffset":3445,"charLength":38,"snippet":{"text":"memcpy(&nargs, procargs, sizeof(nargs)","rendered":{"text":"memcpy(&nargs, procargs, sizeof(nargs)","markdown":"`memcpy(&nargs, procargs, sizeof(nargs)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"replacements":[{"deletedRegion":{"charOffset":3445,"charLength":38},"insertedContent":{"text":"memcpy_s(&nargs, <size of &nargs>,  procargs,  sizeof(nargs)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"region":{"startLine":86,"startColumn":23,"endLine":86,"endColumn":37,"charOffset":2761,"charLength":14,"snippet":{"text":"malloc(argmax)","rendered":{"text":"malloc(argmax)","markdown":"`malloc(argmax)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"replacements":[{"deletedRegion":{"charOffset":2761,"charLength":14},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"region":{"startLine":42,"startColumn":17,"endLine":42,"endColumn":27,"charOffset":1342,"charLength":10,"snippet":{"text":"malloc(sz)","rendered":{"text":"malloc(sz)","markdown":"`malloc(sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\macos_process_info.c"},"replacements":[{"deletedRegion":{"charOffset":1342,"charLength":10},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":2626,"startColumn":7,"endLine":2626,"endColumn":11,"charOffset":94736,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":2396,"startColumn":8,"endLine":2396,"endColumn":75,"charOffset":85382,"charLength":67,"snippet":{"text":"memcpy([rep bitmapData], src->pixels, src->width * src->height * 4)","rendered":{"text":"memcpy([rep bitmapData], src->pixels, src->width * src->height * 4)","markdown":"`memcpy([rep bitmapData], src->pixels, src->width * src->height * 4)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"replacements":[{"deletedRegion":{"charOffset":85382,"charLength":67},"insertedContent":{"text":"memcpy_s([rep bitmapData], <size of [rep bitmapData]>,  src->pixels,  src->width * src->height * 4)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":2113,"startColumn":11,"endLine":2113,"endColumn":15,"charOffset":75201,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":2068,"startColumn":7,"endLine":2068,"endColumn":11,"charOffset":73404,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":2027,"startColumn":7,"endLine":2027,"endColumn":11,"charOffset":71980,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":1844,"startColumn":7,"endLine":1844,"endColumn":11,"charOffset":65390,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":1723,"startColumn":8,"endLine":1723,"endColumn":39,"charOffset":61285,"charLength":31,"snippet":{"text":"strlen(wndconfig->ns.frameName)","rendered":{"text":"strlen(wndconfig->ns.frameName)","markdown":"`strlen(wndconfig->ns.frameName)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"replacements":[{"deletedRegion":{"charOffset":61285,"charLength":31},"insertedContent":{"text":"strlen_s(wndconfig->ns.frameName, <size of wndconfig->ns.frameName>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"replacements":[{"deletedRegion":{"charOffset":61285,"charLength":31},"insertedContent":{"text":"strnlen(wndconfig->ns.frameName, <size of wndconfig->ns.frameName>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":1392,"startColumn":92,"endLine":1392,"endColumn":119,"charOffset":49838,"charLength":27,"snippet":{"text":"strlen(uri_list.UTF8String)","rendered":{"text":"strlen(uri_list.UTF8String)","markdown":"`strlen(uri_list.UTF8String)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"replacements":[{"deletedRegion":{"charOffset":49838,"charLength":27},"insertedContent":{"text":"strlen_s(uri_list.UTF8String, <size of uri_list.UTF8String>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"replacements":[{"deletedRegion":{"charOffset":49838,"charLength":27},"insertedContent":{"text":"strnlen(uri_list.UTF8String, <size of uri_list.UTF8String>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":1385,"startColumn":73,"endLine":1385,"endColumn":85,"charOffset":49540,"charLength":12,"snippet":{"text":"strlen(text)","rendered":{"text":"strlen(text)","markdown":"`strlen(text)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"replacements":[{"deletedRegion":{"charOffset":49540,"charLength":12},"insertedContent":{"text":"strlen_s(text, <size of text>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"replacements":[{"deletedRegion":{"charOffset":49540,"charLength":12},"insertedContent":{"text":"strnlen(text, <size of text>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_window.m"},"region":{"startLine":1354,"startColumn":7,"endLine":1354,"endColumn":11,"charOffset":47980,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"region":{"startLine":307,"startColumn":21,"endLine":307,"endColumn":34,"charOffset":11250,"charLength":13,"snippet":{"text":"http://a.b.')","rendered":{"text":"http://a.b.')","markdown":"`http://a.b.')`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"replacements":[{"deletedRegion":{"charOffset":11250,"charLength":13},"insertedContent":{"text":"https://a.b.')"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"region":{"startLine":304,"startColumn":25,"endLine":304,"endColumn":40,"charOffset":11149,"charLength":15,"snippet":{"text":"http://a.b?q=1'","rendered":{"text":"http://a.b?q=1'","markdown":"`http://a.b?q=1'`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"replacements":[{"deletedRegion":{"charOffset":11149,"charLength":15},"insertedContent":{"text":"https://a.b?q=1'"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"region":{"startLine":272,"startColumn":21,"endLine":272,"endColumn":33,"charOffset":9881,"charLength":12,"snippet":{"text":"http://ab.de","rendered":{"text":"http://ab.de","markdown":"`http://ab.de`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"replacements":[{"deletedRegion":{"charOffset":9881,"charLength":12},"insertedContent":{"text":"https://ab.de"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"region":{"startLine":270,"startColumn":21,"endLine":270,"endColumn":34,"charOffset":9794,"charLength":13,"snippet":{"text":"http://-abcd]","rendered":{"text":"http://-abcd]","markdown":"`http://-abcd]`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"replacements":[{"deletedRegion":{"charOffset":9794,"charLength":13},"insertedContent":{"text":"https://-abcd]"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"region":{"startLine":266,"startColumn":25,"endLine":266,"endColumn":39,"charOffset":9612,"charLength":14,"snippet":{"text":"http://xyz.com","rendered":{"text":"http://xyz.com","markdown":"`http://xyz.com`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"replacements":[{"deletedRegion":{"charOffset":9612,"charLength":14},"insertedContent":{"text":"https://xyz.com"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"region":{"startLine":263,"startColumn":25,"endLine":263,"endColumn":39,"charOffset":9479,"charLength":14,"snippet":{"text":"http://xyz.com","rendered":{"text":"http://xyz.com","markdown":"`http://xyz.com`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty_tests\\datatypes.py"},"replacements":[{"deletedRegion":{"charOffset":9479,"charLength":14},"insertedContent":{"text":"https://xyz.com"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child.c"},"region":{"startLine":156,"startColumn":28,"endLine":156,"endColumn":36,"charOffset":6318,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child.c"},"region":{"startLine":68,"startColumn":84,"endLine":68,"endColumn":92,"charOffset":1987,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child.c"},"region":{"startLine":55,"startColumn":16,"endLine":55,"endColumn":28,"charOffset":1589,"charLength":12,"snippet":{"text":"strlen(text)","rendered":{"text":"strlen(text)","markdown":"`strlen(text)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child.c"},"replacements":[{"deletedRegion":{"charOffset":1589,"charLength":12},"insertedContent":{"text":"strlen_s(text, <size of text>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child.c"},"replacements":[{"deletedRegion":{"charOffset":1589,"charLength":12},"insertedContent":{"text":"strnlen(text, <size of text>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child.c"},"region":{"startLine":38,"startColumn":12,"endLine":38,"endColumn":38,"charOffset":1303,"charLength":26,"snippet":{"text":"memcpy(ans[i], pysrc, len)","rendered":{"text":"memcpy(ans[i], pysrc, len)","markdown":"`memcpy(ans[i], pysrc, len)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child.c"},"replacements":[{"deletedRegion":{"charOffset":1303,"charLength":26},"insertedContent":{"text":"memcpy_s(ans[i], <size of ans[i]>,  pysrc,  len)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child.c"},"region":{"startLine":35,"startColumn":25,"endLine":35,"endColumn":38,"charOffset":1165,"charLength":13,"snippet":{"text":"strlen(pysrc)","rendered":{"text":"strlen(pysrc)","markdown":"`strlen(pysrc)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child.c"},"replacements":[{"deletedRegion":{"charOffset":1165,"charLength":13},"insertedContent":{"text":"strlen_s(pysrc, <size of pysrc>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child.c"},"replacements":[{"deletedRegion":{"charOffset":1165,"charLength":13},"insertedContent":{"text":"strnlen(pysrc, <size of pysrc>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child.c"},"region":{"startLine":33,"startColumn":12,"endLine":33,"endColumn":70,"charOffset":1060,"charLength":58,"snippet":{"text":"memcpy(ans[i], PyBytes_AS_STRING(u8), PyBytes_GET_SIZE(u8)","rendered":{"text":"memcpy(ans[i], PyBytes_AS_STRING(u8), PyBytes_GET_SIZE(u8)","markdown":"`memcpy(ans[i], PyBytes_AS_STRING(u8), PyBytes_GET_SIZE(u8)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child.c"},"replacements":[{"deletedRegion":{"charOffset":1060,"charLength":58},"insertedContent":{"text":"memcpy_s(ans[i], <size of ans[i]>,  PyBytes_AS_STRING(u8),  PyBytes_GET_SIZE(u8)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\loop-utils.c"},"region":{"startLine":175,"startColumn":12,"endLine":175,"endColumn":19,"charOffset":5846,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\loop-utils.c"},"region":{"startLine":167,"startColumn":127,"endLine":167,"endColumn":135,"charOffset":5562,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\loop-utils.c"},"region":{"startLine":140,"startColumn":82,"endLine":140,"endColumn":90,"charOffset":4405,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\loop-utils.c"},"region":{"startLine":123,"startColumn":107,"endLine":123,"endColumn":115,"charOffset":3927,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1736,"startColumn":20,"endLine":1736,"endColumn":76,"charOffset":69152,"charLength":56,"snippet":{"text":"memcpy(peer->write.data + peer->write.used, msg, msg_sz)","rendered":{"text":"memcpy(peer->write.data + peer->write.used, msg, msg_sz)","markdown":"`memcpy(peer->write.data + peer->write.used, msg, msg_sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":69152,"charLength":56},"insertedContent":{"text":"memcpy_s(peer->write.data + peer->write.used, <size of peer->write.data + peer->write.used>,  msg,  msg_sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1657,"startColumn":123,"endLine":1657,"endColumn":131,"charOffset":65553,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1629,"startColumn":42,"endLine":1629,"endColumn":49,"charOffset":64608,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1627,"startColumn":88,"endLine":1627,"endColumn":96,"charOffset":64482,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1613,"startColumn":35,"endLine":1613,"endColumn":43,"charOffset":63925,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1589,"startColumn":12,"endLine":1589,"endColumn":19,"charOffset":62701,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1555,"startColumn":12,"endLine":1555,"endColumn":61,"charOffset":61505,"charLength":49,"snippet":{"text":"memcpy(m->data, peer->read.data, peer->read.used)","rendered":{"text":"memcpy(m->data, peer->read.data, peer->read.used)","markdown":"`memcpy(m->data, peer->read.data, peer->read.used)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":61505,"charLength":49},"insertedContent":{"text":"memcpy_s(m->data, <size of m->data>,  peer->read.data,  peer->read.used)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1553,"startColumn":18,"endLine":1553,"endColumn":41,"charOffset":61443,"charLength":23,"snippet":{"text":"malloc(peer->read.used)","rendered":{"text":"malloc(peer->read.used)","markdown":"`malloc(peer->read.used)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":61443,"charLength":23},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1456,"startColumn":46,"endLine":1456,"endColumn":52,"charOffset":58263,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1376,"startColumn":12,"endLine":1376,"endColumn":19,"charOffset":54450,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1331,"startColumn":12,"endLine":1331,"endColumn":19,"charOffset":53089,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1328,"startColumn":26,"endLine":1328,"endColumn":30,"charOffset":52989,"charLength":4,"snippet":{"text":"atoi","rendered":{"text":"atoi","markdown":"`atoi`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1319,"startColumn":130,"endLine":1319,"endColumn":138,"charOffset":52680,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1250,"startColumn":8,"endLine":1250,"endColumn":15,"charOffset":50540,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1215,"startColumn":20,"endLine":1215,"endColumn":27,"charOffset":49369,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":1214,"startColumn":20,"endLine":1214,"endColumn":27,"charOffset":49277,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":906,"startColumn":154,"endLine":906,"endColumn":162,"charOffset":36602,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":904,"startColumn":4,"endLine":904,"endColumn":36,"charOffset":36347,"charLength":32,"snippet":{"text":"memcpy(data->buf, buf, data->sz)","rendered":{"text":"memcpy(data->buf, buf, data->sz)","markdown":"`memcpy(data->buf, buf, data->sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":36347,"charLength":32},"insertedContent":{"text":"memcpy_s(data->buf, <size of data->buf>,  buf,  data->sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":887,"startColumn":87,"endLine":887,"endColumn":95,"charOffset":35893,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":812,"startColumn":20,"endLine":812,"endColumn":30,"charOffset":33646,"charLength":10,"snippet":{"text":"malloc(sz)","rendered":{"text":"malloc(sz)","markdown":"`malloc(sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":33646,"charLength":10},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":504,"startColumn":92,"endLine":504,"endColumn":100,"charOffset":18558,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":426,"startColumn":12,"endLine":426,"endColumn":56,"charOffset":15615,"charLength":44,"snippet":{"text":"memcpy(msgs, self->messages, sizeof(Message)","rendered":{"text":"memcpy(msgs, self->messages, sizeof(Message)","markdown":"`memcpy(msgs, self->messages, sizeof(Message)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":15615,"charLength":44},"insertedContent":{"text":"memcpy_s(msgs, <size of msgs>,  self->messages,  sizeof(Message)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":424,"startColumn":15,"endLine":424,"endColumn":37,"charOffset":15533,"charLength":22,"snippet":{"text":"malloc(sizeof(Message)","rendered":{"text":"malloc(sizeof(Message)","markdown":"`malloc(sizeof(Message)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":15533,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":357,"startColumn":104,"endLine":357,"endColumn":112,"charOffset":13006,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":354,"startColumn":99,"endLine":354,"endColumn":107,"charOffset":12799,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":319,"startColumn":90,"endLine":319,"endColumn":104,"charOffset":11392,"charLength":14,"snippet":{"text":"strlen(suffix)","rendered":{"text":"strlen(suffix)","markdown":"`strlen(suffix)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":11392,"charLength":14},"insertedContent":{"text":"strlen_s(suffix, <size of suffix>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":11392,"charLength":14},"insertedContent":{"text":"strnlen(suffix, <size of suffix>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":316,"startColumn":59,"endLine":316,"endColumn":73,"charOffset":11231,"charLength":14,"snippet":{"text":"strlen(prefix)","rendered":{"text":"strlen(prefix)","markdown":"`strlen(prefix)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":11231,"charLength":14},"insertedContent":{"text":"strlen_s(prefix, <size of prefix>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":11231,"charLength":14},"insertedContent":{"text":"strnlen(prefix, <size of prefix>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":280,"startColumn":16,"endLine":280,"endColumn":79,"charOffset":9682,"charLength":63,"snippet":{"text":"memcpy(screen->write_buf + screen->write_buf_used, data, szval)","rendered":{"text":"memcpy(screen->write_buf + screen->write_buf_used, data, szval)","markdown":"`memcpy(screen->write_buf + screen->write_buf_used, data, szval)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"replacements":[{"deletedRegion":{"charOffset":9682,"charLength":63},"insertedContent":{"text":"memcpy_s(screen->write_buf + screen->write_buf_used, <size of screen->write_buf + screen->write_buf_used>,  data,  szval)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":218,"startColumn":98,"endLine":218,"endColumn":106,"charOffset":7246,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":213,"startColumn":93,"endLine":213,"endColumn":101,"charOffset":7010,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":137,"startColumn":81,"endLine":137,"endColumn":89,"charOffset":3992,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\child-monitor.c"},"region":{"startLine":133,"startColumn":85,"endLine":133,"endColumn":93,"charOffset":3803,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\logging.c"},"region":{"startLine":78,"startColumn":8,"endLine":78,"endColumn":14,"charOffset":2181,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\logging.c"},"region":{"startLine":51,"startColumn":21,"endLine":51,"endColumn":28,"charOffset":1464,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\logging.c"},"region":{"startLine":46,"startColumn":9,"endLine":46,"endColumn":17,"charOffset":1305,"charLength":8,"snippet":{"text":"vfprintf","rendered":{"text":"vfprintf","markdown":"`vfprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\logging.c"},"region":{"startLine":45,"startColumn":31,"endLine":45,"endColumn":40,"charOffset":1272,"charLength":9,"snippet":{"text":"vsnprintf","rendered":{"text":"vsnprintf","markdown":"`vsnprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\logging.c"},"region":{"startLine":40,"startColumn":16,"endLine":40,"endColumn":23,"charOffset":1151,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\nsgl_context.m"},"region":{"startLine":168,"startColumn":11,"endLine":168,"endColumn":15,"charOffset":5636,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\lineops.h"},"region":{"startLine":58,"startColumn":4,"endLine":58,"endColumn":70,"charOffset":2246,"charLength":66,"snippet":{"text":"memcpy(line->cpu_cells + start, cpu_cells + start, sizeof(CPUCell)","rendered":{"text":"memcpy(line->cpu_cells + start, cpu_cells + start, sizeof(CPUCell)","markdown":"`memcpy(line->cpu_cells + start, cpu_cells + start, sizeof(CPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\lineops.h"},"replacements":[{"deletedRegion":{"charOffset":2246,"charLength":66},"insertedContent":{"text":"memcpy_s(line->cpu_cells + start, <size of line->cpu_cells + start>,  cpu_cells + start,  sizeof(CPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\lineops.h"},"region":{"startLine":57,"startColumn":4,"endLine":57,"endColumn":70,"charOffset":2166,"charLength":66,"snippet":{"text":"memcpy(line->gpu_cells + start, gpu_cells + start, sizeof(GPUCell)","rendered":{"text":"memcpy(line->gpu_cells + start, gpu_cells + start, sizeof(GPUCell)","markdown":"`memcpy(line->gpu_cells + start, gpu_cells + start, sizeof(GPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\lineops.h"},"replacements":[{"deletedRegion":{"charOffset":2166,"charLength":66},"insertedContent":{"text":"memcpy_s(line->gpu_cells + start, <size of line->gpu_cells + start>,  gpu_cells + start,  sizeof(GPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\lineops.h"},"region":{"startLine":52,"startColumn":4,"endLine":52,"endColumn":70,"charOffset":1955,"charLength":66,"snippet":{"text":"memcpy(cpu_cells + start, line->cpu_cells + start, sizeof(CPUCell)","rendered":{"text":"memcpy(cpu_cells + start, line->cpu_cells + start, sizeof(CPUCell)","markdown":"`memcpy(cpu_cells + start, line->cpu_cells + start, sizeof(CPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\lineops.h"},"replacements":[{"deletedRegion":{"charOffset":1955,"charLength":66},"insertedContent":{"text":"memcpy_s(cpu_cells + start, <size of cpu_cells + start>,  line->cpu_cells + start,  sizeof(CPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\lineops.h"},"region":{"startLine":51,"startColumn":4,"endLine":51,"endColumn":70,"charOffset":1875,"charLength":66,"snippet":{"text":"memcpy(gpu_cells + start, line->gpu_cells + start, sizeof(GPUCell)","rendered":{"text":"memcpy(gpu_cells + start, line->gpu_cells + start, sizeof(GPUCell)","markdown":"`memcpy(gpu_cells + start, line->gpu_cells + start, sizeof(GPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\lineops.h"},"replacements":[{"deletedRegion":{"charOffset":1875,"charLength":66},"insertedContent":{"text":"memcpy_s(gpu_cells + start, <size of gpu_cells + start>,  line->gpu_cells + start,  sizeof(GPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\lineops.h"},"region":{"startLine":27,"startColumn":4,"endLine":27,"endColumn":59,"charOffset":871,"charLength":55,"snippet":{"text":"memcpy(dest->gpu_cells, src->gpu_cells, sizeof(GPUCell)","rendered":{"text":"memcpy(dest->gpu_cells, src->gpu_cells, sizeof(GPUCell)","markdown":"`memcpy(dest->gpu_cells, src->gpu_cells, sizeof(GPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\lineops.h"},"replacements":[{"deletedRegion":{"charOffset":871,"charLength":55},"insertedContent":{"text":"memcpy_s(dest->gpu_cells, <size of dest->gpu_cells>,  src->gpu_cells,  sizeof(GPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\lineops.h"},"region":{"startLine":26,"startColumn":4,"endLine":26,"endColumn":59,"charOffset":779,"charLength":55,"snippet":{"text":"memcpy(dest->cpu_cells, src->cpu_cells, sizeof(CPUCell)","rendered":{"text":"memcpy(dest->cpu_cells, src->cpu_cells, sizeof(CPUCell)","markdown":"`memcpy(dest->cpu_cells, src->cpu_cells, sizeof(CPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\lineops.h"},"replacements":[{"deletedRegion":{"charOffset":779,"charLength":55},"insertedContent":{"text":"memcpy_s(dest->cpu_cells, <size of dest->cpu_cells>,  src->cpu_cells,  sizeof(CPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\line.c"},"region":{"startLine":719,"startColumn":55,"endLine":719,"endColumn":72,"charOffset":26317,"charLength":17,"snippet":{"text":"memcpy(p, s, len)","rendered":{"text":"memcpy(p, s, len)","markdown":"`memcpy(p, s, len)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\line.c"},"replacements":[{"deletedRegion":{"charOffset":26317,"charLength":17},"insertedContent":{"text":"memcpy_s(p, <size of p>,  s,  len)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\line.c"},"region":{"startLine":719,"startColumn":28,"endLine":719,"endColumn":37,"charOffset":26290,"charLength":9,"snippet":{"text":"strlen(s)","rendered":{"text":"strlen(s)","markdown":"`strlen(s)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\line.c"},"replacements":[{"deletedRegion":{"charOffset":26290,"charLength":9},"insertedContent":{"text":"strlen_s(s, <size of s>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\line.c"},"replacements":[{"deletedRegion":{"charOffset":26290,"charLength":9},"insertedContent":{"text":"strnlen(s, <size of s>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\monitor.c"},"region":{"startLine":107,"startColumn":12,"endLine":107,"endColumn":19,"charOffset":3496,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\monitor.c"},"region":{"startLine":81,"startColumn":4,"endLine":81,"endColumn":9,"charOffset":2682,"charLength":5,"snippet":{"text":"qsort","rendered":{"text":"qsort","markdown":"`qsort`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\window_logo.c"},"region":{"startLine":70,"startColumn":53,"endLine":70,"endColumn":68,"charOffset":2083,"charLength":15,"snippet":{"text":"strlen(s->path)","rendered":{"text":"strlen(s->path)","markdown":"`strlen(s->path)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\window_logo.c"},"replacements":[{"deletedRegion":{"charOffset":2083,"charLength":15},"insertedContent":{"text":"strlen_s(s->path, <size of s->path>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\window_logo.c"},"replacements":[{"deletedRegion":{"charOffset":2083,"charLength":15},"insertedContent":{"text":"strnlen(s->path, <size of s->path>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\xkb_glfw.c"},"region":{"startLine":615,"startColumn":26,"endLine":615,"endColumn":32,"charOffset":28786,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\xkb_glfw.c"},"region":{"startLine":614,"startColumn":26,"endLine":614,"endColumn":32,"charOffset":28739,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\xkb_glfw.c"},"region":{"startLine":613,"startColumn":25,"endLine":613,"endColumn":31,"charOffset":28694,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\xkb_glfw.c"},"region":{"startLine":527,"startColumn":9,"endLine":527,"endColumn":15,"charOffset":25491,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\xkb_glfw.c"},"region":{"startLine":36,"startColumn":55,"endLine":36,"endColumn":62,"charOffset":1417,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\line-buf.c"},"region":{"startLine":554,"startColumn":8,"endLine":554,"endColumn":64,"charOffset":20241,"charLength":56,"snippet":{"text":"memcpy(other->gpu_cell_buf, self->gpu_cell_buf, (size_t)","rendered":{"text":"memcpy(other->gpu_cell_buf, self->gpu_cell_buf, (size_t)","markdown":"`memcpy(other->gpu_cell_buf, self->gpu_cell_buf, (size_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\line-buf.c"},"replacements":[{"deletedRegion":{"charOffset":20241,"charLength":56},"insertedContent":{"text":"memcpy_s(other->gpu_cell_buf, <size of other->gpu_cell_buf>,  self->gpu_cell_buf,  (size_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\line-buf.c"},"region":{"startLine":553,"startColumn":8,"endLine":553,"endColumn":64,"charOffset":20132,"charLength":56,"snippet":{"text":"memcpy(other->cpu_cell_buf, self->cpu_cell_buf, (size_t)","rendered":{"text":"memcpy(other->cpu_cell_buf, self->cpu_cell_buf, (size_t)","markdown":"`memcpy(other->cpu_cell_buf, self->cpu_cell_buf, (size_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\line-buf.c"},"replacements":[{"deletedRegion":{"charOffset":20132,"charLength":56},"insertedContent":{"text":"memcpy_s(other->cpu_cell_buf, <size of other->cpu_cell_buf>,  self->cpu_cell_buf,  (size_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\line-buf.c"},"region":{"startLine":552,"startColumn":8,"endLine":552,"endColumn":69,"charOffset":20046,"charLength":61,"snippet":{"text":"memcpy(other->line_attrs, self->line_attrs, sizeof(LineAttrs)","rendered":{"text":"memcpy(other->line_attrs, self->line_attrs, sizeof(LineAttrs)","markdown":"`memcpy(other->line_attrs, self->line_attrs, sizeof(LineAttrs)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\line-buf.c"},"replacements":[{"deletedRegion":{"charOffset":20046,"charLength":61},"insertedContent":{"text":"memcpy_s(other->line_attrs, <size of other->line_attrs>,  self->line_attrs,  sizeof(LineAttrs)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\line-buf.c"},"region":{"startLine":551,"startColumn":8,"endLine":551,"endColumn":66,"charOffset":19963,"charLength":58,"snippet":{"text":"memcpy(other->line_map, self->line_map, sizeof(index_type)","rendered":{"text":"memcpy(other->line_map, self->line_map, sizeof(index_type)","markdown":"`memcpy(other->line_map, self->line_map, sizeof(index_type)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\line-buf.c"},"replacements":[{"deletedRegion":{"charOffset":19963,"charLength":58},"insertedContent":{"text":"memcpy_s(other->line_map, <size of other->line_map>,  self->line_map,  sizeof(index_type)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\window.py"},"region":{"startLine":928,"startColumn":16,"endLine":928,"endColumn":20,"charOffset":35988,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\window.py"},"region":{"startLine":847,"startColumn":95,"endLine":847,"endColumn":104,"charOffset":32235,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"region":{"startLine":301,"startColumn":73,"endLine":301,"endColumn":81,"charOffset":13366,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"region":{"startLine":296,"startColumn":43,"endLine":296,"endColumn":51,"charOffset":13101,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"region":{"startLine":270,"startColumn":8,"endLine":270,"endColumn":57,"charOffset":11671,"charLength":49,"snippet":{"text":"memcpy(right_dest, src, margin * sizeof(uint32_t)","rendered":{"text":"memcpy(right_dest, src, margin * sizeof(uint32_t)","markdown":"`memcpy(right_dest, src, margin * sizeof(uint32_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"replacements":[{"deletedRegion":{"charOffset":11671,"charLength":49},"insertedContent":{"text":"memcpy_s(right_dest, <size of right_dest>,  src,  margin * sizeof(uint32_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"region":{"startLine":267,"startColumn":8,"endLine":267,"endColumn":56,"charOffset":11464,"charLength":48,"snippet":{"text":"memcpy(left_dest, src, margin * sizeof(uint32_t)","rendered":{"text":"memcpy(left_dest, src, margin * sizeof(uint32_t)","markdown":"`memcpy(left_dest, src, margin * sizeof(uint32_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"replacements":[{"deletedRegion":{"charOffset":11464,"charLength":48},"insertedContent":{"text":"memcpy_s(left_dest, <size of left_dest>,  src,  margin * sizeof(uint32_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"region":{"startLine":259,"startColumn":8,"endLine":259,"endColumn":46,"charOffset":10998,"charLength":38,"snippet":{"text":"memcpy(d, s, margin * sizeof(uint32_t)","rendered":{"text":"memcpy(d, s, margin * sizeof(uint32_t)","markdown":"`memcpy(d, s, margin * sizeof(uint32_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"replacements":[{"deletedRegion":{"charOffset":10998,"charLength":38},"insertedContent":{"text":"memcpy_s(d, <size of d>,  s,  margin * sizeof(uint32_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"region":{"startLine":256,"startColumn":8,"endLine":256,"endColumn":46,"charOffset":10823,"charLength":38,"snippet":{"text":"memcpy(d, s, margin * sizeof(uint32_t)","rendered":{"text":"memcpy(d, s, margin * sizeof(uint32_t)","markdown":"`memcpy(d, s, margin * sizeof(uint32_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"replacements":[{"deletedRegion":{"charOffset":10823,"charLength":38},"insertedContent":{"text":"memcpy_s(d, <size of d>,  s,  margin * sizeof(uint32_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"region":{"startLine":246,"startColumn":8,"endLine":246,"endColumn":63,"charOffset":10232,"charLength":55,"snippet":{"text":"memcpy(right_dest, right_src, margin * sizeof(uint32_t)","rendered":{"text":"memcpy(right_dest, right_src, margin * sizeof(uint32_t)","markdown":"`memcpy(right_dest, right_src, margin * sizeof(uint32_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"replacements":[{"deletedRegion":{"charOffset":10232,"charLength":55},"insertedContent":{"text":"memcpy_s(right_dest, <size of right_dest>,  right_src,  margin * sizeof(uint32_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"region":{"startLine":243,"startColumn":8,"endLine":243,"endColumn":61,"charOffset":9999,"charLength":53,"snippet":{"text":"memcpy(left_dest, left_src, margin * sizeof(uint32_t)","rendered":{"text":"memcpy(left_dest, left_src, margin * sizeof(uint32_t)","markdown":"`memcpy(left_dest, left_src, margin * sizeof(uint32_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"replacements":[{"deletedRegion":{"charOffset":9999,"charLength":53},"insertedContent":{"text":"memcpy_s(left_dest, <size of left_dest>,  left_src,  margin * sizeof(uint32_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"region":{"startLine":156,"startColumn":14,"endLine":156,"endColumn":37,"charOffset":6018,"charLength":23,"snippet":{"text":"malloc(sizeof(uint32_t)","rendered":{"text":"malloc(sizeof(uint32_t)","markdown":"`malloc(sizeof(uint32_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"replacements":[{"deletedRegion":{"charOffset":6018,"charLength":23},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_client_side_decorations.c"},"region":{"startLine":16,"startColumn":56,"endLine":16,"endColumn":63,"charOffset":372,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":40,"startColumn":26,"endLine":40,"endColumn":33,"charOffset":922,"charLength":7,"snippet":{"text":"asctime","rendered":{"text":"asctime","markdown":"`asctime`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":40,"startColumn":8,"endLine":40,"endColumn":15,"charOffset":904,"charLength":7,"snippet":{"text":"asctime","rendered":{"text":"asctime","markdown":"`asctime`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":39,"startColumn":7,"endLine":39,"endColumn":14,"charOffset":887,"charLength":7,"snippet":{"text":"asctime","rendered":{"text":"asctime","markdown":"`asctime`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":36,"startColumn":24,"endLine":36,"endColumn":29,"charOffset":815,"charLength":5,"snippet":{"text":"ctime","rendered":{"text":"ctime","markdown":"`ctime`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":36,"startColumn":8,"endLine":36,"endColumn":13,"charOffset":799,"charLength":5,"snippet":{"text":"ctime","rendered":{"text":"ctime","markdown":"`ctime`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":35,"startColumn":7,"endLine":35,"endColumn":12,"charOffset":784,"charLength":5,"snippet":{"text":"ctime","rendered":{"text":"ctime","markdown":"`ctime`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":34,"startColumn":28,"endLine":34,"endColumn":37,"charOffset":765,"charLength":9,"snippet":{"text":"localtime","rendered":{"text":"localtime","markdown":"`localtime`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":34,"startColumn":8,"endLine":34,"endColumn":17,"charOffset":745,"charLength":9,"snippet":{"text":"localtime","rendered":{"text":"localtime","markdown":"`localtime`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":33,"startColumn":7,"endLine":33,"endColumn":16,"charOffset":726,"charLength":9,"snippet":{"text":"localtime","rendered":{"text":"localtime","markdown":"`localtime`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":32,"startColumn":25,"endLine":32,"endColumn":31,"charOffset":710,"charLength":6,"snippet":{"text":"gmtime","rendered":{"text":"gmtime","markdown":"`gmtime`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":32,"startColumn":8,"endLine":32,"endColumn":14,"charOffset":693,"charLength":6,"snippet":{"text":"gmtime","rendered":{"text":"gmtime","markdown":"`gmtime`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":31,"startColumn":7,"endLine":31,"endColumn":13,"charOffset":677,"charLength":6,"snippet":{"text":"gmtime","rendered":{"text":"gmtime","markdown":"`gmtime`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":28,"startColumn":37,"endLine":28,"endColumn":45,"charOffset":649,"charLength":8,"snippet":{"text":"vsprintf","rendered":{"text":"vsprintf","markdown":"`vsprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":28,"startColumn":8,"endLine":28,"endColumn":16,"charOffset":620,"charLength":8,"snippet":{"text":"vsprintf","rendered":{"text":"vsprintf","markdown":"`vsprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":27,"startColumn":36,"endLine":27,"endColumn":43,"charOffset":602,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":27,"startColumn":8,"endLine":27,"endColumn":15,"charOffset":574,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":25,"startColumn":29,"endLine":25,"endColumn":37,"charOffset":548,"charLength":8,"snippet":{"text":"vsprintf","rendered":{"text":"vsprintf","markdown":"`vsprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":25,"startColumn":8,"endLine":25,"endColumn":16,"charOffset":527,"charLength":8,"snippet":{"text":"vsprintf","rendered":{"text":"vsprintf","markdown":"`vsprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":24,"startColumn":28,"endLine":24,"endColumn":35,"charOffset":509,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":24,"startColumn":8,"endLine":24,"endColumn":15,"charOffset":489,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":22,"startColumn":7,"endLine":22,"endColumn":15,"charOffset":442,"charLength":8,"snippet":{"text":"vsprintf","rendered":{"text":"vsprintf","markdown":"`vsprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":21,"startColumn":7,"endLine":21,"endColumn":14,"charOffset":426,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS108330","level":"error","message":{"text":"Banned C function detected (strncat)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":19,"startColumn":8,"endLine":19,"endColumn":22,"charOffset":385,"charLength":14,"snippet":{"text":"strncat(x,y,n)","rendered":{"text":"strncat(x,y,n)","markdown":"`strncat(x,y,n)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncat adds the null terminator at character 'n + 1', rather than at the nth character. this frequently leads to the null terminator being added in the memory adjacent to the destination buffer, rather than in the destination buffer."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\banned.h"},"replacements":[{"deletedRegion":{"charOffset":385,"charLength":14},"insertedContent":{"text":"strcat_s(x, n, y)"}}]}]},{"description":{"text":"strncat adds the null terminator at character 'n + 1', rather than at the nth character. this frequently leads to the null terminator being added in the memory adjacent to the destination buffer, rather than in the destination buffer."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\banned.h"},"replacements":[{"deletedRegion":{"charOffset":385,"charLength":14},"insertedContent":{"text":"strlcat(x, y, n)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":17,"startColumn":8,"endLine":17,"endColumn":22,"charOffset":329,"charLength":14,"snippet":{"text":"strncpy(x,y,n)","rendered":{"text":"strncpy(x,y,n)","markdown":"`strncpy(x,y,n)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\banned.h"},"replacements":[{"deletedRegion":{"charOffset":329,"charLength":14},"insertedContent":{"text":"strcpy_s(x, n, y)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\banned.h"},"replacements":[{"deletedRegion":{"charOffset":329,"charLength":14},"insertedContent":{"text":"strlcpy(x, y, n)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS141863","level":"error","message":{"text":"Banned C function detected (strcat)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":15,"startColumn":8,"endLine":15,"endColumn":19,"charOffset":277,"charLength":11,"snippet":{"text":"strcat(x,y)","rendered":{"text":"strcat(x,y)","markdown":"`strcat(x,y)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the combination of strings is larger than the destination buffer, strcat will cbuffer overflow the destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\banned.h"},"replacements":[{"deletedRegion":{"charOffset":277,"charLength":11},"insertedContent":{"text":"strcat_s(x, <size of x>, y)"}}]}]},{"description":{"text":"If the combination of strings is larger than the destination buffer, strcat will cbuffer overflow the destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\banned.h"},"replacements":[{"deletedRegion":{"charOffset":277,"charLength":11},"insertedContent":{"text":"strlcat(x, y, <size of x>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\banned.h"},"region":{"startLine":13,"startColumn":8,"endLine":13,"endColumn":19,"charOffset":226,"charLength":11,"snippet":{"text":"strcpy(x,y)","rendered":{"text":"strcpy(x,y)","markdown":"`strcpy(x,y)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\banned.h"},"replacements":[{"deletedRegion":{"charOffset":226,"charLength":11},"insertedContent":{"text":"strcpy_s(x, <size of x>, y)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\banned.h"},"replacements":[{"deletedRegion":{"charOffset":226,"charLength":11},"insertedContent":{"text":"strlcpy(x, y, <size of x>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\window.c"},"region":{"startLine":494,"startColumn":12,"endLine":495,"endColumn":55,"charOffset":17280,"charLength":100,"snippet":{"text":"strncpy(_glfw.hints.window.wl.appId, value,\r\n                    sizeof(_glfw.hints.window.wl.appId)","rendered":{"text":"strncpy(_glfw.hints.window.wl.appId, value,\r\n                    sizeof(_glfw.hints.window.wl.appId)","markdown":"`strncpy(_glfw.hints.window.wl.appId, value,\r\n                    sizeof(_glfw.hints.window.wl.appId)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\window.c"},"replacements":[{"deletedRegion":{"charOffset":17280,"charLength":100},"insertedContent":{"text":"strcpy_s(_glfw.hints.window.wl.appId, \r\n                    sizeof(_glfw.hints.window.wl.appId,  value)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\window.c"},"replacements":[{"deletedRegion":{"charOffset":17280,"charLength":100},"insertedContent":{"text":"strlcpy(_glfw.hints.window.wl.appId,  value, \r\n                    sizeof(_glfw.hints.window.wl.appId)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\window.c"},"region":{"startLine":490,"startColumn":12,"endLine":491,"endColumn":63,"charOffset":17088,"charLength":116,"snippet":{"text":"strncpy(_glfw.hints.window.x11.instanceName, value,\r\n                    sizeof(_glfw.hints.window.x11.instanceName)","rendered":{"text":"strncpy(_glfw.hints.window.x11.instanceName, value,\r\n                    sizeof(_glfw.hints.window.x11.instanceName)","markdown":"`strncpy(_glfw.hints.window.x11.instanceName, value,\r\n                    sizeof(_glfw.hints.window.x11.instanceName)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\window.c"},"replacements":[{"deletedRegion":{"charOffset":17088,"charLength":116},"insertedContent":{"text":"strcpy_s(_glfw.hints.window.x11.instanceName, \r\n                    sizeof(_glfw.hints.window.x11.instanceName,  value)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\window.c"},"replacements":[{"deletedRegion":{"charOffset":17088,"charLength":116},"insertedContent":{"text":"strlcpy(_glfw.hints.window.x11.instanceName,  value, \r\n                    sizeof(_glfw.hints.window.x11.instanceName)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\backtrace.h"},"region":{"startLine":31,"startColumn":4,"endLine":31,"endColumn":11,"charOffset":619,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\window.c"},"region":{"startLine":486,"startColumn":12,"endLine":487,"endColumn":60,"charOffset":16899,"charLength":110,"snippet":{"text":"strncpy(_glfw.hints.window.x11.className, value,\r\n                    sizeof(_glfw.hints.window.x11.className)","rendered":{"text":"strncpy(_glfw.hints.window.x11.className, value,\r\n                    sizeof(_glfw.hints.window.x11.className)","markdown":"`strncpy(_glfw.hints.window.x11.className, value,\r\n                    sizeof(_glfw.hints.window.x11.className)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\window.c"},"replacements":[{"deletedRegion":{"charOffset":16899,"charLength":110},"insertedContent":{"text":"strcpy_s(_glfw.hints.window.x11.className, \r\n                    sizeof(_glfw.hints.window.x11.className,  value)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\window.c"},"replacements":[{"deletedRegion":{"charOffset":16899,"charLength":110},"insertedContent":{"text":"strlcpy(_glfw.hints.window.x11.className,  value, \r\n                    sizeof(_glfw.hints.window.x11.className)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\window.c"},"region":{"startLine":482,"startColumn":12,"endLine":483,"endColumn":59,"charOffset":16715,"charLength":108,"snippet":{"text":"strncpy(_glfw.hints.window.ns.frameName, value,\r\n                    sizeof(_glfw.hints.window.ns.frameName)","rendered":{"text":"strncpy(_glfw.hints.window.ns.frameName, value,\r\n                    sizeof(_glfw.hints.window.ns.frameName)","markdown":"`strncpy(_glfw.hints.window.ns.frameName, value,\r\n                    sizeof(_glfw.hints.window.ns.frameName)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\window.c"},"replacements":[{"deletedRegion":{"charOffset":16715,"charLength":108},"insertedContent":{"text":"strcpy_s(_glfw.hints.window.ns.frameName, \r\n                    sizeof(_glfw.hints.window.ns.frameName,  value)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\window.c"},"replacements":[{"deletedRegion":{"charOffset":16715,"charLength":108},"insertedContent":{"text":"strlcpy(_glfw.hints.window.ns.frameName,  value, \r\n                    sizeof(_glfw.hints.window.ns.frameName)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\key_encoding.c"},"region":{"startLine":76,"startColumn":4,"endLine":76,"endColumn":73,"charOffset":3041,"charLength":69,"snippet":{"text":"memcpy(ans->encoded_mods, ev->mods.encoded, sizeof(ans->encoded_mods)","rendered":{"text":"memcpy(ans->encoded_mods, ev->mods.encoded, sizeof(ans->encoded_mods)","markdown":"`memcpy(ans->encoded_mods, ev->mods.encoded, sizeof(ans->encoded_mods)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\key_encoding.c"},"replacements":[{"deletedRegion":{"charOffset":3041,"charLength":69},"insertedContent":{"text":"memcpy_s(ans->encoded_mods, <size of ans->encoded_mods>,  ev->mods.encoded,  sizeof(ans->encoded_mods)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_text_input.c"},"region":{"startLine":12,"startColumn":55,"endLine":12,"endColumn":61,"charOffset":333,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":2161,"startColumn":11,"endLine":2161,"endColumn":15,"charOffset":73722,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":2057,"startColumn":7,"endLine":2057,"endColumn":11,"charOffset":70495,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":1988,"startColumn":44,"endLine":1988,"endColumn":57,"charOffset":68483,"charLength":13,"snippet":{"text":"strlen(title)","rendered":{"text":"strlen(title)","markdown":"`strlen(title)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":68483,"charLength":13},"insertedContent":{"text":"strlen_s(title, <size of title>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":68483,"charLength":13},"insertedContent":{"text":"strnlen(title, <size of title>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":1983,"startColumn":44,"endLine":1983,"endColumn":57,"charOffset":68246,"charLength":13,"snippet":{"text":"strlen(title)","rendered":{"text":"strlen(title)","markdown":"`strlen(title)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":68246,"charLength":13},"insertedContent":{"text":"strlen_s(title, <size of title>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":68246,"charLength":13},"insertedContent":{"text":"strnlen(title, <size of title>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":1544,"startColumn":32,"endLine":1544,"endColumn":108,"charOffset":52745,"charLength":76,"snippet":{"text":"strncpy(_glfw.x11.xdnd.format, atom_names[i], arraysz(_glfw.x11.xdnd.format)","rendered":{"text":"strncpy(_glfw.x11.xdnd.format, atom_names[i], arraysz(_glfw.x11.xdnd.format)","markdown":"`strncpy(_glfw.x11.xdnd.format, atom_names[i], arraysz(_glfw.x11.xdnd.format)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":52745,"charLength":76},"insertedContent":{"text":"strcpy_s(_glfw.x11.xdnd.format,  arraysz(_glfw.x11.xdnd.format,  atom_names[i])"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":52745,"charLength":76},"insertedContent":{"text":"strlcpy(_glfw.x11.xdnd.format,  atom_names[i],  arraysz(_glfw.x11.xdnd.format)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":1371,"startColumn":15,"endLine":1371,"endColumn":19,"charOffset":45802,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":1272,"startColumn":27,"endLine":1272,"endColumn":31,"charOffset":41631,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":1259,"startColumn":19,"endLine":1259,"endColumn":23,"charOffset":40915,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":1211,"startColumn":52,"endLine":1211,"endColumn":58,"charOffset":39399,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":1196,"startColumn":52,"endLine":1196,"endColumn":58,"charOffset":38601,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS141863","level":"error","message":{"text":"Banned C function detected (strcat)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":994,"startColumn":20,"endLine":994,"endColumn":40,"charOffset":32454,"charLength":20,"snippet":{"text":"strcat(string, data)","rendered":{"text":"strcat(string, data)","markdown":"`strcat(string, data)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the combination of strings is larger than the destination buffer, strcat will cbuffer overflow the destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":32454,"charLength":20},"insertedContent":{"text":"strcat_s(string, <size of string>,  data)"}}]}]},{"description":{"text":"If the combination of strings is larger than the destination buffer, strcat will cbuffer overflow the destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":32454,"charLength":20},"insertedContent":{"text":"strlcat(string,  data, <size of string>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":844,"startColumn":28,"endLine":844,"endColumn":51,"charOffset":27165,"charLength":23,"snippet":{"text":"strlen(selectionString)","rendered":{"text":"strlen(selectionString)","markdown":"`strlen(selectionString)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":27165,"charLength":23},"insertedContent":{"text":"strlen_s(selectionString, <size of selectionString>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":27165,"charLength":23},"insertedContent":{"text":"strnlen(selectionString, <size of selectionString>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":792,"startColumn":32,"endLine":792,"endColumn":55,"charOffset":25508,"charLength":23,"snippet":{"text":"strlen(selectionString)","rendered":{"text":"strlen(selectionString)","markdown":"`strlen(selectionString)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":25508,"charLength":23},"insertedContent":{"text":"strlen_s(selectionString, <size of selectionString>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":25508,"charLength":23},"insertedContent":{"text":"strnlen(selectionString, <size of selectionString>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":694,"startColumn":16,"endLine":694,"endColumn":40,"charOffset":22113,"charLength":24,"snippet":{"text":"strlen(wndconfig->title)","rendered":{"text":"strlen(wndconfig->title)","markdown":"`strlen(wndconfig->title)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":22113,"charLength":24},"insertedContent":{"text":"strlen_s(wndconfig->title, <size of wndconfig->title>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":22113,"charLength":24},"insertedContent":{"text":"strnlen(wndconfig->title, <size of wndconfig->title>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":689,"startColumn":21,"endLine":689,"endColumn":45,"charOffset":21928,"charLength":24,"snippet":{"text":"strlen(wndconfig->title)","rendered":{"text":"strlen(wndconfig->title)","markdown":"`strlen(wndconfig->title)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21928,"charLength":24},"insertedContent":{"text":"strlen_s(wndconfig->title, <size of wndconfig->title>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21928,"charLength":24},"insertedContent":{"text":"strnlen(wndconfig->title, <size of wndconfig->title>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":687,"startColumn":32,"endLine":687,"endColumn":52,"charOffset":21828,"charLength":20,"snippet":{"text":"strlen(resourceName)","rendered":{"text":"strlen(resourceName)","markdown":"`strlen(resourceName)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21828,"charLength":20},"insertedContent":{"text":"strlen_s(resourceName, <size of resourceName>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21828,"charLength":20},"insertedContent":{"text":"strnlen(resourceName, <size of resourceName>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":686,"startColumn":39,"endLine":686,"endColumn":45,"charOffset":21770,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":679,"startColumn":12,"endLine":679,"endColumn":44,"charOffset":21517,"charLength":32,"snippet":{"text":"strlen(wndconfig->x11.className)","rendered":{"text":"strlen(wndconfig->x11.className)","markdown":"`strlen(wndconfig->x11.className)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21517,"charLength":32},"insertedContent":{"text":"strlen_s(wndconfig->x11.className, <size of wndconfig->x11.className>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21517,"charLength":32},"insertedContent":{"text":"strnlen(wndconfig->x11.className, <size of wndconfig->x11.className>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_window.c"},"region":{"startLine":678,"startColumn":12,"endLine":678,"endColumn":47,"charOffset":21465,"charLength":35,"snippet":{"text":"strlen(wndconfig->x11.instanceName)","rendered":{"text":"strlen(wndconfig->x11.instanceName)","markdown":"`strlen(wndconfig->x11.instanceName)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21465,"charLength":35},"insertedContent":{"text":"strlen_s(wndconfig->x11.instanceName, <size of wndconfig->x11.instanceName>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_window.c"},"replacements":[{"deletedRegion":{"charOffset":21465,"charLength":35},"insertedContent":{"text":"strnlen(wndconfig->x11.instanceName, <size of wndconfig->x11.instanceName>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_init.c"},"region":{"startLine":141,"startColumn":7,"endLine":141,"endColumn":11,"charOffset":4647,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_init.c"},"region":{"startLine":57,"startColumn":56,"endLine":57,"endColumn":63,"charOffset":2030,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\keys.h"},"region":{"startLine":16,"startColumn":46,"endLine":16,"endColumn":53,"charOffset":338,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\keys.c"},"region":{"startLine":218,"startColumn":48,"endLine":218,"endColumn":60,"charOffset":8604,"charLength":12,"snippet":{"text":"strlen(text)","rendered":{"text":"strlen(text)","markdown":"`strlen(text)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\keys.c"},"replacements":[{"deletedRegion":{"charOffset":8604,"charLength":12},"insertedContent":{"text":"strlen_s(text, <size of text>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\keys.c"},"replacements":[{"deletedRegion":{"charOffset":8604,"charLength":12},"insertedContent":{"text":"strnlen(text, <size of text>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\keys.c"},"region":{"startLine":152,"startColumn":56,"endLine":152,"endColumn":68,"charOffset":5802,"charLength":12,"snippet":{"text":"strlen(text)","rendered":{"text":"strlen(text)","markdown":"`strlen(text)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\keys.c"},"replacements":[{"deletedRegion":{"charOffset":5802,"charLength":12},"insertedContent":{"text":"strlen_s(text, <size of text>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\keys.c"},"replacements":[{"deletedRegion":{"charOffset":5802,"charLength":12},"insertedContent":{"text":"strnlen(text, <size of text>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_notify.c"},"region":{"startLine":73,"startColumn":36,"endLine":73,"endColumn":74,"charOffset":2909,"charLength":38,"snippet":{"text":"malloc(sizeof(NotificationCreatedData)","rendered":{"text":"malloc(sizeof(NotificationCreatedData)","markdown":"`malloc(sizeof(NotificationCreatedData)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\linux_notify.c"},"replacements":[{"deletedRegion":{"charOffset":2909,"charLength":38},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"region":{"startLine":360,"startColumn":4,"endLine":360,"endColumn":9,"charOffset":11137,"charLength":5,"snippet":{"text":"qsort","rendered":{"text":"qsort","markdown":"`qsort`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"region":{"startLine":317,"startColumn":11,"endLine":317,"endColumn":15,"charOffset":9926,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"region":{"startLine":234,"startColumn":4,"endLine":234,"endColumn":44,"charOffset":7539,"charLength":40,"snippet":{"text":"memcpy(&js->linjs, &linjs, sizeof(linjs)","rendered":{"text":"memcpy(&js->linjs, &linjs, sizeof(linjs)","markdown":"`memcpy(&js->linjs, &linjs, sizeof(linjs)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"replacements":[{"deletedRegion":{"charOffset":7539,"charLength":40},"insertedContent":{"text":"memcpy_s(&js->linjs, <size of &js->linjs>,  &linjs,  sizeof(linjs)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"region":{"startLine":233,"startColumn":4,"endLine":233,"endColumn":48,"charOffset":7483,"charLength":44,"snippet":{"text":"strncpy(linjs.path, path, sizeof(linjs.path)","rendered":{"text":"strncpy(linjs.path, path, sizeof(linjs.path)","markdown":"`strncpy(linjs.path, path, sizeof(linjs.path)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"replacements":[{"deletedRegion":{"charOffset":7483,"charLength":44},"insertedContent":{"text":"strcpy_s(linjs.path,  sizeof(linjs.path,  path)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"replacements":[{"deletedRegion":{"charOffset":7483,"charLength":44},"insertedContent":{"text":"strlcpy(linjs.path,  path,  sizeof(linjs.path)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"region":{"startLine":184,"startColumn":8,"endLine":184,"endColumn":15,"charOffset":6163,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"region":{"startLine":176,"startColumn":8,"endLine":176,"endColumn":15,"charOffset":5852,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"region":{"startLine":169,"startColumn":8,"endLine":169,"endColumn":46,"charOffset":5654,"charLength":38,"snippet":{"text":"strncpy(name, \"Unknown\", sizeof(name))","rendered":{"text":"strncpy(name, \"Unknown\", sizeof(name))","markdown":"`strncpy(name, \"Unknown\", sizeof(name))`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"replacements":[{"deletedRegion":{"charOffset":5654,"charLength":38},"insertedContent":{"text":"strcpy_s(name,  sizeof(name,  \"Unknown\")"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"replacements":[{"deletedRegion":{"charOffset":5654,"charLength":38},"insertedContent":{"text":"strlcpy(name,  \"Unknown\",  sizeof(name)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_joystick.c"},"region":{"startLine":154,"startColumn":24,"endLine":154,"endColumn":32,"charOffset":5270,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS126858","level":"error","message":{"text":"Weak/Broken Hash Algorithm"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\transfer\\rsync.c"},"region":{"startLine":68,"startColumn":22,"endLine":68,"endColumn":25,"charOffset":2276,"charLength":3,"snippet":{"text":"MD4","rendered":{"text":"MD4","markdown":"`MD4`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\transfer\\rsync.c"},"replacements":[{"deletedRegion":{"charOffset":2276,"charLength":3},"insertedContent":{"text":"SHA256"}}]}]},{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\transfer\\rsync.c"},"replacements":[{"deletedRegion":{"charOffset":2276,"charLength":3},"insertedContent":{"text":"SHA512"}}]}]}],"properties":{"tags":["Cryptography.BannedHashAlgorithm"],"DevSkimSeverity":"Critical","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"region":{"startLine":130,"startColumn":4,"endLine":130,"endColumn":42,"charOffset":3932,"charLength":38,"snippet":{"text":"memcpy((void*)s->key, key, keylen + 1)","rendered":{"text":"memcpy((void*)s->key, key, keylen + 1)","markdown":"`memcpy((void*)s->key, key, keylen + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"replacements":[{"deletedRegion":{"charOffset":3932,"charLength":38},"insertedContent":{"text":"memcpy_s((void*)s->key, <size of (void*)s->key>,  key,  keylen + 1)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"region":{"startLine":128,"startColumn":13,"endLine":128,"endColumn":31,"charOffset":3865,"charLength":18,"snippet":{"text":"malloc(keylen + 1)","rendered":{"text":"malloc(keylen + 1)","markdown":"`malloc(keylen + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"replacements":[{"deletedRegion":{"charOffset":3865,"charLength":18},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"region":{"startLine":126,"startColumn":8,"endLine":126,"endColumn":37,"charOffset":3782,"charLength":29,"snippet":{"text":"malloc(sizeof(HyperLinkEntry)","rendered":{"text":"malloc(sizeof(HyperLinkEntry)","markdown":"`malloc(sizeof(HyperLinkEntry)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"replacements":[{"deletedRegion":{"charOffset":3782,"charLength":29},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"region":{"startLine":113,"startColumn":58,"endLine":113,"endColumn":72,"charOffset":3190,"charLength":14,"snippet":{"text":"strlen(s->key)","rendered":{"text":"strlen(s->key)","markdown":"`strlen(s->key)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"replacements":[{"deletedRegion":{"charOffset":3190,"charLength":14},"insertedContent":{"text":"strlen_s(s->key, <size of s->key>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"replacements":[{"deletedRegion":{"charOffset":3190,"charLength":14},"insertedContent":{"text":"strnlen(s->key, <size of s->key>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"region":{"startLine":103,"startColumn":29,"endLine":103,"endColumn":40,"charOffset":2638,"charLength":11,"snippet":{"text":"strlen(key)","rendered":{"text":"strlen(key)","markdown":"`strlen(key)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"replacements":[{"deletedRegion":{"charOffset":2638,"charLength":11},"insertedContent":{"text":"strlen_s(key, <size of key>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\hyperlink.c"},"replacements":[{"deletedRegion":{"charOffset":2638,"charLength":11},"insertedContent":{"text":"strnlen(key, <size of key>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_init.m"},"region":{"startLine":165,"startColumn":7,"endLine":165,"endColumn":11,"charOffset":6014,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\history.c"},"region":{"startLine":579,"startColumn":12,"endLine":579,"endColumn":112,"charOffset":20433,"charLength":100,"snippet":{"text":"memcpy(other->segments[i].line_attrs, self->segments[i].line_attrs, SEGMENT_SIZE * sizeof(LineAttrs)","rendered":{"text":"memcpy(other->segments[i].line_attrs, self->segments[i].line_attrs, SEGMENT_SIZE * sizeof(LineAttrs)","markdown":"`memcpy(other->segments[i].line_attrs, self->segments[i].line_attrs, SEGMENT_SIZE * sizeof(LineAttrs)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\history.c"},"replacements":[{"deletedRegion":{"charOffset":20433,"charLength":100},"insertedContent":{"text":"memcpy_s(other->segments[i].line_attrs, <size of other->segments[i].line_attrs>,  self->segments[i].line_attrs,  SEGMENT_SIZE * sizeof(LineAttrs)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\history.c"},"region":{"startLine":578,"startColumn":12,"endLine":578,"endColumn":121,"charOffset":20308,"charLength":109,"snippet":{"text":"memcpy(other->segments[i].gpu_cells, self->segments[i].gpu_cells, SEGMENT_SIZE * self->xnum * sizeof(GPUCell)","rendered":{"text":"memcpy(other->segments[i].gpu_cells, self->segments[i].gpu_cells, SEGMENT_SIZE * self->xnum * sizeof(GPUCell)","markdown":"`memcpy(other->segments[i].gpu_cells, self->segments[i].gpu_cells, SEGMENT_SIZE * self->xnum * sizeof(GPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\history.c"},"replacements":[{"deletedRegion":{"charOffset":20308,"charLength":109},"insertedContent":{"text":"memcpy_s(other->segments[i].gpu_cells, <size of other->segments[i].gpu_cells>,  self->segments[i].gpu_cells,  SEGMENT_SIZE * self->xnum * sizeof(GPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\history.c"},"region":{"startLine":577,"startColumn":12,"endLine":577,"endColumn":121,"charOffset":20183,"charLength":109,"snippet":{"text":"memcpy(other->segments[i].cpu_cells, self->segments[i].cpu_cells, SEGMENT_SIZE * self->xnum * sizeof(CPUCell)","rendered":{"text":"memcpy(other->segments[i].cpu_cells, self->segments[i].cpu_cells, SEGMENT_SIZE * self->xnum * sizeof(CPUCell)","markdown":"`memcpy(other->segments[i].cpu_cells, self->segments[i].cpu_cells, SEGMENT_SIZE * self->xnum * sizeof(CPUCell)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\history.c"},"replacements":[{"deletedRegion":{"charOffset":20183,"charLength":109},"insertedContent":{"text":"memcpy_s(other->segments[i].cpu_cells, <size of other->segments[i].cpu_cells>,  self->segments[i].cpu_cells,  SEGMENT_SIZE * self->xnum * sizeof(CPUCell)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\history.c"},"region":{"startLine":423,"startColumn":29,"endLine":423,"endColumn":49,"charOffset":15008,"charLength":20,"snippet":{"text":"strlen((const char*)","rendered":{"text":"strlen((const char*)","markdown":"`strlen((const char*)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\history.c"},"replacements":[{"deletedRegion":{"charOffset":15008,"charLength":20},"insertedContent":{"text":"strlen_s((const char*, <size of (const char*>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\history.c"},"replacements":[{"deletedRegion":{"charOffset":15008,"charLength":20},"insertedContent":{"text":"strnlen((const char*, <size of (const char*>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\utils.py"},"region":{"startLine":1092,"startColumn":61,"endLine":1092,"endColumn":71,"charOffset":35029,"charLength":10,"snippet":{"text":"http://'):","rendered":{"text":"http://'):","markdown":"`http://'):`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\utils.py"},"replacements":[{"deletedRegion":{"charOffset":35029,"charLength":10},"insertedContent":{"text":"https://'):"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"region":{"startLine":157,"startColumn":4,"endLine":157,"endColumn":63,"charOffset":5437,"charLength":59,"snippet":{"text":"memcpy(monitor->null.ramp.blue,  ramp->blue,  sizeof(short)","rendered":{"text":"memcpy(monitor->null.ramp.blue,  ramp->blue,  sizeof(short)","markdown":"`memcpy(monitor->null.ramp.blue,  ramp->blue,  sizeof(short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":5437,"charLength":59},"insertedContent":{"text":"memcpy_s(monitor->null.ramp.blue, <size of monitor->null.ramp.blue>,   ramp->blue,   sizeof(short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"region":{"startLine":156,"startColumn":4,"endLine":156,"endColumn":63,"charOffset":5357,"charLength":59,"snippet":{"text":"memcpy(monitor->null.ramp.green, ramp->green, sizeof(short)","rendered":{"text":"memcpy(monitor->null.ramp.green, ramp->green, sizeof(short)","markdown":"`memcpy(monitor->null.ramp.green, ramp->green, sizeof(short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":5357,"charLength":59},"insertedContent":{"text":"memcpy_s(monitor->null.ramp.green, <size of monitor->null.ramp.green>,  ramp->green,  sizeof(short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"region":{"startLine":155,"startColumn":4,"endLine":155,"endColumn":63,"charOffset":5277,"charLength":59,"snippet":{"text":"memcpy(monitor->null.ramp.red,   ramp->red,   sizeof(short)","rendered":{"text":"memcpy(monitor->null.ramp.red,   ramp->red,   sizeof(short)","markdown":"`memcpy(monitor->null.ramp.red,   ramp->red,   sizeof(short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":5277,"charLength":59},"insertedContent":{"text":"memcpy_s(monitor->null.ramp.red, <size of monitor->null.ramp.red>,    ramp->red,    sizeof(short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"region":{"startLine":142,"startColumn":4,"endLine":142,"endColumn":63,"charOffset":4882,"charLength":59,"snippet":{"text":"memcpy(ramp->blue,  monitor->null.ramp.blue,  sizeof(short)","rendered":{"text":"memcpy(ramp->blue,  monitor->null.ramp.blue,  sizeof(short)","markdown":"`memcpy(ramp->blue,  monitor->null.ramp.blue,  sizeof(short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":4882,"charLength":59},"insertedContent":{"text":"memcpy_s(ramp->blue, <size of ramp->blue>,   monitor->null.ramp.blue,   sizeof(short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"region":{"startLine":141,"startColumn":4,"endLine":141,"endColumn":63,"charOffset":4802,"charLength":59,"snippet":{"text":"memcpy(ramp->green, monitor->null.ramp.green, sizeof(short)","rendered":{"text":"memcpy(ramp->green, monitor->null.ramp.green, sizeof(short)","markdown":"`memcpy(ramp->green, monitor->null.ramp.green, sizeof(short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":4802,"charLength":59},"insertedContent":{"text":"memcpy_s(ramp->green, <size of ramp->green>,  monitor->null.ramp.green,  sizeof(short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"region":{"startLine":140,"startColumn":4,"endLine":140,"endColumn":63,"charOffset":4722,"charLength":59,"snippet":{"text":"memcpy(ramp->red,   monitor->null.ramp.red,   sizeof(short)","rendered":{"text":"memcpy(ramp->red,   monitor->null.ramp.red,   sizeof(short)","markdown":"`memcpy(ramp->red,   monitor->null.ramp.red,   sizeof(short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\null_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":4722,"charLength":59},"insertedContent":{"text":"memcpy_s(ramp->red, <size of ramp->red>,    monitor->null.ramp.red,    sizeof(short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_desktop_settings.c"},"region":{"startLine":187,"startColumn":26,"endLine":187,"endColumn":32,"charOffset":7411,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_desktop_settings.c"},"region":{"startLine":139,"startColumn":27,"endLine":139,"endColumn":31,"charOffset":5561,"charLength":4,"snippet":{"text":"atoi","rendered":{"text":"atoi","markdown":"`atoi`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_desktop_settings.c"},"region":{"startLine":136,"startColumn":22,"endLine":136,"endColumn":28,"charOffset":5471,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_desktop_settings.c"},"region":{"startLine":135,"startColumn":11,"endLine":135,"endColumn":52,"charOffset":5402,"charLength":41,"snippet":{"text":"strncpy(theme_name, q, sizeof(theme_name)","rendered":{"text":"strncpy(theme_name, q, sizeof(theme_name)","markdown":"`strncpy(theme_name, q, sizeof(theme_name)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\linux_desktop_settings.c"},"replacements":[{"deletedRegion":{"charOffset":5402,"charLength":41},"insertedContent":{"text":"strcpy_s(theme_name,  sizeof(theme_name,  q)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\linux_desktop_settings.c"},"replacements":[{"deletedRegion":{"charOffset":5402,"charLength":41},"insertedContent":{"text":"strlcpy(theme_name,  q,  sizeof(theme_name)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_desktop_settings.c"},"region":{"startLine":134,"startColumn":20,"endLine":134,"endColumn":26,"charOffset":5365,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\linux_desktop_settings.c"},"region":{"startLine":60,"startColumn":16,"endLine":60,"endColumn":60,"charOffset":2046,"charLength":44,"snippet":{"text":"strncpy(theme_name, name, sizeof(theme_name)","rendered":{"text":"strncpy(theme_name, name, sizeof(theme_name)","markdown":"`strncpy(theme_name, name, sizeof(theme_name)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\linux_desktop_settings.c"},"replacements":[{"deletedRegion":{"charOffset":2046,"charLength":44},"insertedContent":{"text":"strcpy_s(theme_name,  sizeof(theme_name,  name)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\linux_desktop_settings.c"},"replacements":[{"deletedRegion":{"charOffset":2046,"charLength":44},"insertedContent":{"text":"strlcpy(theme_name,  name,  sizeof(theme_name)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\internal.h"},"region":{"startLine":807,"startColumn":26,"endLine":807,"endColumn":32,"charOffset":29613,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\internal.h"},"region":{"startLine":805,"startColumn":26,"endLine":805,"endColumn":32,"charOffset":29527,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\internal.h"},"region":{"startLine":209,"startColumn":8,"endLine":209,"endColumn":15,"charOffset":7568,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":1755,"startColumn":4,"endLine":1755,"endColumn":26,"charOffset":76684,"charLength":22,"snippet":{"text":"memcpy(addr, data, sz)","rendered":{"text":"memcpy(addr, data, sz)","markdown":"`memcpy(addr, data, sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\graphics.c"},"replacements":[{"deletedRegion":{"charOffset":76684,"charLength":22},"insertedContent":{"text":"memcpy_s(addr, <size of addr>,  data,  sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":1209,"startColumn":47,"endLine":1209,"endColumn":54,"charOffset":52448,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":956,"startColumn":15,"endLine":956,"endColumn":30,"charOffset":39550,"charLength":15,"snippet":{"text":"malloc((size_t)","rendered":{"text":"malloc((size_t)","markdown":"`malloc((size_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\graphics.c"},"replacements":[{"deletedRegion":{"charOffset":39550,"charLength":15},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":931,"startColumn":17,"endLine":931,"endColumn":53,"charOffset":38647,"charLength":36,"snippet":{"text":"memcpy(under_row, over_row, (size_t)","rendered":{"text":"memcpy(under_row, over_row, (size_t)","markdown":"`memcpy(under_row, over_row, (size_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\graphics.c"},"replacements":[{"deletedRegion":{"charOffset":38647,"charLength":36},"insertedContent":{"text":"memcpy_s(under_row, <size of under_row>,  over_row,  (size_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":911,"startColumn":17,"endLine":911,"endColumn":53,"charOffset":37623,"charLength":36,"snippet":{"text":"memcpy(under_row, over_row, (size_t)","rendered":{"text":"memcpy(under_row, over_row, (size_t)","markdown":"`memcpy(under_row, over_row, (size_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\graphics.c"},"replacements":[{"deletedRegion":{"charOffset":37623,"charLength":36},"insertedContent":{"text":"memcpy_s(under_row, <size of under_row>,  over_row,  (size_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":513,"startColumn":38,"endLine":513,"endColumn":82,"charOffset":19526,"charLength":44,"snippet":{"text":"malloc(self->currently_loading.buf_capacity)","rendered":{"text":"malloc(self->currently_loading.buf_capacity)","markdown":"`malloc(self->currently_loading.buf_capacity)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\graphics.c"},"replacements":[{"deletedRegion":{"charOffset":19526,"charLength":44},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":419,"startColumn":116,"endLine":419,"endColumn":124,"charOffset":14457,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":408,"startColumn":12,"endLine":408,"endColumn":80,"charOffset":13637,"charLength":68,"snippet":{"text":"memcpy(load_data->buf + load_data->buf_used, payload, g->payload_sz)","rendered":{"text":"memcpy(load_data->buf + load_data->buf_used, payload, g->payload_sz)","markdown":"`memcpy(load_data->buf + load_data->buf_used, payload, g->payload_sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\graphics.c"},"replacements":[{"deletedRegion":{"charOffset":13637,"charLength":68},"insertedContent":{"text":"memcpy_s(load_data->buf + load_data->buf_used, <size of load_data->buf + load_data->buf_used>,  payload,  g->payload_sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":365,"startColumn":27,"endLine":365,"endColumn":50,"charOffset":11736,"charLength":23,"snippet":{"text":"malloc(sizeof(uint32_t)","rendered":{"text":"malloc(sizeof(uint32_t)","markdown":"`malloc(sizeof(uint32_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\graphics.c"},"replacements":[{"deletedRegion":{"charOffset":11736,"charLength":23},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":322,"startColumn":81,"endLine":322,"endColumn":89,"charOffset":10525,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":307,"startColumn":25,"endLine":307,"endColumn":41,"charOffset":9804,"charLength":16,"snippet":{"text":"malloc(capacity)","rendered":{"text":"malloc(capacity)","markdown":"`malloc(capacity)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\graphics.c"},"replacements":[{"deletedRegion":{"charOffset":9804,"charLength":16},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":303,"startColumn":80,"endLine":303,"endColumn":88,"charOffset":9689,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":301,"startColumn":15,"endLine":301,"endColumn":20,"charOffset":9567,"charLength":5,"snippet":{"text":"fopen","rendered":{"text":"fopen","markdown":"`fopen`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":246,"startColumn":28,"endLine":246,"endColumn":54,"charOffset":7669,"charLength":26,"snippet":{"text":"malloc(load_data->data_sz)","rendered":{"text":"malloc(load_data->data_sz)","markdown":"`malloc(load_data->data_sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\graphics.c"},"replacements":[{"deletedRegion":{"charOffset":7669,"charLength":26},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":229,"startColumn":19,"endLine":229,"endColumn":27,"charOffset":7226,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":214,"startColumn":148,"endLine":214,"endColumn":156,"charOffset":6891,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":210,"startColumn":112,"endLine":210,"endColumn":120,"charOffset":6626,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\graphics.c"},"region":{"startLine":199,"startColumn":4,"endLine":199,"endColumn":13,"charOffset":6194,"charLength":9,"snippet":{"text":"vsnprintf","rendered":{"text":"vsnprintf","markdown":"`vsnprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_platform.h"},"region":{"startLine":67,"startColumn":61,"endLine":67,"endColumn":68,"charOffset":2998,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_monitor.m"},"region":{"startLine":419,"startColumn":11,"endLine":419,"endColumn":15,"charOffset":14353,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_monitor.m"},"region":{"startLine":412,"startColumn":15,"endLine":412,"endColumn":19,"charOffset":14044,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_monitor.m"},"region":{"startLine":401,"startColumn":49,"endLine":401,"endColumn":56,"charOffset":13681,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_monitor.m"},"region":{"startLine":393,"startColumn":8,"endLine":395,"endColumn":57,"charOffset":13403,"charLength":111,"snippet":{"text":"memcpy(disconnected,\r\n               _glfw.monitors,\r\n               _glfw.monitorCount * sizeof(_GLFWmonitor*)","rendered":{"text":"memcpy(disconnected,\r\n               _glfw.monitors,\r\n               _glfw.monitorCount * sizeof(_GLFWmonitor*)","markdown":"`memcpy(disconnected,\r\n               _glfw.monitors,\r\n               _glfw.monitorCount * sizeof(_GLFWmonitor*)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_monitor.m"},"replacements":[{"deletedRegion":{"charOffset":13403,"charLength":111},"insertedContent":{"text":"memcpy_s(disconnected, <size of disconnected>, \r\n               _glfw.monitors, \r\n               _glfw.monitorCount * sizeof(_GLFWmonitor*)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_monitor.m"},"region":{"startLine":382,"startColumn":8,"endLine":382,"endColumn":15,"charOffset":13014,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_monitor.m"},"region":{"startLine":239,"startColumn":11,"endLine":239,"endColumn":15,"charOffset":7705,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"region":{"startLine":580,"startColumn":8,"endLine":580,"endColumn":77,"charOffset":19121,"charLength":69,"snippet":{"text":"memcpy(gamma->blue,  ramp->blue,  ramp->size * sizeof(unsigned short)","rendered":{"text":"memcpy(gamma->blue,  ramp->blue,  ramp->size * sizeof(unsigned short)","markdown":"`memcpy(gamma->blue,  ramp->blue,  ramp->size * sizeof(unsigned short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":19121,"charLength":69},"insertedContent":{"text":"memcpy_s(gamma->blue, <size of gamma->blue>,   ramp->blue,   ramp->size * sizeof(unsigned short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"region":{"startLine":579,"startColumn":8,"endLine":579,"endColumn":77,"charOffset":19040,"charLength":69,"snippet":{"text":"memcpy(gamma->green, ramp->green, ramp->size * sizeof(unsigned short)","rendered":{"text":"memcpy(gamma->green, ramp->green, ramp->size * sizeof(unsigned short)","markdown":"`memcpy(gamma->green, ramp->green, ramp->size * sizeof(unsigned short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":19040,"charLength":69},"insertedContent":{"text":"memcpy_s(gamma->green, <size of gamma->green>,  ramp->green,  ramp->size * sizeof(unsigned short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"region":{"startLine":578,"startColumn":8,"endLine":578,"endColumn":77,"charOffset":18959,"charLength":69,"snippet":{"text":"memcpy(gamma->red,   ramp->red,   ramp->size * sizeof(unsigned short)","rendered":{"text":"memcpy(gamma->red,   ramp->red,   ramp->size * sizeof(unsigned short)","markdown":"`memcpy(gamma->red,   ramp->red,   ramp->size * sizeof(unsigned short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":18959,"charLength":69},"insertedContent":{"text":"memcpy_s(gamma->red, <size of gamma->red>,    ramp->red,    ramp->size * sizeof(unsigned short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"region":{"startLine":540,"startColumn":8,"endLine":540,"endColumn":71,"charOffset":17747,"charLength":63,"snippet":{"text":"memcpy(ramp->blue,  gamma->blue,  size * sizeof(unsigned short)","rendered":{"text":"memcpy(ramp->blue,  gamma->blue,  size * sizeof(unsigned short)","markdown":"`memcpy(ramp->blue,  gamma->blue,  size * sizeof(unsigned short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":17747,"charLength":63},"insertedContent":{"text":"memcpy_s(ramp->blue, <size of ramp->blue>,   gamma->blue,   size * sizeof(unsigned short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"region":{"startLine":539,"startColumn":8,"endLine":539,"endColumn":71,"charOffset":17672,"charLength":63,"snippet":{"text":"memcpy(ramp->green, gamma->green, size * sizeof(unsigned short)","rendered":{"text":"memcpy(ramp->green, gamma->green, size * sizeof(unsigned short)","markdown":"`memcpy(ramp->green, gamma->green, size * sizeof(unsigned short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":17672,"charLength":63},"insertedContent":{"text":"memcpy_s(ramp->green, <size of ramp->green>,  gamma->green,  size * sizeof(unsigned short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"region":{"startLine":538,"startColumn":8,"endLine":538,"endColumn":71,"charOffset":17597,"charLength":63,"snippet":{"text":"memcpy(ramp->red,   gamma->red,   size * sizeof(unsigned short)","rendered":{"text":"memcpy(ramp->red,   gamma->red,   size * sizeof(unsigned short)","markdown":"`memcpy(ramp->red,   gamma->red,   size * sizeof(unsigned short)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":17597,"charLength":63},"insertedContent":{"text":"memcpy_s(ramp->red, <size of ramp->red>,    gamma->red,    size * sizeof(unsigned short)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"region":{"startLine":171,"startColumn":19,"endLine":171,"endColumn":23,"charOffset":5671,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"region":{"startLine":120,"startColumn":12,"endLine":122,"endColumn":61,"charOffset":4114,"charLength":119,"snippet":{"text":"memcpy(disconnected,\r\n                   _glfw.monitors,\r\n                   _glfw.monitorCount * sizeof(_GLFWmonitor*)","rendered":{"text":"memcpy(disconnected,\r\n                   _glfw.monitors,\r\n                   _glfw.monitorCount * sizeof(_GLFWmonitor*)","markdown":"`memcpy(disconnected,\r\n                   _glfw.monitors,\r\n                   _glfw.monitorCount * sizeof(_GLFWmonitor*)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\x11_monitor.c"},"replacements":[{"deletedRegion":{"charOffset":4114,"charLength":119},"insertedContent":{"text":"memcpy_s(disconnected, <size of disconnected>, \r\n                   _glfw.monitors, \r\n                   _glfw.monitorCount * sizeof(_GLFWmonitor*)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":1482,"startColumn":15,"endLine":1482,"endColumn":19,"charOffset":44703,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":1481,"startColumn":15,"endLine":1481,"endColumn":19,"charOffset":44635,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":1346,"startColumn":16,"endLine":1346,"endColumn":39,"charOffset":41273,"charLength":23,"snippet":{"text":"memcpy(line, c, length)","rendered":{"text":"memcpy(line, c, length)","markdown":"`memcpy(line, c, length)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":41273,"charLength":23},"insertedContent":{"text":"memcpy_s(line, <size of line>,  c,  length)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":745,"startColumn":24,"endLine":745,"endColumn":31,"charOffset":26032,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":486,"startColumn":4,"endLine":486,"endColumn":44,"charOffset":16709,"charLength":40,"snippet":{"text":"strncpy(js->guid, guid, sizeof(js->guid)","rendered":{"text":"strncpy(js->guid, guid, sizeof(js->guid)","markdown":"`strncpy(js->guid, guid, sizeof(js->guid)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":16709,"charLength":40},"insertedContent":{"text":"strcpy_s(js->guid,  sizeof(js->guid,  guid)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":16709,"charLength":40},"insertedContent":{"text":"strlcpy(js->guid,  guid,  sizeof(js->guid)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":347,"startColumn":7,"endLine":347,"endColumn":12,"charOffset":12190,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":295,"startColumn":12,"endLine":295,"endColumn":19,"charOffset":10165,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":288,"startColumn":12,"endLine":288,"endColumn":19,"charOffset":9810,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":249,"startColumn":25,"endLine":249,"endColumn":60,"charOffset":8654,"charLength":35,"snippet":{"text":"strlen(_GLFW_PLATFORM_MAPPING_NAME)","rendered":{"text":"strlen(_GLFW_PLATFORM_MAPPING_NAME)","markdown":"`strlen(_GLFW_PLATFORM_MAPPING_NAME)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":8654,"charLength":35},"insertedContent":{"text":"strlen_s(_GLFW_PLATFORM_MAPPING_NAME, <size of _GLFW_PLATFORM_MAPPING_NAME>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":8654,"charLength":35},"insertedContent":{"text":"strnlen(_GLFW_PLATFORM_MAPPING_NAME, <size of _GLFW_PLATFORM_MAPPING_NAME>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":194,"startColumn":21,"endLine":194,"endColumn":43,"charOffset":6820,"charLength":22,"snippet":{"text":"strlen(fields[i].name)","rendered":{"text":"strlen(fields[i].name)","markdown":"`strlen(fields[i].name)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":6820,"charLength":22},"insertedContent":{"text":"strlen_s(fields[i].name, <size of fields[i].name>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":6820,"charLength":22},"insertedContent":{"text":"strnlen(fields[i].name, <size of fields[i].name>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":188,"startColumn":11,"endLine":188,"endColumn":15,"charOffset":6620,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":183,"startColumn":4,"endLine":183,"endColumn":36,"charOffset":6527,"charLength":32,"snippet":{"text":"memcpy(mapping->name, c, length)","rendered":{"text":"memcpy(mapping->name, c, length)","markdown":"`memcpy(mapping->name, c, length)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":6527,"charLength":32},"insertedContent":{"text":"memcpy_s(mapping->name, <size of mapping->name>,  c,  length)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\input.c"},"region":{"startLine":173,"startColumn":4,"endLine":173,"endColumn":36,"charOffset":6280,"charLength":32,"snippet":{"text":"memcpy(mapping->guid, c, length)","rendered":{"text":"memcpy(mapping->guid, c, length)","markdown":"`memcpy(mapping->guid, c, length)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\input.c"},"replacements":[{"deletedRegion":{"charOffset":6280,"charLength":32},"insertedContent":{"text":"memcpy_s(mapping->guid, <size of mapping->guid>,  c,  length)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\uthash.h"},"region":{"startLine":516,"startColumn":28,"endLine":516,"endColumn":35,"charOffset":30664,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\uthash.h"},"region":{"startLine":85,"startColumn":25,"endLine":85,"endColumn":34,"charOffset":3619,"charLength":9,"snippet":{"text":"strlen(s)","rendered":{"text":"strlen(s)","markdown":"`strlen(s)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\uthash.h"},"replacements":[{"deletedRegion":{"charOffset":3619,"charLength":9},"insertedContent":{"text":"strlen_s(s, <size of s>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\uthash.h"},"replacements":[{"deletedRegion":{"charOffset":3619,"charLength":9},"insertedContent":{"text":"strnlen(s, <size of s>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\uthash.h"},"region":{"startLine":76,"startColumn":26,"endLine":76,"endColumn":36,"charOffset":3324,"charLength":10,"snippet":{"text":"malloc(sz)","rendered":{"text":"malloc(sz)","markdown":"`malloc(sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\uthash.h"},"replacements":[{"deletedRegion":{"charOffset":3324,"charLength":10},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS126858","level":"error","message":{"text":"Weak/Broken Hash Algorithm"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\diff\\collect.py"},"region":{"startLine":213,"startColumn":11,"endLine":213,"endColumn":14,"charOffset":6922,"charLength":3,"snippet":{"text":"md5","rendered":{"text":"md5","markdown":"`md5`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\diff\\collect.py"},"replacements":[{"deletedRegion":{"charOffset":6922,"charLength":3},"insertedContent":{"text":"sha512"}}]}]},{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\diff\\collect.py"},"replacements":[{"deletedRegion":{"charOffset":6922,"charLength":3},"insertedContent":{"text":"sha256"}}]}]}],"properties":{"tags":["Cryptography.BannedHashAlgorithm"],"DevSkimSeverity":"Critical","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS126858","level":"error","message":{"text":"Weak/Broken Hash Algorithm"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\diff\\collect.py"},"region":{"startLine":9,"startColumn":20,"endLine":9,"endColumn":23,"charOffset":237,"charLength":3,"snippet":{"text":"md5","rendered":{"text":"md5","markdown":"`md5`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\diff\\collect.py"},"replacements":[{"deletedRegion":{"charOffset":237,"charLength":3},"insertedContent":{"text":"sha512"}}]}]},{"description":{"text":"A weak or broken hash algorithm was detected."},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\diff\\collect.py"},"replacements":[{"deletedRegion":{"charOffset":237,"charLength":3},"insertedContent":{"text":"sha256"}}]}]}],"properties":{"tags":["Cryptography.BannedHashAlgorithm"],"DevSkimSeverity":"Critical","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_init.c"},"region":{"startLine":621,"startColumn":30,"endLine":621,"endColumn":36,"charOffset":24315,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\x11_init.c"},"region":{"startLine":493,"startColumn":41,"endLine":493,"endColumn":45,"charOffset":20810,"charLength":4,"snippet":{"text":"atof","rendered":{"text":"atof","markdown":"`atof`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\windows_compat.c"},"region":{"startLine":64,"startColumn":32,"endLine":64,"endColumn":42,"charOffset":1465,"charLength":10,"snippet":{"text":"malloc(*n)","rendered":{"text":"malloc(*n)","markdown":"`malloc(*n)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\choose\\windows_compat.c"},"replacements":[{"deletedRegion":{"charOffset":1465,"charLength":10},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\vector.h"},"region":{"startLine":21,"startColumn":22,"endLine":21,"endColumn":56,"charOffset":431,"charLength":34,"snippet":{"text":"malloc(vec.capacity * sizeof(TYPE)","rendered":{"text":"malloc(vec.capacity * sizeof(TYPE)","markdown":"`malloc(vec.capacity * sizeof(TYPE)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\choose\\vector.h"},"replacements":[{"deletedRegion":{"charOffset":431,"charLength":34},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"region":{"startLine":479,"startColumn":8,"endLine":479,"endColumn":15,"charOffset":15974,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"region":{"startLine":478,"startColumn":8,"endLine":478,"endColumn":48,"charOffset":15918,"charLength":40,"snippet":{"text":"strncpy(original, guid, sizeof(original)","rendered":{"text":"strncpy(original, guid, sizeof(original)","markdown":"`strncpy(original, guid, sizeof(original)`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"replacements":[{"deletedRegion":{"charOffset":15918,"charLength":40},"insertedContent":{"text":"strcpy_s(original,  sizeof(original,  guid)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"replacements":[{"deletedRegion":{"charOffset":15918,"charLength":40},"insertedContent":{"text":"strlcpy(original,  guid,  sizeof(original)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"region":{"startLine":179,"startColumn":8,"endLine":179,"endColumn":15,"charOffset":5764,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"region":{"startLine":172,"startColumn":8,"endLine":172,"endColumn":15,"charOffset":5484,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"objective-c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"region":{"startLine":155,"startColumn":8,"endLine":155,"endColumn":46,"charOffset":4839,"charLength":38,"snippet":{"text":"strncpy(name, \"Unknown\", sizeof(name))","rendered":{"text":"strncpy(name, \"Unknown\", sizeof(name))","markdown":"`strncpy(name, \"Unknown\", sizeof(name))`"}},"sourceLanguage":"objective-c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"replacements":[{"deletedRegion":{"charOffset":4839,"charLength":38},"insertedContent":{"text":"strcpy_s(name,  sizeof(name,  \"Unknown\")"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\cocoa_joystick.m"},"replacements":[{"deletedRegion":{"charOffset":4839,"charLength":38},"insertedContent":{"text":"strlcpy(name,  \"Unknown\",  sizeof(name)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\ssh\\main.py"},"region":{"startLine":493,"startColumn":48,"endLine":493,"endColumn":100,"charOffset":19716,"charLength":52,"snippet":{"text":"eval(compile(base64.standard_b64decode(sys.argv[-1])","rendered":{"text":"eval(compile(base64.standard_b64decode(sys.argv[-1])","markdown":"`eval(compile(base64.standard_b64decode(sys.argv[-1])`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\unix_compat.c"},"region":{"startLine":36,"startColumn":69,"endLine":36,"endColumn":77,"charOffset":812,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\unix_compat.c"},"region":{"startLine":36,"startColumn":8,"endLine":36,"endColumn":15,"charOffset":751,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\glyph-cache.c"},"region":{"startLine":50,"startColumn":4,"endLine":50,"endColumn":41,"charOffset":1491,"charLength":37,"snippet":{"text":"memcpy(p->key, scratch, key_sz_bytes)","rendered":{"text":"memcpy(p->key, scratch, key_sz_bytes)","markdown":"`memcpy(p->key, scratch, key_sz_bytes)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\glyph-cache.c"},"replacements":[{"deletedRegion":{"charOffset":1491,"charLength":37},"insertedContent":{"text":"memcpy_s(p->key, <size of p->key>,  scratch,  key_sz_bytes)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\glyph-cache.c"},"region":{"startLine":44,"startColumn":4,"endLine":44,"endColumn":59,"charOffset":1228,"charLength":55,"snippet":{"text":"memcpy(scratch + 3, glyphs, count * sizeof(glyph_index)","rendered":{"text":"memcpy(scratch + 3, glyphs, count * sizeof(glyph_index)","markdown":"`memcpy(scratch + 3, glyphs, count * sizeof(glyph_index)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\glyph-cache.c"},"replacements":[{"deletedRegion":{"charOffset":1228,"charLength":55},"insertedContent":{"text":"memcpy_s(scratch + 3, <size of scratch + 3>,  glyphs,  count * sizeof(glyph_index)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\glfw.c"},"region":{"startLine":1610,"startColumn":36,"endLine":1610,"endColumn":50,"charOffset":65379,"charLength":14,"snippet":{"text":"malloc(sz + 1)","rendered":{"text":"malloc(sz + 1)","markdown":"`malloc(sz + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kitty\\glfw.c"},"replacements":[{"deletedRegion":{"charOffset":65379,"charLength":14},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\glfw.c"},"region":{"startLine":170,"startColumn":8,"endLine":170,"endColumn":15,"charOffset":6530,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\glfw.c"},"region":{"startLine":168,"startColumn":8,"endLine":168,"endColumn":16,"charOffset":6470,"charLength":8,"snippet":{"text":"vfprintf","rendered":{"text":"vfprintf","markdown":"`vfprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kitty\\glfw.c"},"region":{"startLine":166,"startColumn":8,"endLine":166,"endColumn":15,"charOffset":6362,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\output.c"},"region":{"startLine":69,"startColumn":19,"endLine":69,"endColumn":27,"charOffset":2175,"charLength":8,"snippet":{"text":"swprintf","rendered":{"text":"swprintf","markdown":"`swprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\output.c"},"region":{"startLine":44,"startColumn":8,"endLine":44,"endColumn":72,"charOffset":1181,"charLength":64,"snippet":{"text":"memcpy(global->output + global->output_pos, data, sizeof(text_t)","rendered":{"text":"memcpy(global->output + global->output_pos, data, sizeof(text_t)","markdown":"`memcpy(global->output + global->output_pos, data, sizeof(text_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\choose\\output.c"},"replacements":[{"deletedRegion":{"charOffset":1181,"charLength":64},"insertedContent":{"text":"memcpy_s(global->output + global->output_pos, <size of global->output + global->output_pos>,  data,  sizeof(text_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"shell-integration\\ssh\\askpass.py"},"region":{"startLine":32,"startColumn":10,"endLine":32,"endColumn":14,"charOffset":931,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS141863","level":"error","message":{"text":"Banned C function detected (strcat)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"region":{"startLine":404,"startColumn":4,"endLine":404,"endColumn":26,"charOffset":13285,"charLength":22,"snippet":{"text":"strcat(name, template)","rendered":{"text":"strcat(name, template)","markdown":"`strcat(name, template)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the combination of strings is larger than the destination buffer, strcat will cbuffer overflow the destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"replacements":[{"deletedRegion":{"charOffset":13285,"charLength":22},"insertedContent":{"text":"strcat_s(name, <size of name>,  template)"}}]}]},{"description":{"text":"If the combination of strings is larger than the destination buffer, strcat will cbuffer overflow the destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"replacements":[{"deletedRegion":{"charOffset":13285,"charLength":22},"insertedContent":{"text":"strlcat(name,  template, <size of name>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"region":{"startLine":403,"startColumn":4,"endLine":403,"endColumn":22,"charOffset":13260,"charLength":18,"snippet":{"text":"strcpy(name, path)","rendered":{"text":"strcpy(name, path)","markdown":"`strcpy(name, path)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"replacements":[{"deletedRegion":{"charOffset":13260,"charLength":18},"insertedContent":{"text":"strcpy_s(name, <size of name>,  path)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"replacements":[{"deletedRegion":{"charOffset":13260,"charLength":18},"insertedContent":{"text":"strlcpy(name,  path, <size of name>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"region":{"startLine":402,"startColumn":18,"endLine":402,"endColumn":30,"charOffset":13218,"charLength":12,"snippet":{"text":"strlen(path)","rendered":{"text":"strlen(path)","markdown":"`strlen(path)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"replacements":[{"deletedRegion":{"charOffset":13218,"charLength":12},"insertedContent":{"text":"strlen_s(path, <size of path>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"replacements":[{"deletedRegion":{"charOffset":13218,"charLength":12},"insertedContent":{"text":"strnlen(path, <size of path>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"region":{"startLine":395,"startColumn":11,"endLine":395,"endColumn":17,"charOffset":13095,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"region":{"startLine":350,"startColumn":4,"endLine":350,"endColumn":34,"charOffset":11391,"charLength":30,"snippet":{"text":"memcpy(result, source, length)","rendered":{"text":"memcpy(result, source, length)","markdown":"`memcpy(result, source, length)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"replacements":[{"deletedRegion":{"charOffset":11391,"charLength":30},"insertedContent":{"text":"memcpy_s(result, <size of result>,  source,  length)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1516,"startColumn":84,"endLine":1516,"endColumn":92,"charOffset":53240,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1501,"startColumn":84,"endLine":1501,"endColumn":92,"charOffset":52551,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1460,"startColumn":95,"endLine":1460,"endColumn":103,"charOffset":51206,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1453,"startColumn":21,"endLine":1453,"endColumn":33,"charOffset":50756,"charLength":12,"snippet":{"text":"strlen(text)","rendered":{"text":"strlen(text)","markdown":"`strlen(text)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":50756,"charLength":12},"insertedContent":{"text":"strlen_s(text, <size of text>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":50756,"charLength":12},"insertedContent":{"text":"strnlen(text, <size of text>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1173,"startColumn":7,"endLine":1173,"endColumn":11,"charOffset":42092,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1155,"startColumn":7,"endLine":1155,"endColumn":11,"charOffset":41616,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1089,"startColumn":7,"endLine":1089,"endColumn":11,"charOffset":39743,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":1078,"startColumn":7,"endLine":1078,"endColumn":11,"charOffset":39439,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":980,"startColumn":7,"endLine":980,"endColumn":11,"charOffset":36428,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":971,"startColumn":7,"endLine":971,"endColumn":11,"charOffset":36012,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":790,"startColumn":4,"endLine":790,"endColumn":76,"charOffset":29841,"charLength":72,"snippet":{"text":"strncpy(window->wl.appId, wndconfig->wl.appId, sizeof(window->wl.appId))","rendered":{"text":"strncpy(window->wl.appId, wndconfig->wl.appId, sizeof(window->wl.appId))","markdown":"`strncpy(window->wl.appId, wndconfig->wl.appId, sizeof(window->wl.appId))`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":29841,"charLength":72},"insertedContent":{"text":"strcpy_s(window->wl.appId,  sizeof(window->wl.appId,  wndconfig->wl.appId)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":29841,"charLength":72},"insertedContent":{"text":"strlcpy(window->wl.appId,  wndconfig->wl.appId,  sizeof(window->wl.appId)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\main.c"},"region":{"startLine":209,"startColumn":20,"endLine":209,"endColumn":41,"charOffset":7498,"charLength":21,"snippet":{"text":"malloc(sizeof(size_t)","rendered":{"text":"malloc(sizeof(size_t)","markdown":"`malloc(sizeof(size_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\choose\\main.c"},"replacements":[{"deletedRegion":{"charOffset":7498,"charLength":21},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":669,"startColumn":81,"endLine":669,"endColumn":89,"charOffset":25095,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"kittens\\choose\\main.c"},"region":{"startLine":207,"startColumn":20,"endLine":207,"endColumn":40,"charOffset":7395,"charLength":20,"snippet":{"text":"malloc(sizeof(char*)","rendered":{"text":"malloc(sizeof(char*)","markdown":"`malloc(sizeof(char*)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"kittens\\choose\\main.c"},"replacements":[{"deletedRegion":{"charOffset":7395,"charLength":20},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"region":{"startLine":349,"startColumn":19,"endLine":349,"endColumn":37,"charOffset":11366,"charLength":18,"snippet":{"text":"malloc(length + 1)","rendered":{"text":"malloc(length + 1)","markdown":"`malloc(length + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"replacements":[{"deletedRegion":{"charOffset":11366,"charLength":18},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":634,"startColumn":8,"endLine":634,"endColumn":32,"charOffset":23843,"charLength":24,"snippet":{"text":"strlen(window->wl.appId)","rendered":{"text":"strlen(window->wl.appId)","markdown":"`strlen(window->wl.appId)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":23843,"charLength":24},"insertedContent":{"text":"strlen_s(window->wl.appId, <size of window->wl.appId>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"glfw\\wl_window.c"},"replacements":[{"deletedRegion":{"charOffset":23843,"charLength":24},"insertedContent":{"text":"strnlen(window->wl.appId, <size of window->wl.appId>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"region":{"startLine":96,"startColumn":31,"endLine":96,"endColumn":36,"charOffset":2813,"charLength":5,"snippet":{"text":"qsort","rendered":{"text":"qsort","markdown":"`qsort`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":503,"startColumn":121,"endLine":503,"endColumn":127,"charOffset":18715,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":503,"startColumn":90,"endLine":503,"endColumn":96,"charOffset":18684,"charLength":6,"snippet":{"text":"getenv","rendered":{"text":"getenv","markdown":"`getenv`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":69,"startColumn":52,"endLine":69,"endColumn":60,"charOffset":2550,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":61,"startColumn":32,"endLine":61,"endColumn":40,"charOffset":2291,"charLength":8,"snippet":{"text":"strerror","rendered":{"text":"strerror","markdown":"`strerror`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS440100","level":"note","message":{"text":"Generic: Hard-coded Elliptic Curve"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\kitty_at_template.py"},"region":{"startLine":124,"startColumn":42,"endLine":124,"endColumn":48,"charOffset":5893,"charLength":6,"snippet":{"text":"X25519","rendered":{"text":"X25519","markdown":"`X25519`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Cryptography.Protocol.TLS.Elliptic-Curve.Hard-Coded"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\backend_utils.c"},"region":{"startLine":63,"startColumn":16,"endLine":63,"endColumn":23,"charOffset":1829,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"glfw\\wl_window.c"},"region":{"startLine":45,"startColumn":56,"endLine":45,"endColumn":63,"charOffset":1751,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"}],"columnKind":"utf16CodeUnits"}]}
