{"$schema":"https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json","version":"2.1.0","runs":[{"tool":{"driver":{"name":"devskim","fullName":"Microsoft DevSkim Command Line Interface","version":"1.0.23+607c9a5eda","informationUri":"https://github.com/microsoft/DevSkim/","rules":[{"id":"DS121708","name":"ProblematicCFunctionDetectedMemcpy","fullDescription":{"text":"Problematic C function detected (memcpy): There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"help":{"text":"Use memcpy_s if possible.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS121708.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS121708.md) for guidance on this issue."},"shortDescription":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS121708.md","properties":{"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"id":"DS425000","name":"DoNotDeserializeUntrustedData","fullDescription":{"text":"Do not deserialize untrusted data.: Deserializing attacker-supplied data using `pickle` or `cPickle` can result in code execution."},"help":{"text":"Either add integrity protection or use a data format like JSON.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS425000.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS425000.md) for guidance on this issue."},"shortDescription":{"text":"Deserializing attacker-supplied data using `pickle` or `cPickle` can result in code execution."},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS425000.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS154189","name":"BannedCFunctionDetected","fullDescription":{"text":"Banned C function detected: These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'."},"help":{"text":"These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS154189.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS154189.md) for guidance on this issue."},"shortDescription":{"text":"These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'."},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS154189.md","properties":{"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"defaultConfiguration":{"level":"warning"}},{"id":"DS162092","name":"DoNotLeaveDebugCodeInProduction","fullDescription":{"text":"Do not leave debug code in production: Accessing localhost could indicate debug code, or could hinder scaling."},"help":{"text":"Accessing localhost could indicate debug code, or could hinder scaling.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS162092.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS162092.md) for guidance on this issue."},"shortDescription":{"text":"Accessing localhost could indicate debug code, or could hinder scaling."},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS162092.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS140021","name":"ProblematicCFunctionDetectedStrlen","fullDescription":{"text":"Problematic C function detected (strlen): If a string is missing a null terminator, strlen will read past the end of the buffer"},"help":{"text":"In instances where you know the maximum size of a string's buffer, use strlen_s or strnlen to prevent over-reading","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS140021.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS140021.md) for guidance on this issue."},"shortDescription":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS140021.md","properties":{"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"id":"DS148264","name":"DoNotUseWeaknoncryptographicRandomNumberGenerators","fullDescription":{"text":"Do not use weak/non-cryptographic random number generators: Use cryptographic random numbers generators for anything even close to a security function."},"help":{"text":"Replacements depend on language.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS148264.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS148264.md) for guidance on this issue."},"shortDescription":{"text":"Use cryptographic random numbers generators for anything even close to a security function."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS148264.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS185832","name":"BannedCFunctionDetectedStrcpy","fullDescription":{"text":"Banned C function detected (strcpy): strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"help":{"text":"Use strcpy_s or strlcpy if possible. If no safe function is viable, strcpy/strncpy should be proceeded by conditional checks to verify that the source string will fit in the destination with a null termnator.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS185832.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS185832.md) for guidance on this issue."},"shortDescription":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS185832.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS189424","name":"ReviewEvalForUntrustedData","fullDescription":{"text":"Review eval for untrusted data: If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an eval statement it can allow an attacker to inject their own code."},"help":{"text":"Edit the eval so that no untrusted data is included. If untrusted data is absolutely necessary a great deal of care should be taken to ensure it is properly escaped so that it cannot be executed. This is not as simple as just escaping quotes.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md) for guidance on this issue."},"shortDescription":{"text":"If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an eval statement it can allow an attacker to inject their own code."},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS176209","name":"SuspiciousComment","fullDescription":{"text":"Suspicious comment: A \"TODO\" or similar was left in source code, possibly indicating incomplete functionality"},"help":{"text":"A \"TODO\" or similar was left in source code, possibly indicating incomplete functionality","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS176209.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS176209.md) for guidance on this issue."},"shortDescription":{"text":"A \"TODO\" or similar was left in source code, possibly indicating incomplete functionality"},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS176209.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS161085","name":"ProblematicCFunctionDetectedMalloc","fullDescription":{"text":"Problematic C function detected (malloc): If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"help":{"text":"calloc handles the most common integer math in memory allocation (# of elements * their size) with error handling to prevent overflows in most implementations, and zeros out memory","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS161085.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS161085.md) for guidance on this issue."},"shortDescription":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS161085.md","properties":{"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"id":"DS137138","name":"InsecureUrl","fullDescription":{"text":"Insecure URL: An HTTP-based URL without TLS was detected."},"help":{"text":"Update to an HTTPS-based URL if possible.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS137138.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS137138.md) for guidance on this issue."},"shortDescription":{"text":"An HTTP-based URL without TLS was detected."},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS137138.md","properties":{"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"defaultConfiguration":{"level":"warning"}},{"id":"DS111237","name":"BannedCFunctionDetectedStrncpy","fullDescription":{"text":"Banned C function detected (strncpy): strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"help":{"text":"Use strcpy_s or strlcpy if possible. If no safe function is viable, strcpy/strncpy should be proceeded by conditional checks to verify tha that the source string will fit in the destination with a null termnator.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS111237.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS111237.md) for guidance on this issue."},"shortDescription":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS111237.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}}]}},"versionControlProvenance":[{"repositoryUri":"https://github.com/python-imaging/Pillow","revisionId":"e055ef0356414ce02541faab1009f5b4befbf78f","branch":"(no branch)"}],"results":[{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\TiffTags.py"},"region":{"startLine":193,"startColumn":6,"endLine":193,"endColumn":11,"charOffset":6068,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageDraw2.py"},"region":{"startLine":52,"startColumn":10,"endLine":52,"endColumn":15,"charOffset":1128,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\TiffImagePlugin.py"},"region":{"startLine":2100,"startColumn":65,"endLine":2100,"endColumn":69,"charOffset":76988,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\TiffImagePlugin.py"},"region":{"startLine":852,"startColumn":10,"endLine":852,"endColumn":15,"charOffset":31200,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageDraw.py"},"region":{"startLine":864,"startColumn":6,"endLine":864,"endColumn":11,"charOffset":30220,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageDraw.py"},"region":{"startLine":863,"startColumn":6,"endLine":863,"endColumn":11,"charOffset":30184,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageDraw.py"},"region":{"startLine":111,"startColumn":14,"endLine":111,"endColumn":19,"charOffset":3667,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageDraw.py"},"region":{"startLine":86,"startColumn":14,"endLine":86,"endColumn":19,"charOffset":2792,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageCms.py"},"region":{"startLine":1002,"startColumn":10,"endLine":1002,"endColumn":15,"charOffset":38073,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\SpiderImagePlugin.py"},"region":{"startLine":152,"startColumn":30,"endLine":152,"endColumn":35,"charOffset":4684,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\Image.py"},"region":{"startLine":2547,"startColumn":6,"endLine":2547,"endColumn":11,"charOffset":91571,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\Image.py"},"region":{"startLine":2223,"startColumn":14,"endLine":2223,"endColumn":19,"charOffset":79483,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\Image.py"},"region":{"startLine":1755,"startColumn":14,"endLine":1755,"endColumn":19,"charOffset":60184,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\Image.py"},"region":{"startLine":1643,"startColumn":18,"endLine":1643,"endColumn":23,"charOffset":55769,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\Image.py"},"region":{"startLine":502,"startColumn":10,"endLine":502,"endColumn":15,"charOffset":13167,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\Image.py"},"region":{"startLine":501,"startColumn":10,"endLine":501,"endColumn":15,"charOffset":13112,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PSDraw.py"},"region":{"startLine":42,"startColumn":10,"endLine":42,"endColumn":15,"charOffset":1028,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PcdImagePlugin.py"},"region":{"startLine":48,"startColumn":33,"endLine":48,"endColumn":38,"charOffset":1100,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageShow.py"},"region":{"startLine":144,"startColumn":26,"endLine":144,"endColumn":35,"charOffset":4164,"charLength":9,"snippet":{"text":"127.0.0.1","rendered":{"text":"127.0.0.1","markdown":"`127.0.0.1`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PsdImagePlugin.py"},"region":{"startLine":35,"startColumn":25,"endLine":35,"endColumn":30,"charOffset":865,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\Tk\\tkImaging.c"},"region":{"startLine":250,"startColumn":8,"endLine":250,"endColumn":15,"charOffset":7317,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\Tk\\tkImaging.c"},"region":{"startLine":64,"startColumn":7,"endLine":64,"endColumn":12,"charOffset":2076,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageQt.py"},"region":{"startLine":146,"startColumn":10,"endLine":146,"endColumn":15,"charOffset":4219,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"region":{"startLine":162,"startColumn":27,"endLine":162,"endColumn":35,"charOffset":5329,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"region":{"startLine":52,"startColumn":34,"endLine":52,"endColumn":58,"charOffset":1535,"charLength":24,"snippet":{"text":"malloc(state->bytes + 1)","rendered":{"text":"malloc(state->bytes + 1)","markdown":"`malloc(state->bytes + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"replacements":[{"deletedRegion":{"charOffset":1535,"charLength":24},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"region":{"startLine":51,"startColumn":36,"endLine":51,"endColumn":60,"charOffset":1474,"charLength":24,"snippet":{"text":"malloc(state->bytes + 1)","rendered":{"text":"malloc(state->bytes + 1)","markdown":"`malloc(state->bytes + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"replacements":[{"deletedRegion":{"charOffset":1474,"charLength":24},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"region":{"startLine":50,"startColumn":31,"endLine":50,"endColumn":55,"charOffset":1411,"charLength":24,"snippet":{"text":"malloc(state->bytes + 1)","rendered":{"text":"malloc(state->bytes + 1)","markdown":"`malloc(state->bytes + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"replacements":[{"deletedRegion":{"charOffset":1411,"charLength":24},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"region":{"startLine":49,"startColumn":34,"endLine":49,"endColumn":58,"charOffset":1353,"charLength":24,"snippet":{"text":"malloc(state->bytes + 1)","rendered":{"text":"malloc(state->bytes + 1)","markdown":"`malloc(state->bytes + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"replacements":[{"deletedRegion":{"charOffset":1353,"charLength":24},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"region":{"startLine":48,"startColumn":37,"endLine":48,"endColumn":61,"charOffset":1292,"charLength":24,"snippet":{"text":"malloc(state->bytes + 1)","rendered":{"text":"malloc(state->bytes + 1)","markdown":"`malloc(state->bytes + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"replacements":[{"deletedRegion":{"charOffset":1292,"charLength":24},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"region":{"startLine":47,"startColumn":33,"endLine":47,"endColumn":57,"charOffset":1228,"charLength":24,"snippet":{"text":"malloc(state->bytes + 1)","rendered":{"text":"malloc(state->bytes + 1)","markdown":"`malloc(state->bytes + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ZipEncode.c"},"replacements":[{"deletedRegion":{"charOffset":1228,"charLength":24},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\MspImagePlugin.py"},"region":{"startLine":178,"startColumn":29,"endLine":178,"endColumn":34,"charOffset":5337,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PngImagePlugin.py"},"region":{"startLine":419,"startColumn":34,"endLine":419,"endColumn":39,"charOffset":12794,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\MpoImagePlugin.py"},"region":{"startLine":111,"startColumn":30,"endLine":111,"endColumn":35,"charOffset":3534,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImagePalette.py"},"region":{"startLine":247,"startColumn":6,"endLine":247,"endColumn":11,"charOffset":7614,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImagePalette.py"},"region":{"startLine":209,"startColumn":37,"endLine":209,"endColumn":42,"charOffset":6719,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\XVThumbImagePlugin.py"},"region":{"startLine":17,"startColumn":2,"endLine":17,"endColumn":7,"charOffset":422,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipDecode.c"},"region":{"startLine":252,"startColumn":19,"endLine":252,"endColumn":27,"charOffset":9625,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipDecode.c"},"region":{"startLine":231,"startColumn":27,"endLine":231,"endColumn":35,"charOffset":8678,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipDecode.c"},"region":{"startLine":217,"startColumn":27,"endLine":217,"endColumn":35,"charOffset":7937,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipDecode.c"},"region":{"startLine":67,"startColumn":37,"endLine":67,"endColumn":61,"charOffset":2209,"charLength":24,"snippet":{"text":"malloc(state->bytes + 1)","rendered":{"text":"malloc(state->bytes + 1)","markdown":"`malloc(state->bytes + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ZipDecode.c"},"replacements":[{"deletedRegion":{"charOffset":2209,"charLength":24},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ZipDecode.c"},"region":{"startLine":66,"startColumn":33,"endLine":66,"endColumn":57,"charOffset":2145,"charLength":24,"snippet":{"text":"malloc(state->bytes + 1)","rendered":{"text":"malloc(state->bytes + 1)","markdown":"`malloc(state->bytes + 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ZipDecode.c"},"replacements":[{"deletedRegion":{"charOffset":2145,"charLength":24},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\XpmImagePlugin.py"},"region":{"startLine":87,"startColumn":26,"endLine":87,"endColumn":31,"charOffset":1978,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageOps.py"},"region":{"startLine":51,"startColumn":10,"endLine":51,"endColumn":15,"charOffset":1141,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\McIdasImagePlugin.py"},"region":{"startLine":55,"startColumn":14,"endLine":55,"endColumn":19,"charOffset":1254,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\McIdasImagePlugin.py"},"region":{"startLine":51,"startColumn":14,"endLine":51,"endColumn":19,"charOffset":1128,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\JpegPresets.py"},"region":{"startLine":62,"startColumn":43,"endLine":62,"endColumn":69,"charOffset":1832,"charLength":26,"snippet":{"text":"http://www.jpegcameras.com","rendered":{"text":"http://www.jpegcameras.com","markdown":"`http://www.jpegcameras.com`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"src\\PIL\\JpegPresets.py"},"replacements":[{"deletedRegion":{"charOffset":1832,"charLength":26},"insertedContent":{"text":"https://www.jpegcameras.com"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\XbmEncode.c"},"region":{"startLine":40,"startColumn":15,"endLine":40,"endColumn":23,"charOffset":824,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PixarImagePlugin.py"},"region":{"startLine":59,"startColumn":10,"endLine":59,"endColumn":15,"charOffset":1333,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\XbmDecode.c"},"region":{"startLine":63,"startColumn":19,"endLine":63,"endColumn":27,"charOffset":1430,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PdfParser.py"},"region":{"startLine":571,"startColumn":14,"endLine":571,"endColumn":18,"charOffset":18935,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\JpegImagePlugin.py"},"region":{"startLine":740,"startColumn":6,"endLine":740,"endColumn":11,"charOffset":26404,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\JpegImagePlugin.py"},"region":{"startLine":493,"startColumn":31,"endLine":493,"endColumn":50,"charOffset":17394,"charLength":19,"snippet":{"text":"http://ns.adobe.com","rendered":{"text":"http://ns.adobe.com","markdown":"`http://ns.adobe.com`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"src\\PIL\\JpegImagePlugin.py"},"replacements":[{"deletedRegion":{"charOffset":17394,"charLength":19},"insertedContent":{"text":"https://ns.adobe.com"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\JpegImagePlugin.py"},"region":{"startLine":244,"startColumn":6,"endLine":244,"endColumn":11,"charOffset":8833,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\JpegImagePlugin.py"},"region":{"startLine":94,"startColumn":37,"endLine":94,"endColumn":42,"charOffset":3131,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\JpegImagePlugin.py"},"region":{"startLine":91,"startColumn":37,"endLine":91,"endColumn":42,"charOffset":2964,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"region":{"startLine":452,"startColumn":20,"endLine":452,"endColumn":75,"charOffset":19297,"charLength":55,"snippet":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"replacements":[{"deletedRegion":{"charOffset":19297,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[yy] + xx * sizeof(v), <size of imOut->image[yy] + xx * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"region":{"startLine":434,"startColumn":20,"endLine":434,"endColumn":75,"charOffset":18336,"charLength":55,"snippet":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"replacements":[{"deletedRegion":{"charOffset":18336,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[yy] + xx * sizeof(v), <size of imOut->image[yy] + xx * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"region":{"startLine":417,"startColumn":20,"endLine":417,"endColumn":75,"charOffset":17451,"charLength":55,"snippet":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"replacements":[{"deletedRegion":{"charOffset":17451,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[yy] + xx * sizeof(v), <size of imOut->image[yy] + xx * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"region":{"startLine":369,"startColumn":20,"endLine":369,"endColumn":75,"charOffset":15638,"charLength":55,"snippet":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"replacements":[{"deletedRegion":{"charOffset":15638,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[yy] + xx * sizeof(v), <size of imOut->image[yy] + xx * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"region":{"startLine":347,"startColumn":20,"endLine":347,"endColumn":75,"charOffset":14493,"charLength":55,"snippet":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"replacements":[{"deletedRegion":{"charOffset":14493,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[yy] + xx * sizeof(v), <size of imOut->image[yy] + xx * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"region":{"startLine":327,"startColumn":20,"endLine":327,"endColumn":75,"charOffset":13467,"charLength":55,"snippet":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[yy] + xx * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"replacements":[{"deletedRegion":{"charOffset":13467,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[yy] + xx * sizeof(v), <size of imOut->image[yy] + xx * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"region":{"startLine":223,"startColumn":13,"endLine":223,"endColumn":45,"charOffset":10059,"charLength":32,"snippet":{"text":"malloc(outSize * 2 * sizeof(int)","rendered":{"text":"malloc(outSize * 2 * sizeof(int)","markdown":"`malloc(outSize * 2 * sizeof(int)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"replacements":[{"deletedRegion":{"charOffset":10059,"charLength":32},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"region":{"startLine":216,"startColumn":9,"endLine":216,"endColumn":48,"charOffset":9857,"charLength":39,"snippet":{"text":"malloc(outSize * ksize * sizeof(double)","rendered":{"text":"malloc(outSize * ksize * sizeof(double)","markdown":"`malloc(outSize * ksize * sizeof(double)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Resample.c"},"replacements":[{"deletedRegion":{"charOffset":9857,"charLength":39},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Except.c"},"region":{"startLine":53,"startColumn":4,"endLine":53,"endColumn":11,"charOffset":1224,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Except.c"},"region":{"startLine":34,"startColumn":4,"endLine":34,"endColumn":11,"charOffset":800,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Except.c"},"region":{"startLine":28,"startColumn":4,"endLine":28,"endColumn":11,"charOffset":675,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1792,"startColumn":7,"endLine":1792,"endColumn":12,"charOffset":50753,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1251,"startColumn":8,"endLine":1251,"endColumn":27,"charOffset":34452,"charLength":19,"snippet":{"text":"memcpy(_out, in, 4)","rendered":{"text":"memcpy(_out, in, 4)","markdown":"`memcpy(_out, in, 4)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":34452,"charLength":19},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  in,  4)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1241,"startColumn":8,"endLine":1241,"endColumn":27,"charOffset":34255,"charLength":19,"snippet":{"text":"memcpy(_out, in, 4)","rendered":{"text":"memcpy(_out, in, 4)","markdown":"`memcpy(_out, in, 4)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":34255,"charLength":19},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  in,  4)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1234,"startColumn":4,"endLine":1234,"endColumn":31,"charOffset":34095,"charLength":27,"snippet":{"text":"memcpy(out, in, 4 * pixels)","rendered":{"text":"memcpy(out, in, 4 * pixels)","markdown":"`memcpy(out, in, 4 * pixels)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":34095,"charLength":27},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in,  4 * pixels)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1228,"startColumn":4,"endLine":1228,"endColumn":31,"charOffset":33960,"charLength":27,"snippet":{"text":"memcpy(out, in, pixels * 2)","rendered":{"text":"memcpy(out, in, pixels * 2)","markdown":"`memcpy(out, in, pixels * 2)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":33960,"charLength":27},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in,  pixels * 2)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1222,"startColumn":4,"endLine":1222,"endColumn":27,"charOffset":33846,"charLength":23,"snippet":{"text":"memcpy(out, in, pixels)","rendered":{"text":"memcpy(out, in, pixels)","markdown":"`memcpy(out, in, pixels)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":33846,"charLength":23},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in,  pixels)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1214,"startColumn":8,"endLine":1214,"endColumn":41,"charOffset":33706,"charLength":33,"snippet":{"text":"memcpy(out, &pixel, sizeof(pixel)","rendered":{"text":"memcpy(out, &pixel, sizeof(pixel)","markdown":"`memcpy(out, &pixel, sizeof(pixel)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":33706,"charLength":33},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &pixel,  sizeof(pixel)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1202,"startColumn":8,"endLine":1202,"endColumn":41,"charOffset":33440,"charLength":33,"snippet":{"text":"memcpy(out, &pixel, sizeof(pixel)","rendered":{"text":"memcpy(out, &pixel, sizeof(pixel)","markdown":"`memcpy(out, &pixel, sizeof(pixel)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":33440,"charLength":33},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &pixel,  sizeof(pixel)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1193,"startColumn":8,"endLine":1193,"endColumn":41,"charOffset":33225,"charLength":33,"snippet":{"text":"memcpy(out, &pixel, sizeof(pixel)","rendered":{"text":"memcpy(out, &pixel, sizeof(pixel)","markdown":"`memcpy(out, &pixel, sizeof(pixel)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":33225,"charLength":33},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &pixel,  sizeof(pixel)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1100,"startColumn":8,"endLine":1100,"endColumn":36,"charOffset":30521,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":30521,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1086,"startColumn":8,"endLine":1086,"endColumn":36,"charOffset":30170,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":30170,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1074,"startColumn":8,"endLine":1074,"endColumn":36,"charOffset":29836,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":29836,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1062,"startColumn":8,"endLine":1062,"endColumn":36,"charOffset":29499,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":29499,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1050,"startColumn":8,"endLine":1050,"endColumn":36,"charOffset":29193,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":29193,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1038,"startColumn":8,"endLine":1038,"endColumn":36,"charOffset":28892,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":28892,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1027,"startColumn":8,"endLine":1027,"endColumn":36,"charOffset":28614,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":28614,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1016,"startColumn":8,"endLine":1016,"endColumn":36,"charOffset":28317,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":28317,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":1006,"startColumn":8,"endLine":1006,"endColumn":36,"charOffset":28035,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":28035,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":976,"startColumn":8,"endLine":976,"endColumn":36,"charOffset":27297,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":27297,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":908,"startColumn":8,"endLine":908,"endColumn":36,"charOffset":25517,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":25517,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":884,"startColumn":8,"endLine":884,"endColumn":36,"charOffset":24905,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":24905,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":860,"startColumn":8,"endLine":860,"endColumn":36,"charOffset":24271,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":24271,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":836,"startColumn":8,"endLine":836,"endColumn":36,"charOffset":23634,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":23634,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\FpxImagePlugin.py"},"region":{"startLine":213,"startColumn":18,"endLine":213,"endColumn":23,"charOffset":6017,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\FpxImagePlugin.py"},"region":{"startLine":174,"startColumn":18,"endLine":174,"endColumn":23,"charOffset":4620,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":824,"startColumn":8,"endLine":824,"endColumn":36,"charOffset":23309,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":23309,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":810,"startColumn":8,"endLine":810,"endColumn":36,"charOffset":22974,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":22974,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\EpsEncode.c"},"region":{"startLine":12,"startColumn":3,"endLine":12,"endColumn":8,"charOffset":191,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":798,"startColumn":8,"endLine":798,"endColumn":36,"charOffset":22656,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":22656,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":786,"startColumn":8,"endLine":786,"endColumn":36,"charOffset":22354,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":22354,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":654,"startColumn":8,"endLine":654,"endColumn":36,"charOffset":18647,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":18647,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":642,"startColumn":8,"endLine":642,"endColumn":36,"charOffset":18350,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":18350,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":632,"startColumn":8,"endLine":632,"endColumn":36,"charOffset":18065,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":18065,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":620,"startColumn":8,"endLine":620,"endColumn":36,"charOffset":17727,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":17727,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":608,"startColumn":8,"endLine":608,"endColumn":36,"charOffset":17416,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":17416,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":596,"startColumn":8,"endLine":596,"endColumn":36,"charOffset":17102,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":17102,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":590,"startColumn":8,"endLine":590,"endColumn":36,"charOffset":16926,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":16926,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":588,"startColumn":8,"endLine":588,"endColumn":34,"charOffset":16850,"charLength":26,"snippet":{"text":"memcpy(&iv, in, sizeof(iv)","rendered":{"text":"memcpy(&iv, in, sizeof(iv)","markdown":"`memcpy(&iv, in, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":16850,"charLength":26},"insertedContent":{"text":"memcpy_s(&iv, <size of &iv>,  in,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":433,"startColumn":8,"endLine":433,"endColumn":36,"charOffset":13116,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":13116,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"region":{"startLine":421,"startColumn":8,"endLine":421,"endColumn":36,"charOffset":12796,"charLength":28,"snippet":{"text":"memcpy(_out, &iv, sizeof(iv)","rendered":{"text":"memcpy(_out, &iv, sizeof(iv)","markdown":"`memcpy(_out, &iv, sizeof(iv)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Unpack.c"},"replacements":[{"deletedRegion":{"charOffset":12796,"charLength":28},"insertedContent":{"text":"memcpy_s(_out, <size of _out>,  &iv,  sizeof(iv)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PdfImagePlugin.py"},"region":{"startLine":119,"startColumn":14,"endLine":119,"endColumn":19,"charOffset":3325,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Effects.c"},"region":{"startLine":140,"startColumn":30,"endLine":140,"endColumn":38,"charOffset":4248,"charLength":8,"snippet":{"text":"rand() %","rendered":{"text":"rand() %","markdown":"`rand() %`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Effects.c"},"region":{"startLine":140,"startColumn":30,"endLine":140,"endColumn":35,"charOffset":4248,"charLength":5,"snippet":{"text":"rand(","rendered":{"text":"rand(","markdown":"`rand(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Effects.c"},"region":{"startLine":139,"startColumn":30,"endLine":139,"endColumn":38,"charOffset":4163,"charLength":8,"snippet":{"text":"rand() %","rendered":{"text":"rand() %","markdown":"`rand() %`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Effects.c"},"region":{"startLine":139,"startColumn":30,"endLine":139,"endColumn":35,"charOffset":4163,"charLength":5,"snippet":{"text":"rand(","rendered":{"text":"rand(","markdown":"`rand(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Effects.c"},"region":{"startLine":102,"startColumn":41,"endLine":102,"endColumn":49,"charOffset":2666,"charLength":8,"snippet":{"text":"RAND_MAX","rendered":{"text":"RAND_MAX","markdown":"`RAND_MAX`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Effects.c"},"region":{"startLine":102,"startColumn":25,"endLine":102,"endColumn":30,"charOffset":2650,"charLength":5,"snippet":{"text":"rand(","rendered":{"text":"rand(","markdown":"`rand(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Effects.c"},"region":{"startLine":101,"startColumn":41,"endLine":101,"endColumn":49,"charOffset":2607,"charLength":8,"snippet":{"text":"RAND_MAX","rendered":{"text":"RAND_MAX","markdown":"`RAND_MAX`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Effects.c"},"region":{"startLine":101,"startColumn":25,"endLine":101,"endColumn":30,"charOffset":2591,"charLength":5,"snippet":{"text":"rand(","rendered":{"text":"rand(","markdown":"`rand(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\PcxImagePlugin.py"},"region":{"startLine":90,"startColumn":14,"endLine":90,"endColumn":19,"charOffset":2440,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":1931,"startColumn":7,"endLine":1931,"endColumn":12,"charOffset":53682,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":1902,"startColumn":11,"endLine":1902,"endColumn":16,"charOffset":52947,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":1212,"startColumn":8,"endLine":1212,"endColumn":15,"charOffset":35148,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":1205,"startColumn":8,"endLine":1205,"endColumn":15,"charOffset":34918,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":1104,"startColumn":30,"endLine":1104,"endColumn":55,"charOffset":31947,"charLength":25,"snippet":{"text":"malloc(sizeof(event_list)","rendered":{"text":"malloc(sizeof(event_list)","markdown":"`malloc(sizeof(event_list)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"replacements":[{"deletedRegion":{"charOffset":31947,"charLength":25},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":1099,"startColumn":32,"endLine":1099,"endColumn":57,"charOffset":31773,"charLength":25,"snippet":{"text":"malloc(sizeof(event_list)","rendered":{"text":"malloc(sizeof(event_list)","markdown":"`malloc(sizeof(event_list)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"replacements":[{"deletedRegion":{"charOffset":31773,"charLength":25},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":1063,"startColumn":26,"endLine":1063,"endColumn":51,"charOffset":30768,"charLength":25,"snippet":{"text":"malloc(sizeof(event_list)","rendered":{"text":"malloc(sizeof(event_list)","markdown":"`malloc(sizeof(event_list)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"replacements":[{"deletedRegion":{"charOffset":30768,"charLength":25},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":1058,"startColumn":28,"endLine":1058,"endColumn":53,"charOffset":30614,"charLength":25,"snippet":{"text":"malloc(sizeof(event_list)","rendered":{"text":"malloc(sizeof(event_list)","markdown":"`malloc(sizeof(event_list)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"replacements":[{"deletedRegion":{"charOffset":30614,"charLength":25},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":651,"startColumn":8,"endLine":651,"endColumn":38,"charOffset":18635,"charLength":30,"snippet":{"text":"memcpy(&ink, ink_, sizeof(ink)","rendered":{"text":"memcpy(&ink, ink_, sizeof(ink)","markdown":"`memcpy(&ink, ink_, sizeof(ink)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"replacements":[{"deletedRegion":{"charOffset":18635,"charLength":30},"insertedContent":{"text":"memcpy_s(&ink, <size of &ink>,  ink_,  sizeof(ink)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":543,"startColumn":8,"endLine":543,"endColumn":13,"charOffset":15127,"charLength":5,"snippet":{"text":"qsort","rendered":{"text":"qsort","markdown":"`qsort`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":33,"startColumn":3,"endLine":33,"endColumn":8,"charOffset":1296,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":32,"startColumn":3,"endLine":32,"endColumn":8,"charOffset":1235,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":31,"startColumn":3,"endLine":31,"endColumn":8,"charOffset":1195,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Draw.c"},"region":{"startLine":30,"startColumn":3,"endLine":30,"endColumn":8,"charOffset":1128,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\FontFile.py"},"region":{"startLine":104,"startColumn":66,"endLine":104,"endColumn":70,"charOffset":2617,"charLength":4,"snippet":{"text":"HACK","rendered":{"text":"HACK","markdown":"`HACK`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":1236,"startColumn":12,"endLine":1236,"endColumn":65,"charOffset":62896,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":62896,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":1211,"startColumn":16,"endLine":1211,"endColumn":69,"charOffset":61794,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":61794,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":1185,"startColumn":16,"endLine":1185,"endColumn":69,"charOffset":60594,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":60594,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":1096,"startColumn":20,"endLine":1096,"endColumn":73,"charOffset":56946,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":56946,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":1049,"startColumn":20,"endLine":1049,"endColumn":73,"charOffset":53373,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":53373,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":1011,"startColumn":20,"endLine":1011,"endColumn":73,"charOffset":50583,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":50583,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":939,"startColumn":20,"endLine":939,"endColumn":73,"charOffset":46660,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":46660,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":904,"startColumn":20,"endLine":904,"endColumn":73,"charOffset":44221,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":44221,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":878,"startColumn":20,"endLine":878,"endColumn":73,"charOffset":42356,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":42356,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":822,"startColumn":20,"endLine":822,"endColumn":73,"charOffset":39502,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":39502,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":799,"startColumn":20,"endLine":799,"endColumn":73,"charOffset":37901,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":37901,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":779,"startColumn":20,"endLine":779,"endColumn":73,"charOffset":36589,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":36589,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":727,"startColumn":20,"endLine":727,"endColumn":73,"charOffset":34227,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":34227,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":712,"startColumn":20,"endLine":712,"endColumn":73,"charOffset":33326,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":33326,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":698,"startColumn":20,"endLine":698,"endColumn":73,"charOffset":32538,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":32538,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":656,"startColumn":20,"endLine":656,"endColumn":73,"charOffset":30902,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":30902,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":641,"startColumn":20,"endLine":641,"endColumn":73,"charOffset":30003,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":30003,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":627,"startColumn":20,"endLine":627,"endColumn":73,"charOffset":29216,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":29216,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":581,"startColumn":20,"endLine":581,"endColumn":73,"charOffset":27347,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":27347,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":562,"startColumn":20,"endLine":562,"endColumn":73,"charOffset":26324,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":26324,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":548,"startColumn":20,"endLine":548,"endColumn":73,"charOffset":25519,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":25519,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":507,"startColumn":20,"endLine":507,"endColumn":73,"charOffset":23868,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":23868,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":492,"startColumn":20,"endLine":492,"endColumn":73,"charOffset":23113,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":23113,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":481,"startColumn":20,"endLine":481,"endColumn":73,"charOffset":22509,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":22509,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":444,"startColumn":20,"endLine":444,"endColumn":73,"charOffset":21141,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":21141,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":429,"startColumn":20,"endLine":429,"endColumn":73,"charOffset":20386,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":20386,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":418,"startColumn":20,"endLine":418,"endColumn":73,"charOffset":19782,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":19782,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":379,"startColumn":20,"endLine":379,"endColumn":73,"charOffset":18297,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":18297,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":355,"startColumn":20,"endLine":355,"endColumn":73,"charOffset":17055,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":17055,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":333,"startColumn":20,"endLine":333,"endColumn":73,"charOffset":15961,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":15961,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1836,"startColumn":12,"endLine":1836,"endColumn":48,"charOffset":52119,"charLength":36,"snippet":{"text":"strcpy(imOut->palette->mode, \"RGBA\")","rendered":{"text":"strcpy(imOut->palette->mode, \"RGBA\")","markdown":"`strcpy(imOut->palette->mode, \"RGBA\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"replacements":[{"deletedRegion":{"charOffset":52119,"charLength":36},"insertedContent":{"text":"strcpy_s(imOut->palette->mode, <size of imOut->palette->mode>,  \"RGBA\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"replacements":[{"deletedRegion":{"charOffset":52119,"charLength":36},"insertedContent":{"text":"strlcpy(imOut->palette->mode,  \"RGBA\", <size of imOut->palette->mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":282,"startColumn":20,"endLine":282,"endColumn":73,"charOffset":13976,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":13976,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1690,"startColumn":11,"endLine":1690,"endColumn":16,"charOffset":47975,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1684,"startColumn":7,"endLine":1684,"endColumn":12,"charOffset":47815,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":255,"startColumn":20,"endLine":255,"endColumn":73,"charOffset":12530,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":12530,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1658,"startColumn":11,"endLine":1658,"endColumn":16,"charOffset":46948,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1487,"startColumn":4,"endLine":1487,"endColumn":10,"charOffset":42728,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1486,"startColumn":4,"endLine":1486,"endColumn":10,"charOffset":42656,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1474,"startColumn":4,"endLine":1474,"endColumn":10,"charOffset":42415,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1466,"startColumn":4,"endLine":1466,"endColumn":10,"charOffset":42226,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1458,"startColumn":4,"endLine":1458,"endColumn":10,"charOffset":42027,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1443,"startColumn":16,"endLine":1443,"endColumn":22,"charOffset":41352,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1416,"startColumn":8,"endLine":1416,"endColumn":14,"charOffset":40104,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":230,"startColumn":20,"endLine":230,"endColumn":73,"charOffset":11234,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":11234,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1375,"startColumn":4,"endLine":1375,"endColumn":10,"charOffset":38912,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1367,"startColumn":4,"endLine":1367,"endColumn":10,"charOffset":38686,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1364,"startColumn":4,"endLine":1364,"endColumn":10,"charOffset":38587,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1358,"startColumn":4,"endLine":1358,"endColumn":10,"charOffset":38415,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1351,"startColumn":4,"endLine":1351,"endColumn":10,"charOffset":38242,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1345,"startColumn":4,"endLine":1345,"endColumn":10,"charOffset":38091,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":175,"startColumn":20,"endLine":175,"endColumn":73,"charOffset":8957,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":8957,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1341,"startColumn":4,"endLine":1341,"endColumn":10,"charOffset":37990,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1336,"startColumn":8,"endLine":1336,"endColumn":14,"charOffset":37898,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1327,"startColumn":4,"endLine":1327,"endColumn":10,"charOffset":37673,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1319,"startColumn":4,"endLine":1319,"endColumn":10,"charOffset":37521,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1312,"startColumn":4,"endLine":1312,"endColumn":10,"charOffset":37323,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1305,"startColumn":4,"endLine":1305,"endColumn":10,"charOffset":37177,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1299,"startColumn":4,"endLine":1299,"endColumn":10,"charOffset":37022,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1235,"startColumn":4,"endLine":1235,"endColumn":10,"charOffset":35898,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1227,"startColumn":8,"endLine":1227,"endColumn":14,"charOffset":35740,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1196,"startColumn":4,"endLine":1196,"endColumn":10,"charOffset":34747,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":128,"startColumn":20,"endLine":128,"endColumn":73,"charOffset":6214,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":6214,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1129,"startColumn":12,"endLine":1129,"endColumn":18,"charOffset":32830,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1060,"startColumn":12,"endLine":1060,"endColumn":18,"charOffset":30771,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1050,"startColumn":12,"endLine":1050,"endColumn":18,"charOffset":30505,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1040,"startColumn":12,"endLine":1040,"endColumn":18,"charOffset":30210,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":1036,"startColumn":12,"endLine":1036,"endColumn":18,"charOffset":30080,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":971,"startColumn":12,"endLine":971,"endColumn":18,"charOffset":28222,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":828,"startColumn":8,"endLine":828,"endColumn":13,"charOffset":23664,"charLength":5,"snippet":{"text":"qsort","rendered":{"text":"qsort","markdown":"`qsort`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":745,"startColumn":12,"endLine":745,"endColumn":18,"charOffset":21304,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":737,"startColumn":8,"endLine":737,"endColumn":14,"charOffset":21068,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"region":{"startLine":86,"startColumn":20,"endLine":86,"endColumn":73,"charOffset":3853,"charLength":53,"snippet":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(imOut->image[y] + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Reduce.c"},"replacements":[{"deletedRegion":{"charOffset":3853,"charLength":53},"insertedContent":{"text":"memcpy_s(imOut->image[y] + x * sizeof(v), <size of imOut->image[y] + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":714,"startColumn":8,"endLine":714,"endColumn":14,"charOffset":20380,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":678,"startColumn":12,"endLine":678,"endColumn":18,"charOffset":19606,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":653,"startColumn":11,"endLine":653,"endColumn":33,"charOffset":18877,"charLength":22,"snippet":{"text":"malloc(sizeof(BoxNode)","rendered":{"text":"malloc(sizeof(BoxNode)","markdown":"`malloc(sizeof(BoxNode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"replacements":[{"deletedRegion":{"charOffset":18877,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":629,"startColumn":8,"endLine":629,"endColumn":14,"charOffset":18212,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":620,"startColumn":8,"endLine":620,"endColumn":14,"charOffset":17868,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":598,"startColumn":12,"endLine":598,"endColumn":34,"charOffset":17222,"charLength":22,"snippet":{"text":"malloc(sizeof(BoxNode)","rendered":{"text":"malloc(sizeof(BoxNode)","markdown":"`malloc(sizeof(BoxNode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"replacements":[{"deletedRegion":{"charOffset":17222,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":597,"startColumn":11,"endLine":597,"endColumn":33,"charOffset":17184,"charLength":22,"snippet":{"text":"malloc(sizeof(BoxNode)","rendered":{"text":"malloc(sizeof(BoxNode)","markdown":"`malloc(sizeof(BoxNode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"replacements":[{"deletedRegion":{"charOffset":17184,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":592,"startColumn":8,"endLine":592,"endColumn":14,"charOffset":17061,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":588,"startColumn":8,"endLine":588,"endColumn":14,"charOffset":16968,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":582,"startColumn":8,"endLine":582,"endColumn":14,"charOffset":16839,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":566,"startColumn":16,"endLine":566,"endColumn":22,"charOffset":16362,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":559,"startColumn":16,"endLine":559,"endColumn":22,"charOffset":16049,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":556,"startColumn":16,"endLine":556,"endColumn":22,"charOffset":15904,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":549,"startColumn":16,"endLine":549,"endColumn":22,"charOffset":15553,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":546,"startColumn":16,"endLine":546,"endColumn":22,"charOffset":15414,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":531,"startColumn":16,"endLine":531,"endColumn":22,"charOffset":14774,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":530,"startColumn":16,"endLine":530,"endColumn":22,"charOffset":14727,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":526,"startColumn":16,"endLine":526,"endColumn":22,"charOffset":14553,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":525,"startColumn":16,"endLine":525,"endColumn":22,"charOffset":14506,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":516,"startColumn":4,"endLine":516,"endColumn":10,"charOffset":14243,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":501,"startColumn":4,"endLine":501,"endColumn":10,"charOffset":13892,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":443,"startColumn":8,"endLine":443,"endColumn":14,"charOffset":12453,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":441,"startColumn":12,"endLine":441,"endColumn":18,"charOffset":12379,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":385,"startColumn":16,"endLine":385,"endColumn":22,"charOffset":10851,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":377,"startColumn":16,"endLine":377,"endColumn":22,"charOffset":10512,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":373,"startColumn":16,"endLine":373,"endColumn":22,"charOffset":10350,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":365,"startColumn":16,"endLine":365,"endColumn":22,"charOffset":9982,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":361,"startColumn":16,"endLine":361,"endColumn":22,"charOffset":9826,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":234,"startColumn":8,"endLine":234,"endColumn":32,"charOffset":6796,"charLength":24,"snippet":{"text":"malloc(sizeof(PixelList)","rendered":{"text":"malloc(sizeof(PixelList)","markdown":"`malloc(sizeof(PixelList)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"replacements":[{"deletedRegion":{"charOffset":6796,"charLength":24},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":181,"startColumn":4,"endLine":181,"endColumn":10,"charOffset":5044,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":178,"startColumn":4,"endLine":178,"endColumn":10,"charOffset":4935,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":172,"startColumn":12,"endLine":172,"endColumn":18,"charOffset":4790,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":166,"startColumn":12,"endLine":166,"endColumn":18,"charOffset":4564,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"region":{"startLine":148,"startColumn":8,"endLine":148,"endColumn":36,"charOffset":4013,"charLength":28,"snippet":{"text":"malloc(sizeof(PixelHashData)","rendered":{"text":"malloc(sizeof(PixelHashData)","markdown":"`malloc(sizeof(PixelHashData)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Quant.c"},"replacements":[{"deletedRegion":{"charOffset":4013,"charLength":28},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\IcoImagePlugin.py"},"region":{"startLine":74,"startColumn":14,"endLine":74,"endColumn":18,"charOffset":2326,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageFont.py"},"region":{"startLine":212,"startColumn":10,"endLine":212,"endColumn":15,"charOffset":6566,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageFont.py"},"region":{"startLine":120,"startColumn":26,"endLine":120,"endColumn":31,"charOffset":3515,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageFont.py"},"region":{"startLine":70,"startColumn":2,"endLine":70,"endColumn":7,"charOffset":1871,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\EpsImagePlugin.py"},"region":{"startLine":221,"startColumn":29,"endLine":221,"endColumn":34,"charOffset":6215,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"region":{"startLine":921,"startColumn":19,"endLine":921,"endColumn":27,"charOffset":29921,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"region":{"startLine":778,"startColumn":28,"endLine":778,"endColumn":43,"charOffset":25522,"charLength":15,"snippet":{"text":"malloc(bufsize)","rendered":{"text":"malloc(bufsize)","markdown":"`malloc(bufsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"replacements":[{"deletedRegion":{"charOffset":25522,"charLength":15},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"region":{"startLine":715,"startColumn":24,"endLine":715,"endColumn":32,"charOffset":23388,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TiffDecode.c"},"region":{"startLine":339,"startColumn":19,"endLine":339,"endColumn":27,"charOffset":10218,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImImagePlugin.py"},"region":{"startLine":248,"startColumn":30,"endLine":248,"endColumn":35,"charOffset":7171,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImImagePlugin.py"},"region":{"startLine":152,"startColumn":14,"endLine":152,"endColumn":19,"charOffset":3878,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"region":{"startLine":213,"startColumn":7,"endLine":213,"endColumn":12,"charOffset":6329,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"region":{"startLine":109,"startColumn":21,"endLine":109,"endColumn":33,"charOffset":2891,"charLength":12,"snippet":{"text":"strlen(mode)","rendered":{"text":"strlen(mode)","markdown":"`strlen(mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"replacements":[{"deletedRegion":{"charOffset":2891,"charLength":12},"insertedContent":{"text":"strlen_s(mode, <size of mode>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"replacements":[{"deletedRegion":{"charOffset":2891,"charLength":12},"insertedContent":{"text":"strnlen(mode, <size of mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"region":{"startLine":105,"startColumn":4,"endLine":105,"endColumn":27,"charOffset":2792,"charLength":23,"snippet":{"text":"strcpy(dib->mode, mode)","rendered":{"text":"strcpy(dib->mode, mode)","markdown":"`strcpy(dib->mode, mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"replacements":[{"deletedRegion":{"charOffset":2792,"charLength":23},"insertedContent":{"text":"strcpy_s(dib->mode, <size of dib->mode>,  mode)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"replacements":[{"deletedRegion":{"charOffset":2792,"charLength":23},"insertedContent":{"text":"strlcpy(dib->mode,  mode, <size of dib->mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"region":{"startLine":86,"startColumn":38,"endLine":86,"endColumn":50,"charOffset":2283,"charLength":12,"snippet":{"text":"strlen(mode)","rendered":{"text":"strlen(mode)","markdown":"`strlen(mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"replacements":[{"deletedRegion":{"charOffset":2283,"charLength":12},"insertedContent":{"text":"strlen_s(mode, <size of mode>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"replacements":[{"deletedRegion":{"charOffset":2283,"charLength":12},"insertedContent":{"text":"strnlen(mode, <size of mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"region":{"startLine":75,"startColumn":30,"endLine":75,"endColumn":61,"charOffset":1837,"charLength":31,"snippet":{"text":"malloc(sizeof(BITMAPINFOHEADER)","rendered":{"text":"malloc(sizeof(BITMAPINFOHEADER)","markdown":"`malloc(sizeof(BITMAPINFOHEADER)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"replacements":[{"deletedRegion":{"charOffset":1837,"charLength":31},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"region":{"startLine":70,"startColumn":22,"endLine":70,"endColumn":41,"charOffset":1650,"charLength":19,"snippet":{"text":"malloc(sizeof(*dib)","rendered":{"text":"malloc(sizeof(*dib)","markdown":"`malloc(sizeof(*dib)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Dib.c"},"replacements":[{"deletedRegion":{"charOffset":1650,"charLength":19},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\DdsImagePlugin.py"},"region":{"startLine":6,"startColumn":45,"endLine":6,"endColumn":63,"charOffset":164,"charLength":18,"snippet":{"text":"http://oss.sgi.com","rendered":{"text":"http://oss.sgi.com","markdown":"`http://oss.sgi.com`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"src\\PIL\\DdsImagePlugin.py"},"replacements":[{"deletedRegion":{"charOffset":164,"charLength":18},"insertedContent":{"text":"https://oss.sgi.com"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\GifImagePlugin.py"},"region":{"startLine":105,"startColumn":30,"endLine":105,"endColumn":35,"charOffset":2875,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Copy.c"},"region":{"startLine":41,"startColumn":12,"endLine":41,"endColumn":67,"charOffset":961,"charLength":55,"snippet":{"text":"memcpy(imOut->image[y], imIn->image[y], imIn->linesize)","rendered":{"text":"memcpy(imOut->image[y], imIn->image[y], imIn->linesize)","markdown":"`memcpy(imOut->image[y], imIn->image[y], imIn->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Copy.c"},"replacements":[{"deletedRegion":{"charOffset":961,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[y], <size of imOut->image[y]>,  imIn->image[y],  imIn->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Copy.c"},"region":{"startLine":38,"startColumn":8,"endLine":38,"endColumn":71,"charOffset":824,"charLength":63,"snippet":{"text":"memcpy(imOut->block, imIn->block, imIn->ysize * imIn->linesize)","rendered":{"text":"memcpy(imOut->block, imIn->block, imIn->ysize * imIn->linesize)","markdown":"`memcpy(imOut->block, imIn->block, imIn->ysize * imIn->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Copy.c"},"replacements":[{"deletedRegion":{"charOffset":824,"charLength":63},"insertedContent":{"text":"memcpy_s(imOut->block, <size of imOut->block>,  imIn->block,  imIn->ysize * imIn->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Point.c"},"region":{"startLine":257,"startColumn":24,"endLine":257,"endColumn":70,"charOffset":7817,"charLength":46,"snippet":{"text":"memcpy(out + x * sizeof(UINT16), &v, sizeof(v)","rendered":{"text":"memcpy(out + x * sizeof(UINT16), &v, sizeof(v)","markdown":"`memcpy(out + x * sizeof(UINT16), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Point.c"},"replacements":[{"deletedRegion":{"charOffset":7817,"charLength":46},"insertedContent":{"text":"memcpy_s(out + x * sizeof(UINT16), <size of out + x * sizeof(UINT16)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Point.c"},"region":{"startLine":255,"startColumn":24,"endLine":255,"endColumn":64,"charOffset":7700,"charLength":40,"snippet":{"text":"memcpy(&v, in + x * sizeof(v), sizeof(v)","rendered":{"text":"memcpy(&v, in + x * sizeof(v), sizeof(v)","markdown":"`memcpy(&v, in + x * sizeof(v), sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Point.c"},"replacements":[{"deletedRegion":{"charOffset":7700,"charLength":40},"insertedContent":{"text":"memcpy_s(&v, <size of &v>,  in + x * sizeof(v),  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Point.c"},"region":{"startLine":252,"startColumn":23,"endLine":252,"endColumn":28,"charOffset":7559,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Point.c"},"region":{"startLine":228,"startColumn":19,"endLine":228,"endColumn":24,"charOffset":6551,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Point.c"},"region":{"startLine":105,"startColumn":12,"endLine":105,"endColumn":72,"charOffset":3154,"charLength":60,"snippet":{"text":"memcpy(out + x, table + in[x] * sizeof(INT32), sizeof(INT32)","rendered":{"text":"memcpy(out + x, table + in[x] * sizeof(INT32), sizeof(INT32)","markdown":"`memcpy(out + x, table + in[x] * sizeof(INT32), sizeof(INT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Point.c"},"replacements":[{"deletedRegion":{"charOffset":3154,"charLength":60},"insertedContent":{"text":"memcpy_s(out + x, <size of out + x>,  table + in[x] * sizeof(INT32),  sizeof(INT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\PcxEncode.c"},"region":{"startLine":70,"startColumn":23,"endLine":70,"endColumn":31,"charOffset":1679,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageFile.py"},"region":{"startLine":497,"startColumn":6,"endLine":497,"endColumn":11,"charOffset":15764,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\ImageFile.py"},"region":{"startLine":216,"startColumn":18,"endLine":216,"endColumn":23,"charOffset":6485,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TgaRleEncode.c"},"region":{"startLine":148,"startColumn":8,"endLine":149,"endColumn":87,"charOffset":4352,"charLength":96,"snippet":{"text":"memcpy(\r\n            dst, state->buffer + (state->x * bytesPerPixel - state->count), flushCount)","rendered":{"text":"memcpy(\r\n            dst, state->buffer + (state->x * bytesPerPixel - state->count), flushCount)","markdown":"`memcpy(\r\n            dst, state->buffer + (state->x * bytesPerPixel - state->count), flushCount)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\TgaRleEncode.c"},"replacements":[{"deletedRegion":{"charOffset":4352,"charLength":96},"insertedContent":{"text":"memcpy_s(\r\n            dst, <size of \r\n            dst>,  state->buffer + (state->x * bytesPerPixel - state->count),  flushCount)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TgaRleEncode.c"},"region":{"startLine":62,"startColumn":23,"endLine":62,"endColumn":31,"charOffset":1515,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\PcxDecode.c"},"region":{"startLine":75,"startColumn":19,"endLine":75,"endColumn":27,"charOffset":1946,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\PcxDecode.c"},"region":{"startLine":68,"startColumn":20,"endLine":68,"endColumn":27,"charOffset":1685,"charLength":7,"snippet":{"text":"memmove","rendered":{"text":"memmove","markdown":"`memmove`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1313,"startColumn":16,"endLine":1313,"endColumn":71,"charOffset":33764,"charLength":55,"snippet":{"text":"memcpy(imOut->image[y], imIn->image[y], imIn->linesize)","rendered":{"text":"memcpy(imOut->image[y], imIn->image[y], imIn->linesize)","markdown":"`memcpy(imOut->image[y], imIn->image[y], imIn->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":33764,"charLength":55},"insertedContent":{"text":"memcpy_s(imOut->image[y], <size of imOut->image[y]>,  imIn->image[y],  imIn->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1281,"startColumn":11,"endLine":1281,"endColumn":16,"charOffset":32767,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1087,"startColumn":8,"endLine":1087,"endColumn":34,"charOffset":27284,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":27284,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1069,"startColumn":8,"endLine":1069,"endColumn":34,"charOffset":26781,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":26781,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1057,"startColumn":7,"endLine":1057,"endColumn":12,"charOffset":26359,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1046,"startColumn":7,"endLine":1046,"endColumn":12,"charOffset":26015,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1016,"startColumn":7,"endLine":1016,"endColumn":12,"charOffset":25202,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":1007,"startColumn":7,"endLine":1007,"endColumn":12,"charOffset":24949,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":998,"startColumn":7,"endLine":998,"endColumn":12,"charOffset":24674,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":989,"startColumn":7,"endLine":989,"endColumn":12,"charOffset":24405,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":980,"startColumn":3,"endLine":980,"endColumn":8,"charOffset":24141,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":816,"startColumn":8,"endLine":816,"endColumn":34,"charOffset":20370,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":20370,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":807,"startColumn":8,"endLine":807,"endColumn":34,"charOffset":20141,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":20141,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":798,"startColumn":8,"endLine":798,"endColumn":34,"charOffset":19912,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":19912,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":789,"startColumn":8,"endLine":789,"endColumn":34,"charOffset":19685,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":19685,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":777,"startColumn":8,"endLine":777,"endColumn":33,"charOffset":19372,"charLength":25,"snippet":{"text":"memcpy(&i, in_, sizeof(i)","rendered":{"text":"memcpy(&i, in_, sizeof(i)","markdown":"`memcpy(&i, in_, sizeof(i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":19372,"charLength":25},"insertedContent":{"text":"memcpy_s(&i, <size of &i>,  in_,  sizeof(i)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":765,"startColumn":8,"endLine":765,"endColumn":33,"charOffset":19094,"charLength":25,"snippet":{"text":"memcpy(&i, in_, sizeof(i)","rendered":{"text":"memcpy(&i, in_, sizeof(i)","markdown":"`memcpy(&i, in_, sizeof(i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":19094,"charLength":25},"insertedContent":{"text":"memcpy_s(&i, <size of &i>,  in_,  sizeof(i)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":707,"startColumn":8,"endLine":707,"endColumn":34,"charOffset":17865,"charLength":26,"snippet":{"text":"memcpy(out_, &i, sizeof(i)","rendered":{"text":"memcpy(out_, &i, sizeof(i)","markdown":"`memcpy(out_, &i, sizeof(i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":17865,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &i,  sizeof(i)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":705,"startColumn":8,"endLine":705,"endColumn":33,"charOffset":17812,"charLength":25,"snippet":{"text":"memcpy(&f, in_, sizeof(f)","rendered":{"text":"memcpy(&f, in_, sizeof(f)","markdown":"`memcpy(&f, in_, sizeof(f)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":17812,"charLength":25},"insertedContent":{"text":"memcpy_s(&f, <size of &f>,  in_,  sizeof(f)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":688,"startColumn":8,"endLine":688,"endColumn":33,"charOffset":17429,"charLength":25,"snippet":{"text":"memcpy(&v, in_, sizeof(v)","rendered":{"text":"memcpy(&v, in_, sizeof(v)","markdown":"`memcpy(&v, in_, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":17429,"charLength":25},"insertedContent":{"text":"memcpy_s(&v, <size of &v>,  in_,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":679,"startColumn":8,"endLine":679,"endColumn":34,"charOffset":17234,"charLength":26,"snippet":{"text":"memcpy(out_, &f, sizeof(f)","rendered":{"text":"memcpy(out_, &f, sizeof(f)","markdown":"`memcpy(out_, &f, sizeof(f)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":17234,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &f,  sizeof(f)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":670,"startColumn":8,"endLine":670,"endColumn":34,"charOffset":17028,"charLength":26,"snippet":{"text":"memcpy(out_, &f, sizeof(f)","rendered":{"text":"memcpy(out_, &f, sizeof(f)","markdown":"`memcpy(out_, &f, sizeof(f)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":17028,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &f,  sizeof(f)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":623,"startColumn":8,"endLine":623,"endColumn":34,"charOffset":15913,"charLength":26,"snippet":{"text":"memcpy(out_, &f, sizeof(f)","rendered":{"text":"memcpy(out_, &f, sizeof(f)","markdown":"`memcpy(out_, &f, sizeof(f)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":15913,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &f,  sizeof(f)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":621,"startColumn":8,"endLine":621,"endColumn":33,"charOffset":15860,"charLength":25,"snippet":{"text":"memcpy(&i, in_, sizeof(i)","rendered":{"text":"memcpy(&i, in_, sizeof(i)","markdown":"`memcpy(&i, in_, sizeof(i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":15860,"charLength":25},"insertedContent":{"text":"memcpy_s(&i, <size of &i>,  in_,  sizeof(i)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":604,"startColumn":8,"endLine":604,"endColumn":33,"charOffset":15481,"charLength":25,"snippet":{"text":"memcpy(&v, in_, sizeof(v)","rendered":{"text":"memcpy(&v, in_, sizeof(v)","markdown":"`memcpy(&v, in_, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":15481,"charLength":25},"insertedContent":{"text":"memcpy_s(&v, <size of &v>,  in_,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":595,"startColumn":8,"endLine":595,"endColumn":34,"charOffset":15288,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":15288,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":586,"startColumn":8,"endLine":586,"endColumn":34,"charOffset":15093,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":15093,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":504,"startColumn":12,"endLine":504,"endColumn":43,"charOffset":13186,"charLength":31,"snippet":{"text":"memcpy(out, &repl, sizeof(repl)","rendered":{"text":"memcpy(out, &repl, sizeof(repl)","markdown":"`memcpy(out, &repl, sizeof(repl)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":13186,"charLength":31},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &repl,  sizeof(repl)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":502,"startColumn":8,"endLine":502,"endColumn":33,"charOffset":13119,"charLength":25,"snippet":{"text":"memcpy(&v, out, sizeof(v)","rendered":{"text":"memcpy(&v, out, sizeof(v)","markdown":"`memcpy(&v, out, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":13119,"charLength":25},"insertedContent":{"text":"memcpy_s(&v, <size of &v>,  out,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":280,"startColumn":8,"endLine":280,"endColumn":34,"charOffset":7369,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":7369,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":269,"startColumn":8,"endLine":269,"endColumn":34,"charOffset":7018,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":7018,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":258,"startColumn":8,"endLine":258,"endColumn":34,"charOffset":6667,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":6667,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"region":{"startLine":249,"startColumn":8,"endLine":249,"endColumn":34,"charOffset":6442,"charLength":26,"snippet":{"text":"memcpy(out_, &v, sizeof(v)","rendered":{"text":"memcpy(out_, &v, sizeof(v)","markdown":"`memcpy(out_, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Convert.c"},"replacements":[{"deletedRegion":{"charOffset":6442,"charLength":26},"insertedContent":{"text":"memcpy_s(out_, <size of out_>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\PcdDecode.c"},"region":{"startLine":65,"startColumn":15,"endLine":65,"endColumn":23,"charOffset":1655,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\PcdDecode.c"},"region":{"startLine":50,"startColumn":15,"endLine":50,"endColumn":23,"charOffset":1159,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TgaRleDecode.c"},"region":{"startLine":121,"startColumn":12,"endLine":121,"endColumn":52,"charOffset":3092,"charLength":40,"snippet":{"text":"memcpy(state->buffer + state->x, ptr, n)","rendered":{"text":"memcpy(state->buffer + state->x, ptr, n)","markdown":"`memcpy(state->buffer + state->x, ptr, n)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\TgaRleDecode.c"},"replacements":[{"deletedRegion":{"charOffset":3092,"charLength":40},"insertedContent":{"text":"memcpy_s(state->buffer + state->x, <size of state->buffer + state->x>,  ptr,  n)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TgaRleDecode.c"},"region":{"startLine":92,"startColumn":23,"endLine":92,"endColumn":31,"charOffset":2295,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TgaRleDecode.c"},"region":{"startLine":81,"startColumn":12,"endLine":81,"endColumn":56,"charOffset":2009,"charLength":44,"snippet":{"text":"memcpy(state->buffer + state->x, ptr + 1, n)","rendered":{"text":"memcpy(state->buffer + state->x, ptr + 1, n)","markdown":"`memcpy(state->buffer + state->x, ptr + 1, n)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\TgaRleDecode.c"},"replacements":[{"deletedRegion":{"charOffset":2009,"charLength":44},"insertedContent":{"text":"memcpy_s(state->buffer + state->x, <size of state->buffer + state->x>,  ptr + 1,  n)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\TgaRleDecode.c"},"region":{"startLine":63,"startColumn":20,"endLine":63,"endColumn":72,"charOffset":1505,"charLength":52,"snippet":{"text":"memcpy(state->buffer + state->x + i, ptr + 1, depth)","rendered":{"text":"memcpy(state->buffer + state->x + i, ptr + 1, depth)","markdown":"`memcpy(state->buffer + state->x + i, ptr + 1, depth)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\TgaRleDecode.c"},"replacements":[{"deletedRegion":{"charOffset":1505,"charLength":52},"insertedContent":{"text":"memcpy_s(state->buffer + state->x + i, <size of state->buffer + state->x + i>,  ptr + 1,  depth)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\RawEncode.c"},"region":{"startLine":65,"startColumn":15,"endLine":65,"endColumn":23,"charOffset":1702,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\RawEncode.c"},"region":{"startLine":7,"startColumn":3,"endLine":7,"endColumn":8,"charOffset":79,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"region":{"startLine":372,"startColumn":4,"endLine":372,"endColumn":36,"charOffset":9801,"charLength":32,"snippet":{"text":"memcpy(&ink8, ink_, sizeof(ink8)","rendered":{"text":"memcpy(&ink8, ink_, sizeof(ink8)","markdown":"`memcpy(&ink8, ink_, sizeof(ink8)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"replacements":[{"deletedRegion":{"charOffset":9801,"charLength":32},"insertedContent":{"text":"memcpy_s(&ink8, <size of &ink8>,  ink_,  sizeof(ink8)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"region":{"startLine":371,"startColumn":4,"endLine":371,"endColumn":35,"charOffset":9763,"charLength":31,"snippet":{"text":"memcpy(&ink32, ink_, pixelsize)","rendered":{"text":"memcpy(&ink32, ink_, pixelsize)","markdown":"`memcpy(&ink32, ink_, pixelsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"replacements":[{"deletedRegion":{"charOffset":9763,"charLength":31},"insertedContent":{"text":"memcpy_s(&ink32, <size of &ink32>,  ink_,  pixelsize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"region":{"startLine":334,"startColumn":4,"endLine":334,"endColumn":36,"charOffset":8988,"charLength":32,"snippet":{"text":"memcpy(&ink8, ink_, sizeof(ink8)","rendered":{"text":"memcpy(&ink8, ink_, sizeof(ink8)","markdown":"`memcpy(&ink8, ink_, sizeof(ink8)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"replacements":[{"deletedRegion":{"charOffset":8988,"charLength":32},"insertedContent":{"text":"memcpy_s(&ink8, <size of &ink8>,  ink_,  sizeof(ink8)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"region":{"startLine":333,"startColumn":4,"endLine":333,"endColumn":35,"charOffset":8950,"charLength":31,"snippet":{"text":"memcpy(&ink32, ink_, pixelsize)","rendered":{"text":"memcpy(&ink32, ink_, pixelsize)","markdown":"`memcpy(&ink32, ink_, pixelsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"replacements":[{"deletedRegion":{"charOffset":8950,"charLength":31},"insertedContent":{"text":"memcpy_s(&ink32, <size of &ink32>,  ink_,  pixelsize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"region":{"startLine":47,"startColumn":8,"endLine":47,"endColumn":74,"charOffset":1053,"charLength":66,"snippet":{"text":"memcpy(imOut->image[y + dy] + dx, imIn->image[y + sy] + sx, xsize)","rendered":{"text":"memcpy(imOut->image[y + dy] + dx, imIn->image[y + sy] + sx, xsize)","markdown":"`memcpy(imOut->image[y + dy] + dx, imIn->image[y + sy] + sx, xsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Paste.c"},"replacements":[{"deletedRegion":{"charOffset":1053,"charLength":66},"insertedContent":{"text":"memcpy_s(imOut->image[y + dy] + dx, <size of imOut->image[y + dy] + dx>,  imIn->image[y + sy] + sx,  xsize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\RawDecode.c"},"region":{"startLine":74,"startColumn":15,"endLine":74,"endColumn":23,"charOffset":1721,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\SunRleDecode.c"},"region":{"startLine":106,"startColumn":23,"endLine":106,"endColumn":31,"charOffset":2948,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\RankFilter.c"},"region":{"startLine":95,"startColumn":20,"endLine":95,"endColumn":47,"charOffset":3564,"charLength":27,"snippet":{"text":"malloc(size2 * sizeof(type)","rendered":{"text":"malloc(size2 * sizeof(type)","markdown":"`malloc(size2 * sizeof(type)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\RankFilter.c"},"replacements":[{"deletedRegion":{"charOffset":3564,"charLength":27},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Storage.c"},"region":{"startLine":475,"startColumn":28,"endLine":475,"endColumn":37,"charOffset":14648,"charLength":9,"snippet":{"text":"malloc(1)","rendered":{"text":"malloc(1)","markdown":"`malloc(1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Storage.c"},"replacements":[{"deletedRegion":{"charOffset":14648,"charLength":9},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Storage.c"},"region":{"startLine":346,"startColumn":24,"endLine":346,"endColumn":46,"charOffset":10615,"charLength":22,"snippet":{"text":"malloc(requested_size)","rendered":{"text":"malloc(requested_size)","markdown":"`malloc(requested_size)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Storage.c"},"replacements":[{"deletedRegion":{"charOffset":10615,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Storage.c"},"region":{"startLine":209,"startColumn":4,"endLine":209,"endColumn":26,"charOffset":6890,"charLength":22,"snippet":{"text":"strcpy(im->mode, mode)","rendered":{"text":"strcpy(im->mode, mode)","markdown":"`strcpy(im->mode, mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Storage.c"},"replacements":[{"deletedRegion":{"charOffset":6890,"charLength":22},"insertedContent":{"text":"strcpy_s(im->mode, <size of im->mode>,  mode)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Storage.c"},"replacements":[{"deletedRegion":{"charOffset":6890,"charLength":22},"insertedContent":{"text":"strlcpy(im->mode,  mode, <size of im->mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\PIL\\GdImageFile.py"},"region":{"startLine":54,"startColumn":27,"endLine":54,"endColumn":32,"charOffset":1448,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"region":{"startLine":128,"startColumn":4,"endLine":128,"endColumn":11,"charOffset":3167,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"region":{"startLine":95,"startColumn":23,"endLine":95,"endColumn":46,"charOffset":2488,"charLength":23,"snippet":{"text":"malloc(sizeof(uint32_t)","rendered":{"text":"malloc(sizeof(uint32_t)","markdown":"`malloc(sizeof(uint32_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"replacements":[{"deletedRegion":{"charOffset":2488,"charLength":23},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"region":{"startLine":83,"startColumn":21,"endLine":83,"endColumn":60,"charOffset":2097,"charLength":39,"snippet":{"text":"malloc(height * sizeof(unsigned char *)","rendered":{"text":"malloc(height * sizeof(unsigned char *)","markdown":"`malloc(height * sizeof(unsigned char *)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"replacements":[{"deletedRegion":{"charOffset":2097,"charLength":39},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"region":{"startLine":79,"startColumn":17,"endLine":79,"endColumn":39,"charOffset":2001,"charLength":22,"snippet":{"text":"malloc(width * height)","rendered":{"text":"malloc(width * height)","markdown":"`malloc(width * height)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"replacements":[{"deletedRegion":{"charOffset":2001,"charLength":22},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"region":{"startLine":67,"startColumn":15,"endLine":67,"endColumn":35,"charOffset":1564,"charLength":20,"snippet":{"text":"malloc(sizeof(Pixel)","rendered":{"text":"malloc(sizeof(Pixel)","markdown":"`malloc(sizeof(Pixel)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantPngQuant.c"},"replacements":[{"deletedRegion":{"charOffset":1564,"charLength":20},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"region":{"startLine":298,"startColumn":34,"endLine":298,"endColumn":64,"charOffset":8534,"charLength":30,"snippet":{"text":"malloc(entries * sizeof(INT16)","rendered":{"text":"malloc(entries * sizeof(INT16)","markdown":"`malloc(entries * sizeof(INT16)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"replacements":[{"deletedRegion":{"charOffset":8534,"charLength":30},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"region":{"startLine":112,"startColumn":4,"endLine":112,"endColumn":70,"charOffset":2893,"charLength":66,"snippet":{"text":"memcpy(new_palette, palette, sizeof(struct ImagingPaletteInstance)","rendered":{"text":"memcpy(new_palette, palette, sizeof(struct ImagingPaletteInstance)","markdown":"`memcpy(new_palette, palette, sizeof(struct ImagingPaletteInstance)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"replacements":[{"deletedRegion":{"charOffset":2893,"charLength":66},"insertedContent":{"text":"memcpy_s(new_palette, <size of new_palette>,  palette,  sizeof(struct ImagingPaletteInstance)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"region":{"startLine":107,"startColumn":18,"endLine":107,"endColumn":62,"charOffset":2747,"charLength":44,"snippet":{"text":"malloc(sizeof(struct ImagingPaletteInstance)","rendered":{"text":"malloc(sizeof(struct ImagingPaletteInstance)","markdown":"`malloc(sizeof(struct ImagingPaletteInstance)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"replacements":[{"deletedRegion":{"charOffset":2747,"charLength":44},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"region":{"startLine":87,"startColumn":7,"endLine":87,"endColumn":12,"charOffset":2255,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"region":{"startLine":66,"startColumn":7,"endLine":66,"endColumn":12,"charOffset":1640,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"region":{"startLine":39,"startColumn":4,"endLine":39,"endColumn":57,"charOffset":936,"charLength":53,"snippet":{"text":"strncpy(palette->mode, mode, IMAGING_MODE_LENGTH - 1)","rendered":{"text":"strncpy(palette->mode, mode, IMAGING_MODE_LENGTH - 1)","markdown":"`strncpy(palette->mode, mode, IMAGING_MODE_LENGTH - 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"replacements":[{"deletedRegion":{"charOffset":936,"charLength":53},"insertedContent":{"text":"strcpy_s(palette->mode,  IMAGING_MODE_LENGTH - 1,  mode)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Palette.c"},"replacements":[{"deletedRegion":{"charOffset":936,"charLength":53},"insertedContent":{"text":"strlcpy(palette->mode,  mode,  IMAGING_MODE_LENGTH - 1)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingmath.c"},"region":{"startLine":104,"startColumn":44,"endLine":104,"endColumn":49,"charOffset":3390,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"region":{"startLine":343,"startColumn":4,"endLine":343,"endColumn":68,"charOffset":10295,"charLength":64,"snippet":{"text":"memcpy(&result[nBucketsA], bucketsB, sizeof(struct _ColorBucket)","rendered":{"text":"memcpy(&result[nBucketsA], bucketsB, sizeof(struct _ColorBucket)","markdown":"`memcpy(&result[nBucketsA], bucketsB, sizeof(struct _ColorBucket)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"replacements":[{"deletedRegion":{"charOffset":10295,"charLength":64},"insertedContent":{"text":"memcpy_s(&result[nBucketsA], <size of &result[nBucketsA]>,  bucketsB,  sizeof(struct _ColorBucket)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"region":{"startLine":342,"startColumn":4,"endLine":342,"endColumn":56,"charOffset":10223,"charLength":52,"snippet":{"text":"memcpy(result, bucketsA, sizeof(struct _ColorBucket)","rendered":{"text":"memcpy(result, bucketsA, sizeof(struct _ColorBucket)","markdown":"`memcpy(result, bucketsA, sizeof(struct _ColorBucket)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"replacements":[{"deletedRegion":{"charOffset":10223,"charLength":52},"insertedContent":{"text":"memcpy_s(result, <size of result>,  bucketsA,  sizeof(struct _ColorBucket)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"region":{"startLine":190,"startColumn":4,"endLine":190,"endColumn":9,"charOffset":5714,"charLength":5,"snippet":{"text":"qsort","rendered":{"text":"qsort","markdown":"`qsort`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"region":{"startLine":188,"startColumn":4,"endLine":188,"endColumn":62,"charOffset":5633,"charLength":58,"snippet":{"text":"memcpy(buckets, cube->buckets, sizeof(struct _ColorBucket)","rendered":{"text":"memcpy(buckets, cube->buckets, sizeof(struct _ColorBucket)","markdown":"`memcpy(buckets, cube->buckets, sizeof(struct _ColorBucket)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"replacements":[{"deletedRegion":{"charOffset":5633,"charLength":58},"insertedContent":{"text":"memcpy_s(buckets, <size of buckets>,  cube->buckets,  sizeof(struct _ColorBucket)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"region":{"startLine":59,"startColumn":11,"endLine":59,"endColumn":43,"charOffset":2046,"charLength":32,"snippet":{"text":"malloc(sizeof(struct _ColorCube)","rendered":{"text":"malloc(sizeof(struct _ColorCube)","markdown":"`malloc(sizeof(struct _ColorCube)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantOctree.c"},"replacements":[{"deletedRegion":{"charOffset":2046,"charLength":32},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\BcnDecode.c"},"region":{"startLine":817,"startColumn":12,"endLine":817,"endColumn":51,"charOffset":25918,"charLength":39,"snippet":{"text":"memcpy(dst, col + sz * (j * 4), 4 * sz)","rendered":{"text":"memcpy(dst, col + sz * (j * 4), 4 * sz)","markdown":"`memcpy(dst, col + sz * (j * 4), 4 * sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\BcnDecode.c"},"replacements":[{"deletedRegion":{"charOffset":25918,"charLength":39},"insertedContent":{"text":"memcpy_s(dst, <size of dst>,  col + sz * (j * 4),  4 * sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\BcnDecode.c"},"region":{"startLine":809,"startColumn":16,"endLine":809,"endColumn":64,"charOffset":25652,"charLength":48,"snippet":{"text":"memcpy(dst + sz * x, col + sz * (j * 4 + i), sz)","rendered":{"text":"memcpy(dst + sz * x, col + sz * (j * 4 + i), sz)","markdown":"`memcpy(dst + sz * x, col + sz * (j * 4 + i), sz)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\BcnDecode.c"},"replacements":[{"deletedRegion":{"charOffset":25652,"charLength":48},"insertedContent":{"text":"memcpy_s(dst + sz * x, <size of dst + sz * x>,  col + sz * (j * 4 + i),  sz)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\BcnDecode.c"},"region":{"startLine":127,"startColumn":8,"endLine":127,"endColumn":41,"charOffset":2937,"charLength":33,"snippet":{"text":"memcpy(&b, src, sizeof(bc3_alpha)","rendered":{"text":"memcpy(&b, src, sizeof(bc3_alpha)","markdown":"`memcpy(&b, src, sizeof(bc3_alpha)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\BcnDecode.c"},"replacements":[{"deletedRegion":{"charOffset":2937,"charLength":33},"insertedContent":{"text":"memcpy_s(&b, <size of &b>,  src,  sizeof(bc3_alpha)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\BcnDecode.c"},"region":{"startLine":120,"startColumn":8,"endLine":120,"endColumn":42,"charOffset":2665,"charLength":34,"snippet":{"text":"memcpy(&b, src, sizeof(bc5s_alpha)","rendered":{"text":"memcpy(&b, src, sizeof(bc5s_alpha)","markdown":"`memcpy(&b, src, sizeof(bc5s_alpha)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\BcnDecode.c"},"replacements":[{"deletedRegion":{"charOffset":2665,"charLength":34},"insertedContent":{"text":"memcpy_s(&b, <size of &b>,  src,  sizeof(bc5s_alpha)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingft.c"},"region":{"startLine":1185,"startColumn":24,"endLine":1185,"endColumn":60,"charOffset":36302,"charLength":36,"snippet":{"text":"malloc(num_coords * sizeof(FT_Fixed)","rendered":{"text":"malloc(num_coords * sizeof(FT_Fixed)","markdown":"`malloc(num_coords * sizeof(FT_Fixed)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingft.c"},"replacements":[{"deletedRegion":{"charOffset":36302,"charLength":36},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingft.c"},"region":{"startLine":571,"startColumn":8,"endLine":571,"endColumn":22,"charOffset":16622,"charLength":14,"snippet":{"text":"strlen(anchor)","rendered":{"text":"strlen(anchor)","markdown":"`strlen(anchor)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingft.c"},"replacements":[{"deletedRegion":{"charOffset":16622,"charLength":14},"insertedContent":{"text":"strlen_s(anchor, <size of anchor>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingft.c"},"replacements":[{"deletedRegion":{"charOffset":16622,"charLength":14},"insertedContent":{"text":"strnlen(anchor, <size of anchor>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingft.c"},"region":{"startLine":191,"startColumn":30,"endLine":191,"endColumn":45,"charOffset":4947,"charLength":15,"snippet":{"text":"strlen((char *)","rendered":{"text":"strlen((char *)","markdown":"`strlen((char *)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingft.c"},"replacements":[{"deletedRegion":{"charOffset":4947,"charLength":15},"insertedContent":{"text":"strlen_s((char *, <size of (char *>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingft.c"},"replacements":[{"deletedRegion":{"charOffset":4947,"charLength":15},"insertedContent":{"text":"strnlen((char *, <size of (char *>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingft.c"},"region":{"startLine":177,"startColumn":12,"endLine":177,"endColumn":57,"charOffset":4545,"charLength":45,"snippet":{"text":"memcpy(self->font_bytes, font_bytes, (size_t)","rendered":{"text":"memcpy(self->font_bytes, font_bytes, (size_t)","markdown":"`memcpy(self->font_bytes, font_bytes, (size_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingft.c"},"replacements":[{"deletedRegion":{"charOffset":4545,"charLength":45},"insertedContent":{"text":"memcpy_s(self->font_bytes, <size of self->font_bytes>,  font_bytes,  (size_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\PackDecode.c"},"region":{"startLine":78,"startColumn":19,"endLine":78,"endColumn":27,"charOffset":1785,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\SgiRleDecode.c"},"region":{"startLine":275,"startColumn":15,"endLine":275,"endColumn":23,"charOffset":8146,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\SgiRleDecode.c"},"region":{"startLine":189,"startColumn":10,"endLine":189,"endColumn":30,"charOffset":5103,"charLength":20,"snippet":{"text":"malloc(sizeof(UINT8)","rendered":{"text":"malloc(sizeof(UINT8)","markdown":"`malloc(sizeof(UINT8)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\SgiRleDecode.c"},"replacements":[{"deletedRegion":{"charOffset":5103,"charLength":20},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\SgiRleDecode.c"},"region":{"startLine":151,"startColumn":16,"endLine":151,"endColumn":36,"charOffset":4067,"charLength":20,"snippet":{"text":"memcpy(dest, src, 2)","rendered":{"text":"memcpy(dest, src, 2)","markdown":"`memcpy(dest, src, 2)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\SgiRleDecode.c"},"replacements":[{"deletedRegion":{"charOffset":4067,"charLength":20},"insertedContent":{"text":"memcpy_s(dest, <size of dest>,  src,  2)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"region":{"startLine":494,"startColumn":4,"endLine":494,"endColumn":31,"charOffset":10936,"charLength":27,"snippet":{"text":"memcpy(out, in, 4 * pixels)","rendered":{"text":"memcpy(out, in, 4 * pixels)","markdown":"`memcpy(out, in, 4 * pixels)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"replacements":[{"deletedRegion":{"charOffset":10936,"charLength":27},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in,  4 * pixels)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\SgiRleDecode.c"},"region":{"startLine":142,"startColumn":16,"endLine":142,"endColumn":36,"charOffset":3818,"charLength":20,"snippet":{"text":"memcpy(dest, src, 2)","rendered":{"text":"memcpy(dest, src, 2)","markdown":"`memcpy(dest, src, 2)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\SgiRleDecode.c"},"replacements":[{"deletedRegion":{"charOffset":3818,"charLength":20},"insertedContent":{"text":"memcpy_s(dest, <size of dest>,  src,  2)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"region":{"startLine":488,"startColumn":4,"endLine":488,"endColumn":31,"charOffset":10801,"charLength":27,"snippet":{"text":"memcpy(out, in, pixels * 3)","rendered":{"text":"memcpy(out, in, pixels * 3)","markdown":"`memcpy(out, in, pixels * 3)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"replacements":[{"deletedRegion":{"charOffset":10801,"charLength":27},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in,  pixels * 3)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"region":{"startLine":482,"startColumn":4,"endLine":482,"endColumn":31,"charOffset":10676,"charLength":27,"snippet":{"text":"memcpy(out, in, pixels * 2)","rendered":{"text":"memcpy(out, in, pixels * 2)","markdown":"`memcpy(out, in, pixels * 2)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"replacements":[{"deletedRegion":{"charOffset":10676,"charLength":27},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in,  pixels * 2)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"region":{"startLine":476,"startColumn":4,"endLine":476,"endColumn":27,"charOffset":10557,"charLength":23,"snippet":{"text":"memcpy(out, in, pixels)","rendered":{"text":"memcpy(out, in, pixels)","markdown":"`memcpy(out, in, pixels)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"replacements":[{"deletedRegion":{"charOffset":10557,"charLength":23},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in,  pixels)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"region":{"startLine":414,"startColumn":8,"endLine":414,"endColumn":35,"charOffset":9268,"charLength":27,"snippet":{"text":"memcpy(&in, in_, sizeof(in)","rendered":{"text":"memcpy(&in, in_, sizeof(in)","markdown":"`memcpy(&in, in_, sizeof(in)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"replacements":[{"deletedRegion":{"charOffset":9268,"charLength":27},"insertedContent":{"text":"memcpy_s(&in, <size of &in>,  in_,  sizeof(in)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"region":{"startLine":272,"startColumn":8,"endLine":272,"endColumn":34,"charOffset":6002,"charLength":26,"snippet":{"text":"memcpy(out, in + i * 4, 4)","rendered":{"text":"memcpy(out, in + i * 4, 4)","markdown":"`memcpy(out, in + i * 4, 4)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Pack.c"},"replacements":[{"deletedRegion":{"charOffset":6002,"charLength":26},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in + i * 4,  4)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imageenhance.py"},"region":{"startLine":9,"startColumn":6,"endLine":9,"endColumn":11,"charOffset":134,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ColorLUT.c"},"region":{"startLine":180,"startColumn":16,"endLine":180,"endColumn":60,"charOffset":7523,"charLength":44,"snippet":{"text":"memcpy(rowOut + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(rowOut + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(rowOut + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ColorLUT.c"},"replacements":[{"deletedRegion":{"charOffset":7523,"charLength":44},"insertedContent":{"text":"memcpy_s(rowOut + x * sizeof(v), <size of rowOut + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ColorLUT.c"},"region":{"startLine":148,"startColumn":16,"endLine":148,"endColumn":60,"charOffset":6281,"charLength":44,"snippet":{"text":"memcpy(rowOut + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(rowOut + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(rowOut + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\ColorLUT.c"},"replacements":[{"deletedRegion":{"charOffset":6281,"charLength":44},"insertedContent":{"text":"memcpy_s(rowOut + x * sizeof(v), <size of rowOut + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHeap.c"},"region":{"startLine":162,"startColumn":8,"endLine":162,"endColumn":27,"charOffset":3383,"charLength":19,"snippet":{"text":"malloc(sizeof(Heap)","rendered":{"text":"malloc(sizeof(Heap)","markdown":"`malloc(sizeof(Heap)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantHeap.c"},"replacements":[{"deletedRegion":{"charOffset":3383,"charLength":19},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHeap.c"},"region":{"startLine":141,"startColumn":8,"endLine":141,"endColumn":14,"charOffset":3015,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHeap.c"},"region":{"startLine":117,"startColumn":8,"endLine":117,"endColumn":14,"charOffset":2508,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHeap.c"},"region":{"startLine":84,"startColumn":12,"endLine":84,"endColumn":18,"charOffset":1818,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHeap.c"},"region":{"startLine":80,"startColumn":12,"endLine":80,"endColumn":18,"charOffset":1656,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHeap.c"},"region":{"startLine":67,"startColumn":4,"endLine":67,"endColumn":43,"charOffset":1321,"charLength":39,"snippet":{"text":"memcpy(newheap, h->heap, sizeof(void *)","rendered":{"text":"memcpy(newheap, h->heap, sizeof(void *)","markdown":"`memcpy(newheap, h->heap, sizeof(void *)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantHeap.c"},"replacements":[{"deletedRegion":{"charOffset":1321,"charLength":39},"insertedContent":{"text":"memcpy_s(newheap, <size of newheap>,  h->heap,  sizeof(void *)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":322,"startColumn":4,"endLine":322,"endColumn":63,"charOffset":15011,"charLength":59,"snippet":{"text":"memcpy(imOut->image[y + 1], im->image[y + 1], im->linesize)","rendered":{"text":"memcpy(imOut->image[y + 1], im->image[y + 1], im->linesize)","markdown":"`memcpy(imOut->image[y + 1], im->image[y + 1], im->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":15011,"charLength":59},"insertedContent":{"text":"memcpy_s(imOut->image[y + 1], <size of imOut->image[y + 1]>,  im->image[y + 1],  im->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":321,"startColumn":4,"endLine":321,"endColumn":55,"charOffset":14953,"charLength":51,"snippet":{"text":"memcpy(imOut->image[y], im->image[y], im->linesize)","rendered":{"text":"memcpy(imOut->image[y], im->image[y], im->linesize)","markdown":"`memcpy(imOut->image[y], im->image[y], im->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":14953,"charLength":51},"insertedContent":{"text":"memcpy_s(imOut->image[y], <size of imOut->image[y]>,  im->image[y],  im->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":317,"startColumn":12,"endLine":318,"endColumn":82,"charOffset":14832,"charLength":91,"snippet":{"text":"memcpy(\r\n                out + x * sizeof(UINT32), in0 + x * sizeof(UINT32), sizeof(UINT32)","rendered":{"text":"memcpy(\r\n                out + x * sizeof(UINT32), in0 + x * sizeof(UINT32), sizeof(UINT32)","markdown":"`memcpy(\r\n                out + x * sizeof(UINT32), in0 + x * sizeof(UINT32), sizeof(UINT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":14832,"charLength":91},"insertedContent":{"text":"memcpy_s(\r\n                out + x * sizeof(UINT32), <size of \r\n                out + x * sizeof(UINT32)>,  in0 + x * sizeof(UINT32),  sizeof(UINT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":314,"startColumn":20,"endLine":314,"endColumn":61,"charOffset":14741,"charLength":41,"snippet":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(out + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":14741,"charLength":41},"insertedContent":{"text":"memcpy_s(out + x * sizeof(v), <size of out + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":284,"startColumn":20,"endLine":284,"endColumn":61,"charOffset":12859,"charLength":41,"snippet":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(out + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":12859,"charLength":41},"insertedContent":{"text":"memcpy_s(out + x * sizeof(v), <size of out + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":260,"startColumn":20,"endLine":260,"endColumn":61,"charOffset":11382,"charLength":41,"snippet":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(out + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":11382,"charLength":41},"insertedContent":{"text":"memcpy_s(out + x * sizeof(v), <size of out + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":243,"startColumn":12,"endLine":243,"endColumn":43,"charOffset":10342,"charLength":31,"snippet":{"text":"memcpy(out, in0, sizeof(UINT32)","rendered":{"text":"memcpy(out, in0, sizeof(UINT32)","markdown":"`memcpy(out, in0, sizeof(UINT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":10342,"charLength":31},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in0,  sizeof(UINT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":206,"startColumn":4,"endLine":206,"endColumn":55,"charOffset":8807,"charLength":51,"snippet":{"text":"memcpy(imOut->image[1], im->image[1], im->linesize)","rendered":{"text":"memcpy(imOut->image[1], im->image[1], im->linesize)","markdown":"`memcpy(imOut->image[1], im->image[1], im->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":8807,"charLength":51},"insertedContent":{"text":"memcpy_s(imOut->image[1], <size of imOut->image[1]>,  im->image[1],  im->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":205,"startColumn":4,"endLine":205,"endColumn":55,"charOffset":8749,"charLength":51,"snippet":{"text":"memcpy(imOut->image[0], im->image[0], im->linesize)","rendered":{"text":"memcpy(imOut->image[0], im->image[0], im->linesize)","markdown":"`memcpy(imOut->image[0], im->image[0], im->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":8749,"charLength":51},"insertedContent":{"text":"memcpy_s(imOut->image[0], <size of imOut->image[0]>,  im->image[0],  im->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":192,"startColumn":4,"endLine":192,"endColumn":55,"charOffset":8186,"charLength":51,"snippet":{"text":"memcpy(imOut->image[y], im->image[y], im->linesize)","rendered":{"text":"memcpy(imOut->image[y], im->image[y], im->linesize)","markdown":"`memcpy(imOut->image[y], im->image[y], im->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":8186,"charLength":51},"insertedContent":{"text":"memcpy_s(imOut->image[y], <size of imOut->image[y]>,  im->image[y],  im->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":189,"startColumn":12,"endLine":189,"endColumn":85,"charOffset":8087,"charLength":73,"snippet":{"text":"memcpy(out + x * sizeof(UINT32), in0 + x * sizeof(UINT32), sizeof(UINT32)","rendered":{"text":"memcpy(out + x * sizeof(UINT32), in0 + x * sizeof(UINT32), sizeof(UINT32)","markdown":"`memcpy(out + x * sizeof(UINT32), in0 + x * sizeof(UINT32), sizeof(UINT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":8087,"charLength":73},"insertedContent":{"text":"memcpy_s(out + x * sizeof(UINT32), <size of out + x * sizeof(UINT32)>,  in0 + x * sizeof(UINT32),  sizeof(UINT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":186,"startColumn":20,"endLine":186,"endColumn":61,"charOffset":7996,"charLength":41,"snippet":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(out + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":7996,"charLength":41},"insertedContent":{"text":"memcpy_s(out + x * sizeof(v), <size of out + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":164,"startColumn":20,"endLine":164,"endColumn":61,"charOffset":6690,"charLength":41,"snippet":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(out + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":6690,"charLength":41},"insertedContent":{"text":"memcpy_s(out + x * sizeof(v), <size of out + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":146,"startColumn":20,"endLine":146,"endColumn":61,"charOffset":5645,"charLength":41,"snippet":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(out + x * sizeof(v), &v, sizeof(v)","markdown":"`memcpy(out + x * sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":5645,"charLength":41},"insertedContent":{"text":"memcpy_s(out + x * sizeof(v), <size of out + x * sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":133,"startColumn":12,"endLine":133,"endColumn":43,"charOffset":4897,"charLength":31,"snippet":{"text":"memcpy(out, in0, sizeof(UINT32)","rendered":{"text":"memcpy(out, in0, sizeof(UINT32)","markdown":"`memcpy(out, in0, sizeof(UINT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":4897,"charLength":31},"insertedContent":{"text":"memcpy_s(out, <size of out>,  in0,  sizeof(UINT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":104,"startColumn":4,"endLine":104,"endColumn":55,"charOffset":3770,"charLength":51,"snippet":{"text":"memcpy(imOut->image[0], im->image[0], im->linesize)","rendered":{"text":"memcpy(imOut->image[0], im->image[0], im->linesize)","markdown":"`memcpy(imOut->image[0], im->image[0], im->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"replacements":[{"deletedRegion":{"charOffset":3770,"charLength":51},"insertedContent":{"text":"memcpy_s(imOut->image[0], <size of imOut->image[0]>,  im->image[0],  im->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":24,"startColumn":3,"endLine":24,"endColumn":8,"charOffset":727,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":23,"startColumn":3,"endLine":23,"endColumn":8,"charOffset":658,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Filter.c"},"region":{"startLine":22,"startColumn":3,"endLine":22,"endColumn":8,"charOffset":607,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\codec_fd.c"},"region":{"startLine":25,"startColumn":4,"endLine":25,"endColumn":32,"charOffset":556,"charLength":28,"snippet":{"text":"memcpy(dest, buffer, length)","rendered":{"text":"memcpy(dest, buffer, length)","markdown":"`memcpy(dest, buffer, length)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\codec_fd.c"},"replacements":[{"deletedRegion":{"charOffset":556,"charLength":28},"insertedContent":{"text":"memcpy_s(dest, <size of dest>,  buffer,  length)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"region":{"startLine":230,"startColumn":8,"endLine":230,"endColumn":31,"charOffset":5564,"charLength":23,"snippet":{"text":"malloc(sizeof(HashNode)","rendered":{"text":"malloc(sizeof(HashNode)","markdown":"`malloc(sizeof(HashNode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"replacements":[{"deletedRegion":{"charOffset":5564,"charLength":23},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"region":{"startLine":190,"startColumn":12,"endLine":190,"endColumn":35,"charOffset":4623,"charLength":23,"snippet":{"text":"malloc(sizeof(HashNode)","rendered":{"text":"malloc(sizeof(HashNode)","markdown":"`malloc(sizeof(HashNode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"replacements":[{"deletedRegion":{"charOffset":4623,"charLength":23},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"region":{"startLine":97,"startColumn":15,"endLine":97,"endColumn":40,"charOffset":2171,"charLength":25,"snippet":{"text":"malloc(sizeof(HashNode *)","rendered":{"text":"malloc(sizeof(HashNode *)","markdown":"`malloc(sizeof(HashNode *)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"replacements":[{"deletedRegion":{"charOffset":2171,"charLength":25},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"region":{"startLine":59,"startColumn":15,"endLine":59,"endColumn":40,"charOffset":1228,"charLength":25,"snippet":{"text":"malloc(sizeof(HashNode *)","rendered":{"text":"malloc(sizeof(HashNode *)","markdown":"`malloc(sizeof(HashNode *)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"replacements":[{"deletedRegion":{"charOffset":1228,"charLength":25},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"region":{"startLine":50,"startColumn":8,"endLine":50,"endColumn":32,"charOffset":1023,"charLength":24,"snippet":{"text":"malloc(sizeof(HashTable)","rendered":{"text":"malloc(sizeof(HashTable)","markdown":"`malloc(sizeof(HashTable)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\QuantHash.c"},"replacements":[{"deletedRegion":{"charOffset":1023,"charLength":24},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Negative.c"},"region":{"startLine":8,"startColumn":8,"endLine":8,"endColumn":13,"charOffset":88,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":153,"startColumn":16,"endLine":153,"endColumn":46,"charOffset":4871,"charLength":30,"snippet":{"text":"memcpy(out3 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out3 + x, &v, sizeof(v)","markdown":"`memcpy(out3 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":4871,"charLength":30},"insertedContent":{"text":"memcpy_s(out3 + x, <size of out3 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":151,"startColumn":16,"endLine":151,"endColumn":46,"charOffset":4742,"charLength":30,"snippet":{"text":"memcpy(out2 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out2 + x, &v, sizeof(v)","markdown":"`memcpy(out2 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":4742,"charLength":30},"insertedContent":{"text":"memcpy_s(out2 + x, <size of out2 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":149,"startColumn":16,"endLine":149,"endColumn":46,"charOffset":4613,"charLength":30,"snippet":{"text":"memcpy(out1 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out1 + x, &v, sizeof(v)","markdown":"`memcpy(out1 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":4613,"charLength":30},"insertedContent":{"text":"memcpy_s(out1 + x, <size of out1 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\ModeFilter.c"},"region":{"startLine":43,"startColumn":15,"endLine":43,"endColumn":20,"charOffset":1034,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":147,"startColumn":16,"endLine":147,"endColumn":46,"charOffset":4484,"charLength":30,"snippet":{"text":"memcpy(out0 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out0 + x, &v, sizeof(v)","markdown":"`memcpy(out0 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":4484,"charLength":30},"insertedContent":{"text":"memcpy_s(out0 + x, <size of out0 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":127,"startColumn":16,"endLine":127,"endColumn":46,"charOffset":3752,"charLength":30,"snippet":{"text":"memcpy(out2 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out2 + x, &v, sizeof(v)","markdown":"`memcpy(out2 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":3752,"charLength":30},"insertedContent":{"text":"memcpy_s(out2 + x, <size of out2 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":125,"startColumn":16,"endLine":125,"endColumn":46,"charOffset":3623,"charLength":30,"snippet":{"text":"memcpy(out1 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out1 + x, &v, sizeof(v)","markdown":"`memcpy(out1 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":3623,"charLength":30},"insertedContent":{"text":"memcpy_s(out1 + x, <size of out1 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":123,"startColumn":16,"endLine":123,"endColumn":46,"charOffset":3494,"charLength":30,"snippet":{"text":"memcpy(out0 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out0 + x, &v, sizeof(v)","markdown":"`memcpy(out0 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":3494,"charLength":30},"insertedContent":{"text":"memcpy_s(out0 + x, <size of out0 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":105,"startColumn":16,"endLine":105,"endColumn":46,"charOffset":2822,"charLength":30,"snippet":{"text":"memcpy(out1 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out1 + x, &v, sizeof(v)","markdown":"`memcpy(out1 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":2822,"charLength":30},"insertedContent":{"text":"memcpy_s(out1 + x, <size of out1 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":103,"startColumn":16,"endLine":103,"endColumn":46,"charOffset":2693,"charLength":30,"snippet":{"text":"memcpy(out0 + x, &v, sizeof(v)","rendered":{"text":"memcpy(out0 + x, &v, sizeof(v)","markdown":"`memcpy(out0 + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":2693,"charLength":30},"insertedContent":{"text":"memcpy_s(out0 + x, <size of out0 + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"region":{"startLine":56,"startColumn":12,"endLine":56,"endColumn":41,"charOffset":1453,"charLength":29,"snippet":{"text":"memcpy(out + x, &v, sizeof(v)","rendered":{"text":"memcpy(out + x, &v, sizeof(v)","markdown":"`memcpy(out + x, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Bands.c"},"replacements":[{"deletedRegion":{"charOffset":1453,"charLength":29},"insertedContent":{"text":"memcpy_s(out + x, <size of out + x>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Matrix.c"},"region":{"startLine":50,"startColumn":15,"endLine":50,"endColumn":27,"charOffset":1329,"charLength":12,"snippet":{"text":"strlen(mode)","rendered":{"text":"strlen(mode)","markdown":"`strlen(mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Matrix.c"},"replacements":[{"deletedRegion":{"charOffset":1329,"charLength":12},"insertedContent":{"text":"strlen_s(mode, <size of mode>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Matrix.c"},"replacements":[{"deletedRegion":{"charOffset":1329,"charLength":12},"insertedContent":{"text":"strnlen(mode, <size of mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\BoxBlur.c"},"region":{"startLine":220,"startColumn":16,"endLine":220,"endColumn":67,"charOffset":7046,"charLength":51,"snippet":{"text":"memcpy(imOut->image32[y], lineOut, imIn->xsize * 4)","rendered":{"text":"memcpy(imOut->image32[y], lineOut, imIn->xsize * 4)","markdown":"`memcpy(imOut->image32[y], lineOut, imIn->xsize * 4)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\BoxBlur.c"},"replacements":[{"deletedRegion":{"charOffset":7046,"charLength":51},"insertedContent":{"text":"memcpy_s(imOut->image32[y], <size of imOut->image32[y]>,  lineOut,  imIn->xsize * 4)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\BoxBlur.c"},"region":{"startLine":204,"startColumn":16,"endLine":204,"endColumn":62,"charOffset":6525,"charLength":46,"snippet":{"text":"memcpy(imOut->image8[y], lineOut, imIn->xsize)","rendered":{"text":"memcpy(imOut->image8[y], lineOut, imIn->xsize)","markdown":"`memcpy(imOut->image8[y], lineOut, imIn->xsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\BoxBlur.c"},"replacements":[{"deletedRegion":{"charOffset":6525,"charLength":46},"insertedContent":{"text":"memcpy_s(imOut->image8[y], <size of imOut->image8[y]>,  lineOut,  imIn->xsize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\JpegEncode.c"},"region":{"startLine":339,"startColumn":4,"endLine":339,"endColumn":11,"charOffset":12267,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\JpegEncode.c"},"region":{"startLine":286,"startColumn":23,"endLine":286,"endColumn":31,"charOffset":10700,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\JpegEncode.c"},"region":{"startLine":263,"startColumn":16,"endLine":266,"endColumn":22,"charOffset":9901,"charLength":156,"snippet":{"text":"memcpy(\r\n                    context->destination.pub.next_output_byte,\r\n                    context->extra + context->extra_offset,\r\n                    n)","rendered":{"text":"memcpy(\r\n                    context->destination.pub.next_output_byte,\r\n                    context->extra + context->extra_offset,\r\n                    n)","markdown":"`memcpy(\r\n                    context->destination.pub.next_output_byte,\r\n                    context->extra + context->extra_offset,\r\n                    n)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\JpegEncode.c"},"replacements":[{"deletedRegion":{"charOffset":9901,"charLength":156},"insertedContent":{"text":"memcpy_s(\r\n                    context->destination.pub.next_output_byte, <size of \r\n                    context->destination.pub.next_output_byte>, \r\n                    context->extra + context->extra_offset, \r\n                    n)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Fill.c"},"region":{"startLine":105,"startColumn":8,"endLine":105,"endColumn":20,"charOffset":2661,"charLength":12,"snippet":{"text":"strlen(mode)","rendered":{"text":"strlen(mode)","markdown":"`strlen(mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Fill.c"},"replacements":[{"deletedRegion":{"charOffset":2661,"charLength":12},"insertedContent":{"text":"strlen_s(mode, <size of mode>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Fill.c"},"replacements":[{"deletedRegion":{"charOffset":2661,"charLength":12},"insertedContent":{"text":"strnlen(mode, <size of mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Fill.c"},"region":{"startLine":70,"startColumn":8,"endLine":70,"endColumn":20,"charOffset":1869,"charLength":12,"snippet":{"text":"strlen(mode)","rendered":{"text":"strlen(mode)","markdown":"`strlen(mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Fill.c"},"replacements":[{"deletedRegion":{"charOffset":1869,"charLength":12},"insertedContent":{"text":"strlen_s(mode, <size of mode>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Fill.c"},"replacements":[{"deletedRegion":{"charOffset":1869,"charLength":12},"insertedContent":{"text":"strnlen(mode, <size of mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Fill.c"},"region":{"startLine":46,"startColumn":8,"endLine":46,"endColumn":41,"charOffset":1241,"charLength":33,"snippet":{"text":"memcpy(&c, colour, im->pixelsize)","rendered":{"text":"memcpy(&c, colour, im->pixelsize)","markdown":"`memcpy(&c, colour, im->pixelsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Fill.c"},"replacements":[{"deletedRegion":{"charOffset":1241,"charLength":33},"insertedContent":{"text":"memcpy_s(&c, <size of &c>,  colour,  im->pixelsize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingcms.c"},"region":{"startLine":696,"startColumn":38,"endLine":696,"endColumn":44,"charOffset":19460,"charLength":6,"snippet":{"text":"wcslen","rendered":{"text":"wcslen","markdown":"`wcslen`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingcms.c"},"region":{"startLine":686,"startColumn":10,"endLine":686,"endColumn":21,"charOffset":19147,"charLength":11,"snippet":{"text":"malloc(len)","rendered":{"text":"malloc(len)","markdown":"`malloc(len)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingcms.c"},"replacements":[{"deletedRegion":{"charOffset":19147,"charLength":11},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingcms.c"},"region":{"startLine":338,"startColumn":16,"endLine":341,"endColumn":32,"charOffset":10085,"charLength":145,"snippet":{"text":"memcpy(\r\n                    pDstExtras + x * dstChunkSize,\r\n                    pSrcExtras + x * srcChunkSize,\r\n                    channelSize)","rendered":{"text":"memcpy(\r\n                    pDstExtras + x * dstChunkSize,\r\n                    pSrcExtras + x * srcChunkSize,\r\n                    channelSize)","markdown":"`memcpy(\r\n                    pDstExtras + x * dstChunkSize,\r\n                    pSrcExtras + x * srcChunkSize,\r\n                    channelSize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingcms.c"},"replacements":[{"deletedRegion":{"charOffset":10085,"charLength":145},"insertedContent":{"text":"memcpy_s(\r\n                    pDstExtras + x * dstChunkSize, <size of \r\n                    pDstExtras + x * dstChunkSize>, \r\n                    pSrcExtras + x * srcChunkSize, \r\n                    channelSize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingcms.c"},"region":{"startLine":205,"startColumn":4,"endLine":205,"endColumn":36,"charOffset":5484,"charLength":32,"snippet":{"text":"strcpy(self->mode_out, mode_out)","rendered":{"text":"strcpy(self->mode_out, mode_out)","markdown":"`strcpy(self->mode_out, mode_out)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingcms.c"},"replacements":[{"deletedRegion":{"charOffset":5484,"charLength":32},"insertedContent":{"text":"strcpy_s(self->mode_out, <size of self->mode_out>,  mode_out)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingcms.c"},"replacements":[{"deletedRegion":{"charOffset":5484,"charLength":32},"insertedContent":{"text":"strlcpy(self->mode_out,  mode_out, <size of self->mode_out>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingcms.c"},"region":{"startLine":204,"startColumn":4,"endLine":204,"endColumn":34,"charOffset":5447,"charLength":30,"snippet":{"text":"strcpy(self->mode_in, mode_in)","rendered":{"text":"strcpy(self->mode_in, mode_in)","markdown":"`strcpy(self->mode_in, mode_in)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingcms.c"},"replacements":[{"deletedRegion":{"charOffset":5447,"charLength":30},"insertedContent":{"text":"strcpy_s(self->mode_in, <size of self->mode_in>,  mode_in)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingcms.c"},"replacements":[{"deletedRegion":{"charOffset":5447,"charLength":30},"insertedContent":{"text":"strlcpy(self->mode_in,  mode_in, <size of self->mode_in>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imagingcms.c"},"region":{"startLine":157,"startColumn":23,"endLine":157,"endColumn":39,"charOffset":4291,"charLength":16,"snippet":{"text":"malloc(nProfile)","rendered":{"text":"malloc(nProfile)","markdown":"`malloc(nProfile)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imagingcms.c"},"replacements":[{"deletedRegion":{"charOffset":4291,"charLength":16},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\File.c"},"region":{"startLine":66,"startColumn":8,"endLine":66,"endColumn":15,"charOffset":1599,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\File.c"},"region":{"startLine":63,"startColumn":8,"endLine":63,"endColumn":15,"charOffset":1460,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\File.c"},"region":{"startLine":55,"startColumn":9,"endLine":55,"endColumn":14,"charOffset":1250,"charLength":5,"snippet":{"text":"fopen","rendered":{"text":"fopen","markdown":"`fopen`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\File.c"},"region":{"startLine":27,"startColumn":20,"endLine":27,"endColumn":25,"charOffset":609,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":185,"startColumn":4,"endLine":185,"endColumn":51,"charOffset":4491,"charLength":47,"snippet":{"text":"memcpy(&im->image32[y][x], color, sizeof(INT32)","rendered":{"text":"memcpy(&im->image32[y][x], color, sizeof(INT32)","markdown":"`memcpy(&im->image32[y][x], color, sizeof(INT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":4491,"charLength":47},"insertedContent":{"text":"memcpy_s(&im->image32[y][x], <size of &im->image32[y][x]>,  color,  sizeof(INT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":170,"startColumn":4,"endLine":170,"endColumn":43,"charOffset":4123,"charLength":39,"snippet":{"text":"memcpy(&im->image8[y][x * 4], color, 4)","rendered":{"text":"memcpy(&im->image8[y][x * 4], color, 4)","markdown":"`memcpy(&im->image8[y][x * 4], color, 4)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":4123,"charLength":39},"insertedContent":{"text":"memcpy_s(&im->image8[y][x * 4], <size of &im->image8[y][x * 4]>,  color,  4)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":157,"startColumn":4,"endLine":157,"endColumn":43,"charOffset":3796,"charLength":39,"snippet":{"text":"memcpy(&im->image8[y][x + x], color, 2)","rendered":{"text":"memcpy(&im->image8[y][x + x], color, 2)","markdown":"`memcpy(&im->image8[y][x + x], color, 2)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":3796,"charLength":39},"insertedContent":{"text":"memcpy_s(&im->image8[y][x + x], <size of &im->image8[y][x + x]>,  color,  2)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":146,"startColumn":8,"endLine":146,"endColumn":55,"charOffset":3533,"charLength":47,"snippet":{"text":"memcpy(&im->image32[y][x], color, sizeof(INT32)","rendered":{"text":"memcpy(&im->image32[y][x], color, sizeof(INT32)","markdown":"`memcpy(&im->image32[y][x], color, sizeof(INT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":3533,"charLength":47},"insertedContent":{"text":"memcpy_s(&im->image32[y][x], <size of &im->image32[y][x]>,  color,  sizeof(INT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":135,"startColumn":4,"endLine":135,"endColumn":35,"charOffset":3290,"charLength":31,"snippet":{"text":"memcpy(color, &out, sizeof(out)","rendered":{"text":"memcpy(color, &out, sizeof(out)","markdown":"`memcpy(color, &out, sizeof(out)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":3290,"charLength":31},"insertedContent":{"text":"memcpy_s(color, <size of color>,  &out,  sizeof(out)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":132,"startColumn":4,"endLine":132,"endColumn":35,"charOffset":3173,"charLength":31,"snippet":{"text":"memcpy(color, in, sizeof(INT32)","rendered":{"text":"memcpy(color, in, sizeof(INT32)","markdown":"`memcpy(color, in, sizeof(INT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":3173,"charLength":31},"insertedContent":{"text":"memcpy_s(color, <size of color>,  in,  sizeof(INT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":124,"startColumn":4,"endLine":124,"endColumn":35,"charOffset":2980,"charLength":31,"snippet":{"text":"memcpy(color, in, sizeof(INT32)","rendered":{"text":"memcpy(color, in, sizeof(INT32)","markdown":"`memcpy(color, in, sizeof(INT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":2980,"charLength":31},"insertedContent":{"text":"memcpy_s(color, <size of color>,  in,  sizeof(INT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":122,"startColumn":4,"endLine":122,"endColumn":35,"charOffset":2934,"charLength":31,"snippet":{"text":"memcpy(color, &out, sizeof(out)","rendered":{"text":"memcpy(color, &out, sizeof(out)","markdown":"`memcpy(color, &out, sizeof(out)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":2934,"charLength":31},"insertedContent":{"text":"memcpy_s(color, <size of color>,  &out,  sizeof(out)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":114,"startColumn":4,"endLine":114,"endColumn":51,"charOffset":2662,"charLength":47,"snippet":{"text":"memcpy(color, &im->image32[y][x], sizeof(INT32)","rendered":{"text":"memcpy(color, &im->image32[y][x], sizeof(INT32)","markdown":"`memcpy(color, &im->image32[y][x], sizeof(INT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":2662,"charLength":47},"insertedContent":{"text":"memcpy_s(color, <size of color>,  &im->image32[y][x],  sizeof(INT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":108,"startColumn":4,"endLine":108,"endColumn":35,"charOffset":2542,"charLength":31,"snippet":{"text":"memcpy(color, &out, sizeof(out)","rendered":{"text":"memcpy(color, &out, sizeof(out)","markdown":"`memcpy(color, &out, sizeof(out)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":2542,"charLength":31},"insertedContent":{"text":"memcpy_s(color, <size of color>,  &out,  sizeof(out)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":105,"startColumn":4,"endLine":105,"endColumn":36,"charOffset":2455,"charLength":32,"snippet":{"text":"memcpy(color, in, sizeof(UINT16)","rendered":{"text":"memcpy(color, in, sizeof(UINT16)","markdown":"`memcpy(color, in, sizeof(UINT16)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":2455,"charLength":32},"insertedContent":{"text":"memcpy_s(color, <size of color>,  in,  sizeof(UINT16)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":97,"startColumn":4,"endLine":97,"endColumn":36,"charOffset":2261,"charLength":32,"snippet":{"text":"memcpy(color, in, sizeof(UINT16)","rendered":{"text":"memcpy(color, in, sizeof(UINT16)","markdown":"`memcpy(color, in, sizeof(UINT16)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":2261,"charLength":32},"insertedContent":{"text":"memcpy_s(color, <size of color>,  in,  sizeof(UINT16)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":95,"startColumn":4,"endLine":95,"endColumn":35,"charOffset":2215,"charLength":31,"snippet":{"text":"memcpy(color, &out, sizeof(out)","rendered":{"text":"memcpy(color, &out, sizeof(out)","markdown":"`memcpy(color, &out, sizeof(out)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":2215,"charLength":31},"insertedContent":{"text":"memcpy_s(color, <size of color>,  &out,  sizeof(out)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":80,"startColumn":8,"endLine":80,"endColumn":37,"charOffset":1858,"charLength":29,"snippet":{"text":"memcpy(out, p, im->pixelsize)","rendered":{"text":"memcpy(out, p, im->pixelsize)","markdown":"`memcpy(out, p, im->pixelsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"replacements":[{"deletedRegion":{"charOffset":1858,"charLength":29},"insertedContent":{"text":"memcpy_s(out, <size of out>,  p,  im->pixelsize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Access.c"},"region":{"startLine":34,"startColumn":8,"endLine":34,"endColumn":15,"charOffset":850,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\example\\DdsImagePlugin.py"},"region":{"startLine":177,"startColumn":6,"endLine":177,"endColumn":10,"charOffset":4819,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\example\\DdsImagePlugin.py"},"region":{"startLine":115,"startColumn":6,"endLine":115,"endColumn":10,"charOffset":2813,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\example\\DdsImagePlugin.py"},"region":{"startLine":6,"startColumn":45,"endLine":6,"endColumn":63,"charOffset":164,"charLength":18,"snippet":{"text":"http://oss.sgi.com","rendered":{"text":"http://oss.sgi.com","markdown":"`http://oss.sgi.com`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"docs\\example\\DdsImagePlugin.py"},"replacements":[{"deletedRegion":{"charOffset":164,"charLength":18},"insertedContent":{"text":"https://oss.sgi.com"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"winbuild\\build_prepare.py"},"region":{"startLine":674,"startColumn":10,"endLine":674,"endColumn":14,"charOffset":24508,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"winbuild\\build_prepare.py"},"region":{"startLine":673,"startColumn":33,"endLine":673,"endColumn":37,"charOffset":24467,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS137138","message":{"text":"Insecure URL"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"winbuild\\build_prepare.py"},"region":{"startLine":180,"startColumn":16,"endLine":180,"endColumn":48,"charOffset":5495,"charLength":32,"snippet":{"text":"http://downloads.webmproject.org","rendered":{"text":"http://downloads.webmproject.org","markdown":"`http://downloads.webmproject.org`"}},"sourceLanguage":"python"}}}],"fixes":[{"description":{"text":"An HTTP-based URL without TLS was detected."},"artifactChanges":[{"artifactLocation":{"uri":"winbuild\\build_prepare.py"},"replacements":[{"deletedRegion":{"charOffset":5495,"charLength":32},"insertedContent":{"text":"https://downloads.webmproject.org"}}]}]}],"properties":{"tags":["ThreatModel.Integration.HTTP"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\JpegDecode.c"},"region":{"startLine":272,"startColumn":19,"endLine":272,"endColumn":24,"charOffset":9087,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\JpegDecode.c"},"region":{"startLine":255,"startColumn":23,"endLine":255,"endColumn":31,"charOffset":8572,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Jpeg2KEncode.c"},"region":{"startLine":520,"startColumn":20,"endLine":520,"endColumn":76,"charOffset":16320,"charLength":56,"snippet":{"text":"malloc(tile_width * tile_height * components * prec / 8)","rendered":{"text":"malloc(tile_width * tile_height * components * prec / 8)","markdown":"`malloc(tile_width * tile_height * components * prec / 8)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Jpeg2KEncode.c"},"replacements":[{"deletedRegion":{"charOffset":16320,"charLength":56},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagepalette.py"},"region":{"startLine":122,"startColumn":19,"endLine":122,"endColumn":24,"charOffset":3349,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS425000","level":"note","message":{"text":"Do not deserialize untrusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_pickle.py"},"region":{"startLine":139,"startColumn":25,"endLine":139,"endColumn":36,"charOffset":4094,"charLength":11,"snippet":{"text":"pickle.load","rendered":{"text":"pickle.load","markdown":"`pickle.load`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Deserialization"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS425000","level":"note","message":{"text":"Do not deserialize untrusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_pickle.py"},"region":{"startLine":82,"startColumn":24,"endLine":82,"endColumn":35,"charOffset":2523,"charLength":11,"snippet":{"text":"pickle.load","rendered":{"text":"pickle.load","markdown":"`pickle.load`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Deserialization"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS425000","level":"note","message":{"text":"Do not deserialize untrusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_pickle.py"},"region":{"startLine":24,"startColumn":24,"endLine":24,"endColumn":35,"charOffset":606,"charLength":11,"snippet":{"text":"pickle.load","rendered":{"text":"pickle.load","markdown":"`pickle.load`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Deserialization"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":3917,"startColumn":3,"endLine":3917,"endColumn":8,"charOffset":107310,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":3314,"startColumn":21,"endLine":3314,"endColumn":26,"charOffset":87847,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":2637,"startColumn":8,"endLine":2637,"endColumn":34,"charOffset":72887,"charLength":26,"snippet":{"text":"memcpy(*text, buffer, len)","rendered":{"text":"memcpy(*text, buffer, len)","markdown":"`memcpy(*text, buffer, len)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":72887,"charLength":26},"insertedContent":{"text":"memcpy_s(*text, <size of *text>,  buffer,  len)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":2212,"startColumn":15,"endLine":2212,"endColumn":41,"charOffset":62351,"charLength":26,"snippet":{"text":"malloc(self->image->ysize)","rendered":{"text":"malloc(self->image->ysize)","markdown":"`malloc(self->image->ysize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":62351,"charLength":26},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":2211,"startColumn":15,"endLine":2211,"endColumn":41,"charOffset":62307,"charLength":26,"snippet":{"text":"malloc(self->image->xsize)","rendered":{"text":"malloc(self->image->xsize)","markdown":"`malloc(self->image->xsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":62307,"charLength":26},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":1926,"startColumn":8,"endLine":1926,"endColumn":30,"charOffset":55335,"charLength":22,"snippet":{"text":"strcpy(im->mode, mode)","rendered":{"text":"strcpy(im->mode, mode)","markdown":"`strcpy(im->mode, mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":55335,"charLength":22},"insertedContent":{"text":"strcpy_s(im->mode, <size of im->mode>,  mode)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":55335,"charLength":22},"insertedContent":{"text":"strlcpy(im->mode,  mode, <size of im->mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":1727,"startColumn":4,"endLine":1727,"endColumn":46,"charOffset":50226,"charLength":42,"snippet":{"text":"strcpy(self->image->palette->mode, \"RGBA\")","rendered":{"text":"strcpy(self->image->palette->mode, \"RGBA\")","markdown":"`strcpy(self->image->palette->mode, \"RGBA\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":50226,"charLength":42},"insertedContent":{"text":"strcpy_s(self->image->palette->mode, <size of self->image->palette->mode>,  \"RGBA\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":50226,"charLength":42},"insertedContent":{"text":"strlcpy(self->image->palette->mode,  \"RGBA\", <size of self->image->palette->mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":1701,"startColumn":4,"endLine":1701,"endColumn":46,"charOffset":49596,"charLength":42,"snippet":{"text":"strcpy(self->image->palette->mode, \"RGBA\")","rendered":{"text":"strcpy(self->image->palette->mode, \"RGBA\")","markdown":"`strcpy(self->image->palette->mode, \"RGBA\")`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":49596,"charLength":42},"insertedContent":{"text":"strcpy_s(self->image->palette->mode, <size of self->image->palette->mode>,  \"RGBA\")"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":49596,"charLength":42},"insertedContent":{"text":"strlcpy(self->image->palette->mode,  \"RGBA\", <size of self->image->palette->mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":1672,"startColumn":30,"endLine":1672,"endColumn":55,"charOffset":48835,"charLength":25,"snippet":{"text":"strlen(self->image->mode)","rendered":{"text":"strlen(self->image->mode)","markdown":"`strlen(self->image->mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":48835,"charLength":25},"insertedContent":{"text":"strlen_s(self->image->mode, <size of self->image->mode>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":48835,"charLength":25},"insertedContent":{"text":"strnlen(self->image->mode, <size of self->image->mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS185832","level":"error","message":{"text":"Banned C function detected (strcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":1672,"startColumn":4,"endLine":1672,"endColumn":55,"charOffset":48809,"charLength":51,"snippet":{"text":"strcpy(self->image->mode, strlen(self->image->mode)","rendered":{"text":"strcpy(self->image->mode, strlen(self->image->mode)","markdown":"`strcpy(self->image->mode, strlen(self->image->mode)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":48809,"charLength":51},"insertedContent":{"text":"strcpy_s(self->image->mode, <size of self->image->mode>,  strlen(self->image->mode)"}}]}]},{"description":{"text":"strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":48809,"charLength":51},"insertedContent":{"text":"strlcpy(self->image->mode,  strlen(self->image->mode, <size of self->image->mode>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":1603,"startColumn":23,"endLine":1603,"endColumn":28,"charOffset":46856,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":1517,"startColumn":20,"endLine":1517,"endColumn":54,"charOffset":43606,"charLength":34,"snippet":{"text":"memcpy(image->image8[y], p + i, x)","rendered":{"text":"memcpy(image->image8[y], p + i, x)","markdown":"`memcpy(image->image8[y], p + i, x)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":43606,"charLength":34},"insertedContent":{"text":"memcpy_s(image->image8[y], <size of image->image8[y]>,  p + i,  x)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":1404,"startColumn":11,"endLine":1404,"endColumn":16,"charOffset":40218,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":785,"startColumn":16,"endLine":785,"endColumn":83,"charOffset":24130,"charLength":67,"snippet":{"text":"memcpy(&dtmp, ((char *)table_data) + i * sizeof(dtmp), sizeof(dtmp)","rendered":{"text":"memcpy(&dtmp, ((char *)table_data) + i * sizeof(dtmp), sizeof(dtmp)","markdown":"`memcpy(&dtmp, ((char *)table_data) + i * sizeof(dtmp), sizeof(dtmp)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":24130,"charLength":67},"insertedContent":{"text":"memcpy_s(&dtmp, <size of &dtmp>,  ((char *)table_data) + i * sizeof(dtmp),  sizeof(dtmp)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":781,"startColumn":16,"endLine":782,"endColumn":86,"charOffset":23960,"charLength":95,"snippet":{"text":"memcpy(\r\n                    &item, ((char *)table_data) + i * sizeof(FLOAT32), sizeof(FLOAT32)","rendered":{"text":"memcpy(\r\n                    &item, ((char *)table_data) + i * sizeof(FLOAT32), sizeof(FLOAT32)","markdown":"`memcpy(\r\n                    &item, ((char *)table_data) + i * sizeof(FLOAT32), sizeof(FLOAT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":23960,"charLength":95},"insertedContent":{"text":"memcpy_s(\r\n                    &item, <size of \r\n                    &item>,  ((char *)table_data) + i * sizeof(FLOAT32),  sizeof(FLOAT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":777,"startColumn":16,"endLine":777,"endColumn":83,"charOffset":23769,"charLength":67,"snippet":{"text":"memcpy(&htmp, ((char *)table_data) + i * sizeof(htmp), sizeof(htmp)","rendered":{"text":"memcpy(&htmp, ((char *)table_data) + i * sizeof(htmp), sizeof(htmp)","markdown":"`memcpy(&htmp, ((char *)table_data) + i * sizeof(htmp), sizeof(htmp)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":23769,"charLength":67},"insertedContent":{"text":"memcpy_s(&htmp, <size of &htmp>,  ((char *)table_data) + i * sizeof(htmp),  sizeof(htmp)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":764,"startColumn":24,"endLine":764,"endColumn":44,"charOffset":23411,"charLength":20,"snippet":{"text":"malloc(sizeof(INT16)","rendered":{"text":"malloc(sizeof(INT16)","markdown":"`malloc(sizeof(INT16)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":23411,"charLength":20},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS140021","level":"note","message":{"text":"Problematic C function detected (strlen)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":734,"startColumn":20,"endLine":734,"endColumn":46,"charOffset":22357,"charLength":26,"snippet":{"text":"strlen(buffer_info.format)","rendered":{"text":"strlen(buffer_info.format)","markdown":"`strlen(buffer_info.format)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":22357,"charLength":26},"insertedContent":{"text":"strlen_s(buffer_info.format, <size of buffer_info.format>)"}}]}]},{"description":{"text":"If a string is missing a null terminator, strlen will read past the end of the buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":22357,"charLength":26},"insertedContent":{"text":"strnlen(buffer_info.format, <size of buffer_info.format>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":584,"startColumn":12,"endLine":584,"endColumn":43,"charOffset":18359,"charLength":31,"snippet":{"text":"memcpy(ink, &ftmp, sizeof(ftmp)","rendered":{"text":"memcpy(ink, &ftmp, sizeof(ftmp)","markdown":"`memcpy(ink, &ftmp, sizeof(ftmp)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":18359,"charLength":31},"insertedContent":{"text":"memcpy_s(ink, <size of ink>,  &ftmp,  sizeof(ftmp)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":575,"startColumn":12,"endLine":575,"endColumn":43,"charOffset":18057,"charLength":31,"snippet":{"text":"memcpy(ink, &itmp, sizeof(itmp)","rendered":{"text":"memcpy(ink, &itmp, sizeof(itmp)","markdown":"`memcpy(ink, &itmp, sizeof(itmp)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":18057,"charLength":31},"insertedContent":{"text":"memcpy_s(ink, <size of ink>,  &itmp,  sizeof(itmp)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":428,"startColumn":4,"endLine":428,"endColumn":23,"charOffset":12933,"charLength":19,"snippet":{"text":"memcpy(out, &t1, 4)","rendered":{"text":"memcpy(out, &t1, 4)","markdown":"`memcpy(out, &t1, 4)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":12933,"charLength":19},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &t1,  4)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":389,"startColumn":16,"endLine":389,"endColumn":70,"charOffset":12183,"charLength":54,"snippet":{"text":"memcpy(list + i * sizeof(dtemp), &dtemp, sizeof(dtemp)","rendered":{"text":"memcpy(list + i * sizeof(dtemp), &dtemp, sizeof(dtemp)","markdown":"`memcpy(list + i * sizeof(dtemp), &dtemp, sizeof(dtemp)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":12183,"charLength":54},"insertedContent":{"text":"memcpy_s(list + i * sizeof(dtemp), <size of list + i * sizeof(dtemp)>,  &dtemp,  sizeof(dtemp)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":385,"startColumn":16,"endLine":385,"endColumn":70,"charOffset":12007,"charLength":54,"snippet":{"text":"memcpy(list + i * sizeof(ftemp), &ftemp, sizeof(ftemp)","rendered":{"text":"memcpy(list + i * sizeof(ftemp), &ftemp, sizeof(ftemp)","markdown":"`memcpy(list + i * sizeof(ftemp), &ftemp, sizeof(ftemp)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":12007,"charLength":54},"insertedContent":{"text":"memcpy_s(list + i * sizeof(ftemp), <size of list + i * sizeof(ftemp)>,  &ftemp,  sizeof(ftemp)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":381,"startColumn":16,"endLine":381,"endColumn":70,"charOffset":11821,"charLength":54,"snippet":{"text":"memcpy(list + i * sizeof(INT32), &itemp, sizeof(itemp)","rendered":{"text":"memcpy(list + i * sizeof(INT32), &itemp, sizeof(itemp)","markdown":"`memcpy(list + i * sizeof(INT32), &itemp, sizeof(itemp)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\_imaging.c"},"replacements":[{"deletedRegion":{"charOffset":11821,"charLength":54},"insertedContent":{"text":"memcpy_s(list + i * sizeof(INT32), <size of list + i * sizeof(INT32)>,  &itemp,  sizeof(itemp)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":307,"startColumn":7,"endLine":307,"endColumn":12,"charOffset":9618,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":190,"startColumn":4,"endLine":190,"endColumn":10,"charOffset":6191,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_imaging.c"},"region":{"startLine":178,"startColumn":4,"endLine":178,"endColumn":10,"charOffset":5956,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS425000","level":"note","message":{"text":"Do not deserialize untrusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_file_gif.py"},"region":{"startLine":1195,"startColumn":35,"endLine":1195,"endColumn":46,"charOffset":36827,"charLength":11,"snippet":{"text":"pickle.load","rendered":{"text":"pickle.load","markdown":"`pickle.load`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Deserialization"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":92,"startColumn":27,"endLine":92,"endColumn":39,"charOffset":3076,"charLength":12,"snippet":{"text":"eval(\"abs(B)","rendered":{"text":"eval(\"abs(B)","markdown":"`eval(\"abs(B)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":91,"startColumn":27,"endLine":91,"endColumn":39,"charOffset":3018,"charLength":12,"snippet":{"text":"eval(\"abs(A)","rendered":{"text":"eval(\"abs(A)","markdown":"`eval(\"abs(A)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":63,"startColumn":18,"endLine":66,"endColumn":18,"charOffset":2064,"charLength":40,"snippet":{"text":"eval(expression)\r\n\r\n\r\ndef test_logical()","rendered":{"text":"eval(expression)\r\n\r\n\r\ndef test_logical()","markdown":"`eval(expression)\r\n\r\n\r\ndef test_logical()`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":50,"startColumn":27,"endLine":50,"endColumn":41,"charOffset":1743,"charLength":14,"snippet":{"text":"eval(\"float(B)","rendered":{"text":"eval(\"float(B)","markdown":"`eval(\"float(B)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":49,"startColumn":27,"endLine":49,"endColumn":41,"charOffset":1675,"charLength":14,"snippet":{"text":"eval(\"float(B)","rendered":{"text":"eval(\"float(B)","markdown":"`eval(\"float(B)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":48,"startColumn":27,"endLine":48,"endColumn":41,"charOffset":1608,"charLength":14,"snippet":{"text":"eval(\"float(A)","rendered":{"text":"eval(\"float(A)","markdown":"`eval(\"float(A)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":47,"startColumn":27,"endLine":47,"endColumn":41,"charOffset":1541,"charLength":14,"snippet":{"text":"eval(\"float(A)","rendered":{"text":"eval(\"float(A)","markdown":"`eval(\"float(A)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":46,"startColumn":27,"endLine":46,"endColumn":41,"charOffset":1473,"charLength":14,"snippet":{"text":"eval(\"float(A)","rendered":{"text":"eval(\"float(A)","markdown":"`eval(\"float(A)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":45,"startColumn":27,"endLine":45,"endColumn":41,"charOffset":1406,"charLength":14,"snippet":{"text":"eval(\"float(A)","rendered":{"text":"eval(\"float(A)","markdown":"`eval(\"float(A)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":31,"startColumn":27,"endLine":31,"endColumn":48,"charOffset":835,"charLength":21,"snippet":{"text":"eval(\"int(float(A)+B)","rendered":{"text":"eval(\"int(float(A)+B)","markdown":"`eval(\"int(float(A)+B)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":30,"startColumn":27,"endLine":30,"endColumn":41,"charOffset":768,"charLength":14,"snippet":{"text":"eval(\"float(A)","rendered":{"text":"eval(\"float(A)","markdown":"`eval(\"float(A)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_imagemath.py"},"region":{"startLine":26,"startColumn":21,"endLine":26,"endColumn":30,"charOffset":563,"charLength":9,"snippet":{"text":"eval(\"1\")","rendered":{"text":"eval(\"1\")","markdown":"`eval(\"1\")`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"region":{"startLine":179,"startColumn":20,"endLine":179,"endColumn":79,"charOffset":6095,"charLength":59,"snippet":{"text":"memcpy(&fmax, ((char *)minmax) + sizeof(fmin), sizeof(fmax)","rendered":{"text":"memcpy(&fmax, ((char *)minmax) + sizeof(fmin), sizeof(fmax)","markdown":"`memcpy(&fmax, ((char *)minmax) + sizeof(fmin), sizeof(fmax)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"replacements":[{"deletedRegion":{"charOffset":6095,"charLength":59},"insertedContent":{"text":"memcpy_s(&fmax, <size of &fmax>,  ((char *)minmax) + sizeof(fmin),  sizeof(fmax)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"region":{"startLine":178,"startColumn":20,"endLine":178,"endColumn":54,"charOffset":6037,"charLength":34,"snippet":{"text":"memcpy(&fmin, minmax, sizeof(fmin)","rendered":{"text":"memcpy(&fmin, minmax, sizeof(fmin)","markdown":"`memcpy(&fmin, minmax, sizeof(fmin)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"replacements":[{"deletedRegion":{"charOffset":6037,"charLength":34},"insertedContent":{"text":"memcpy_s(&fmin, <size of &fmin>,  minmax,  sizeof(fmin)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"region":{"startLine":153,"startColumn":20,"endLine":153,"endColumn":79,"charOffset":4914,"charLength":59,"snippet":{"text":"memcpy(&imax, ((char *)minmax) + sizeof(imin), sizeof(imax)","rendered":{"text":"memcpy(&imax, ((char *)minmax) + sizeof(imin), sizeof(imax)","markdown":"`memcpy(&imax, ((char *)minmax) + sizeof(imin), sizeof(imax)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"replacements":[{"deletedRegion":{"charOffset":4914,"charLength":59},"insertedContent":{"text":"memcpy_s(&imax, <size of &imax>,  ((char *)minmax) + sizeof(imin),  sizeof(imax)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"region":{"startLine":152,"startColumn":20,"endLine":152,"endColumn":54,"charOffset":4856,"charLength":34,"snippet":{"text":"memcpy(&imin, minmax, sizeof(imin)","rendered":{"text":"memcpy(&imin, minmax, sizeof(imin)","markdown":"`memcpy(&imin, minmax, sizeof(imin)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"replacements":[{"deletedRegion":{"charOffset":4856,"charLength":34},"insertedContent":{"text":"memcpy_s(&imin, <size of &imin>,  minmax,  sizeof(imin)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"region":{"startLine":46,"startColumn":4,"endLine":46,"endColumn":55,"charOffset":1124,"charLength":51,"snippet":{"text":"strncpy(h->mode, im->mode, IMAGING_MODE_LENGTH - 1)","rendered":{"text":"strncpy(h->mode, im->mode, IMAGING_MODE_LENGTH - 1)","markdown":"`strncpy(h->mode, im->mode, IMAGING_MODE_LENGTH - 1)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"replacements":[{"deletedRegion":{"charOffset":1124,"charLength":51},"insertedContent":{"text":"strcpy_s(h->mode,  IMAGING_MODE_LENGTH - 1,  im->mode)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Histo.c"},"replacements":[{"deletedRegion":{"charOffset":1124,"charLength":51},"insertedContent":{"text":"strlcpy(h->mode,  im->mode,  IMAGING_MODE_LENGTH - 1)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_image_array.py"},"region":{"startLine":27,"startColumn":6,"endLine":27,"endColumn":11,"charOffset":686,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_image_array.py"},"region":{"startLine":25,"startColumn":6,"endLine":25,"endColumn":11,"charOffset":598,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\HexDecode.c"},"region":{"startLine":51,"startColumn":23,"endLine":51,"endColumn":31,"charOffset":1147,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GifEncode.c"},"region":{"startLine":302,"startColumn":19,"endLine":302,"endColumn":27,"charOffset":10008,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GifDecode.c"},"region":{"startLine":262,"startColumn":16,"endLine":262,"endColumn":33,"charOffset":9262,"charLength":17,"snippet":{"text":"memcpy(out, p, i)","rendered":{"text":"memcpy(out, p, i)","markdown":"`memcpy(out, p, i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GifDecode.c"},"replacements":[{"deletedRegion":{"charOffset":9262,"charLength":17},"insertedContent":{"text":"memcpy_s(out, <size of out>,  p,  i)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":226,"startColumn":7,"endLine":226,"endColumn":12,"charOffset":7069,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":209,"startColumn":16,"endLine":209,"endColumn":67,"charOffset":6573,"charLength":51,"snippet":{"text":"memcpy(((char *)extrema) + sizeof(v), &v, sizeof(v)","rendered":{"text":"memcpy(((char *)extrema) + sizeof(v), &v, sizeof(v)","markdown":"`memcpy(((char *)extrema) + sizeof(v), &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"replacements":[{"deletedRegion":{"charOffset":6573,"charLength":51},"insertedContent":{"text":"memcpy_s(((char *)extrema) + sizeof(v), <size of ((char *)extrema) + sizeof(v)>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":207,"startColumn":16,"endLine":207,"endColumn":45,"charOffset":6489,"charLength":29,"snippet":{"text":"memcpy(extrema, &v, sizeof(v)","rendered":{"text":"memcpy(extrema, &v, sizeof(v)","markdown":"`memcpy(extrema, &v, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"replacements":[{"deletedRegion":{"charOffset":6489,"charLength":29},"insertedContent":{"text":"memcpy_s(extrema, <size of extrema>,  &v,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":197,"startColumn":24,"endLine":197,"endColumn":51,"charOffset":6163,"charLength":27,"snippet":{"text":"memcpy(&v, pixel, sizeof(v)","rendered":{"text":"memcpy(&v, pixel, sizeof(v)","markdown":"`memcpy(&v, pixel, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"replacements":[{"deletedRegion":{"charOffset":6163,"charLength":27},"insertedContent":{"text":"memcpy_s(&v, <size of &v>,  pixel,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":188,"startColumn":16,"endLine":188,"endColumn":43,"charOffset":5800,"charLength":27,"snippet":{"text":"memcpy(&v, pixel, sizeof(v)","rendered":{"text":"memcpy(&v, pixel, sizeof(v)","markdown":"`memcpy(&v, pixel, sizeof(v)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"replacements":[{"deletedRegion":{"charOffset":5800,"charLength":27},"insertedContent":{"text":"memcpy_s(&v, <size of &v>,  pixel,  sizeof(v)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":179,"startColumn":12,"endLine":179,"endColumn":72,"charOffset":5462,"charLength":60,"snippet":{"text":"memcpy(((char *)extrema) + sizeof(fmin), &fmax, sizeof(fmax)","rendered":{"text":"memcpy(((char *)extrema) + sizeof(fmin), &fmax, sizeof(fmax)","markdown":"`memcpy(((char *)extrema) + sizeof(fmin), &fmax, sizeof(fmax)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"replacements":[{"deletedRegion":{"charOffset":5462,"charLength":60},"insertedContent":{"text":"memcpy_s(((char *)extrema) + sizeof(fmin), <size of ((char *)extrema) + sizeof(fmin)>,  &fmax,  sizeof(fmax)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":178,"startColumn":12,"endLine":178,"endColumn":47,"charOffset":5411,"charLength":35,"snippet":{"text":"memcpy(extrema, &fmin, sizeof(fmin)","rendered":{"text":"memcpy(extrema, &fmin, sizeof(fmin)","markdown":"`memcpy(extrema, &fmin, sizeof(fmin)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"replacements":[{"deletedRegion":{"charOffset":5411,"charLength":35},"insertedContent":{"text":"memcpy_s(extrema, <size of extrema>,  &fmin,  sizeof(fmin)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":164,"startColumn":12,"endLine":164,"endColumn":72,"charOffset":4840,"charLength":60,"snippet":{"text":"memcpy(((char *)extrema) + sizeof(imin), &imax, sizeof(imax)","rendered":{"text":"memcpy(((char *)extrema) + sizeof(imin), &imax, sizeof(imax)","markdown":"`memcpy(((char *)extrema) + sizeof(imin), &imax, sizeof(imax)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"replacements":[{"deletedRegion":{"charOffset":4840,"charLength":60},"insertedContent":{"text":"memcpy_s(((char *)extrema) + sizeof(imin), <size of ((char *)extrema) + sizeof(imin)>,  &imax,  sizeof(imax)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"region":{"startLine":163,"startColumn":12,"endLine":163,"endColumn":47,"charOffset":4789,"charLength":35,"snippet":{"text":"memcpy(extrema, &imin, sizeof(imin)","rendered":{"text":"memcpy(extrema, &imin, sizeof(imin)","markdown":"`memcpy(extrema, &imin, sizeof(imin)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\GetBBox.c"},"replacements":[{"deletedRegion":{"charOffset":4789,"charLength":35},"insertedContent":{"text":"memcpy_s(extrema, <size of extrema>,  &imin,  sizeof(imin)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"setup.py"},"region":{"startLine":685,"startColumn":18,"endLine":685,"endColumn":23,"charOffset":23731,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"setup.py"},"region":{"startLine":595,"startColumn":10,"endLine":595,"endColumn":15,"charOffset":19683,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"region":{"startLine":1075,"startColumn":7,"endLine":1075,"endColumn":12,"charOffset":38101,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"region":{"startLine":655,"startColumn":4,"endLine":655,"endColumn":29,"charOffset":26233,"charLength":25,"snippet":{"text":"memcpy(out, &k, sizeof(k)","rendered":{"text":"memcpy(out, &k, sizeof(k)","markdown":"`memcpy(out, &k, sizeof(k)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"replacements":[{"deletedRegion":{"charOffset":26233,"charLength":25},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &k,  sizeof(k)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"region":{"startLine":645,"startColumn":4,"endLine":645,"endColumn":29,"charOffset":25996,"charLength":25,"snippet":{"text":"memcpy(out, &k, sizeof(k)","rendered":{"text":"memcpy(out, &k, sizeof(k)","markdown":"`memcpy(out, &k, sizeof(k)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"replacements":[{"deletedRegion":{"charOffset":25996,"charLength":25},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &k,  sizeof(k)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"region":{"startLine":537,"startColumn":4,"endLine":537,"endColumn":29,"charOffset":21272,"charLength":25,"snippet":{"text":"memcpy(out, &k, sizeof(k)","rendered":{"text":"memcpy(out, &k, sizeof(k)","markdown":"`memcpy(out, &k, sizeof(k)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"replacements":[{"deletedRegion":{"charOffset":21272,"charLength":25},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &k,  sizeof(k)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"region":{"startLine":527,"startColumn":4,"endLine":527,"endColumn":29,"charOffset":21032,"charLength":25,"snippet":{"text":"memcpy(out, &k, sizeof(k)","rendered":{"text":"memcpy(out, &k, sizeof(k)","markdown":"`memcpy(out, &k, sizeof(k)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"replacements":[{"deletedRegion":{"charOffset":21032,"charLength":25},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &k,  sizeof(k)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"region":{"startLine":473,"startColumn":4,"endLine":473,"endColumn":49,"charOffset":18485,"charLength":45,"snippet":{"text":"memcpy(out, &im->image32[y][x], sizeof(INT32)","rendered":{"text":"memcpy(out, &im->image32[y][x], sizeof(INT32)","markdown":"`memcpy(out, &im->image32[y][x], sizeof(INT32)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"replacements":[{"deletedRegion":{"charOffset":18485,"charLength":45},"insertedContent":{"text":"memcpy_s(out, <size of out>,  &im->image32[y][x],  sizeof(INT32)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"region":{"startLine":462,"startColumn":4,"endLine":462,"endColumn":64,"charOffset":18179,"charLength":60,"snippet":{"text":"memcpy(out, im->image8[y] + x * sizeof(INT16), sizeof(INT16)","rendered":{"text":"memcpy(out, im->image8[y] + x * sizeof(INT16), sizeof(INT16)","markdown":"`memcpy(out, im->image8[y] + x * sizeof(INT16), sizeof(INT16)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"replacements":[{"deletedRegion":{"charOffset":18179,"charLength":60},"insertedContent":{"text":"memcpy_s(out, <size of out>,  im->image8[y] + x * sizeof(INT16),  sizeof(INT16)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"region":{"startLine":78,"startColumn":8,"endLine":78,"endColumn":64,"charOffset":2467,"charLength":56,"snippet":{"text":"memcpy(imOut->image[yr], imIn->image[y], imIn->linesize)","rendered":{"text":"memcpy(imOut->image[yr], imIn->image[y], imIn->linesize)","markdown":"`memcpy(imOut->image[yr], imIn->image[y], imIn->linesize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\Geometry.c"},"replacements":[{"deletedRegion":{"charOffset":2467,"charLength":56},"insertedContent":{"text":"memcpy_s(imOut->image[yr], <size of imOut->image[yr]>,  imIn->image[y],  imIn->linesize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\path.c"},"region":{"startLine":122,"startColumn":8,"endLine":122,"endColumn":61,"charOffset":3308,"charLength":53,"snippet":{"text":"memcpy(xy, path->xy, 2 * path->count * sizeof(double)","rendered":{"text":"memcpy(xy, path->xy, 2 * path->count * sizeof(double)","markdown":"`memcpy(xy, path->xy, 2 * path->count * sizeof(double)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\path.c"},"replacements":[{"deletedRegion":{"charOffset":3308,"charLength":53},"insertedContent":{"text":"memcpy_s(xy, <size of xy>,  path->xy,  2 * path->count * sizeof(double)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\path.c"},"region":{"startLine":77,"startColumn":8,"endLine":77,"endColumn":48,"charOffset":2225,"charLength":40,"snippet":{"text":"memcpy(p, xy, count * 2 * sizeof(double)","rendered":{"text":"memcpy(p, xy, count * 2 * sizeof(double)","markdown":"`memcpy(p, xy, count * 2 * sizeof(double)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\path.c"},"replacements":[{"deletedRegion":{"charOffset":2225,"charLength":40},"insertedContent":{"text":"memcpy_s(p, <size of p>,  xy,  count * 2 * sizeof(double)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\path.c"},"region":{"startLine":20,"startColumn":3,"endLine":20,"endColumn":8,"charOffset":669,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\display.c"},"region":{"startLine":854,"startColumn":7,"endLine":854,"endColumn":12,"charOffset":22683,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\display.c"},"region":{"startLine":726,"startColumn":36,"endLine":726,"endColumn":41,"charOffset":19484,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\display.c"},"region":{"startLine":210,"startColumn":4,"endLine":210,"endColumn":42,"charOffset":4750,"charLength":38,"snippet":{"text":"memcpy(display->dib->bits, ptr, bytes)","rendered":{"text":"memcpy(display->dib->bits, ptr, bytes)","markdown":"`memcpy(display->dib->bits, ptr, bytes)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\display.c"},"replacements":[{"deletedRegion":{"charOffset":4750,"charLength":38},"insertedContent":{"text":"memcpy_s(display->dib->bits, <size of display->dib->bits>,  ptr,  bytes)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"selftest.py"},"region":{"startLine":141,"startColumn":23,"endLine":141,"endColumn":43,"charOffset":4175,"charLength":20,"snippet":{"text":"eval(\"float(im + 20)","rendered":{"text":"eval(\"float(im + 20)","markdown":"`eval(\"float(im + 20)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\helper.py"},"region":{"startLine":116,"startColumn":27,"endLine":116,"endColumn":43,"charOffset":3120,"charLength":16,"snippet":{"text":"eval(\"abs(a - b)","rendered":{"text":"eval(\"abs(a - b)","markdown":"`eval(\"abs(a - b)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Tests\\test_image_reduce.py"},"region":{"startLine":180,"startColumn":28,"endLine":180,"endColumn":52,"charOffset":5367,"charLength":24,"snippet":{"text":"eval(\"convert(abs(a - b)","rendered":{"text":"eval(\"convert(abs(a - b)","markdown":"`eval(\"convert(abs(a - b)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\map.c"},"region":{"startLine":18,"startColumn":3,"endLine":18,"endColumn":8,"charOffset":440,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":1125,"startColumn":4,"endLine":1125,"endColumn":78,"charOffset":35008,"charLength":74,"snippet":{"text":"strncpy(((JPEGENCODERSTATE *)encoder->state.context)->rawmode, rawmode, 8)","rendered":{"text":"strncpy(((JPEGENCODERSTATE *)encoder->state.context)->rawmode, rawmode, 8)","markdown":"`strncpy(((JPEGENCODERSTATE *)encoder->state.context)->rawmode, rawmode, 8)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":35008,"charLength":74},"insertedContent":{"text":"strcpy_s(((JPEGENCODERSTATE *)encoder->state.context)->rawmode,  8,  rawmode)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":35008,"charLength":74},"insertedContent":{"text":"strlcpy(((JPEGENCODERSTATE *)encoder->state.context)->rawmode,  rawmode,  8)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":1117,"startColumn":8,"endLine":1117,"endColumn":39,"charOffset":34855,"charLength":31,"snippet":{"text":"memcpy(pp, rawExif, rawExifLen)","rendered":{"text":"memcpy(pp, rawExif, rawExifLen)","markdown":"`memcpy(pp, rawExif, rawExifLen)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":34855,"charLength":31},"insertedContent":{"text":"memcpy_s(pp, <size of pp>,  rawExif,  rawExifLen)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"region":{"startLine":1674,"startColumn":22,"endLine":1674,"endColumn":42,"charOffset":41317,"charLength":20,"snippet":{"text":"malloc (sizeof (int)","rendered":{"text":"malloc (sizeof (int)","markdown":"`malloc (sizeof (int)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"replacements":[{"deletedRegion":{"charOffset":41317,"charLength":20},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":1110,"startColumn":19,"endLine":1110,"endColumn":37,"charOffset":34644,"charLength":18,"snippet":{"text":"malloc(rawExifLen)","rendered":{"text":"malloc(rawExifLen)","markdown":"`malloc(rawExifLen)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":34644,"charLength":18},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"region":{"startLine":1667,"startColumn":18,"endLine":1667,"endColumn":46,"charOffset":41173,"charLength":28,"snippet":{"text":"malloc (sizeof (hb_script_t)","rendered":{"text":"malloc (sizeof (hb_script_t)","markdown":"`malloc (sizeof (hb_script_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"replacements":[{"deletedRegion":{"charOffset":41173,"charLength":28},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":1102,"startColumn":8,"endLine":1102,"endColumn":36,"charOffset":34427,"charLength":28,"snippet":{"text":"memcpy(p, extra, extra_size)","rendered":{"text":"memcpy(p, extra, extra_size)","markdown":"`memcpy(p, extra, extra_size)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":34427,"charLength":28},"insertedContent":{"text":"memcpy_s(p, <size of p>,  extra,  extra_size)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"region":{"startLine":1479,"startColumn":11,"endLine":1479,"endColumn":42,"charOffset":36312,"charLength":31,"snippet":{"text":"malloc (sizeof (_raqm_bidi_run)","rendered":{"text":"malloc (sizeof (_raqm_bidi_run)","markdown":"`malloc (sizeof (_raqm_bidi_run)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"replacements":[{"deletedRegion":{"charOffset":36312,"charLength":31},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"region":{"startLine":1356,"startColumn":9,"endLine":1356,"endColumn":40,"charOffset":33295,"charLength":31,"snippet":{"text":"malloc (sizeof (_raqm_bidi_run)","rendered":{"text":"malloc (sizeof (_raqm_bidi_run)","markdown":"`malloc (sizeof (_raqm_bidi_run)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"replacements":[{"deletedRegion":{"charOffset":33295,"charLength":31},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":1098,"startColumn":18,"endLine":1098,"endColumn":36,"charOffset":34288,"charLength":18,"snippet":{"text":"malloc(extra_size)","rendered":{"text":"malloc(extra_size)","markdown":"`malloc(extra_size)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":34288,"charLength":18},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\FliDecode.c"},"region":{"startLine":240,"startColumn":20,"endLine":240,"endColumn":57,"charOffset":9191,"charLength":37,"snippet":{"text":"memcpy(local_buf, data, state->xsize)","rendered":{"text":"memcpy(local_buf, data, state->xsize)","markdown":"`memcpy(local_buf, data, state->xsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\FliDecode.c"},"replacements":[{"deletedRegion":{"charOffset":9191,"charLength":37},"insertedContent":{"text":"memcpy_s(local_buf, <size of local_buf>,  data,  state->xsize)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"region":{"startLine":1272,"startColumn":9,"endLine":1272,"endColumn":40,"charOffset":31250,"charLength":31,"snippet":{"text":"malloc (sizeof (_raqm_bidi_run)","rendered":{"text":"malloc (sizeof (_raqm_bidi_run)","markdown":"`malloc (sizeof (_raqm_bidi_run)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"replacements":[{"deletedRegion":{"charOffset":31250,"charLength":31},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":999,"startColumn":30,"endLine":999,"endColumn":81,"charOffset":31333,"charLength":51,"snippet":{"text":"malloc(num_tables * DCTSIZE2 * sizeof(unsigned int)","rendered":{"text":"malloc(num_tables * DCTSIZE2 * sizeof(unsigned int)","markdown":"`malloc(num_tables * DCTSIZE2 * sizeof(unsigned int)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":31333,"charLength":51},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\FliDecode.c"},"region":{"startLine":207,"startColumn":28,"endLine":207,"endColumn":56,"charOffset":7665,"charLength":28,"snippet":{"text":"memcpy(out + x, data + 1, i)","rendered":{"text":"memcpy(out + x, data + 1, i)","markdown":"`memcpy(out + x, data + 1, i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\FliDecode.c"},"replacements":[{"deletedRegion":{"charOffset":7665,"charLength":28},"insertedContent":{"text":"memcpy_s(out + x, <size of out + x>,  data + 1,  i)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"region":{"startLine":611,"startColumn":2,"endLine":611,"endColumn":44,"charOffset":14201,"charLength":42,"snippet":{"text":"memcpy (rq->text_utf8, text, sizeof (char)","rendered":{"text":"memcpy (rq->text_utf8, text, sizeof (char)","markdown":"`memcpy (rq->text_utf8, text, sizeof (char)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"replacements":[{"deletedRegion":{"charOffset":14201,"charLength":42},"insertedContent":{"text":"memcpy_s(rq->text_utf8, <size of rq->text_utf8>,  text,  sizeof (char)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":585,"startColumn":8,"endLine":585,"endColumn":46,"charOffset":16162,"charLength":38,"snippet":{"text":"memcpy(p, dictionary, dictionary_size)","rendered":{"text":"memcpy(p, dictionary, dictionary_size)","markdown":"`memcpy(p, dictionary, dictionary_size)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":16162,"charLength":38},"insertedContent":{"text":"memcpy_s(p, <size of p>,  dictionary,  dictionary_size)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"region":{"startLine":525,"startColumn":2,"endLine":525,"endColumn":43,"charOffset":12296,"charLength":41,"snippet":{"text":"memcpy (rq->text, text, sizeof (uint32_t)","rendered":{"text":"memcpy (rq->text, text, sizeof (uint32_t)","markdown":"`memcpy (rq->text, text, sizeof (uint32_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"replacements":[{"deletedRegion":{"charOffset":12296,"charLength":41},"insertedContent":{"text":"memcpy_s(rq->text, <size of rq->text>,  text,  sizeof (uint32_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\FliDecode.c"},"region":{"startLine":173,"startColumn":28,"endLine":173,"endColumn":56,"charOffset":6231,"charLength":28,"snippet":{"text":"memcpy(out + x, data + 2, i)","rendered":{"text":"memcpy(out + x, data + 2, i)","markdown":"`memcpy(out + x, data + 2, i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\FliDecode.c"},"replacements":[{"deletedRegion":{"charOffset":6231,"charLength":28},"insertedContent":{"text":"memcpy_s(out + x, <size of out + x>,  data + 2,  i)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\decode.c"},"region":{"startLine":861,"startColumn":4,"endLine":861,"endColumn":73,"charOffset":24267,"charLength":69,"snippet":{"text":"strncpy(((JPEGSTATE *)decoder->state.context)->jpegmode, jpegmode, 8)","rendered":{"text":"strncpy(((JPEGSTATE *)decoder->state.context)->jpegmode, jpegmode, 8)","markdown":"`strncpy(((JPEGSTATE *)decoder->state.context)->jpegmode, jpegmode, 8)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\decode.c"},"replacements":[{"deletedRegion":{"charOffset":24267,"charLength":69},"insertedContent":{"text":"strcpy_s(((JPEGSTATE *)decoder->state.context)->jpegmode,  8,  jpegmode)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\decode.c"},"replacements":[{"deletedRegion":{"charOffset":24267,"charLength":69},"insertedContent":{"text":"strlcpy(((JPEGSTATE *)decoder->state.context)->jpegmode,  jpegmode,  8)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":581,"startColumn":18,"endLine":581,"endColumn":41,"charOffset":16050,"charLength":23,"snippet":{"text":"malloc(dictionary_size)","rendered":{"text":"malloc(dictionary_size)","markdown":"`malloc(dictionary_size)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":16050,"charLength":23},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"region":{"startLine":369,"startColumn":7,"endLine":369,"endColumn":30,"charOffset":9161,"charLength":23,"snippet":{"text":"malloc (sizeof (raqm_t)","rendered":{"text":"malloc (sizeof (raqm_t)","markdown":"`malloc (sizeof (raqm_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"replacements":[{"deletedRegion":{"charOffset":9161,"charLength":23},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\libImaging\\FliDecode.c"},"region":{"startLine":131,"startColumn":28,"endLine":131,"endColumn":62,"charOffset":4412,"charLength":34,"snippet":{"text":"memcpy(local_buf + x, data + 2, i)","rendered":{"text":"memcpy(local_buf + x, data + 2, i)","markdown":"`memcpy(local_buf + x, data + 2, i)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"src\\libImaging\\FliDecode.c"},"replacements":[{"deletedRegion":{"charOffset":4412,"charLength":34},"insertedContent":{"text":"memcpy_s(local_buf + x, <size of local_buf + x>,  data + 2,  i)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":230,"startColumn":7,"endLine":230,"endColumn":12,"charOffset":5900,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":186,"startColumn":19,"endLine":186,"endColumn":34,"charOffset":4871,"charLength":15,"snippet":{"text":"malloc(bufsize)","rendered":{"text":"malloc(bufsize)","markdown":"`malloc(bufsize)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\encode.c"},"replacements":[{"deletedRegion":{"charOffset":4871,"charLength":15},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS111237","level":"error","message":{"text":"Banned C function detected (strncpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\decode.c"},"region":{"startLine":860,"startColumn":4,"endLine":860,"endColumn":71,"charOffset":24193,"charLength":67,"snippet":{"text":"strncpy(((JPEGSTATE *)decoder->state.context)->rawmode, rawmode, 8)","rendered":{"text":"strncpy(((JPEGSTATE *)decoder->state.context)->rawmode, rawmode, 8)","markdown":"`strncpy(((JPEGSTATE *)decoder->state.context)->rawmode, rawmode, 8)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\decode.c"},"replacements":[{"deletedRegion":{"charOffset":24193,"charLength":67},"insertedContent":{"text":"strcpy_s(((JPEGSTATE *)decoder->state.context)->rawmode,  8,  rawmode)"}}]}]},{"description":{"text":"strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."},"artifactChanges":[{"artifactLocation":{"uri":"src\\decode.c"},"replacements":[{"deletedRegion":{"charOffset":24193,"charLength":67},"insertedContent":{"text":"strlcpy(((JPEGSTATE *)decoder->state.context)->rawmode,  rawmode,  8)"}}]}]}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS161085","level":"note","message":{"text":"Problematic C function detected (malloc)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"region":{"startLine":319,"startColumn":10,"endLine":319,"endColumn":37,"charOffset":8221,"charLength":27,"snippet":{"text":"malloc (sizeof (raqm_run_t)","rendered":{"text":"malloc (sizeof (raqm_run_t)","markdown":"`malloc (sizeof (raqm_run_t)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "},"artifactChanges":[{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"replacements":[{"deletedRegion":{"charOffset":8221,"charLength":27},"insertedContent":{"text":"calloc(<number of elements>, <size of each element>)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":".appveyor.yml"},"region":{"startLine":50,"startColumn":66,"endLine":50,"endColumn":70,"charOffset":1906,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"yaml"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\decode.c"},"region":{"startLine":164,"startColumn":7,"endLine":164,"endColumn":12,"charOffset":4501,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"region":{"startLine":156,"startColumn":24,"endLine":156,"endColumn":30,"charOffset":4843,"charLength":6,"snippet":{"text":"printf","rendered":{"text":"printf","markdown":"`printf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":881,"startColumn":4,"endLine":881,"endColumn":11,"charOffset":27392,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":735,"startColumn":16,"endLine":735,"endColumn":23,"charOffset":23099,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":731,"startColumn":12,"endLine":731,"endColumn":19,"charOffset":22969,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":722,"startColumn":16,"endLine":722,"endColumn":23,"charOffset":22695,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":718,"startColumn":12,"endLine":718,"endColumn":19,"charOffset":22562,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":709,"startColumn":16,"endLine":709,"endColumn":23,"charOffset":22279,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":704,"startColumn":12,"endLine":704,"endColumn":19,"charOffset":22127,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":63,"startColumn":22,"endLine":63,"endColumn":29,"charOffset":1868,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\thirdparty\\raqm\\raqm.c"},"region":{"startLine":150,"startColumn":22,"endLine":150,"endColumn":29,"charOffset":4727,"charLength":7,"snippet":{"text":"fprintf","rendered":{"text":"fprintf","markdown":"`fprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\encode.c"},"region":{"startLine":23,"startColumn":3,"endLine":23,"endColumn":8,"charOffset":734,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\decode.c"},"region":{"startLine":30,"startColumn":3,"endLine":30,"endColumn":8,"charOffset":1135,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src\\_webp.c"},"region":{"startLine":61,"startColumn":12,"endLine":61,"endColumn":19,"charOffset":1758,"charLength":7,"snippet":{"text":"sprintf","rendered":{"text":"sprintf","markdown":"`sprintf`"}},"sourceLanguage":"c"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"}],"columnKind":"utf16CodeUnits"}]}
