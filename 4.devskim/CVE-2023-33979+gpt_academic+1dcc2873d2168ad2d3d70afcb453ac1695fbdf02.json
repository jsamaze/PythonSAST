{"$schema":"https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json","version":"2.1.0","runs":[{"tool":{"driver":{"name":"devskim","fullName":"Microsoft DevSkim Command Line Interface","version":"1.0.23+607c9a5eda","informationUri":"https://github.com/microsoft/DevSkim/","rules":[{"id":"DS148264","name":"DoNotUseWeaknoncryptographicRandomNumberGenerators","fullDescription":{"text":"Do not use weak/non-cryptographic random number generators: Use cryptographic random numbers generators for anything even close to a security function."},"help":{"text":"Replacements depend on language.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS148264.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS148264.md) for guidance on this issue."},"shortDescription":{"text":"Use cryptographic random numbers generators for anything even close to a security function."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS148264.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"id":"DS162092","name":"DoNotLeaveDebugCodeInProduction","fullDescription":{"text":"Do not leave debug code in production: Accessing localhost could indicate debug code, or could hinder scaling."},"help":{"text":"Accessing localhost could indicate debug code, or could hinder scaling.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS162092.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS162092.md) for guidance on this issue."},"shortDescription":{"text":"Accessing localhost could indicate debug code, or could hinder scaling."},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS162092.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS121708","name":"ProblematicCFunctionDetectedMemcpy","fullDescription":{"text":"Problematic C function detected (memcpy): There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"help":{"text":"Use memcpy_s if possible.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS121708.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS121708.md) for guidance on this issue."},"shortDescription":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS121708.md","properties":{"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"id":"DS189424","name":"ReviewEvalForUntrustedData","fullDescription":{"text":"Review eval for untrusted data: If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an eval statement it can allow an attacker to inject their own code."},"help":{"text":"Edit the eval so that no untrusted data is included. If untrusted data is absolutely necessary a great deal of care should be taken to ensure it is properly escaped so that it cannot be executed. This is not as simple as just escaping quotes.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md) for guidance on this issue."},"shortDescription":{"text":"If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an eval statement it can allow an attacker to inject their own code."},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS189424.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS154189","name":"BannedCFunctionDetected","fullDescription":{"text":"Banned C function detected: These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'."},"help":{"text":"These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS154189.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS154189.md) for guidance on this issue."},"shortDescription":{"text":"These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'."},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS154189.md","properties":{"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"defaultConfiguration":{"level":"warning"}},{"id":"DS172411","name":"ReviewSettimeoutForUntrustedData","fullDescription":{"text":"Review setTimeout for untrusted data: If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an setTimeout statement it can allow an attacker to inject their own code."},"help":{"text":"Edit the setTimeout so that no untrusted data is included. If untrusted data is absolutely necessary a great deal of care should be taken to ensure it is properly escaped so that it cannot be executed. This is not as simple as just escaping quotes.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS172411.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS172411.md) for guidance on this issue."},"shortDescription":{"text":"If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an setTimeout statement it can allow an attacker to inject their own code."},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS172411.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS176209","name":"SuspiciousComment","fullDescription":{"text":"Suspicious comment: A \"TODO\" or similar was left in source code, possibly indicating incomplete functionality"},"help":{"text":"A \"TODO\" or similar was left in source code, possibly indicating incomplete functionality","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS176209.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS176209.md) for guidance on this issue."},"shortDescription":{"text":"A \"TODO\" or similar was left in source code, possibly indicating incomplete functionality"},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS176209.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"id":"DS425000","name":"DoNotDeserializeUntrustedData","fullDescription":{"text":"Do not deserialize untrusted data.: Deserializing attacker-supplied data using `pickle` or `cPickle` can result in code execution."},"help":{"text":"Either add integrity protection or use a data format like JSON.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS425000.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS425000.md) for guidance on this issue."},"shortDescription":{"text":"Deserializing attacker-supplied data using `pickle` or `cPickle` can result in code execution."},"defaultConfiguration":{"level":"note"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS425000.md","properties":{"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}}]}},"versionControlProvenance":[{"repositoryUri":"https://github.com/binary-husky/gpt_academic","revisionId":"42cf738a31c4c67ddd30f84c7589c920319d2720","branch":"(no branch)"}],"results":[{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\python\\dqn\\dqn.py"},"region":{"startLine":204,"startColumn":43,"endLine":204,"endColumn":48,"charOffset":9402,"charLength":5,"snippet":{"text":"rand(","rendered":{"text":"rand(","markdown":"`rand(`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\prod_cons.h"},"region":{"startLine":183,"startColumn":21,"endLine":183,"endColumn":86,"charOffset":6749,"charLength":65,"snippet":{"text":"memcpy(buff, &(elems[circ::index_of(cur_rd)].data_), sizeof(buff)","rendered":{"text":"memcpy(buff, &(elems[circ::index_of(cur_rd)].data_), sizeof(buff)","markdown":"`memcpy(buff, &(elems[circ::index_of(cur_rd)].data_), sizeof(buff)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\prod_cons.h"},"replacements":[{"deletedRegion":{"charOffset":6749,"charLength":65},"insertedContent":{"text":"memcpy_s(buff, <size of buff>,  &(elems[circ::index_of(cur_rd)].data_),  sizeof(buff)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\prod_cons.h"},"region":{"startLine":94,"startColumn":17,"endLine":94,"endColumn":82,"charOffset":3260,"charLength":65,"snippet":{"text":"memcpy(buff, &(elems[circ::index_of(cur_rd)].data_), sizeof(buff)","rendered":{"text":"memcpy(buff, &(elems[circ::index_of(cur_rd)].data_), sizeof(buff)","markdown":"`memcpy(buff, &(elems[circ::index_of(cur_rd)].data_), sizeof(buff)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\prod_cons.h"},"replacements":[{"deletedRegion":{"charOffset":3260,"charLength":65},"insertedContent":{"text":"memcpy_s(buff, <size of buff>,  &(elems[circ::index_of(cur_rd)].data_),  sizeof(buff)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"region":{"startLine":1007,"startColumn":6,"endLine":1007,"endColumn":43,"charOffset":35335,"charLength":37,"snippet":{"text":"memcpy(m_pBuf + m_buf_ofs, pBuf, len)","rendered":{"text":"memcpy(m_pBuf + m_buf_ofs, pBuf, len)","markdown":"`memcpy(m_pBuf + m_buf_ofs, pBuf, len)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":35335,"charLength":37},"insertedContent":{"text":"memcpy_s(m_pBuf + m_buf_ofs, <size of m_pBuf + m_buf_ofs>,  pBuf,  len)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"region":{"startLine":929,"startColumn":16,"endLine":929,"endColumn":21,"charOffset":33319,"charLength":5,"snippet":{"text":"fopen","rendered":{"text":"fopen","markdown":"`fopen`"}},"sourceLanguage":"cpp"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"region":{"startLine":820,"startColumn":6,"endLine":820,"endColumn":35,"charOffset":30804,"charLength":29,"snippet":{"text":"memcpy(pDst, Psrc, m_image_x)","rendered":{"text":"memcpy(pDst, Psrc, m_image_x)","markdown":"`memcpy(pDst, Psrc, m_image_x)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":30804,"charLength":29},"insertedContent":{"text":"memcpy_s(pDst, <size of pDst>,  Psrc,  m_image_x)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"region":{"startLine":795,"startColumn":8,"endLine":795,"endColumn":77,"charOffset":30187,"charLength":69,"snippet":{"text":"memcpy(m_mcu_lines[i], m_mcu_lines[m_mcu_y_ofs - 1], m_image_bpl_mcu)","rendered":{"text":"memcpy(m_mcu_lines[i], m_mcu_lines[m_mcu_y_ofs - 1], m_image_bpl_mcu)","markdown":"`memcpy(m_mcu_lines[i], m_mcu_lines[m_mcu_y_ofs - 1], m_image_bpl_mcu)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":30187,"charLength":69},"insertedContent":{"text":"memcpy_s(m_mcu_lines[i], <size of m_mcu_lines[i]>,  m_mcu_lines[m_mcu_y_ofs - 1],  m_image_bpl_mcu)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"region":{"startLine":508,"startColumn":52,"endLine":508,"endColumn":110,"charOffset":21248,"charLength":58,"snippet":{"text":"memcpy(m_huff_val [2+1], s_ac_chroma_val, AC_CHROMA_CODES)","rendered":{"text":"memcpy(m_huff_val [2+1], s_ac_chroma_val, AC_CHROMA_CODES)","markdown":"`memcpy(m_huff_val [2+1], s_ac_chroma_val, AC_CHROMA_CODES)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":21248,"charLength":58},"insertedContent":{"text":"memcpy_s(m_huff_val [2+1], <size of m_huff_val [2+1]>,  s_ac_chroma_val,  AC_CHROMA_CODES)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"region":{"startLine":508,"startColumn":4,"endLine":508,"endColumn":50,"charOffset":21200,"charLength":46,"snippet":{"text":"memcpy(m_huff_bits[2+1], s_ac_chroma_bits, 17)","rendered":{"text":"memcpy(m_huff_bits[2+1], s_ac_chroma_bits, 17)","markdown":"`memcpy(m_huff_bits[2+1], s_ac_chroma_bits, 17)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":21200,"charLength":46},"insertedContent":{"text":"memcpy_s(m_huff_bits[2+1], <size of m_huff_bits[2+1]>,  s_ac_chroma_bits,  17)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"region":{"startLine":507,"startColumn":52,"endLine":507,"endColumn":110,"charOffset":21135,"charLength":58,"snippet":{"text":"memcpy(m_huff_val [0+1], s_dc_chroma_val, DC_CHROMA_CODES)","rendered":{"text":"memcpy(m_huff_val [0+1], s_dc_chroma_val, DC_CHROMA_CODES)","markdown":"`memcpy(m_huff_val [0+1], s_dc_chroma_val, DC_CHROMA_CODES)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":21135,"charLength":58},"insertedContent":{"text":"memcpy_s(m_huff_val [0+1], <size of m_huff_val [0+1]>,  s_dc_chroma_val,  DC_CHROMA_CODES)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"region":{"startLine":507,"startColumn":4,"endLine":507,"endColumn":50,"charOffset":21087,"charLength":46,"snippet":{"text":"memcpy(m_huff_bits[0+1], s_dc_chroma_bits, 17)","rendered":{"text":"memcpy(m_huff_bits[0+1], s_dc_chroma_bits, 17)","markdown":"`memcpy(m_huff_bits[0+1], s_dc_chroma_bits, 17)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":21087,"charLength":46},"insertedContent":{"text":"memcpy_s(m_huff_bits[0+1], <size of m_huff_bits[0+1]>,  s_dc_chroma_bits,  17)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"region":{"startLine":506,"startColumn":52,"endLine":506,"endColumn":104,"charOffset":21028,"charLength":52,"snippet":{"text":"memcpy(m_huff_val [2+0], s_ac_lum_val, AC_LUM_CODES)","rendered":{"text":"memcpy(m_huff_val [2+0], s_ac_lum_val, AC_LUM_CODES)","markdown":"`memcpy(m_huff_val [2+0], s_ac_lum_val, AC_LUM_CODES)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":21028,"charLength":52},"insertedContent":{"text":"memcpy_s(m_huff_val [2+0], <size of m_huff_val [2+0]>,  s_ac_lum_val,  AC_LUM_CODES)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"region":{"startLine":506,"startColumn":4,"endLine":506,"endColumn":47,"charOffset":20980,"charLength":43,"snippet":{"text":"memcpy(m_huff_bits[2+0], s_ac_lum_bits, 17)","rendered":{"text":"memcpy(m_huff_bits[2+0], s_ac_lum_bits, 17)","markdown":"`memcpy(m_huff_bits[2+0], s_ac_lum_bits, 17)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":20980,"charLength":43},"insertedContent":{"text":"memcpy_s(m_huff_bits[2+0], <size of m_huff_bits[2+0]>,  s_ac_lum_bits,  17)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"region":{"startLine":505,"startColumn":52,"endLine":505,"endColumn":104,"charOffset":20921,"charLength":52,"snippet":{"text":"memcpy(m_huff_val [0+0], s_dc_lum_val, DC_LUM_CODES)","rendered":{"text":"memcpy(m_huff_val [0+0], s_dc_lum_val, DC_LUM_CODES)","markdown":"`memcpy(m_huff_val [0+0], s_dc_lum_val, DC_LUM_CODES)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":20921,"charLength":52},"insertedContent":{"text":"memcpy_s(m_huff_val [0+0], <size of m_huff_val [0+0]>,  s_dc_lum_val,  DC_LUM_CODES)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"region":{"startLine":505,"startColumn":4,"endLine":505,"endColumn":47,"charOffset":20873,"charLength":43,"snippet":{"text":"memcpy(m_huff_bits[0+0], s_dc_lum_bits, 17)","rendered":{"text":"memcpy(m_huff_bits[0+0], s_dc_lum_bits, 17)","markdown":"`memcpy(m_huff_bits[0+0], s_dc_lum_bits, 17)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":20873,"charLength":43},"insertedContent":{"text":"memcpy_s(m_huff_bits[0+0], <size of m_huff_bits[0+0]>,  s_dc_lum_bits,  17)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpgd.cpp"},"region":{"startLine":3202,"startColumn":4,"endLine":3202,"endColumn":37,"charOffset":88064,"charLength":33,"snippet":{"text":"memcpy(pDst, pScan_line, dst_bpl)","rendered":{"text":"memcpy(pDst, pScan_line, dst_bpl)","markdown":"`memcpy(pDst, pScan_line, dst_bpl)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpgd.cpp"},"replacements":[{"deletedRegion":{"charOffset":88064,"charLength":33},"insertedContent":{"text":"memcpy_s(pDst, <size of pDst>,  pScan_line,  dst_bpl)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpgd.cpp"},"region":{"startLine":3151,"startColumn":2,"endLine":3151,"endColumn":54,"charOffset":86616,"charLength":52,"snippet":{"text":"memcpy(pBuf, m_pSrc_data + m_ofs, max_bytes_to_read)","rendered":{"text":"memcpy(pBuf, m_pSrc_data + m_ofs, max_bytes_to_read)","markdown":"`memcpy(pBuf, m_pSrc_data + m_ofs, max_bytes_to_read)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpgd.cpp"},"replacements":[{"deletedRegion":{"charOffset":86616,"charLength":52},"insertedContent":{"text":"memcpy_s(pBuf, <size of pBuf>,  m_pSrc_data + m_ofs,  max_bytes_to_read)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpgd.cpp"},"region":{"startLine":3093,"startColumn":12,"endLine":3093,"endColumn":17,"charOffset":85532,"charLength":5,"snippet":{"text":"fopen","rendered":{"text":"fopen","markdown":"`fopen`"}},"sourceLanguage":"cpp"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpgd.cpp"},"region":{"startLine":1736,"startColumn":5,"endLine":1736,"endColumn":10,"charOffset":53958,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"cpp"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpgd.cpp"},"region":{"startLine":1678,"startColumn":4,"endLine":1678,"endColumn":52,"charOffset":52716,"charLength":48,"snippet":{"text":"memcpy(&p[1], &pAC[1], 63 * sizeof(jpgd_block_t)","rendered":{"text":"memcpy(&p[1], &pAC[1], 63 * sizeof(jpgd_block_t)","markdown":"`memcpy(&p[1], &pAC[1], 63 * sizeof(jpgd_block_t)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpgd.cpp"},"replacements":[{"deletedRegion":{"charOffset":52716,"charLength":48},"insertedContent":{"text":"memcpy_s(&p[1], <size of &p[1]>,  &pAC[1],  63 * sizeof(jpgd_block_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpgd.cpp"},"region":{"startLine":1004,"startColumn":3,"endLine":1004,"endColumn":43,"charOffset":36415,"charLength":40,"snippet":{"text":"memcpy(m_huff_val[index], huff_val, 256)","rendered":{"text":"memcpy(m_huff_val[index], huff_val, 256)","markdown":"`memcpy(m_huff_val[index], huff_val, 256)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpgd.cpp"},"replacements":[{"deletedRegion":{"charOffset":36415,"charLength":40},"insertedContent":{"text":"memcpy_s(m_huff_val[index], <size of m_huff_val[index]>,  huff_val,  256)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpgd.cpp"},"region":{"startLine":1003,"startColumn":3,"endLine":1003,"endColumn":42,"charOffset":36370,"charLength":39,"snippet":{"text":"memcpy(m_huff_num[index], huff_num, 17)","rendered":{"text":"memcpy(m_huff_num[index], huff_num, 17)","markdown":"`memcpy(m_huff_num[index], huff_num, 17)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\longcode\\jpgd.cpp"},"replacements":[{"deletedRegion":{"charOffset":36370,"charLength":39},"insertedContent":{"text":"memcpy_s(m_huff_num[index], <size of m_huff_num[index]>,  huff_num,  17)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\cppipc\\prod_cons.h"},"region":{"startLine":183,"startColumn":21,"endLine":183,"endColumn":86,"charOffset":6749,"charLength":65,"snippet":{"text":"memcpy(buff, &(elems[circ::index_of(cur_rd)].data_), sizeof(buff)","rendered":{"text":"memcpy(buff, &(elems[circ::index_of(cur_rd)].data_), sizeof(buff)","markdown":"`memcpy(buff, &(elems[circ::index_of(cur_rd)].data_), sizeof(buff)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\cppipc\\prod_cons.h"},"replacements":[{"deletedRegion":{"charOffset":6749,"charLength":65},"insertedContent":{"text":"memcpy_s(buff, <size of buff>,  &(elems[circ::index_of(cur_rd)].data_),  sizeof(buff)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\cppipc\\prod_cons.h"},"region":{"startLine":94,"startColumn":17,"endLine":94,"endColumn":82,"charOffset":3260,"charLength":65,"snippet":{"text":"memcpy(buff, &(elems[circ::index_of(cur_rd)].data_), sizeof(buff)","rendered":{"text":"memcpy(buff, &(elems[circ::index_of(cur_rd)].data_), sizeof(buff)","markdown":"`memcpy(buff, &(elems[circ::index_of(cur_rd)].data_), sizeof(buff)`"}},"sourceLanguage":"c"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\cppipc\\prod_cons.h"},"replacements":[{"deletedRegion":{"charOffset":3260,"charLength":65},"insertedContent":{"text":"memcpy_s(buff, <size of buff>,  &(elems[circ::index_of(cur_rd)].data_),  sizeof(buff)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\cppipc\\ipc.cpp"},"region":{"startLine":459,"startColumn":17,"endLine":459,"endColumn":40,"charOffset":14801,"charLength":23,"snippet":{"text":"memcpy(buf, data, size)","rendered":{"text":"memcpy(buf, data, size)","markdown":"`memcpy(buf, data, size)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\cppipc\\ipc.cpp"},"replacements":[{"deletedRegion":{"charOffset":14801,"charLength":23},"insertedContent":{"text":"memcpy_s(buf, <size of buf>,  data,  size)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\cppipc\\ipc.cpp"},"region":{"startLine":83,"startColumn":13,"endLine":83,"endColumn":92,"charOffset":2407,"charLength":79,"snippet":{"text":"memcpy(static_cast<ipc::byte_t*>(buff_.data()) + fill_, data, new_fill - fill_)","rendered":{"text":"memcpy(static_cast<ipc::byte_t*>(buff_.data()) + fill_, data, new_fill - fill_)","markdown":"`memcpy(static_cast<ipc::byte_t*>(buff_.data()) + fill_, data, new_fill - fill_)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\cppipc\\ipc.cpp"},"replacements":[{"deletedRegion":{"charOffset":2407,"charLength":79},"insertedContent":{"text":"memcpy_s(static_cast<ipc::byte_t*>(buff_.data()) + fill_, <size of static_cast<ipc::byte_t*>(buff_.data()) + fill_>,  data,  new_fill - fill_)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\cppipc\\ipc.cpp"},"region":{"startLine":68,"startColumn":9,"endLine":68,"endColumn":46,"charOffset":1915,"charLength":37,"snippet":{"text":"memcpy(ptr, &data, (ipc::detail::min)","rendered":{"text":"memcpy(ptr, &data, (ipc::detail::min)","markdown":"`memcpy(ptr, &data, (ipc::detail::min)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\cppipc\\ipc.cpp"},"replacements":[{"deletedRegion":{"charOffset":1915,"charLength":37},"insertedContent":{"text":"memcpy_s(ptr, <size of ptr>,  &data,  (ipc::detail::min)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\cppipc\\ipc.cpp"},"region":{"startLine":61,"startColumn":18,"endLine":61,"endColumn":44,"charOffset":1749,"charLength":26,"snippet":{"text":"memcpy(&data_, data, size)","rendered":{"text":"memcpy(&data_, data, size)","markdown":"`memcpy(&data_, data, size)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\cppipc\\ipc.cpp"},"replacements":[{"deletedRegion":{"charOffset":1749,"charLength":26},"insertedContent":{"text":"memcpy_s(&data_, <size of &data_>,  data,  size)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"region":{"startLine":1007,"startColumn":6,"endLine":1007,"endColumn":43,"charOffset":35335,"charLength":37,"snippet":{"text":"memcpy(m_pBuf + m_buf_ofs, pBuf, len)","rendered":{"text":"memcpy(m_pBuf + m_buf_ofs, pBuf, len)","markdown":"`memcpy(m_pBuf + m_buf_ofs, pBuf, len)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":35335,"charLength":37},"insertedContent":{"text":"memcpy_s(m_pBuf + m_buf_ofs, <size of m_pBuf + m_buf_ofs>,  pBuf,  len)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"region":{"startLine":929,"startColumn":16,"endLine":929,"endColumn":21,"charOffset":33319,"charLength":5,"snippet":{"text":"fopen","rendered":{"text":"fopen","markdown":"`fopen`"}},"sourceLanguage":"cpp"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"region":{"startLine":820,"startColumn":6,"endLine":820,"endColumn":35,"charOffset":30804,"charLength":29,"snippet":{"text":"memcpy(pDst, Psrc, m_image_x)","rendered":{"text":"memcpy(pDst, Psrc, m_image_x)","markdown":"`memcpy(pDst, Psrc, m_image_x)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":30804,"charLength":29},"insertedContent":{"text":"memcpy_s(pDst, <size of pDst>,  Psrc,  m_image_x)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"region":{"startLine":795,"startColumn":8,"endLine":795,"endColumn":77,"charOffset":30187,"charLength":69,"snippet":{"text":"memcpy(m_mcu_lines[i], m_mcu_lines[m_mcu_y_ofs - 1], m_image_bpl_mcu)","rendered":{"text":"memcpy(m_mcu_lines[i], m_mcu_lines[m_mcu_y_ofs - 1], m_image_bpl_mcu)","markdown":"`memcpy(m_mcu_lines[i], m_mcu_lines[m_mcu_y_ofs - 1], m_image_bpl_mcu)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":30187,"charLength":69},"insertedContent":{"text":"memcpy_s(m_mcu_lines[i], <size of m_mcu_lines[i]>,  m_mcu_lines[m_mcu_y_ofs - 1],  m_image_bpl_mcu)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"region":{"startLine":508,"startColumn":52,"endLine":508,"endColumn":110,"charOffset":21248,"charLength":58,"snippet":{"text":"memcpy(m_huff_val [2+1], s_ac_chroma_val, AC_CHROMA_CODES)","rendered":{"text":"memcpy(m_huff_val [2+1], s_ac_chroma_val, AC_CHROMA_CODES)","markdown":"`memcpy(m_huff_val [2+1], s_ac_chroma_val, AC_CHROMA_CODES)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":21248,"charLength":58},"insertedContent":{"text":"memcpy_s(m_huff_val [2+1], <size of m_huff_val [2+1]>,  s_ac_chroma_val,  AC_CHROMA_CODES)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"region":{"startLine":508,"startColumn":4,"endLine":508,"endColumn":50,"charOffset":21200,"charLength":46,"snippet":{"text":"memcpy(m_huff_bits[2+1], s_ac_chroma_bits, 17)","rendered":{"text":"memcpy(m_huff_bits[2+1], s_ac_chroma_bits, 17)","markdown":"`memcpy(m_huff_bits[2+1], s_ac_chroma_bits, 17)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":21200,"charLength":46},"insertedContent":{"text":"memcpy_s(m_huff_bits[2+1], <size of m_huff_bits[2+1]>,  s_ac_chroma_bits,  17)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"region":{"startLine":507,"startColumn":52,"endLine":507,"endColumn":110,"charOffset":21135,"charLength":58,"snippet":{"text":"memcpy(m_huff_val [0+1], s_dc_chroma_val, DC_CHROMA_CODES)","rendered":{"text":"memcpy(m_huff_val [0+1], s_dc_chroma_val, DC_CHROMA_CODES)","markdown":"`memcpy(m_huff_val [0+1], s_dc_chroma_val, DC_CHROMA_CODES)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":21135,"charLength":58},"insertedContent":{"text":"memcpy_s(m_huff_val [0+1], <size of m_huff_val [0+1]>,  s_dc_chroma_val,  DC_CHROMA_CODES)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"region":{"startLine":507,"startColumn":4,"endLine":507,"endColumn":50,"charOffset":21087,"charLength":46,"snippet":{"text":"memcpy(m_huff_bits[0+1], s_dc_chroma_bits, 17)","rendered":{"text":"memcpy(m_huff_bits[0+1], s_dc_chroma_bits, 17)","markdown":"`memcpy(m_huff_bits[0+1], s_dc_chroma_bits, 17)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":21087,"charLength":46},"insertedContent":{"text":"memcpy_s(m_huff_bits[0+1], <size of m_huff_bits[0+1]>,  s_dc_chroma_bits,  17)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"region":{"startLine":506,"startColumn":52,"endLine":506,"endColumn":104,"charOffset":21028,"charLength":52,"snippet":{"text":"memcpy(m_huff_val [2+0], s_ac_lum_val, AC_LUM_CODES)","rendered":{"text":"memcpy(m_huff_val [2+0], s_ac_lum_val, AC_LUM_CODES)","markdown":"`memcpy(m_huff_val [2+0], s_ac_lum_val, AC_LUM_CODES)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":21028,"charLength":52},"insertedContent":{"text":"memcpy_s(m_huff_val [2+0], <size of m_huff_val [2+0]>,  s_ac_lum_val,  AC_LUM_CODES)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"region":{"startLine":506,"startColumn":4,"endLine":506,"endColumn":47,"charOffset":20980,"charLength":43,"snippet":{"text":"memcpy(m_huff_bits[2+0], s_ac_lum_bits, 17)","rendered":{"text":"memcpy(m_huff_bits[2+0], s_ac_lum_bits, 17)","markdown":"`memcpy(m_huff_bits[2+0], s_ac_lum_bits, 17)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":20980,"charLength":43},"insertedContent":{"text":"memcpy_s(m_huff_bits[2+0], <size of m_huff_bits[2+0]>,  s_ac_lum_bits,  17)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"region":{"startLine":505,"startColumn":52,"endLine":505,"endColumn":104,"charOffset":20921,"charLength":52,"snippet":{"text":"memcpy(m_huff_val [0+0], s_dc_lum_val, DC_LUM_CODES)","rendered":{"text":"memcpy(m_huff_val [0+0], s_dc_lum_val, DC_LUM_CODES)","markdown":"`memcpy(m_huff_val [0+0], s_dc_lum_val, DC_LUM_CODES)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":20921,"charLength":52},"insertedContent":{"text":"memcpy_s(m_huff_val [0+0], <size of m_huff_val [0+0]>,  s_dc_lum_val,  DC_LUM_CODES)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"region":{"startLine":505,"startColumn":4,"endLine":505,"endColumn":47,"charOffset":20873,"charLength":43,"snippet":{"text":"memcpy(m_huff_bits[0+0], s_dc_lum_bits, 17)","rendered":{"text":"memcpy(m_huff_bits[0+0], s_dc_lum_bits, 17)","markdown":"`memcpy(m_huff_bits[0+0], s_dc_lum_bits, 17)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpge.cpp"},"replacements":[{"deletedRegion":{"charOffset":20873,"charLength":43},"insertedContent":{"text":"memcpy_s(m_huff_bits[0+0], <size of m_huff_bits[0+0]>,  s_dc_lum_bits,  17)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\waifu-tips.json"},"region":{"startLine":21,"startColumn":13,"endLine":21,"endColumn":22,"charOffset":829,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"json"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS172411","level":"note","message":{"text":"Review setTimeout for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\waifu-tips.js"},"region":{"startLine":395,"startColumn":31,"endLine":395,"endColumn":52,"charOffset":22573,"charLength":21,"snippet":{"text":"setTimeout(function()","rendered":{"text":"setTimeout(function()","markdown":"`setTimeout(function()`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS172411","level":"note","message":{"text":"Review setTimeout for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\waifu-tips.js"},"region":{"startLine":386,"startColumn":35,"endLine":386,"endColumn":56,"charOffset":22044,"charLength":21,"snippet":{"text":"setTimeout(function()","rendered":{"text":"setTimeout(function()","markdown":"`setTimeout(function()`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS172411","level":"note","message":{"text":"Review setTimeout for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\waifu-tips.js"},"region":{"startLine":374,"startColumn":31,"endLine":374,"endColumn":52,"charOffset":21276,"charLength":21,"snippet":{"text":"setTimeout(function()","rendered":{"text":"setTimeout(function()","markdown":"`setTimeout(function()`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS172411","level":"note","message":{"text":"Review setTimeout for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\waifu-tips.js"},"region":{"startLine":366,"startColumn":31,"endLine":366,"endColumn":52,"charOffset":20692,"charLength":21,"snippet":{"text":"setTimeout(function()","rendered":{"text":"setTimeout(function()","markdown":"`setTimeout(function()`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\waifu-tips.js"},"region":{"startLine":280,"startColumn":133,"endLine":280,"endColumn":142,"charOffset":16446,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\waifu-tips.js"},"region":{"startLine":280,"startColumn":97,"endLine":280,"endColumn":106,"charOffset":16410,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\waifu-tips.js"},"region":{"startLine":280,"startColumn":44,"endLine":280,"endColumn":53,"charOffset":16357,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS172411","level":"note","message":{"text":"Review setTimeout for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\waifu-tips.js"},"region":{"startLine":257,"startColumn":15,"endLine":257,"endColumn":56,"charOffset":14835,"charLength":41,"snippet":{"text":"setTimeout(function() {$('.waifu').hide()","rendered":{"text":"setTimeout(function() {$('.waifu').hide()","markdown":"`setTimeout(function() {$('.waifu').hide()`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS172411","level":"note","message":{"text":"Review setTimeout for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\waifu-tips.js"},"region":{"startLine":117,"startColumn":11,"endLine":117,"endColumn":73,"charOffset":6242,"charLength":62,"snippet":{"text":"setTimeout(function() {sessionStorage.removeItem('waifu-text')","rendered":{"text":"setTimeout(function() {sessionStorage.removeItem('waifu-text')","markdown":"`setTimeout(function() {sessionStorage.removeItem('waifu-text')`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"request_llm\\edge_gpt_free.py"},"region":{"startLine":847,"startColumn":39,"endLine":847,"endColumn":48,"charOffset":29405,"charLength":9,"snippet":{"text":"127.0.0.1","rendered":{"text":"127.0.0.1","markdown":"`127.0.0.1`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"toolbox.py"},"region":{"startLine":564,"startColumn":16,"endLine":579,"endColumn":40,"charOffset":19907,"charLength":459,"snippet":{"text":"eval(env_arg)\r\n        elif default_value is None:\r\n            assert arg == \"proxies\"\r\n            r = eval(env_arg)\r\n        else:\r\n            print亮红(f\"[ENV_VAR] 环境变量{arg}不支持通过环境变量设置! \")\r\n            raise KeyError\r\n    except:\r\n        print亮红(f\"[ENV_VAR] 环境变量{arg}加载失败! \")\r\n        raise KeyError(f\"[ENV_VAR] 环境变量{arg}加载失败! \")\r\n\r\n    print亮绿(f\"[ENV_VAR] 成功读取环境变量{arg}\")\r\n    return r\r\n\r\n@lru_cache(maxsize=128)\r\ndef read_single_conf_with_lru_cache(arg)","rendered":{"text":"eval(env_arg)\r\n        elif default_value is None:\r\n            assert arg == \"proxies\"\r\n            r = eval(env_arg)\r\n        else:\r\n            print亮红(f\"[ENV_VAR] 环境变量{arg}不支持通过环境变量设置! \")\r\n            raise KeyError\r\n    except:\r\n        print亮红(f\"[ENV_VAR] 环境变量{arg}加载失败! \")\r\n        raise KeyError(f\"[ENV_VAR] 环境变量{arg}加载失败! \")\r\n\r\n    print亮绿(f\"[ENV_VAR] 成功读取环境变量{arg}\")\r\n    return r\r\n\r\n@lru_cache(maxsize=128)\r\ndef read_single_conf_with_lru_cache(arg)","markdown":"`eval(env_arg)\r\n        elif default_value is None:\r\n            assert arg == \"proxies\"\r\n            r = eval(env_arg)\r\n        else:\r\n            print亮红(f\"[ENV_VAR] 环境变量{arg}不支持通过环境变量设置! \")\r\n            raise KeyError\r\n    except:\r\n        print亮红(f\"[ENV_VAR] 环境变量{arg}加载失败! \")\r\n        raise KeyError(f\"[ENV_VAR] 环境变量{arg}加载失败! \")\r\n\r\n    print亮绿(f\"[ENV_VAR] 成功读取环境变量{arg}\")\r\n    return r\r\n\r\n@lru_cache(maxsize=128)\r\ndef read_single_conf_with_lru_cache(arg)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"toolbox.py"},"region":{"startLine":562,"startColumn":16,"endLine":562,"endColumn":29,"charOffset":19829,"charLength":13,"snippet":{"text":"eval(env_arg)","rendered":{"text":"eval(env_arg)","markdown":"`eval(env_arg)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"toolbox.py"},"region":{"startLine":536,"startColumn":83,"endLine":536,"endColumn":92,"charOffset":18712,"charLength":9,"snippet":{"text":"127.0.0.1","rendered":{"text":"127.0.0.1","markdown":"`127.0.0.1`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"toolbox.py"},"region":{"startLine":536,"startColumn":49,"endLine":536,"endColumn":58,"charOffset":18678,"charLength":9,"snippet":{"text":"127.0.0.1","rendered":{"text":"127.0.0.1","markdown":"`127.0.0.1`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"toolbox.py"},"region":{"startLine":530,"startColumn":70,"endLine":530,"endColumn":79,"charOffset":18340,"charLength":9,"snippet":{"text":"127.0.0.1","rendered":{"text":"127.0.0.1","markdown":"`127.0.0.1`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"toolbox.py"},"region":{"startLine":530,"startColumn":36,"endLine":530,"endColumn":45,"charOffset":18306,"charLength":9,"snippet":{"text":"127.0.0.1","rendered":{"text":"127.0.0.1","markdown":"`127.0.0.1`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpgd.cpp"},"region":{"startLine":3202,"startColumn":4,"endLine":3202,"endColumn":37,"charOffset":88064,"charLength":33,"snippet":{"text":"memcpy(pDst, pScan_line, dst_bpl)","rendered":{"text":"memcpy(pDst, pScan_line, dst_bpl)","markdown":"`memcpy(pDst, pScan_line, dst_bpl)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpgd.cpp"},"replacements":[{"deletedRegion":{"charOffset":88064,"charLength":33},"insertedContent":{"text":"memcpy_s(pDst, <size of pDst>,  pScan_line,  dst_bpl)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpgd.cpp"},"region":{"startLine":3151,"startColumn":2,"endLine":3151,"endColumn":54,"charOffset":86616,"charLength":52,"snippet":{"text":"memcpy(pBuf, m_pSrc_data + m_ofs, max_bytes_to_read)","rendered":{"text":"memcpy(pBuf, m_pSrc_data + m_ofs, max_bytes_to_read)","markdown":"`memcpy(pBuf, m_pSrc_data + m_ofs, max_bytes_to_read)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpgd.cpp"},"replacements":[{"deletedRegion":{"charOffset":86616,"charLength":52},"insertedContent":{"text":"memcpy_s(pBuf, <size of pBuf>,  m_pSrc_data + m_ofs,  max_bytes_to_read)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS154189","message":{"text":"Banned C function detected"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpgd.cpp"},"region":{"startLine":3093,"startColumn":12,"endLine":3093,"endColumn":17,"charOffset":85532,"charLength":5,"snippet":{"text":"fopen","rendered":{"text":"fopen","markdown":"`fopen`"}},"sourceLanguage":"cpp"}}}],"properties":{"tags":["API.DangerousAPI.BannedFunction"],"DevSkimSeverity":"Moderate","DevSkimConfidence":"Unspecified"},"level":"warning"},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpgd.cpp"},"region":{"startLine":1736,"startColumn":5,"endLine":1736,"endColumn":10,"charOffset":53958,"charLength":5,"snippet":{"text":"FIXME","rendered":{"text":"FIXME","markdown":"`FIXME`"}},"sourceLanguage":"cpp"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpgd.cpp"},"region":{"startLine":1678,"startColumn":4,"endLine":1678,"endColumn":52,"charOffset":52716,"charLength":48,"snippet":{"text":"memcpy(&p[1], &pAC[1], 63 * sizeof(jpgd_block_t)","rendered":{"text":"memcpy(&p[1], &pAC[1], 63 * sizeof(jpgd_block_t)","markdown":"`memcpy(&p[1], &pAC[1], 63 * sizeof(jpgd_block_t)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpgd.cpp"},"replacements":[{"deletedRegion":{"charOffset":52716,"charLength":48},"insertedContent":{"text":"memcpy_s(&p[1], <size of &p[1]>,  &pAC[1],  63 * sizeof(jpgd_block_t)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpgd.cpp"},"region":{"startLine":1004,"startColumn":3,"endLine":1004,"endColumn":43,"charOffset":36415,"charLength":40,"snippet":{"text":"memcpy(m_huff_val[index], huff_val, 256)","rendered":{"text":"memcpy(m_huff_val[index], huff_val, 256)","markdown":"`memcpy(m_huff_val[index], huff_val, 256)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpgd.cpp"},"replacements":[{"deletedRegion":{"charOffset":36415,"charLength":40},"insertedContent":{"text":"memcpy_s(m_huff_val[index], <size of m_huff_val[index]>,  huff_val,  256)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS121708","level":"note","message":{"text":"Problematic C function detected (memcpy)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpgd.cpp"},"region":{"startLine":1003,"startColumn":3,"endLine":1003,"endColumn":42,"charOffset":36370,"charLength":39,"snippet":{"text":"memcpy(m_huff_num[index], huff_num, 17)","rendered":{"text":"memcpy(m_huff_num[index], huff_num, 17)","markdown":"`memcpy(m_huff_num[index], huff_num, 17)`"}},"sourceLanguage":"cpp"}}}],"fixes":[{"description":{"text":"There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"},"artifactChanges":[{"artifactLocation":{"uri":"crazy_functions\\test_project\\cpp\\libJPG\\jpgd.cpp"},"replacements":[{"deletedRegion":{"charOffset":36370,"charLength":39},"insertedContent":{"text":"memcpy_s(m_huff_num[index], <size of m_huff_num[index]>,  huff_num,  17)"}}]}]}],"properties":{"tags":["API.DangerousAPI.ProblematicFunction"],"DevSkimSeverity":"BestPractice","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS176209","level":"note","message":{"text":"Suspicious comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"request_llm\\bridge_stackclaude.py"},"region":{"startLine":51,"startColumn":18,"endLine":51,"endColumn":22,"charOffset":1764,"charLength":4,"snippet":{"text":"TODO","rendered":{"text":"TODO","markdown":"`TODO`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Comment.Suspicious"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS148264","level":"error","message":{"text":"Do not use weak/non-cryptographic random number generators"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"multi_language.py"},"region":{"startLine":253,"startColumn":11,"endLine":253,"endColumn":19,"charOffset":10517,"charLength":8,"snippet":{"text":"shuffle(","rendered":{"text":"shuffle(","markdown":"`shuffle(`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Cryptography.PRNG.Weak"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"multi_language.py"},"region":{"startLine":232,"startColumn":35,"endLine":232,"endColumn":52,"charOffset":9615,"charLength":17,"snippet":{"text":"eval(result[i-1])","rendered":{"text":"eval(result[i-1])","markdown":"`eval(result[i-1])`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"multi_language.py"},"region":{"startLine":218,"startColumn":35,"endLine":220,"endColumn":64,"charOffset":8778,"charLength":134,"snippet":{"text":"eval(result[i-1])\r\n                res_after_trans = eval(result[i])\r\n                if len(res_before_trans) != len(res_after_trans)","rendered":{"text":"eval(result[i-1])\r\n                res_after_trans = eval(result[i])\r\n                if len(res_before_trans) != len(res_after_trans)","markdown":"`eval(result[i-1])\r\n                res_after_trans = eval(result[i])\r\n                if len(res_before_trans) != len(res_after_trans)`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS425000","level":"note","message":{"text":"Do not deserialize untrusted data."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"multi_language.py"},"region":{"startLine":113,"startColumn":24,"endLine":113,"endColumn":35,"charOffset":4457,"charLength":11,"snippet":{"text":"pickle.load","rendered":{"text":"pickle.load","markdown":"`pickle.load`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Deserialization"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS172411","level":"note","message":{"text":"Review setTimeout for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\jquery-ui.min.js"},"region":{"startLine":13,"startColumn":20792,"endLine":13,"endColumn":20813,"charOffset":247320,"charLength":21,"snippet":{"text":"setTimeout(function()","rendered":{"text":"setTimeout(function()","markdown":"`setTimeout(function()`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS172411","level":"note","message":{"text":"Review setTimeout for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\jquery-ui.min.js"},"region":{"startLine":13,"startColumn":20705,"endLine":13,"endColumn":20736,"charOffset":247233,"charLength":31,"snippet":{"text":"setTimeout(function(){a.html(t)","rendered":{"text":"setTimeout(function(){a.html(t)","markdown":"`setTimeout(function(){a.html(t)`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS172411","level":"note","message":{"text":"Review setTimeout for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\jquery-ui.min.js"},"region":{"startLine":9,"startColumn":23043,"endLine":9,"endColumn":23064,"charOffset":120860,"charLength":21,"snippet":{"text":"setTimeout(function()","rendered":{"text":"setTimeout(function()","markdown":"`setTimeout(function()`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS172411","level":"note","message":{"text":"Review setTimeout for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\jquery-ui.min.js"},"region":{"startLine":9,"startColumn":712,"endLine":9,"endColumn":836,"charOffset":98529,"charLength":124,"snippet":{"text":"setTimeout(function(){i===e.yearshtml&&e.yearshtml&&e.dpDiv.find(\"select.ui-datepicker-year:first\").replaceWith(e.yearshtml)","rendered":{"text":"setTimeout(function(){i===e.yearshtml&&e.yearshtml&&e.dpDiv.find(\"select.ui-datepicker-year:first\").replaceWith(e.yearshtml)","markdown":"`setTimeout(function(){i===e.yearshtml&&e.yearshtml&&e.dpDiv.find(\"select.ui-datepicker-year:first\").replaceWith(e.yearshtml)`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS172411","level":"note","message":{"text":"Review setTimeout for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\jquery-ui.min.js"},"region":{"startLine":7,"startColumn":11041,"endLine":7,"endColumn":11102,"charOffset":44184,"charLength":61,"snippet":{"text":"setTimeout(function(){var i=e.data(\"ui-form-reset-instances\")","rendered":{"text":"setTimeout(function(){var i=e.data(\"ui-form-reset-instances\")","markdown":"`setTimeout(function(){var i=e.data(\"ui-form-reset-instances\")`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"main.py"},"region":{"startLine":194,"startColumn":51,"endLine":194,"endColumn":60,"charOffset":12259,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"main.py"},"region":{"startLine":193,"startColumn":59,"endLine":193,"endColumn":68,"charOffset":12174,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"main.py"},"region":{"startLine":189,"startColumn":33,"endLine":189,"endColumn":42,"charOffset":11971,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"main.py"},"region":{"startLine":188,"startColumn":33,"endLine":188,"endColumn":42,"charOffset":11918,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":71,"startColumn":96,"endLine":71,"endColumn":105,"charOffset":4409,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"yaml"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":71,"startColumn":58,"endLine":71,"endColumn":67,"charOffset":4371,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"yaml"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":41,"startColumn":96,"endLine":41,"endColumn":105,"charOffset":2505,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"yaml"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":41,"startColumn":58,"endLine":41,"endColumn":67,"charOffset":2467,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"yaml"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":14,"startColumn":96,"endLine":14,"endColumn":105,"charOffset":845,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"yaml"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docker-compose.yml"},"region":{"startLine":14,"startColumn":58,"endLine":14,"endColumn":67,"charOffset":807,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"yaml"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS189424","level":"note","message":{"text":"Review eval for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"request_llm\\bridge_chatglm.py"},"region":{"startLine":49,"startColumn":60,"endLine":61,"endColumn":38,"charOffset":1887,"charLength":404,"snippet":{"text":"eval()\r\n                    break\r\n                else:\r\n                    break\r\n            except:\r\n                retry += 1\r\n                if retry > 3: \r\n                    self.child.send('[Local Message] Call ChatGLM fail 不能正常加载ChatGLM的参数。')\r\n                    raise RuntimeError(\"不能正常加载ChatGLM的参数！\")\r\n\r\n        while True:\r\n            # 进入任务等待状态\r\n            kwargs = self.child.recv()","rendered":{"text":"eval()\r\n                    break\r\n                else:\r\n                    break\r\n            except:\r\n                retry += 1\r\n                if retry > 3: \r\n                    self.child.send('[Local Message] Call ChatGLM fail 不能正常加载ChatGLM的参数。')\r\n                    raise RuntimeError(\"不能正常加载ChatGLM的参数！\")\r\n\r\n        while True:\r\n            # 进入任务等待状态\r\n            kwargs = self.child.recv()","markdown":"`eval()\r\n                    break\r\n                else:\r\n                    break\r\n            except:\r\n                retry += 1\r\n                if retry > 3: \r\n                    self.child.send('[Local Message] Call ChatGLM fail 不能正常加载ChatGLM的参数。')\r\n                    raise RuntimeError(\"不能正常加载ChatGLM的参数！\")\r\n\r\n        while True:\r\n            # 进入任务等待状态\r\n            kwargs = self.child.recv()`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Python.DangerousFunctionCall","JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall","PHP.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS172411","level":"note","message":{"text":"Review setTimeout for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\jquery.min.js"},"region":{"startLine":4,"startColumn":1616,"endLine":4,"endColumn":1649,"charOffset":65855,"charLength":33,"snippet":{"text":"setTimeout(function(){$b=void 0})","rendered":{"text":"setTimeout(function(){$b=void 0})","markdown":"`setTimeout(function(){$b=void 0})`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS172411","level":"note","message":{"text":"Review setTimeout for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\jquery.min.js"},"region":{"startLine":2,"startColumn":30343,"endLine":2,"endColumn":30390,"charOffset":30428,"charLength":47,"snippet":{"text":"setTimeout(m.ready);else if(y.addEventListener)","rendered":{"text":"setTimeout(m.ready);else if(y.addEventListener)","markdown":"`setTimeout(m.ready);else if(y.addEventListener)`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS172411","level":"note","message":{"text":"Review setTimeout for untrusted data"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\waifu_plugin\\jquery.min.js"},"region":{"startLine":2,"startColumn":29829,"endLine":2,"endColumn":29848,"charOffset":29914,"charLength":19,"snippet":{"text":"setTimeout(m.ready)","rendered":{"text":"setTimeout(m.ready)","markdown":"`setTimeout(m.ready)`"}},"sourceLanguage":"javascript"}}}],"properties":{"tags":["JavaScript.DangerousFunctionCall","TypeScript.DangerousFunctionCall"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"config.py"},"region":{"startLine":17,"startColumn":28,"endLine":17,"endColumn":37,"charOffset":874,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\translate_english.json"},"region":{"startLine":132,"startColumn":31,"endLine":132,"endColumn":40,"charOffset":6387,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"json"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\translate_english.json"},"region":{"startLine":131,"startColumn":89,"endLine":131,"endColumn":98,"charOffset":6320,"charLength":9,"snippet":{"text":"127.0.0.1","rendered":{"text":"127.0.0.1","markdown":"`127.0.0.1`"}},"sourceLanguage":"json"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"config.py"},"region":{"startLine":16,"startColumn":28,"endLine":16,"endColumn":37,"charOffset":785,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"python"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS162092","level":"note","message":{"text":"Do not leave debug code in production"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"docs\\translate_english.json"},"region":{"startLine":131,"startColumn":76,"endLine":131,"endColumn":85,"charOffset":6307,"charLength":9,"snippet":{"text":"localhost","rendered":{"text":"localhost","markdown":"`localhost`"}},"sourceLanguage":"json"}}}],"properties":{"tags":["Hygiene.Network.AccessingLocalhost"],"DevSkimSeverity":"ManualReview","DevSkimConfidence":"Unspecified"}}],"columnKind":"utf16CodeUnits"}]}
