/tmp/mlflow/dev/generate_requirements.py:108:29: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/dev/update_ml_package_versions.py:103:26: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/dev/update_ml_package_versions.py:156:19: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/examples/hyperparam/search_hyperopt.py:116:16: DUO104 use of "eval" is insecure
/tmp/mlflow/examples/hyperparam/search_random.py:85:16: DUO104 use of "eval" is insecure
/tmp/mlflow/examples/quickstart/mlflow_tracking.py:2:1: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/examples/remote_store/remote_server.py:25:30: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/examples/sktime/flavor.py:433:20: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/examples/spacy/train.py:38:9: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/examples/spark_udf/spark_udf_datetime.py:29:44: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/_doctor.py:101:17: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/_doctor.py:111:13: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/models/container/__init__.py:228:13: DUO116 use of "shell=True" is insecure in "subprocess" module
/tmp/mlflow/mlflow/models/evaluation/artifacts.py:92:29: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/mlflow/models/evaluation/base.py:496:19: DUO130 insecure use of "hashlib" module
/tmp/mlflow/mlflow/models/wheeled_model.py:207:13: DUO116 use of "shell=True" is insecure in "subprocess" module
/tmp/mlflow/mlflow/pmdarima.py:325:17: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/mlflow/recipes/cards/__init__.py:181:17: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/recipes/steps/train.py:991:29: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/sagemaker/__init__.py:156:5: DUO106 insecure use of "os" module
/tmp/mlflow/mlflow/sklearn/__init__.py:463:20: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/mlflow/store/tracking/sqlalchemy_store.py:1110:39: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/tracking/client.py:1160:21: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/utils/conda.py:76:30: DUO130 insecure use of "hashlib" module
/tmp/mlflow/mlflow/utils/conda.py:81:29: DUO130 insecure use of "hashlib" module
/tmp/mlflow/mlflow/utils/environment.py:542:24: DUO130 insecure use of "hashlib" module
/tmp/mlflow/mlflow/utils/file_utils.py:155:13: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/utils/file_utils.py:217:20: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/utils/file_utils.py:268:20: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/utils/file_utils.py:272:30: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/utils/name_utils.py:23:43: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/utils/name_utils.py:30:17: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/utils/name_utils.py:31:12: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/utils/name_utils.py:32:11: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/entities/conftest.py:36:34: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/generate_ui_test_data.py:11:1: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/generate_ui_test_data.py:26:20: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/generate_ui_test_data.py:26:56: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/generate_ui_test_data.py:58:24: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/generate_ui_test_data.py:61:21: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/gluon/test_gluon_autolog.py:34:34: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/helper_functions.py:50:12: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/lightgbm/test_lightgbm_autolog.py:629:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/lightgbm/test_lightgbm_autolog.py:679:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/models/test_evaluation.py:585:19: DUO130 insecure use of "hashlib" module
/tmp/mlflow/tests/models/test_utils.py:29:12: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/models/test_wheeled_model.py:50:12: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/projects/test_projects_cli.py:92:39: DUO130 insecure use of "hashlib" module
/tmp/mlflow/tests/pyfunc/test_model_export_with_loader_module_and_data_path.py:38:16: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/tests/pyfunc/test_scoring_server.py:436:5: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/pyfunc/test_spark.py:592:44: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/pyfunc/test_spark.py:624:53: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/recipes/helper_functions.py:28:20: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/recipes/test_train_step.py:84:9: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/spacy/test_spacy_model_export.py:437:9: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/spark/autologging/ml/test_pyspark_ml_autologging.py:951:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/store/_unity_catalog/model_registry/test_unity_catalog_rest_store.py:125:9: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/store/_unity_catalog/model_registry/test_unity_catalog_rest_store.py:151:9: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/store/tracking/test_file_store.py:375:27: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tensorflow/test_keras_model_export.py:65:5: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tensorflow/test_keras_model_export.py:711:53: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/tests/tensorflow/test_load_saved_tensorflow_estimator.py:68:31: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/tests/tensorflow/test_tensorflow2_autolog.py:1032:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:206:41: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:215:41: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:224:41: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:232:41: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:240:41: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:242:21: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:255:41: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:257:21: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:271:41: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:274:21: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:284:41: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:307:45: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:323:45: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:339:41: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:357:41: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:977:33: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:998:34: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/test_tracking.py:48:74: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/test_tracking.py:634:17: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/utils/test_environment.py:301:26: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/xgboost/test_xgboost_autolog.py:540:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/xgboost/test_xgboost_autolog.py:601:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
