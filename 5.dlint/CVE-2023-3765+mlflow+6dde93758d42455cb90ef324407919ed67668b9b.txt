/tmp/mlflow/dev/generate_requirements.py:110:29: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/dev/update_ml_package_versions.py:103:26: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/dev/update_ml_package_versions.py:156:19: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/examples/databricks/artifact_perf.py:28:21: DUO130 insecure use of "hashlib" module
/tmp/mlflow/examples/hyperparam/search_hyperopt.py:116:16: DUO104 use of "eval" is insecure
/tmp/mlflow/examples/hyperparam/search_random.py:85:16: DUO104 use of "eval" is insecure
/tmp/mlflow/examples/quickstart/mlflow_tracking.py:2:1: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/examples/remote_store/remote_server.py:25:30: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/examples/sktime/flavor.py:433:20: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/examples/spacy/train.py:38:9: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/examples/spark_udf/spark_udf_datetime.py:29:44: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/_doctor.py:101:17: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/_doctor.py:111:13: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/data/digest_utils.py:161:11: DUO130 insecure use of "hashlib" module
/tmp/mlflow/mlflow/models/container/__init__.py:224:13: DUO116 use of "shell=True" is insecure in "subprocess" module
/tmp/mlflow/mlflow/models/evaluation/artifacts.py:92:29: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/mlflow/models/evaluation/base.py:547:19: DUO130 insecure use of "hashlib" module
/tmp/mlflow/mlflow/models/wheeled_model.py:222:13: DUO116 use of "shell=True" is insecure in "subprocess" module
/tmp/mlflow/mlflow/pmdarima.py:330:17: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/mlflow/recipes/cards/__init__.py:182:17: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/recipes/cards/__init__.py:222:20: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/mlflow/recipes/steps/train.py:987:29: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/sagemaker/__init__.py:158:5: DUO106 insecure use of "os" module
/tmp/mlflow/mlflow/sklearn/__init__.py:446:20: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/mlflow/store/tracking/file_store.py:1135:15: DUO130 insecure use of "hashlib" module
/tmp/mlflow/mlflow/store/tracking/file_store.py:1141:15: DUO130 insecure use of "hashlib" module
/tmp/mlflow/mlflow/store/tracking/sqlalchemy_store.py:1194:39: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/tracking/client.py:1228:21: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/utils/_spark_utils.py:148:9: DUO112 use of "extract|extractall" is insecure
/tmp/mlflow/mlflow/utils/conda.py:74:30: DUO130 insecure use of "hashlib" module
/tmp/mlflow/mlflow/utils/conda.py:79:29: DUO130 insecure use of "hashlib" module
/tmp/mlflow/mlflow/utils/environment.py:561:24: DUO130 insecure use of "hashlib" module
/tmp/mlflow/mlflow/utils/file_utils.py:168:13: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/utils/file_utils.py:230:20: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/utils/file_utils.py:279:20: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/utils/file_utils.py:283:30: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/utils/name_utils.py:23:43: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/utils/name_utils.py:30:17: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/utils/name_utils.py:31:12: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/utils/name_utils.py:32:11: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/entities/conftest.py:37:34: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/evaluate/test_evaluation.py:687:19: DUO130 insecure use of "hashlib" module
/tmp/mlflow/tests/generate_ui_test_data.py:11:1: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/generate_ui_test_data.py:26:20: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/generate_ui_test_data.py:26:56: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/generate_ui_test_data.py:58:24: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/generate_ui_test_data.py:61:21: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/gluon/test_gluon_autolog.py:34:34: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/helper_functions.py:53:12: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/lightgbm/test_lightgbm_autolog.py:639:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/lightgbm/test_lightgbm_autolog.py:690:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/models/test_utils.py:29:12: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/models/test_wheeled_model.py:50:12: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/projects/test_projects_cli.py:92:39: DUO130 insecure use of "hashlib" module
/tmp/mlflow/tests/pyfunc/test_model_export_with_loader_module_and_data_path.py:27:16: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/tests/pyfunc/test_scoring_server.py:436:5: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/pyfunc/test_spark.py:853:44: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/pyfunc/test_spark.py:885:37: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/recipes/helper_functions.py:23:20: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/recipes/test_train_step.py:77:9: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/resources/data/dataset.py:32:20: DUO130 insecure use of "hashlib" module
/tmp/mlflow/tests/spacy/test_spacy_model_export.py:424:9: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/spark/autologging/ml/test_pyspark_ml_autologging.py:1005:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/store/_unity_catalog/model_registry/test_unity_catalog_rest_store.py:177:9: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/store/_unity_catalog/model_registry/test_unity_catalog_rest_store.py:231:9: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/store/_unity_catalog/model_registry/test_unity_catalog_rest_store.py:266:9: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/store/tracking/test_file_store.py:382:27: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/store/tracking/test_file_store.py:2498:19: DUO130 insecure use of "hashlib" module
/tmp/mlflow/tests/tensorflow/test_keras_model_export.py:66:5: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tensorflow/test_keras_model_export.py:716:53: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/tests/tensorflow/test_load_saved_tensorflow_estimator.py:68:31: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/tests/tensorflow/test_tensorflow2_autolog.py:1184:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:191:37: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:199:37: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:207:37: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:214:37: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:221:37: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:223:17: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:237:37: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:239:17: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:253:37: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:256:17: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:266:37: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:288:41: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:304:41: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:319:37: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:336:37: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:1018:33: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:1039:34: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/test_tracking.py:47:74: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/test_tracking.py:633:17: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/transformers/test_transformers_autolog.py:54:5: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/transformers/test_transformers_autolog.py:99:5: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/transformers/test_transformers_autolog.py:176:5: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/utils/test_environment.py:299:31: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/xgboost/test_xgboost_autolog.py:541:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/xgboost/test_xgboost_autolog.py:604:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
