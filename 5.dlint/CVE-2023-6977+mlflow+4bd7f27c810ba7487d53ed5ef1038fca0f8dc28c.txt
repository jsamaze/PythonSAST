/tmp/mlflow/dev/generate_requirements.py:110:29: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/dev/update_ml_package_versions.py:104:26: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/dev/update_ml_package_versions.py:157:19: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/examples/evaluation/evaluate_with_custom_code_metrics.py:16:9: DUO110 use of "compile" is insecure
/tmp/mlflow/examples/hyperparam/search_hyperopt.py:115:16: DUO104 use of "eval" is insecure
/tmp/mlflow/examples/hyperparam/search_random.py:84:16: DUO104 use of "eval" is insecure
/tmp/mlflow/examples/quickstart/mlflow_tracking.py:2:1: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/examples/remote_store/remote_server.py:24:30: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/examples/sktime/flavor.py:435:20: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/examples/spacy/train.py:38:9: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/examples/spark_udf/spark_udf_datetime.py:30:44: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/_doctor.py:103:17: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/_doctor.py:120:13: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/langchain/retriever_chain.py:123:26: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/langchain/runnables.py:225:17: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/langchain/runnables.py:290:9: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/langchain/runnables.py:338:9: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/models/container/__init__.py:239:13: DUO116 use of "shell=True" is insecure in "subprocess" module
/tmp/mlflow/mlflow/models/evaluation/artifacts.py:92:29: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/mlflow/models/wheeled_model.py:221:13: DUO116 use of "shell=True" is insecure in "subprocess" module
/tmp/mlflow/mlflow/pmdarima/__init__.py:509:17: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/mlflow/recipes/cards/__init__.py:187:17: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/recipes/cards/__init__.py:227:20: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/mlflow/recipes/steps/train.py:986:29: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/sagemaker/__init__.py:162:5: DUO106 insecure use of "os" module
/tmp/mlflow/mlflow/sklearn/__init__.py:450:20: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/mlflow/store/tracking/sqlalchemy_store.py:1207:39: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/tracking/client.py:1286:21: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/utils/_spark_utils.py:149:9: DUO112 use of "extract|extractall" is insecure
/tmp/mlflow/mlflow/utils/file_utils.py:241:13: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/utils/file_utils.py:306:20: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/utils/file_utils.py:355:20: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/utils/file_utils.py:359:30: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/mlflow/utils/name_utils.py:23:43: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/utils/name_utils.py:30:17: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/utils/name_utils.py:31:12: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/utils/name_utils.py:32:11: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/mlflow/utils/request_utils.py:45:30: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/entities/conftest.py:48:34: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/generate_ui_test_data.py:9:1: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/generate_ui_test_data.py:27:20: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/generate_ui_test_data.py:27:56: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/generate_ui_test_data.py:59:24: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/generate_ui_test_data.py:62:21: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/helper_functions.py:50:12: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/integration/async_logging/test_async_logging_integration.py:20:34: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/tests/lightgbm/test_lightgbm_autolog.py:649:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/lightgbm/test_lightgbm_autolog.py:700:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/models/test_utils.py:29:12: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/models/test_wheeled_model.py:53:12: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/pyfunc/test_model_export_with_class_and_artifacts.py:1477:5: DUO116 use of "shell=True" is insecure in "subprocess" module
/tmp/mlflow/tests/pyfunc/test_model_export_with_loader_module_and_data_path.py:28:16: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/tests/pyfunc/test_scoring_server.py:437:5: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/pyfunc/test_spark.py:863:44: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/pyfunc/test_spark.py:895:37: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/recipes/helper_functions.py:23:20: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/recipes/test_train_step.py:74:9: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/spacy/test_spacy_model_export.py:424:9: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/spark/autologging/ml/test_pyspark_ml_autologging.py:1013:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/store/_unity_catalog/model_registry/test_unity_catalog_rest_store.py:186:9: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/store/_unity_catalog/model_registry/test_unity_catalog_rest_store.py:242:9: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/store/_unity_catalog/model_registry/test_unity_catalog_rest_store.py:277:9: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/store/tracking/test_file_store.py:381:27: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tensorflow/test_keras_model_export.py:64:5: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tensorflow/test_keras_model_export.py:721:53: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/tests/tensorflow/test_tensorflow2_autolog.py:1172:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:176:33: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:184:33: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:192:33: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:199:33: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:206:33: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:208:17: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:222:33: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:224:17: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:238:33: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:241:17: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:251:33: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:273:37: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:289:37: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:304:33: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:321:33: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:1004:33: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/fluent/test_fluent.py:1025:34: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/test_tracking.py:47:70: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/tracking/test_tracking.py:633:17: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/transformers/test_transformers_autolog.py:54:5: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/transformers/test_transformers_autolog.py:99:5: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/transformers/test_transformers_autolog.py:176:5: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/utils/test_async_logging_queue.py:194:26: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/tests/utils/test_async_logging_queue.py:216:26: DUO103 insecure use of "pickle" or "cPickle"
/tmp/mlflow/tests/utils/test_async_logging_queue.py:262:20: DUO102 insecure use of "random" module, prefer "random.SystemRandom"
/tmp/mlflow/tests/utils/test_environment.py:301:31: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/xgboost/test_xgboost_autolog.py:550:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
/tmp/mlflow/tests/xgboost/test_xgboost_autolog.py:613:16: DUO109 insecure use of "yaml" parsing function, prefer "safe_*" equivalent
