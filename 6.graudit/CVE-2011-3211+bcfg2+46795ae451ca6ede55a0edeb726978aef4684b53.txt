===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/bcfg2/src/lib/Server/Plugins/Metadata.py[m[K[36m[K-[m[K[32m[K547[m[K[36m[K-[m[K        try:
[35m[K/tmp/bcfg2/src/lib/Server/Plugins/Metadata.py[m[K[36m[K:[m[K[32m[K548[m[K[36m[K:[m[K            cname = socket.gethostby[01;31m[Kaddr([m[Kaddress)[0].lower()
[35m[K/tmp/bcfg2/src/lib/Server/Plugins/Metadata.py[m[K[36m[K-[m[K[32m[K549[m[K[36m[K-[m[K            if cname in self.aliases:
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/src/lib/Server/Plugins/SSHbase.py[m[K[36m[K-[m[K[32m[K185[m[K[36m[K-[m[K            try:
[35m[K/tmp/bcfg2/src/lib/Server/Plugins/SSHbase.py[m[K[36m[K:[m[K[32m[K186[m[K[36m[K:[m[K                rvlookup = socket.gethostby[01;31m[Kaddr([m[Kcip)
[35m[K/tmp/bcfg2/src/lib/Server/Plugins/SSHbase.py[m[K[36m[K-[m[K[32m[K187[m[K[36m[K-[m[K                if rvlookup[0]:
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K889[m[K[36m[K-[m[K            and request.POST['mac_addr_new']):
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K:[m[K[32m[K890[m[K[36m[K:[m[K            failures.append('mac_[01;31m[Kaddr ([m[K#1)')
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K891[m[K[36m[K-[m[K        if ((request.POST['mac_addr_new'] or request.POST['ip_addr_new']) and
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K899[m[K[36m[K-[m[K            and request.POST['mac_addr_new2']):
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K:[m[K[32m[K900[m[K[36m[K:[m[K            failures.append('mac_[01;31m[Kaddr ([m[K#2)')
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K901[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K903[m[K[36m[K-[m[K            and request.POST['ip_addr_new']):
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K:[m[K[32m[K904[m[K[36m[K:[m[K            failures.append('ip_[01;31m[Kaddr ([m[K#1)')
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K905[m[K[36m[K-[m[K        if (not regex. ipaddr.match(request.POST['ip_addr_new2'])
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K906[m[K[36m[K-[m[K            and request.POST['ip_addr_new2']):
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K:[m[K[32m[K907[m[K[36m[K:[m[K            failures.append('ip_[01;31m[Kaddr ([m[K#2)')
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K908[m[K[36m[K-[m[K
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K:[m[K[32m[K909[m[K[36m[K:[m[K        [failures.append('ip_[01;31m[Kaddr ([m[K#1)') for number in
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K910[m[K[36m[K-[m[K         request.POST['ip_addr_new'].split(".")
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K911[m[K[36m[K-[m[K         if number.isdigit() and int(number) > 255
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K:[m[K[32m[K912[m[K[36m[K:[m[K         and 'ip_[01;31m[Kaddr ([m[K#1)' not in failures]
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K:[m[K[32m[K913[m[K[36m[K:[m[K        [failures.append('ip_[01;31m[Kaddr ([m[K#2)') for number in
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K914[m[K[36m[K-[m[K         request.POST['ip_addr_new2'].split(".")
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K915[m[K[36m[K-[m[K         if number.isdigit() and int(number) > 255
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K:[m[K[32m[K916[m[K[36m[K:[m[K         and 'ip_[01;31m[Kaddr ([m[K#2)' not in failures]
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K917[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K922[m[K[36m[K-[m[K                and request.POST['mac_addr%d' % interface.id]):
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K:[m[K[32m[K923[m[K[36m[K:[m[K                failures.append('mac_[01;31m[Kaddr ([m[K%s)' % request.POST['mac_addr%d' % interface.id])
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K924[m[K[36m[K-[m[K            for ip in interface.ip_set.all():
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K925[m[K[36m[K-[m[K                if not regex.ipaddr.match(request.POST['ip_addr%d' % ip.id]):
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K:[m[K[32m[K926[m[K[36m[K:[m[K                    failures.append('ip_[01;31m[Kaddr ([m[K%s)' % request.POST['ip_addr%d' % ip.id])
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K:[m[K[32m[K927[m[K[36m[K:[m[K                [failures.append('ip_[01;31m[Kaddr ([m[K%s)' % request.POST['ip_addr%d' % ip.id])
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K928[m[K[36m[K-[m[K                 for number in request.POST['ip_addr%d' % ip.id].split(".")
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K929[m[K[36m[K-[m[K                 if (number.isdigit() and int(number) > 255 and
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K:[m[K[32m[K930[m[K[36m[K:[m[K                     'ip_[01;31m[Kaddr ([m[K%s)' % request.POST['ip_addr%d' % ip.id] not in failures)]
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K931[m[K[36m[K-[m[K            if (request.POST['%dip_addr' % interface.id]
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K932[m[K[36m[K-[m[K                and not regex.ipaddr.match(request.POST['%dip_addr' % interface.id])):
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K:[m[K[32m[K933[m[K[36m[K:[m[K                failures.append('ip_[01;31m[Kaddr ([m[K%s)' % request.POST['%dip_addr' % interface.id])
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K934[m[K[36m[K-[m[K        if (request.POST['mac_addr_new']
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K935[m[K[36m[K-[m[K            and not regex.macaddr.match(request.POST['mac_addr_new'])):
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K:[m[K[32m[K936[m[K[36m[K:[m[K            failures.append('mac_[01;31m[Kaddr ([m[K%s)' % request.POST['mac_addr_new'])
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K937[m[K[36m[K-[m[K        if (request.POST['ip_addr_new']
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K938[m[K[36m[K-[m[K            and not regex.ipaddr.match(request.POST['ip_addr_new'])):
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K:[m[K[32m[K939[m[K[36m[K:[m[K            failures.append('ip_[01;31m[Kaddr ([m[K%s)' % request.POST['ip_addr_new'])
[35m[K/tmp/bcfg2/src/lib/Server/Hostbase/hostbase/views.py[m[K[36m[K-[m[K[32m[K940[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/src/lib/Proxy.py[m[K[36m[K-[m[K[32m[K230[m[K[36m[K-[m[K            try:
[35m[K/tmp/bcfg2/src/lib/Proxy.py[m[K[36m[K:[m[K[32m[K231[m[K[36m[K:[m[K                hostname = socket.gethostby[01;31m[Kaddr([m[Kself.host)[0]
[35m[K/tmp/bcfg2/src/lib/Proxy.py[m[K[36m[K-[m[K[32m[K232[m[K[36m[K-[m[K            except:
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/doc/unsorted/gentoo.txt[m[K[36m[K-[m[K[32m[K100[m[K[36m[K-[m[K    for pkg in `equery -q l` ; do
[35m[K/tmp/bcfg2/doc/unsorted/gentoo.txt[m[K[36m[K:[m[K[32m[K101[m[K[36m[K:[m[K       title=[01;31m[K`echo $pkg | sed -e 's/\(.*\)-\([0-9].*\)/\1/'`[m[K
[35m[K/tmp/bcfg2/doc/unsorted/gentoo.txt[m[K[36m[K:[m[K[32m[K102[m[K[36m[K:[m[K       version=[01;31m[K`echo $pkg | sed -e 's/\(.*\)-\([0-9].*\)/\2/'`[m[K
[35m[K/tmp/bcfg2/doc/unsorted/gentoo.txt[m[K[36m[K-[m[K[32m[K103[m[K[36m[K-[m[K       echo "    <Package name='${title}' version='${version}'/>"
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/doc/server/plugins/generators/tgenshi/bcfg2-cron.txt[m[K[36m[K-[m[K[32m[K24[m[K[36m[K-[m[KYou can apply the same concept to the other time fields by adding another
[35m[K/tmp/bcfg2/doc/server/plugins/generators/tgenshi/bcfg2-cron.txt[m[K[36m[K:[m[K[32m[K25[m[K[36m[K:[m[K`[01;31m[K`${random.randint()}`[m[K` call.
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/doc/server/plugins/generators/tgenshi/clientsxml.txt[m[K[36m[K-[m[K[32m[K22[m[K[36m[K-[m[K   thing to note is how the `name` variable is handled - when
[35m[K/tmp/bcfg2/doc/server/plugins/generators/tgenshi/clientsxml.txt[m[K[36m[K:[m[K[32m[K23[m[K[36m[K:[m[K   just referring to it the standard [01;31m[K`${name}`[m[K syntax is used, but
[35m[K/tmp/bcfg2/doc/server/plugins/generators/tgenshi/clientsxml.txt[m[K[36m[K-[m[K[32m[K24[m[K[36m[K-[m[K   when it is used as a variable in the expression to get the password,
[35m[K/tmp/bcfg2/doc/server/plugins/generators/tgenshi/clientsxml.txt[m[K[36m[K:[m[K[32m[K25[m[K[36m[K:[m[K   [01;31m[K`password="${metadata.Properties['passwords.xml'].find('password').find('bcfg2-client').find(name).text}"`[m[K,
[35m[K/tmp/bcfg2/doc/server/plugins/generators/tgenshi/clientsxml.txt[m[K[36m[K-[m[K[32m[K26[m[K[36m[K-[m[K   it is just referred to as `name`.
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/doc/server/plugins/probes/group.txt[m[K[36m[K-[m[K[32m[K33[m[K[36m[K-[m[K                            "lucid")
[35m[K/tmp/bcfg2/doc/server/plugins/probes/group.txt[m[K[36m[K:[m[K[32m[K34[m[K[36m[K:[m[K                            OUTPUT=$OUTPUT'\n'[01;31m[K`echo group:$DISTRIB_CODENAME`[m[K
[35m[K/tmp/bcfg2/doc/server/plugins/probes/group.txt[m[K[36m[K:[m[K[32m[K35[m[K[36m[K:[m[K                            OUTPUT=$OUTPUT'\n'[01;31m[K`echo group:$DEBIAN_VERSION`[m[K
[35m[K/tmp/bcfg2/doc/server/plugins/probes/group.txt[m[K[36m[K-[m[K[32m[K36[m[K[36m[K-[m[K                            ;;
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/doc/server/plugins/probes/group.txt[m[K[36m[K-[m[K[32m[K57[m[K[36m[K-[m[K                    "centos" | "fedora")
[35m[K/tmp/bcfg2/doc/server/plugins/probes/group.txt[m[K[36m[K:[m[K[32m[K58[m[K[36m[K:[m[K                    OUTPUT=$OUTPUT'\n'[01;31m[K`echo group:$OS_GROUP`[m[K
[35m[K/tmp/bcfg2/doc/server/plugins/probes/group.txt[m[K[36m[K:[m[K[32m[K59[m[K[36m[K:[m[K                    OUTPUT=$OUTPUT'\n'[01;31m[K`echo group:$OS_GROUP$REDHAT_VERSION`[m[K
[35m[K/tmp/bcfg2/doc/server/plugins/probes/group.txt[m[K[36m[K-[m[K[32m[K60[m[K[36m[K-[m[K                    ;;
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/doc/server/plugins/probes/group.txt[m[K[36m[K-[m[K[32m[K83[m[K[36m[K-[m[K            if [ "$OS_GROUP" == 'centos' ]; then
[35m[K/tmp/bcfg2/doc/server/plugins/probes/group.txt[m[K[36m[K:[m[K[32m[K84[m[K[36m[K:[m[K                    OUTPUT=$OUTPUT'\n'[01;31m[K`echo group:$ARCH`[m[K
[35m[K/tmp/bcfg2/doc/server/plugins/probes/group.txt[m[K[36m[K-[m[K[32m[K85[m[K[36m[K-[m[K            else
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/doc/server/plugins/probes/index.txt[m[K[36m[K-[m[K[32m[K81[m[K[36m[K-[m[KAny Probe script you run will store its output in
[35m[K/tmp/bcfg2/doc/server/plugins/probes/index.txt[m[K[36m[K:[m[K[32m[K82[m[K[36m[K:[m[K`[01;31m[K`$self.metadata.Probes["scriptname"]`[m[K`, so we get to our `scratchlocal`
[35m[K/tmp/bcfg2/doc/server/plugins/probes/index.txt[m[K[36m[K-[m[K[32m[K83[m[K[36m[K-[m[Kscript's output as seen above.  Note that we had to wrap the output in an
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/tools/export.sh[m[K[36m[K-[m[K[32m[K7[m[K[36m[K-[m[Ktarname="/tmp/${pkgname}-${version}.tar.gz"
[35m[K/tmp/bcfg2/tools/export.sh[m[K[36m[K:[m[K[32m[K8[m[K[36m[K:[m[Kurl=[01;31m[K`svn info | grep URL | awk '{print $2}'`[m[K
[35m[K/tmp/bcfg2/tools/export.sh[m[K[36m[K-[m[K[32m[K9[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/tools/export.sh[m[K[36m[K-[m[K[32m[K15[m[K[36m[K-[m[K# update the version
[35m[K/tmp/bcfg2/tools/export.sh[m[K[36m[K:[m[K[32m[K16[m[K[36m[K:[m[Ktmpbase=[01;31m[K`basename $0`[m[K
[35m[K/tmp/bcfg2/tools/export.sh[m[K[36m[K:[m[K[32m[K17[m[K[36m[K:[m[Kdeblogtmp=[01;31m[K`mktemp /tmp/${tmpbase}.XXXXXX`[m[K
[35m[K/tmp/bcfg2/tools/export.sh[m[K[36m[K:[m[K[32m[K18[m[K[36m[K:[m[Kmajorver=[01;31m[K`/usr/bin/python -c "print '${version}'[:5]"`[m[K
[35m[K/tmp/bcfg2/tools/export.sh[m[K[36m[K:[m[K[32m[K19[m[K[36m[K:[m[Kminorver=[01;31m[K`/usr/bin/python -c "print '${version}'[5:]"`[m[K
[35m[K/tmp/bcfg2/tools/export.sh[m[K[36m[K-[m[K[32m[K20[m[K[36m[K-[m[Kprintf "name: "
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/tools/export.sh[m[K[36m[K-[m[K[32m[K41[m[K[36m[K-[m[K# tag the release
[35m[K/tmp/bcfg2/tools/export.sh[m[K[36m[K:[m[K[32m[K42[m[K[36m[K:[m[Ktagstr=[01;31m[K`echo ${version} | sed -e 's/\./_/g'`[m[K
[35m[K/tmp/bcfg2/tools/export.sh[m[K[36m[K-[m[K[32m[K43[m[K[36m[K-[m[Ksvn copy "$url" "${repo}/tags/${pkgname}_${tagstr}" -m "tagged ${version} release"
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/tools/create-debian-pkglist.pl[m[K[36m[K-[m[K[32m[K105[m[K[36m[K-[m[K  #print "removing file: $file\n";
[35m[K/tmp/bcfg2/tools/create-debian-pkglist.pl[m[K[36m[K:[m[K[32m[K106[m[K[36m[K:[m[K  [01;31m[Ksystem("rm -f $file")[m[K;
[35m[K/tmp/bcfg2/tools/create-debian-pkglist.pl[m[K[36m[K-[m[K[32m[K107[m[K[36m[K-[m[K}
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/tools/bcfg2-import-config[m[K[36m[K-[m[K[32m[K21[m[K[36m[K-[m[K## Start Getopt
[35m[K/tmp/bcfg2/tools/bcfg2-import-config[m[K[36m[K:[m[K[32m[K22[m[K[36m[K:[m[KTEMP=[01;31m[K`getopt -o snph --long help,debian -n $0 -- "$@"`[m[K
[35m[K/tmp/bcfg2/tools/bcfg2-import-config[m[K[36m[K-[m[K[32m[K23[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/bcfg2/tools/encap-util-xml.sh[m[K[36m[K-[m[K[32m[K25[m[K[36m[K-[m[K    printf "    <Group name='%s-%s'>\n" "$ARCH" "$OS" >> $XML
[35m[K/tmp/bcfg2/tools/encap-util-xml.sh[m[K[36m[K:[m[K[32m[K26[m[K[36m[K:[m[K    for FILE in [01;31m[K`(cd ./$DIR && ls *-encap-*.tar.gz) | sort`[m[K; do
[35m[K/tmp/bcfg2/tools/encap-util-xml.sh[m[K[36m[K-[m[K[32m[K27[m[K[36m[K-[m[K	printf "        <Package file='%s'/>\n" "$FILE" >> $XML
