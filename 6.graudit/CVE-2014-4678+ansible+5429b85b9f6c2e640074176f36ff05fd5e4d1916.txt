===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/ansible/hacking/env-setup[m[K[36m[K-[m[K[32m[K6[m[K[36m[K-[m[Kif [ -n "$BASH_SOURCE" ] ; then
[35m[K/tmp/ansible/hacking/env-setup[m[K[36m[K:[m[K[32m[K7[m[K[36m[K:[m[K    HACKING_DIR=[01;31m[K`dirname $BASH_SOURCE`[m[K
[35m[K/tmp/ansible/hacking/env-setup[m[K[36m[K-[m[K[32m[K8[m[K[36m[K-[m[Kelif [ $(basename $0) = "env-setup" ]; then
[35m[K/tmp/ansible/hacking/env-setup[m[K[36m[K:[m[K[32m[K9[m[K[36m[K:[m[K    HACKING_DIR=[01;31m[K`dirname $0`[m[K
[35m[K/tmp/ansible/hacking/env-setup[m[K[36m[K-[m[K[32m[K10[m[K[36m[K-[m[Kelse
[36m[K##############################################[m[K
[35m[K/tmp/ansible/hacking/env-setup[m[K[36m[K-[m[K[32m[K14[m[K[36m[K-[m[K# Source: http://stackoverflow.com/a/1678636
[35m[K/tmp/ansible/hacking/env-setup[m[K[36m[K:[m[K[32m[K15[m[K[36m[K:[m[KFULL_PATH=[01;31m[K`python -c "import os; print(os.path.realpath('$HACKING_DIR'))"`[m[K
[35m[K/tmp/ansible/hacking/env-setup[m[K[36m[K:[m[K[32m[K16[m[K[36m[K:[m[KANSIBLE_HOME=[01;31m[K`dirname "$FULL_PATH"`[m[K
[35m[K/tmp/ansible/hacking/env-setup[m[K[36m[K-[m[K[32m[K17[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/hacking/env-setup[m[K[36m[K-[m[K[32m[K24[m[K[36m[K-[m[Kunset ANSIBLE_LIBRARY
[35m[K/tmp/ansible/hacking/env-setup[m[K[36m[K:[m[K[32m[K25[m[K[36m[K:[m[Kexport ANSIBLE_LIBRARY="$ANSIBLE_HOME/library:[01;31m[K`python $HACKING_DIR/get_library.py`[m[K"
[35m[K/tmp/ansible/hacking/env-setup[m[K[36m[K-[m[K[32m[K26[m[K[36m[K-[m[K[[ $MANPATH != ${PREFIX_MANPATH}* ]] && export MANPATH=$PREFIX_MANPATH:$MANPATH
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K112[m[K[36m[K-[m[K    from compiler.ast import *
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K113[m[K[36m[K:[m[K    def _literal_[01;31m[Keval(node_or_string)[m[K:
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K114[m[K[36m[K-[m[K        """
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K740[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K741[m[K[36m[K:[m[K    def safe_[01;31m[Keval(self, str, locals=None, include_exceptions=False)[m[K:
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K742[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K760[m[K[36m[K-[m[K            if not locals:
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K761[m[K[36m[K:[m[K                result = _literal_[01;31m[Keval(str)[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K762[m[K[36m[K-[m[K            else:
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K763[m[K[36m[K:[m[K                result = _literal_[01;31m[Keval(str, None, locals)[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K764[m[K[36m[K-[m[K            if include_exceptions:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K802[m[K[36m[K-[m[K                            except:
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K803[m[K[36m[K:[m[K                                (result, exc) = self.safe_[01;31m[Keval(value, dict()[m[K, include_exceptions=True)
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K804[m[K[36m[K-[m[K                                if exc is not None:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1192[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K1193[m[K[36m[K:[m[K        # exp[01;31m[Kand things like $[m[KHOME and ~
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1194[m[K[36m[K-[m[K        if not shell:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/inventory/ini.py[m[K[36m[K-[m[K[32m[K54[m[K[36m[K-[m[K            try:
[35m[K/tmp/ansible/lib/ansible/inventory/ini.py[m[K[36m[K:[m[K[32m[K55[m[K[36m[K:[m[K                return ast.literal_[01;31m[Keval(v)[m[K
[35m[K/tmp/ansible/lib/ansible/inventory/ini.py[m[K[36m[K-[m[K[32m[K56[m[K[36m[K-[m[K            # Using explicit exceptions.
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/runner/__init__.py[m[K[36m[K-[m[K[32m[K292[m[K[36m[K-[m[K            enviro = template.template(self.basedir, self.environment, inject, convert_bare=True)
[35m[K/tmp/ansible/lib/ansible/runner/__init__.py[m[K[36m[K:[m[K[32m[K293[m[K[36m[K:[m[K            enviro = utils.safe_[01;31m[Keval(enviro)[m[K
[35m[K/tmp/ansible/lib/ansible/runner/__init__.py[m[K[36m[K-[m[K[32m[K294[m[K[36m[K-[m[K            if type(enviro) != dict:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/runner/__init__.py[m[K[36m[K-[m[K[32m[K624[m[K[36m[K-[m[K                complex_args = template.template(self.basedir, complex_args, inject, convert_bare=True)
[35m[K/tmp/ansible/lib/ansible/runner/__init__.py[m[K[36m[K:[m[K[32m[K625[m[K[36m[K:[m[K                complex_args = utils.safe_[01;31m[Keval(complex_args)[m[K
[35m[K/tmp/ansible/lib/ansible/runner/__init__.py[m[K[36m[K-[m[K[32m[K626[m[K[36m[K-[m[K                if type(complex_args) != dict:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/runner/__init__.py[m[K[36m[K-[m[K[32m[K648[m[K[36m[K-[m[K                    complex_args = template.template(self.basedir, self.complex_args, this_inject, convert_bare=True)
[35m[K/tmp/ansible/lib/ansible/runner/__init__.py[m[K[36m[K:[m[K[32m[K649[m[K[36m[K:[m[K                    complex_args = utils.safe_[01;31m[Keval(complex_args)[m[K
[35m[K/tmp/ansible/lib/ansible/runner/__init__.py[m[K[36m[K-[m[K[32m[K650[m[K[36m[K-[m[K                    if type(complex_args) != dict:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/utils/template.py[m[K[36m[K-[m[K[32m[K119[m[K[36m[K-[m[K                if (varname.startswith("{") and not varname.startswith("{{")) or varname.startswith("["):
[35m[K/tmp/ansible/lib/ansible/utils/template.py[m[K[36m[K:[m[K[32m[K120[m[K[36m[K:[m[K                    eval_results = utils.safe_[01;31m[Keval(varname, locals=vars, include_exceptions=True)[m[K
[35m[K/tmp/ansible/lib/ansible/utils/template.py[m[K[36m[K-[m[K[32m[K121[m[K[36m[K-[m[K                    if eval_results[1] is None:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/utils/template.py[m[K[36m[K-[m[K[32m[K241[m[K[36m[K-[m[K            (key,val) = pair.split(':')
[35m[K/tmp/ansible/lib/ansible/utils/template.py[m[K[36m[K:[m[K[32m[K242[m[K[36m[K:[m[K            setattr(environment,key.strip(),ast.literal_[01;31m[Keval(val.strip()[m[K))
[35m[K/tmp/ansible/lib/ansible/utils/template.py[m[K[36m[K-[m[K[32m[K243[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/utils/__init__.py[m[K[36m[K-[m[K[32m[K1022[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/utils/__init__.py[m[K[36m[K:[m[K[32m[K1023[m[K[36m[K:[m[Kdef safe_[01;31m[Keval(expr, locals={}, include_exceptions=False)[m[K:
[35m[K/tmp/ansible/lib/ansible/utils/__init__.py[m[K[36m[K-[m[K[32m[K1024[m[K[36m[K-[m[K    '''
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/utils/__init__.py[m[K[36m[K-[m[K[32m[K1095[m[K[36m[K-[m[K        compiled = compile(parsed_tree, expr, 'eval')
[35m[K/tmp/ansible/lib/ansible/utils/__init__.py[m[K[36m[K:[m[K[32m[K1096[m[K[36m[K:[m[K        result = [01;31m[Keval(compiled, {}, locals)[m[K
[35m[K/tmp/ansible/lib/ansible/utils/__init__.py[m[K[36m[K-[m[K[32m[K1097[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/utils/__init__.py[m[K[36m[K-[m[K[32m[K1138[m[K[36m[K-[m[K            # TODO: something a bit less heavy than eval
[35m[K/tmp/ansible/lib/ansible/utils/__init__.py[m[K[36m[K:[m[K[32m[K1139[m[K[36m[K:[m[K            return safe_[01;31m[Keval(terms)[m[K
[35m[K/tmp/ansible/lib/ansible/utils/__init__.py[m[K[36m[K-[m[K[32m[K1140[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/test/units/TestUtils.py[m[K[36m[K-[m[K[32m[K536[m[K[36m[K-[m[K
[35m[K/tmp/ansible/test/units/TestUtils.py[m[K[36m[K:[m[K[32m[K537[m[K[36m[K:[m[K    def test_safe_[01;31m[Keval(self)[m[K:
[35m[K/tmp/ansible/test/units/TestUtils.py[m[K[36m[K-[m[K[32m[K538[m[K[36m[K-[m[K        # Not basestring
[35m[K/tmp/ansible/test/units/TestUtils.py[m[K[36m[K:[m[K[32m[K539[m[K[36m[K:[m[K        self.assertEqual(ansible.utils.safe_[01;31m[Keval(len)[m[K, len)
[35m[K/tmp/ansible/test/units/TestUtils.py[m[K[36m[K:[m[K[32m[K540[m[K[36m[K:[m[K        self.assertEqual(ansible.utils.safe_[01;31m[Keval(1)[m[K, 1)
[35m[K/tmp/ansible/test/units/TestUtils.py[m[K[36m[K:[m[K[32m[K541[m[K[36m[K:[m[K        self.assertEqual(ansible.utils.safe_[01;31m[Keval(len, include_exceptions=True)[m[K, (len, None))
[35m[K/tmp/ansible/test/units/TestUtils.py[m[K[36m[K:[m[K[32m[K542[m[K[36m[K:[m[K        self.assertEqual(ansible.utils.safe_[01;31m[Keval(1, include_exceptions=True)[m[K, (1, None))
[35m[K/tmp/ansible/test/units/TestUtils.py[m[K[36m[K-[m[K[32m[K543[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/Makefile[m[K[36m[K-[m[K[32m[K196[m[K[36m[K-[m[K	--define "_rpmfilename %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" \
[35m[K/tmp/ansible/Makefile[m[K[36m[K:[m[K[32m[K197[m[K[36m[K:[m[K	--define "__python [01;31m[K`which $(PYTHON)`[m[K" \
[35m[K/tmp/ansible/Makefile[m[K[36m[K-[m[K[32m[K198[m[K[36m[K-[m[K	-ba rpm-build/$(NAME).spec
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/guide_rax.rst[m[K[36m[K-[m[K[32m[K167[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/guide_rax.rst[m[K[36m[K:[m[K[32m[K168[m[K[36m[K:[m[K.. note:: Dynamic inventory scripts (like ``rax.py``) are saved in ``/usr/share/ansible/inventory`` if Ansible has been installed globally.  If installed to a virtualenv, the inventory scripts are installed to `[01;31m[K`$VIRTUALENV/share/inventory`[m[K`.
[35m[K/tmp/ansible/docsite/rst/guide_rax.rst[m[K[36m[K-[m[K[32m[K169[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_acceleration.rst[m[K[36m[K-[m[K[32m[K83[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_acceleration.rst[m[K[36m[K:[m[K[32m[K84[m[K[36m[K:[m[KWhen enabled, the daemon will open a UNIX socket file (by default [01;31m[K`$ANSIBLE_REMOTE_TEMP/.ansible-accelerate/.local.socket`[m[K). New connections over SSH can
[35m[K/tmp/ansible/docsite/rst/playbooks_acceleration.rst[m[K[36m[K-[m[K[32m[K85[m[K[36m[K-[m[Kuse this socket file to upload new keys to the daemon.
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/guide_gce.rst[m[K[36m[K-[m[K[32m[K74[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/guide_gce.rst[m[K[36m[K:[m[K[32m[K75[m[K[36m[K:[m[KCreate a file ``secrets.py`` looking like following, and put it in some folder which is in your `[01;31m[K`$PYTHONPATH`[m[K`:
[35m[K/tmp/ansible/docsite/rst/guide_gce.rst[m[K[36m[K-[m[K[32m[K76[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/library/cloud/ec2[m[K[36m[K-[m[K[32m[K517[m[K[36m[K-[m[K            try:
[35m[K/tmp/ansible/library/cloud/ec2[m[K[36m[K:[m[K[32m[K518[m[K[36m[K:[m[K                tags = literal_[01;31m[Keval(tags)[m[K
[35m[K/tmp/ansible/library/cloud/ec2[m[K[36m[K-[m[K[32m[K519[m[K[36m[K-[m[K            except:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/library/cloud/linode[m[K[36m[K-[m[K[32m[K247[m[K[36m[K-[m[K            for arg in ('name', 'plan', 'distribution', 'datacenter'):
[35m[K/tmp/ansible/library/cloud/linode[m[K[36m[K:[m[K[32m[K248[m[K[36m[K:[m[K                if not [01;31m[Keval(arg)[m[K:
[35m[K/tmp/ansible/library/cloud/linode[m[K[36m[K-[m[K[32m[K249[m[K[36m[K-[m[K                    module.fail_json(msg='%s is required for active state' % arg)
[36m[K##############################################[m[K
[35m[K/tmp/ansible/library/cloud/linode[m[K[36m[K-[m[K[32m[K264[m[K[36m[K-[m[K            for arg in ('name', 'linode_id', 'distribution'):
[35m[K/tmp/ansible/library/cloud/linode[m[K[36m[K:[m[K[32m[K265[m[K[36m[K:[m[K                if not [01;31m[Keval(arg)[m[K:
[35m[K/tmp/ansible/library/cloud/linode[m[K[36m[K-[m[K[32m[K266[m[K[36m[K-[m[K                    module.fail_json(msg='%s is required for active state' % arg)
[36m[K##############################################[m[K
[35m[K/tmp/ansible/library/cloud/linode[m[K[36m[K-[m[K[32m[K297[m[K[36m[K-[m[K            for arg in ('name', 'linode_id', 'distribution'):
[35m[K/tmp/ansible/library/cloud/linode[m[K[36m[K:[m[K[32m[K298[m[K[36m[K:[m[K                if not [01;31m[Keval(arg)[m[K:
[35m[K/tmp/ansible/library/cloud/linode[m[K[36m[K-[m[K[32m[K299[m[K[36m[K-[m[K                    module.fail_json(msg='%s is required for active state' % arg)
[36m[K##############################################[m[K
[35m[K/tmp/ansible/library/cloud/linode[m[K[36m[K-[m[K[32m[K384[m[K[36m[K-[m[K        for arg in ('name', 'linode_id'):
[35m[K/tmp/ansible/library/cloud/linode[m[K[36m[K:[m[K[32m[K385[m[K[36m[K:[m[K            if not [01;31m[Keval(arg)[m[K:
[35m[K/tmp/ansible/library/cloud/linode[m[K[36m[K-[m[K[32m[K386[m[K[36m[K-[m[K                module.fail_json(msg='%s is required for active state' % arg)
[36m[K##############################################[m[K
[35m[K/tmp/ansible/library/cloud/linode[m[K[36m[K-[m[K[32m[K405[m[K[36m[K-[m[K        for arg in ('name', 'linode_id'):
[35m[K/tmp/ansible/library/cloud/linode[m[K[36m[K:[m[K[32m[K406[m[K[36m[K:[m[K            if not [01;31m[Keval(arg)[m[K:
[35m[K/tmp/ansible/library/cloud/linode[m[K[36m[K-[m[K[32m[K407[m[K[36m[K-[m[K                module.fail_json(msg='%s is required for active state' % arg)
[36m[K##############################################[m[K
[35m[K/tmp/ansible/library/cloud/gce[m[K[36m[K-[m[K[32m[K262[m[K[36m[K-[m[K        try:
[35m[K/tmp/ansible/library/cloud/gce[m[K[36m[K:[m[K[32m[K263[m[K[36m[K:[m[K            md = literal_[01;31m[Keval(metadata)[m[K
[35m[K/tmp/ansible/library/cloud/gce[m[K[36m[K-[m[K[32m[K264[m[K[36m[K-[m[K            if not isinstance(md, dict):
[36m[K##############################################[m[K
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K-[m[K[32m[K170[m[K[36m[K-[m[K
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K:[m[K[32m[K171[m[K[36m[K:[m[K    sender_phrase, sender_addr = parse[01;31m[Kaddr([m[Ksender)
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K-[m[K[32m[K172[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K-[m[K[32m[K183[m[K[36m[K-[m[K    msg['Subject'] = subject
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K:[m[K[32m[K184[m[K[36m[K:[m[K    msg['From'] = format[01;31m[Kaddr([m[K(sender_phrase, sender_addr))
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K-[m[K[32m[K185[m[K[36m[K-[m[K    msg.preamble = "Multipart message"
[36m[K##############################################[m[K
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K-[m[K[32m[K203[m[K[36m[K-[m[K        for addr in [x.strip() for x in recipients.split(',')]:
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K:[m[K[32m[K204[m[K[36m[K:[m[K            to_list.append( format[01;31m[Kaddr([m[K parse[01;31m[Kaddr([m[Kaddr)) )
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K:[m[K[32m[K205[m[K[36m[K:[m[K            addr_list.append( parse[01;31m[Kaddr([m[Kaddr)[1] )    # address only, w/o phrase
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K-[m[K[32m[K206[m[K[36m[K-[m[K    if copies is not None:
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K-[m[K[32m[K207[m[K[36m[K-[m[K        for addr in [x.strip() for x in copies.split(',')]:
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K:[m[K[32m[K208[m[K[36m[K:[m[K            cc_list.append( format[01;31m[Kaddr([m[K parse[01;31m[Kaddr([m[Kaddr)) )
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K:[m[K[32m[K209[m[K[36m[K:[m[K            addr_list.append( parse[01;31m[Kaddr([m[Kaddr)[1] )    # address only, w/o phrase
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K-[m[K[32m[K210[m[K[36m[K-[m[K    if blindcopies is not None:
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K-[m[K[32m[K211[m[K[36m[K-[m[K        for addr in [x.strip() for x in blindcopies.split(',')]:
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K:[m[K[32m[K212[m[K[36m[K:[m[K            addr_list.append( parse[01;31m[Kaddr([m[Kaddr)[1] )
[35m[K/tmp/ansible/library/notification/mail[m[K[36m[K-[m[K[32m[K213[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/library/files/lineinfile[m[K[36m[K-[m[K[32m[K369[m[K[36m[K-[m[K            line = params['line']
[35m[K/tmp/ansible/library/files/lineinfile[m[K[36m[K:[m[K[32m[K370[m[K[36m[K:[m[K        line = module.safe_[01;31m[Keval(pipes.quote(line)[m[K)
[35m[K/tmp/ansible/library/files/lineinfile[m[K[36m[K-[m[K[32m[K371[m[K[36m[K-[m[K
