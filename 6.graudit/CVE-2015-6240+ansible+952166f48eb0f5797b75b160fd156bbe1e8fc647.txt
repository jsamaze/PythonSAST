===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/ansible/v1/tests/TestUtils.py[m[K[36m[K-[m[K[32m[K533[m[K[36m[K-[m[K
[35m[K/tmp/ansible/v1/tests/TestUtils.py[m[K[36m[K:[m[K[32m[K534[m[K[36m[K:[m[K    def test_safe_[01;31m[Keval(self)[m[K:
[35m[K/tmp/ansible/v1/tests/TestUtils.py[m[K[36m[K-[m[K[32m[K535[m[K[36m[K-[m[K        # Not basestring
[35m[K/tmp/ansible/v1/tests/TestUtils.py[m[K[36m[K:[m[K[32m[K536[m[K[36m[K:[m[K        self.assertEqual(ansible.utils.safe_[01;31m[Keval(len)[m[K, len)
[35m[K/tmp/ansible/v1/tests/TestUtils.py[m[K[36m[K:[m[K[32m[K537[m[K[36m[K:[m[K        self.assertEqual(ansible.utils.safe_[01;31m[Keval(1)[m[K, 1)
[35m[K/tmp/ansible/v1/tests/TestUtils.py[m[K[36m[K:[m[K[32m[K538[m[K[36m[K:[m[K        self.assertEqual(ansible.utils.safe_[01;31m[Keval(len, include_exceptions=True)[m[K, (len, None))
[35m[K/tmp/ansible/v1/tests/TestUtils.py[m[K[36m[K:[m[K[32m[K539[m[K[36m[K:[m[K        self.assertEqual(ansible.utils.safe_[01;31m[Keval(1, include_exceptions=True)[m[K, (1, None))
[35m[K/tmp/ansible/v1/tests/TestUtils.py[m[K[36m[K-[m[K[32m[K540[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K126[m[K[36m[K-[m[K    from compiler.ast import *
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K127[m[K[36m[K:[m[K    def _literal_[01;31m[Keval(node_or_string)[m[K:
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K128[m[K[36m[K-[m[K        """
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K991[m[K[36m[K-[m[K
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K992[m[K[36m[K:[m[K    def safe_[01;31m[Keval(self, str, locals=None, include_exceptions=False)[m[K:
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K993[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1011[m[K[36m[K-[m[K            if not locals:
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K1012[m[K[36m[K:[m[K                result = _literal_[01;31m[Keval(str)[m[K
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1013[m[K[36m[K-[m[K            else:
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K1014[m[K[36m[K:[m[K                result = _literal_[01;31m[Keval(str, None, locals)[m[K
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1015[m[K[36m[K-[m[K            if include_exceptions:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1054[m[K[36m[K-[m[K                                except:
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K1055[m[K[36m[K:[m[K                                    (result, exc) = self.safe_[01;31m[Keval(value, dict()[m[K, include_exceptions=True)
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1056[m[K[36m[K-[m[K                                    if exc is not None:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1473[m[K[36m[K-[m[K
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K1474[m[K[36m[K:[m[K        # exp[01;31m[Kand things like $[m[KHOME and ~
[35m[K/tmp/ansible/v1/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1475[m[K[36m[K-[m[K        if not shell:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/inventory/ini.py[m[K[36m[K-[m[K[32m[K56[m[K[36m[K-[m[K            try:
[35m[K/tmp/ansible/v1/ansible/inventory/ini.py[m[K[36m[K:[m[K[32m[K57[m[K[36m[K:[m[K                ret = ast.literal_[01;31m[Keval(v)[m[K
[35m[K/tmp/ansible/v1/ansible/inventory/ini.py[m[K[36m[K-[m[K[32m[K58[m[K[36m[K-[m[K                if not isinstance(ret, float):
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K54[m[K[36m[K-[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K55[m[K[36m[K:[m[K        if ip[01;31m[Kaddr([m[Kipconv, 'public'):
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K56[m[K[36m[K-[m[K            numbers = list(map(int, ipconv.split('.')))
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K64[m[K[36m[K-[m[K        if vtype == 'address':
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K65[m[K[36m[K:[m[K            if ip[01;31m[Kaddr([m[Kstr(v), '2002::/16'):
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K66[m[K[36m[K-[m[K                return value
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K68[m[K[36m[K-[m[K            if v.ip != v.network:
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K69[m[K[36m[K:[m[K                if ip[01;31m[Kaddr([m[Kstr(v.ip), '2002::/16'):
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K70[m[K[36m[K-[m[K                    return value
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K137[m[K[36m[K-[m[K    if v.version == 4:
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K138[m[K[36m[K:[m[K        if ip[01;31m[Kaddr([m[Kstr(v_ip), '169.254.0.0/24'):
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K139[m[K[36m[K-[m[K            return value
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K141[m[K[36m[K-[m[K    elif v.version == 6:
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K142[m[K[36m[K:[m[K        if ip[01;31m[Kaddr([m[Kstr(v_ip), 'fe80::/10'):
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K143[m[K[36m[K-[m[K            return value
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K252[m[K[36m[K-[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K253[m[K[36m[K:[m[Kdef ip[01;31m[Kaddr([m[Kvalue, query = '', version = False, alias = 'ipaddr'):
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K254[m[K[36m[K-[m[K    ''' Check if string is an IP address or network and filter it '''
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K325[m[K[36m[K-[m[K        for element in value:
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K326[m[K[36m[K:[m[K            if ip[01;31m[Kaddr([m[Kelement, str(query), version):
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K327[m[K[36m[K:[m[K                    _ret.append(ip[01;31m[Kaddr([m[Kelement, str(query), version))
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K328[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K416[m[K[36m[K-[m[K        ### ?? 6to4 and link-local were True here before.  Should they still?
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K417[m[K[36m[K:[m[K        if query and (query not in query_func_map or query == 'cidr_lookup') and ip[01;31m[Kaddr([m[Kquery, 'network'):
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K418[m[K[36m[K-[m[K            iplist = netaddr.IPSet([netaddr.IPNetwork(query)])
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K423[m[K[36m[K-[m[K    # This code checks if value maches the IP version the user wants, ie. if
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K424[m[K[36m[K:[m[K    # it's any version ("ip[01;31m[Kaddr([m[K)"), IPv4 ("ipv4()") or IPv6 ("ipv6()")
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K425[m[K[36m[K-[m[K    # If version does not match, return False
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K462[m[K[36m[K-[m[K            for element in value:
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K463[m[K[36m[K:[m[K                if ip[01;31m[Kaddr([m[Kelement, query, version = False, alias = 'ipwrap'):
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K464[m[K[36m[K:[m[K                    _ret.append(ip[01;31m[Kaddr([m[Kelement, 'wrap'))
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K465[m[K[36m[K-[m[K                else:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K469[m[K[36m[K-[m[K        else:
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K470[m[K[36m[K:[m[K            _ret = ip[01;31m[Kaddr([m[Kvalue, query, version = False, alias = 'ipwrap')
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K471[m[K[36m[K-[m[K            if _ret:
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K472[m[K[36m[K:[m[K                return ip[01;31m[Kaddr([m[K_ret, 'wrap')
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K473[m[K[36m[K-[m[K            else:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K480[m[K[36m[K-[m[Kdef ipv4(value, query = ''):
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K481[m[K[36m[K:[m[K    return ip[01;31m[Kaddr([m[Kvalue, query, version = 4, alias = 'ipv4')
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K482[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K484[m[K[36m[K-[m[Kdef ipv6(value, query = ''):
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K485[m[K[36m[K:[m[K    return ip[01;31m[Kaddr([m[Kvalue, query, version = 6, alias = 'ipv6')
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K486[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K509[m[K[36m[K-[m[K    try:
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K510[m[K[36m[K:[m[K        vtype = ip[01;31m[Kaddr([m[Kvalue, 'type')
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K511[m[K[36m[K-[m[K        if vtype == 'address':
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K512[m[K[36m[K:[m[K            v = ip[01;31m[Kaddr([m[Kvalue, 'cidr')
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K513[m[K[36m[K-[m[K        elif vtype == 'network':
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K514[m[K[36m[K:[m[K            v = ip[01;31m[Kaddr([m[Kvalue, 'subnet')
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K515[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K523[m[K[36m[K-[m[K    elif str(query).isdigit():
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K524[m[K[36m[K:[m[K        vsize = ip[01;31m[Kaddr([m[Kv, 'size')
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K525[m[K[36m[K-[m[K        query = int(query)
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K565[m[K[36m[K-[m[K    try:
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K566[m[K[36m[K:[m[K        vtype = ip[01;31m[Kaddr([m[Kvalue, 'type')
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K567[m[K[36m[K-[m[K        if vtype == 'address':
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K568[m[K[36m[K:[m[K            v = ip[01;31m[Kaddr([m[Kvalue, 'cidr')
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K569[m[K[36m[K-[m[K        elif vtype == 'network':
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K570[m[K[36m[K:[m[K            v = ip[01;31m[Kaddr([m[Kvalue, 'subnet')
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K571[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K579[m[K[36m[K-[m[K    try:
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K580[m[K[36m[K:[m[K        vsize = ip[01;31m[Kaddr([m[Kv, 'size')
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K581[m[K[36m[K-[m[K        nth = int(query)
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K592[m[K[36m[K-[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K593[m[K[36m[K:[m[Kdef hw[01;31m[Kaddr([m[Kvalue, query = '', alias = 'hwaddr'):
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K594[m[K[36m[K-[m[K    ''' Check if string is a HW/MAC address and filter it '''
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K628[m[K[36m[K-[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K629[m[K[36m[K:[m[Kdef mac[01;31m[Kaddr([m[Kvalue, query = ''):
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K630[m[K[36m[K:[m[K    return hw[01;31m[Kaddr([m[Kvalue, query, alias = 'macaddr')
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K631[m[K[36m[K-[m[K
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K:[m[K[32m[K632[m[K[36m[K:[m[Kdef _need_net[01;31m[Kaddr([m[Kf_name, *args, **kwargs):
[35m[K/tmp/ansible/v1/ansible/runner/filter_plugins/ipaddr.py[m[K[36m[K-[m[K[32m[K633[m[K[36m[K-[m[K    raise errors.AnsibleFilterError('The {0} filter requires python-netaddr be'
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/__init__.py[m[K[36m[K-[m[K[32m[K319[m[K[36m[K-[m[K            enviro = template.template(self.basedir, self.environment, inject, convert_bare=True)
[35m[K/tmp/ansible/v1/ansible/runner/__init__.py[m[K[36m[K:[m[K[32m[K320[m[K[36m[K:[m[K            enviro = utils.safe_[01;31m[Keval(enviro)[m[K
[35m[K/tmp/ansible/v1/ansible/runner/__init__.py[m[K[36m[K-[m[K[32m[K321[m[K[36m[K-[m[K            if type(enviro) != dict:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/runner/__init__.py[m[K[36m[K-[m[K[32m[K767[m[K[36m[K-[m[K                templated_args = template.template(self.basedir, args, inject, convert_bare=True)
[35m[K/tmp/ansible/v1/ansible/runner/__init__.py[m[K[36m[K:[m[K[32m[K768[m[K[36m[K:[m[K                evaled_args = utils.safe_[01;31m[Keval(args)[m[K
[35m[K/tmp/ansible/v1/ansible/runner/__init__.py[m[K[36m[K-[m[K[32m[K769[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/utils/template.py[m[K[36m[K-[m[K[32m[K134[m[K[36m[K-[m[K                    if (varname.startswith("{") and not varname.startswith("{{")) or varname.startswith("["):
[35m[K/tmp/ansible/v1/ansible/utils/template.py[m[K[36m[K:[m[K[32m[K135[m[K[36m[K:[m[K                        eval_results = utils.safe_[01;31m[Keval(varname, locals=templatevars, include_exceptions=True)[m[K
[35m[K/tmp/ansible/v1/ansible/utils/template.py[m[K[36m[K-[m[K[32m[K136[m[K[36m[K-[m[K                        if eval_results[1] is None:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/utils/template.py[m[K[36m[K-[m[K[32m[K260[m[K[36m[K-[m[K            if key in JINJA2_ALLOWED_OVERRIDES:
[35m[K/tmp/ansible/v1/ansible/utils/template.py[m[K[36m[K:[m[K[32m[K261[m[K[36m[K:[m[K                setattr(environment, key, ast.literal_[01;31m[Keval(val.strip()[m[K))
[35m[K/tmp/ansible/v1/ansible/utils/template.py[m[K[36m[K-[m[K[32m[K262[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/utils/__init__.py[m[K[36m[K-[m[K[32m[K1353[m[K[36m[K-[m[K
[35m[K/tmp/ansible/v1/ansible/utils/__init__.py[m[K[36m[K:[m[K[32m[K1354[m[K[36m[K:[m[Kdef safe_[01;31m[Keval(expr, locals={}, include_exceptions=False)[m[K:
[35m[K/tmp/ansible/v1/ansible/utils/__init__.py[m[K[36m[K-[m[K[32m[K1355[m[K[36m[K-[m[K    '''
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/utils/__init__.py[m[K[36m[K-[m[K[32m[K1431[m[K[36m[K-[m[K        compiled = compile(parsed_tree, expr, 'eval')
[35m[K/tmp/ansible/v1/ansible/utils/__init__.py[m[K[36m[K:[m[K[32m[K1432[m[K[36m[K:[m[K        result = [01;31m[Keval(compiled, {}, locals)[m[K
[35m[K/tmp/ansible/v1/ansible/utils/__init__.py[m[K[36m[K-[m[K[32m[K1433[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/v1/ansible/utils/__init__.py[m[K[36m[K-[m[K[32m[K1479[m[K[36m[K-[m[K            # TODO: something a bit less heavy than eval
[35m[K/tmp/ansible/v1/ansible/utils/__init__.py[m[K[36m[K:[m[K[32m[K1480[m[K[36m[K:[m[K            return safe_[01;31m[Keval(terms)[m[K
[35m[K/tmp/ansible/v1/ansible/utils/__init__.py[m[K[36m[K-[m[K[32m[K1481[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K127[m[K[36m[K-[m[K    from compiler.ast import *
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K128[m[K[36m[K:[m[K    def _literal_[01;31m[Keval(node_or_string)[m[K:
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K129[m[K[36m[K-[m[K        """
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K992[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K993[m[K[36m[K:[m[K    def safe_[01;31m[Keval(self, str, locals=None, include_exceptions=False)[m[K:
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K994[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1012[m[K[36m[K-[m[K            if not locals:
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K1013[m[K[36m[K:[m[K                result = _literal_[01;31m[Keval(str)[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1014[m[K[36m[K-[m[K            else:
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K1015[m[K[36m[K:[m[K                result = _literal_[01;31m[Keval(str, None, locals)[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1016[m[K[36m[K-[m[K            if include_exceptions:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1055[m[K[36m[K-[m[K                                except:
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K1056[m[K[36m[K:[m[K                                    (result, exc) = self.safe_[01;31m[Keval(value, dict()[m[K, include_exceptions=True)
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1057[m[K[36m[K-[m[K                                    if exc is not None:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1469[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K1470[m[K[36m[K:[m[K        # exp[01;31m[Kand things like $[m[KHOME and ~
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1471[m[K[36m[K-[m[K        if not shell:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/inventory/ini.py[m[K[36m[K-[m[K[32m[K58[m[K[36m[K-[m[K            try:
[35m[K/tmp/ansible/lib/ansible/inventory/ini.py[m[K[36m[K:[m[K[32m[K59[m[K[36m[K:[m[K                v = ast.literal_[01;31m[Keval(v)[m[K
[35m[K/tmp/ansible/lib/ansible/inventory/ini.py[m[K[36m[K-[m[K[32m[K60[m[K[36m[K-[m[K            # Using explicit exceptions.
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K54[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K55[m[K[36m[K:[m[K        if ip[01;31m[Kaddr([m[Kipconv, 'public'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K56[m[K[36m[K-[m[K            numbers = list(map(int, ipconv.split('.')))
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K64[m[K[36m[K-[m[K        if vtype == 'address':
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K65[m[K[36m[K:[m[K            if ip[01;31m[Kaddr([m[Kstr(v), '2002::/16'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K66[m[K[36m[K-[m[K                return value
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K68[m[K[36m[K-[m[K            if v.ip != v.network:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K69[m[K[36m[K:[m[K                if ip[01;31m[Kaddr([m[Kstr(v.ip), '2002::/16'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K70[m[K[36m[K-[m[K                    return value
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K137[m[K[36m[K-[m[K    if v.version == 4:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K138[m[K[36m[K:[m[K        if ip[01;31m[Kaddr([m[Kstr(v_ip), '169.254.0.0/24'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K139[m[K[36m[K-[m[K            return value
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K141[m[K[36m[K-[m[K    elif v.version == 6:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K142[m[K[36m[K:[m[K        if ip[01;31m[Kaddr([m[Kstr(v_ip), 'fe80::/10'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K143[m[K[36m[K-[m[K            return value
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K252[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K253[m[K[36m[K:[m[Kdef ip[01;31m[Kaddr([m[Kvalue, query = '', version = False, alias = 'ipaddr'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K254[m[K[36m[K-[m[K    ''' Check if string is an IP address or network and filter it '''
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K325[m[K[36m[K-[m[K        for element in value:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K326[m[K[36m[K:[m[K            if ip[01;31m[Kaddr([m[Kelement, str(query), version):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K327[m[K[36m[K:[m[K                    _ret.append(ip[01;31m[Kaddr([m[Kelement, str(query), version))
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K328[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K416[m[K[36m[K-[m[K        ### ?? 6to4 and link-local were True here before.  Should they still?
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K417[m[K[36m[K:[m[K        if query and (query not in query_func_map or query == 'cidr_lookup') and ip[01;31m[Kaddr([m[Kquery, 'network'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K418[m[K[36m[K-[m[K            iplist = netaddr.IPSet([netaddr.IPNetwork(query)])
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K423[m[K[36m[K-[m[K    # This code checks if value maches the IP version the user wants, ie. if
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K424[m[K[36m[K:[m[K    # it's any version ("ip[01;31m[Kaddr([m[K)"), IPv4 ("ipv4()") or IPv6 ("ipv6()")
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K425[m[K[36m[K-[m[K    # If version does not match, return False
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K462[m[K[36m[K-[m[K            for element in value:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K463[m[K[36m[K:[m[K                if ip[01;31m[Kaddr([m[Kelement, query, version = False, alias = 'ipwrap'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K464[m[K[36m[K:[m[K                    _ret.append(ip[01;31m[Kaddr([m[Kelement, 'wrap'))
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K465[m[K[36m[K-[m[K                else:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K469[m[K[36m[K-[m[K        else:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K470[m[K[36m[K:[m[K            _ret = ip[01;31m[Kaddr([m[Kvalue, query, version = False, alias = 'ipwrap')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K471[m[K[36m[K-[m[K            if _ret:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K472[m[K[36m[K:[m[K                return ip[01;31m[Kaddr([m[K_ret, 'wrap')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K473[m[K[36m[K-[m[K            else:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K480[m[K[36m[K-[m[Kdef ipv4(value, query = ''):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K481[m[K[36m[K:[m[K    return ip[01;31m[Kaddr([m[Kvalue, query, version = 4, alias = 'ipv4')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K482[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K484[m[K[36m[K-[m[Kdef ipv6(value, query = ''):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K485[m[K[36m[K:[m[K    return ip[01;31m[Kaddr([m[Kvalue, query, version = 6, alias = 'ipv6')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K486[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K509[m[K[36m[K-[m[K    try:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K510[m[K[36m[K:[m[K        vtype = ip[01;31m[Kaddr([m[Kvalue, 'type')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K511[m[K[36m[K-[m[K        if vtype == 'address':
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K512[m[K[36m[K:[m[K            v = ip[01;31m[Kaddr([m[Kvalue, 'cidr')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K513[m[K[36m[K-[m[K        elif vtype == 'network':
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K514[m[K[36m[K:[m[K            v = ip[01;31m[Kaddr([m[Kvalue, 'subnet')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K515[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K523[m[K[36m[K-[m[K    elif str(query).isdigit():
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K524[m[K[36m[K:[m[K        vsize = ip[01;31m[Kaddr([m[Kv, 'size')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K525[m[K[36m[K-[m[K        query = int(query)
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K565[m[K[36m[K-[m[K    try:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K566[m[K[36m[K:[m[K        vtype = ip[01;31m[Kaddr([m[Kvalue, 'type')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K567[m[K[36m[K-[m[K        if vtype == 'address':
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K568[m[K[36m[K:[m[K            v = ip[01;31m[Kaddr([m[Kvalue, 'cidr')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K569[m[K[36m[K-[m[K        elif vtype == 'network':
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K570[m[K[36m[K:[m[K            v = ip[01;31m[Kaddr([m[Kvalue, 'subnet')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K571[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K579[m[K[36m[K-[m[K    try:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K580[m[K[36m[K:[m[K        vsize = ip[01;31m[Kaddr([m[Kv, 'size')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K581[m[K[36m[K-[m[K        nth = int(query)
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K592[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K593[m[K[36m[K:[m[Kdef hw[01;31m[Kaddr([m[Kvalue, query = '', alias = 'hwaddr'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K594[m[K[36m[K-[m[K    ''' Check if string is a HW/MAC address and filter it '''
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K628[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K629[m[K[36m[K:[m[Kdef mac[01;31m[Kaddr([m[Kvalue, query = ''):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K630[m[K[36m[K:[m[K    return hw[01;31m[Kaddr([m[Kvalue, query, alias = 'macaddr')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K631[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K632[m[K[36m[K:[m[Kdef _need_net[01;31m[Kaddr([m[Kf_name, *args, **kwargs):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K633[m[K[36m[K-[m[K    raise errors.AnsibleFilterError('The {0} filter requires python-netaddr be'
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/action/__init__.py[m[K[36m[K-[m[K[32m[K102[m[K[36m[K-[m[K        #    enviro = template.template(self.basedir, self.environment, inject, convert_bare=True)
[35m[K/tmp/ansible/lib/ansible/plugins/action/__init__.py[m[K[36m[K:[m[K[32m[K103[m[K[36m[K:[m[K        #    enviro = utils.safe_[01;31m[Keval(enviro)[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/action/__init__.py[m[K[36m[K-[m[K[32m[K104[m[K[36m[K-[m[K        #    if type(enviro) != dict:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/utils/listify.py[m[K[36m[K-[m[K[32m[K38[m[K[36m[K-[m[K        #TODO: check if this is needed as template should also return correct type already
[35m[K/tmp/ansible/lib/ansible/utils/listify.py[m[K[36m[K:[m[K[32m[K39[m[K[36m[K:[m[K        terms = safe_[01;31m[Keval(terms)[m[K
[35m[K/tmp/ansible/lib/ansible/utils/listify.py[m[K[36m[K-[m[K[32m[K40[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/template/safe_eval.py[m[K[36m[K-[m[K[32m[K27[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/template/safe_eval.py[m[K[36m[K:[m[K[32m[K28[m[K[36m[K:[m[Kdef safe_[01;31m[Keval(expr, locals={}, include_exceptions=False)[m[K:
[35m[K/tmp/ansible/lib/ansible/template/safe_eval.py[m[K[36m[K-[m[K[32m[K29[m[K[36m[K-[m[K    '''
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/template/safe_eval.py[m[K[36m[K-[m[K[32m[K105[m[K[36m[K-[m[K        compiled = compile(parsed_tree, expr, 'eval')
[35m[K/tmp/ansible/lib/ansible/template/safe_eval.py[m[K[36m[K:[m[K[32m[K106[m[K[36m[K:[m[K        result = [01;31m[Keval(compiled, {}, locals)[m[K
[35m[K/tmp/ansible/lib/ansible/template/safe_eval.py[m[K[36m[K-[m[K[32m[K107[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/template/__init__.py[m[K[36m[K-[m[K[32m[K172[m[K[36m[K-[m[K                    if (result.startswith("{") and not result.startswith(self.environment.variable_start_string)) or result.startswith("[") or result in ("True", "False"):
[35m[K/tmp/ansible/lib/ansible/template/__init__.py[m[K[36m[K:[m[K[32m[K173[m[K[36m[K:[m[K                        eval_results = safe_[01;31m[Keval(result, locals=self._available_variables, include_exceptions=True)[m[K
[35m[K/tmp/ansible/lib/ansible/template/__init__.py[m[K[36m[K-[m[K[32m[K174[m[K[36m[K-[m[K                        if eval_results[1] is None:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/Makefile[m[K[36m[K-[m[K[32m[K207[m[K[36m[K-[m[K	--define "_rpmfilename %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" \
[35m[K/tmp/ansible/Makefile[m[K[36m[K:[m[K[32m[K208[m[K[36m[K:[m[K	--define "__python [01;31m[K`which $(PYTHON)`[m[K" \
[35m[K/tmp/ansible/Makefile[m[K[36m[K-[m[K[32m[K209[m[K[36m[K-[m[K	-ba rpm-build/$(NAME).spec
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters.rst[m[K[36m[K-[m[K[32m[K257[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters.rst[m[K[36m[K:[m[K[32m[K258[m[K[36m[K:[m[K  {{ '192.0.2.1/24' | ip[01;31m[Kaddr([m[K'address') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters.rst[m[K[36m[K-[m[K[32m[K259[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/guide_rax.rst[m[K[36m[K-[m[K[32m[K167[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/guide_rax.rst[m[K[36m[K:[m[K[32m[K168[m[K[36m[K:[m[K.. note:: Dynamic inventory scripts (like ``rax.py``) are saved in ``/usr/share/ansible/inventory`` if Ansible has been installed globally.  If installed to a virtualenv, the inventory scripts are installed to `[01;31m[K`$VIRTUALENV/share/inventory`[m[K`.
[35m[K/tmp/ansible/docsite/rst/guide_rax.rst[m[K[36m[K-[m[K[32m[K169[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K1[m[K[36m[K:[m[KJinja2 'ip[01;31m[Kaddr([m[K)' filter
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K2[m[K[36m[K-[m[K========================
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K5[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K6[m[K[36m[K:[m[K``ip[01;31m[Kaddr([m[K)`` is a Jinja2 filter designed to provide an interface to `netaddr`_
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K7[m[K[36m[K-[m[KPython package from within Ansible. It can operate on strings or lists of
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K8[m[K[36m[K-[m[Kitems, test various data to check if they are valid IP addresses and manipulate
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K9[m[K[36m[K:[m[Kthe input data to extract requested information. ``ip[01;31m[Kaddr([m[K)`` works both with
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K10[m[K[36m[K-[m[KIPv4 and IPv6 addresses in various forms, there are also additional functions
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K29[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K30[m[K[36m[K:[m[K``ip[01;31m[Kaddr([m[K)`` is designed to return the input value if a query is True, and
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K31[m[K[36m[K-[m[K``False`` if query is False. This way it can be very easily used in chained
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K58[m[K[36m[K-[m[KSometimes you need either IPv4 or IPv6 addresses. To filter only for particular
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K59[m[K[36m[K:[m[Ktype, ``ip[01;31m[Kaddr([m[K)`` filter has two "aliases", ``ipv4()`` and ``ipv6()``.
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K60[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K88[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K89[m[K[36m[K:[m[KYou can filter entire lists - ``ip[01;31m[Kaddr([m[K)`` will return a list with values
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K90[m[K[36m[K-[m[Kvalid for a particular query::
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K126[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K127[m[K[36m[K:[m[KYou can provide single argument to each ``ip[01;31m[Kaddr([m[K)`` filter. Filter will then
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K128[m[K[36m[K-[m[Ktreat it as a query and return values modified by that query. Lists will
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K132[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K133[m[K[36m[K:[m[K- query by name: ``ip[01;31m[Kaddr([m[K'address')``, ``ipv4('network')``;
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K134[m[K[36m[K:[m[K- query by CIDR range: ``ip[01;31m[Kaddr([m[K'192.168.0.0/24')``, ``ipv6('2001:db8::/32')``;
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K135[m[K[36m[K:[m[K- query by index number: ``ip[01;31m[Kaddr([m[K'1')``, ``ip[01;31m[Kaddr([m[K'-1')``;
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K136[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K150[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K151[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'address') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K152[m[K[36m[K-[m[K    ['192.24.2.1', '::1', 'fe80::100']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K156[m[K[36m[K-[m[KCIDR prefixes (as is common with IPv6 addressing), you can use
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K157[m[K[36m[K:[m[K``ip[01;31m[Kaddr([m[K'host')`` filter::
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K158[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K159[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'host') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K160[m[K[36m[K-[m[K    ['192.24.2.1/32', '::1/128', 'fe80::100/10']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K172[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K173[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'public') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K174[m[K[36m[K-[m[K    ['192.24.2.1', '2001:db8:32c:faad::/64']
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K175[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K176[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'private') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K177[m[K[36m[K-[m[K    ['192.168.32.0/24', 'fe80::100/10']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K180[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K181[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'net') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K182[m[K[36m[K-[m[K    ['192.168.32.0/24', '2001:db8:32c:faad::/64']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K185[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K186[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'net') | ip[01;31m[Kaddr([m[K'size') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K187[m[K[36m[K-[m[K    [256, 18446744073709551616L]
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K191[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K192[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'192.0.0.0/8') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K193[m[K[36m[K-[m[K    ['192.24.2.1', '192.168.32.0/24']
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K194[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K195[m[K[36m[K:[m[KIf you specify a positive or negative integer as a query, ``ip[01;31m[Kaddr([m[K)`` will
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K196[m[K[36m[K-[m[Ktreat this as an index and will return specific IP address from a network
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K199[m[K[36m[K-[m[K    # First IP address (network address)
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K200[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'net') | ip[01;31m[Kaddr([m[K'0') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K201[m[K[36m[K-[m[K    ['192.168.32.0/24', '2001:db8:32c:faad::/64']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K203[m[K[36m[K-[m[K    # Second IP address (usually gateway host)
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K204[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'net') | ip[01;31m[Kaddr([m[K'1') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K205[m[K[36m[K-[m[K    ['192.168.32.1/24', '2001:db8:32c:faad::1/64']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K207[m[K[36m[K-[m[K    # Last IP address (broadcast in IPv4 networks)
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K208[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'net') | ip[01;31m[Kaddr([m[K'-1') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K209[m[K[36m[K-[m[K    ['192.168.32.255/24', '2001:db8:32c:faad:ffff:ffff:ffff:ffff/64']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K213[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K214[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'net') | ip[01;31m[Kaddr([m[K'200') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K215[m[K[36m[K-[m[K    ['192.168.32.200/24', '2001:db8:32c:faad::c8/64']
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K216[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K217[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'net') | ip[01;31m[Kaddr([m[K'-200') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K218[m[K[36m[K-[m[K    ['192.168.32.56/24', '2001:db8:32c:faad:ffff:ffff:ffff:ff38/64']
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K219[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K220[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'net') | ip[01;31m[Kaddr([m[K'400') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K221[m[K[36m[K-[m[K    ['2001:db8:32c:faad::190/64']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K227[m[K[36m[K-[m[KVery frequently you use combination of IP addresses and subnet prefixes
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K228[m[K[36m[K:[m[K("CIDR"), this is even more common with IPv6. ``ip[01;31m[Kaddr([m[K)`` filter can extract
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K229[m[K[36m[K-[m[Kuseful data from these prefixes.
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K237[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K238[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'host/prefix') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K239[m[K[36m[K-[m[K    ['2001:db8:deaf:be11::ef3/64', '192.0.2.48/24']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K245[m[K[36m[K-[m[K    iface eth0 inet static
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K246[m[K[36m[K:[m[K        address   {{ ipv4_host | ip[01;31m[Kaddr([m[K'address') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K247[m[K[36m[K:[m[K        network   {{ ipv4_host | ip[01;31m[Kaddr([m[K'network') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K248[m[K[36m[K:[m[K        netmask   {{ ipv4_host | ip[01;31m[Kaddr([m[K'netmask') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K249[m[K[36m[K:[m[K        broadcast {{ ipv4_host | ip[01;31m[Kaddr([m[K'broadcast') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K250[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K279[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K280[m[K[36m[K:[m[K    # {{ host_prefix | ip[01;31m[Kaddr([m[K'host/prefix') | ip[01;31m[Kaddr([m[K'subnet') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K281[m[K[36m[K-[m[K    ['2001:db8:deaf:be11::/64', '192.0.2.0/24']
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K282[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K283[m[K[36m[K:[m[K    # {{ host_prefix | ip[01;31m[Kaddr([m[K'host/prefix') | ip[01;31m[Kaddr([m[K'prefix') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K284[m[K[36m[K-[m[K    [64, 24]
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K306[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K307[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'ipv6') | ip[01;31m[Kaddr([m[K'ipv4') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K308[m[K[36m[K-[m[K    ['192.24.2.1/32', '0.0.0.1/32', '192.168.32.0/24']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K312[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K313[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'address') | ip[01;31m[Kaddr([m[K'int') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K314[m[K[36m[K-[m[K    [3222798849, 1, '3232243712/24', '338288524927261089654018896841347694848/10', '42540766412265424405338506004571095040/64']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K318[m[K[36m[K-[m[K    # {% for address in test_list | ipaddr %}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K319[m[K[36m[K:[m[K    # {{ address | ip[01;31m[Kaddr([m[K'revdns') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K320[m[K[36m[K-[m[K    # {% endfor %}
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K339[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K340[m[K[36m[K:[m[K    # {{ '193.0.2.0' | ip[01;31m[Kaddr([m[K'6to4') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K341[m[K[36m[K-[m[K    2002:c100:0200::1/48
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K417[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K418[m[K[36m[K:[m[KYou can use ``ipsubnet()`` filter with ``ip[01;31m[Kaddr([m[K)`` filter to for example split
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K419[m[K[36m[K-[m[Kgiven ``/48`` prefix into smaller, ``/64`` subnets::
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K420[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K421[m[K[36m[K:[m[K    # {{ '193.0.2.0' | ip[01;31m[Kaddr([m[K'6to4') | ipsubnet(64, 58820) | ip[01;31m[Kaddr([m[K'1') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K422[m[K[36m[K-[m[K    2002:c100:200:e5c4::1/64
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K431[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K432[m[K[36m[K:[m[KYou can use ``hw[01;31m[Kaddr([m[K)`` filter to check if a given string is a MAC address or
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K433[m[K[36m[K-[m[Kconvert it between various formats. Examples::
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K442[m[K[36m[K-[m[K    # Convert MAC address to PostgreSQL format
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K443[m[K[36m[K:[m[K    # {{ macaddress | hw[01;31m[Kaddr([m[K'pgsql') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K444[m[K[36m[K-[m[K    1a2b3c:4d5e6f
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K446[m[K[36m[K-[m[K    # Convert MAC address to Cisco format
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K447[m[K[36m[K:[m[K    # {{ macaddress | hw[01;31m[Kaddr([m[K'cisco') }}
[35m[K/tmp/ansible/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K448[m[K[36m[K-[m[K    1a2b.3c4d.5e6f
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_acceleration.rst[m[K[36m[K-[m[K[32m[K83[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/playbooks_acceleration.rst[m[K[36m[K:[m[K[32m[K84[m[K[36m[K:[m[KWhen enabled, the daemon will open a UNIX socket file (by default [01;31m[K`$ANSIBLE_REMOTE_TEMP/.ansible-accelerate/.local.socket`[m[K). New connections over SSH can
[35m[K/tmp/ansible/docsite/rst/playbooks_acceleration.rst[m[K[36m[K-[m[K[32m[K85[m[K[36m[K-[m[Kuse this socket file to upload new keys to the daemon.
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docsite/rst/guide_gce.rst[m[K[36m[K-[m[K[32m[K74[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docsite/rst/guide_gce.rst[m[K[36m[K:[m[K[32m[K75[m[K[36m[K:[m[KCreate a file ``secrets.py`` looking like following, and put it in some folder which is in your `[01;31m[K`$PYTHONPATH`[m[K`:
[35m[K/tmp/ansible/docsite/rst/guide_gce.rst[m[K[36m[K-[m[K[32m[K76[m[K[36m[K-[m[K
