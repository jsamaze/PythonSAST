===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/salt/tests/integration/shell/test_key.py[m[K[36m[K-[m[K[32m[K152[m[K[36m[K-[m[K            import ast
[35m[K/tmp/salt/tests/integration/shell/test_key.py[m[K[36m[K:[m[K[32m[K153[m[K[36m[K:[m[K            ret = ast.literal_[01;31m[Keval(data[0])[m[K
[35m[K/tmp/salt/tests/integration/shell/test_key.py[m[K[36m[K-[m[K[32m[K154[m[K[36m[K-[m[K        except ValueError:
[36m[K##############################################[m[K
[35m[K/tmp/salt/tests/unit/templates/test_jinja.py[m[K[36m[K-[m[K[32m[K800[m[K[36m[K-[m[K
[35m[K/tmp/salt/tests/unit/templates/test_jinja.py[m[K[36m[K:[m[K[32m[K801[m[K[36m[K:[m[K    def test_ip[01;31m[Kaddr([m[Kself):
[35m[K/tmp/salt/tests/unit/templates/test_jinja.py[m[K[36m[K-[m[K[32m[K802[m[K[36m[K-[m[K        '''Test the `ipaddr` Jinja filter.'''
[36m[K##############################################[m[K
[35m[K/tmp/salt/tests/unit/templates/test_jinja.py[m[K[36m[K-[m[K[32m[K812[m[K[36m[K-[m[K        # return only multicast addresses
[35m[K/tmp/salt/tests/unit/templates/test_jinja.py[m[K[36m[K:[m[K[32m[K813[m[K[36m[K:[m[K        rendered = render_jinja_tmpl("{{ ['224.0.0.1', 'FF01::1', '::'] | ip[01;31m[Kaddr([m[Koptions='multicast') | join(', ') }}",
[35m[K/tmp/salt/tests/unit/templates/test_jinja.py[m[K[36m[K-[m[K[32m[K814[m[K[36m[K-[m[K                                     dict(opts=self.local_opts, saltenv='test', salt=self.local_salt))
[36m[K##############################################[m[K
[35m[K/tmp/salt/tests/unit/templates/test_jinja.py[m[K[36m[K-[m[K[32m[K898[m[K[36m[K-[m[K            self.assertIsInstance(rendered, six.text_type, 'Failed with backend: {}'.format(backend))
[35m[K/tmp/salt/tests/unit/templates/test_jinja.py[m[K[36m[K:[m[K[32m[K899[m[K[36m[K:[m[K            dict_reply = ast.literal_[01;31m[Keval(rendered)[m[K
[35m[K/tmp/salt/tests/unit/templates/test_jinja.py[m[K[36m[K-[m[K[32m[K900[m[K[36m[K-[m[K            self.assertIsInstance(dict_reply, dict, 'Failed with backend: {}'.format(backend))
[36m[K##############################################[m[K
[35m[K/tmp/salt/tests/unit/utils/test_validate_net.py[m[K[36m[K-[m[K[32m[K19[m[K[36m[K-[m[K
[35m[K/tmp/salt/tests/unit/utils/test_validate_net.py[m[K[36m[K:[m[K[32m[K20[m[K[36m[K:[m[K    def test_ipv4_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/salt/tests/unit/utils/test_validate_net.py[m[K[36m[K-[m[K[32m[K21[m[K[36m[K-[m[K        '''
[36m[K##############################################[m[K
[35m[K/tmp/salt/tests/unit/utils/test_validate_net.py[m[K[36m[K-[m[K[32m[K42[m[K[36m[K-[m[K        for addr in true_addrs:
[35m[K/tmp/salt/tests/unit/utils/test_validate_net.py[m[K[36m[K:[m[K[32m[K43[m[K[36m[K:[m[K            self.assertTrue(net.ipv4_[01;31m[Kaddr([m[Kaddr))
[35m[K/tmp/salt/tests/unit/utils/test_validate_net.py[m[K[36m[K-[m[K[32m[K44[m[K[36m[K-[m[K
[35m[K/tmp/salt/tests/unit/utils/test_validate_net.py[m[K[36m[K-[m[K[32m[K45[m[K[36m[K-[m[K        for addr in false_addrs:
[35m[K/tmp/salt/tests/unit/utils/test_validate_net.py[m[K[36m[K:[m[K[32m[K46[m[K[36m[K:[m[K            self.assertFalse(net.ipv4_[01;31m[Kaddr([m[Kaddr))
[35m[K/tmp/salt/tests/unit/utils/test_validate_net.py[m[K[36m[K-[m[K[32m[K47[m[K[36m[K-[m[K
[35m[K/tmp/salt/tests/unit/utils/test_validate_net.py[m[K[36m[K:[m[K[32m[K48[m[K[36m[K:[m[K    def test_ipv6_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/salt/tests/unit/utils/test_validate_net.py[m[K[36m[K-[m[K[32m[K49[m[K[36m[K-[m[K        '''
[36m[K##############################################[m[K
[35m[K/tmp/salt/tests/unit/utils/test_validate_net.py[m[K[36m[K-[m[K[32m[K67[m[K[36m[K-[m[K        for addr in true_addrs:
[35m[K/tmp/salt/tests/unit/utils/test_validate_net.py[m[K[36m[K:[m[K[32m[K68[m[K[36m[K:[m[K            self.assertTrue(net.ipv6_[01;31m[Kaddr([m[Kaddr))
[35m[K/tmp/salt/tests/unit/utils/test_validate_net.py[m[K[36m[K-[m[K[32m[K69[m[K[36m[K-[m[K
[35m[K/tmp/salt/tests/unit/utils/test_validate_net.py[m[K[36m[K-[m[K[32m[K70[m[K[36m[K-[m[K        for addr in false_addrs:
[35m[K/tmp/salt/tests/unit/utils/test_validate_net.py[m[K[36m[K:[m[K[32m[K71[m[K[36m[K:[m[K            self.assertFalse(net.ipv6_[01;31m[Kaddr([m[Kaddr))
[36m[K##############################################[m[K
[35m[K/tmp/salt/tests/unit/modules/test_network.py[m[K[36m[K-[m[K[32m[K158[m[K[36m[K-[m[K
[35m[K/tmp/salt/tests/unit/modules/test_network.py[m[K[36m[K:[m[K[32m[K159[m[K[36m[K:[m[K    def test_hw_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/salt/tests/unit/modules/test_network.py[m[K[36m[K-[m[K[32m[K160[m[K[36m[K-[m[K        '''
[36m[K##############################################[m[K
[35m[K/tmp/salt/tests/unit/modules/test_network.py[m[K[36m[K-[m[K[32m[K164[m[K[36m[K-[m[K        with patch.object(salt.utils.network, 'hw_addr', return_value={}):
[35m[K/tmp/salt/tests/unit/modules/test_network.py[m[K[36m[K:[m[K[32m[K165[m[K[36m[K:[m[K            self.assertDictEqual(network.hw_[01;31m[Kaddr([m[K'iface'), {})
[35m[K/tmp/salt/tests/unit/modules/test_network.py[m[K[36m[K-[m[K[32m[K166[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/tests/unit/modules/test_win_network.py[m[K[36m[K-[m[K[32m[K182[m[K[36m[K-[m[K
[35m[K/tmp/salt/tests/unit/modules/test_win_network.py[m[K[36m[K:[m[K[32m[K183[m[K[36m[K:[m[K    def test_hw_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/salt/tests/unit/modules/test_win_network.py[m[K[36m[K-[m[K[32m[K184[m[K[36m[K-[m[K        '''
[36m[K##############################################[m[K
[35m[K/tmp/salt/tests/unit/modules/test_win_network.py[m[K[36m[K-[m[K[32m[K189[m[K[36m[K-[m[K                          MagicMock(return_value='Ethernet')):
[35m[K/tmp/salt/tests/unit/modules/test_win_network.py[m[K[36m[K:[m[K[32m[K190[m[K[36m[K:[m[K            self.assertEqual(win_network.hw_[01;31m[Kaddr([m[K'Ethernet'), 'Ethernet')
[35m[K/tmp/salt/tests/unit/modules/test_win_network.py[m[K[36m[K-[m[K[32m[K191[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/tests/unit/loader/test_globals.py[m[K[36m[K-[m[K[32m[K134[m[K[36m[K-[m[K        Test that renderers have:
[35m[K/tmp/salt/tests/unit/loader/test_globals.py[m[K[36m[K:[m[K[32m[K135[m[K[36m[K:[m[K            - __salt__    [01;31m[K# Execution[m[K functions (i.e. __salt__['test.echo']('foo'))
[35m[K/tmp/salt/tests/unit/loader/test_globals.py[m[K[36m[K-[m[K[32m[K136[m[K[36m[K-[m[K            - __grains__  # Grains (i.e. __grains__['os'])
[36m[K##############################################[m[K
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K-[m[K[32m[K30033[m[K[36m[K-[m[KStarting Nmap 6.40 ( http://nmap.org ) at 2013\-12\-29 19:44 CST
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K:[m[K[32m[K30034[m[K[36m[K:[m[KNmap scan report for salt.master.ip.[01;31m[Kaddr ([m[K10.0.0.10)
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K-[m[K[32m[K30035[m[K[36m[K-[m[KHost is up (0.0026s latency).
[36m[K##############################################[m[K
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K-[m[K[32m[K145403[m[K[36m[K-[m[K.TP
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K:[m[K[32m[K145404[m[K[36m[K:[m[K.B salt.modules.network.hw_[01;31m[Kaddr([m[Kiface)
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K-[m[K[32m[K145405[m[K[36m[K-[m[KReturn the hardware address (a.k.a. MAC address) for a given interface
[36m[K##############################################[m[K
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K-[m[K[32m[K145420[m[K[36m[K-[m[K.TP
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K:[m[K[32m[K145421[m[K[36m[K:[m[K.B salt.modules.network.hw[01;31m[Kaddr([m[Kiface)
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K-[m[K[32m[K145422[m[K[36m[K-[m[KThis function is an alias of \fBhw_addr\fP\&.
[36m[K##############################################[m[K
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K-[m[K[32m[K196232[m[K[36m[K-[m[K.TP
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K:[m[K[32m[K196233[m[K[36m[K:[m[K.B salt.modules.win_network.hw_[01;31m[Kaddr([m[Kiface)
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K-[m[K[32m[K196234[m[K[36m[K-[m[KReturn the hardware address (a.k.a. MAC address) for a given interface
[36m[K##############################################[m[K
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K-[m[K[32m[K196249[m[K[36m[K-[m[K.TP
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K:[m[K[32m[K196250[m[K[36m[K:[m[K.B salt.modules.win_network.hw[01;31m[Kaddr([m[Kiface)
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K-[m[K[32m[K196251[m[K[36m[K-[m[KThis function is an alias of \fBhw_addr\fP\&.
[36m[K##############################################[m[K
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K-[m[K[32m[K256648[m[K[36m[K-[m[K.B ip
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K:[m[K[32m[K256649[m[K[36m[K:[m[KThe ip [01;31m[Kaddr([m[Ks) of the host to remove
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K-[m[K[32m[K256650[m[K[36m[K-[m[K.UNINDENT
[36m[K##############################################[m[K
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K-[m[K[32m[K256682[m[K[36m[K-[m[K.B ip
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K:[m[K[32m[K256683[m[K[36m[K:[m[KThe ip [01;31m[Kaddr([m[Ks) to apply to the host
[35m[K/tmp/salt/doc/man/salt.7[m[K[36m[K-[m[K[32m[K256684[m[K[36m[K-[m[K.UNINDENT
[36m[K##############################################[m[K
[35m[K/tmp/salt/doc/topics/cloud/windows.rst[m[K[36m[K-[m[K[32m[K146[m[K[36m[K-[m[K
[35m[K/tmp/salt/doc/topics/cloud/windows.rst[m[K[36m[K:[m[K[32m[K147[m[K[36m[K:[m[K    winrm create winrm/config/listener?Address=*+Transport=HTTPS  `@`{Hostname=[01;31m[K`"($certId)`[m[K"`;CertificateThumbprint=[01;31m[K`"($cert.Thumbprint)`[m[K"`}
[35m[K/tmp/salt/doc/topics/cloud/windows.rst[m[K[36m[K-[m[K[32m[K148[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/doc/topics/troubleshooting/minion.rst[m[K[36m[K-[m[K[32m[K51[m[K[36m[K-[m[K    Starting Nmap 6.40 ( http://nmap.org ) at 2013-12-29 19:44 CST
[35m[K/tmp/salt/doc/topics/troubleshooting/minion.rst[m[K[36m[K:[m[K[32m[K52[m[K[36m[K:[m[K    Nmap scan report for salt.master.ip.[01;31m[Kaddr ([m[K10.0.0.10)
[35m[K/tmp/salt/doc/topics/troubleshooting/minion.rst[m[K[36m[K-[m[K[32m[K53[m[K[36m[K-[m[K    Host is up (0.0026s latency).
[36m[K##############################################[m[K
[35m[K/tmp/salt/doc/topics/development/hacking.rst[m[K[36m[K-[m[K[32m[K104[m[K[36m[K-[m[KThe ``/path/to/your/virtualenv`` referenced multiple times below is also
[35m[K/tmp/salt/doc/topics/development/hacking.rst[m[K[36m[K:[m[K[32m[K105[m[K[36m[K:[m[Kavailable in the variable `[01;31m[K`$VIRTUAL_ENV`[m[K` once the virtual environment is
[35m[K/tmp/salt/doc/topics/development/hacking.rst[m[K[36m[K-[m[K[32m[K106[m[K[36m[K-[m[Kactivated.
[36m[K##############################################[m[K
[35m[K/tmp/salt/doc/topics/execution/remote_execution.rst[m[K[36m[K-[m[K[32m[K88[m[K[36m[K-[m[Kthe first argument used to be parsed as the dictionary
[35m[K/tmp/salt/doc/topics/execution/remote_execution.rst[m[K[36m[K:[m[K[32m[K89[m[K[36m[K:[m[K`[01;31m[K`{'echo "Hello': '$FIRST_NAME"'}`[m[K`. This was generally not the expected
[35m[K/tmp/salt/doc/topics/execution/remote_execution.rst[m[K[36m[K-[m[K[32m[K90[m[K[36m[K-[m[Kbehavior.
[36m[K##############################################[m[K
[35m[K/tmp/salt/doc/topics/tutorials/intro_scale.rst[m[K[36m[K-[m[K[32m[K42[m[K[36m[K-[m[K`Issue 5948 <https://github.com/saltstack/salt/issues/5948>`_,
[35m[K/tmp/salt/doc/topics/tutorials/intro_scale.rst[m[K[36m[K:[m[K[32m[K43[m[K[36m[K:[m[K[01;31m[K`Mail thread <https://groups.google.com/forum/#!searchin/salt-users/lots$20of$20minions/salt-users/WxothArv2Do/t12MigMQDFAJ>`[m[K_)
[35m[K/tmp/salt/doc/topics/tutorials/intro_scale.rst[m[K[36m[K-[m[K[32m[K44[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/ext/win_inet_pton.py[m[K[36m[K-[m[K[32m[K14[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/ext/win_inet_pton.py[m[K[36m[K:[m[K[32m[K15[m[K[36m[K:[m[Kclass sock[01;31m[Kaddr([m[Kctypes.Structure):
[35m[K/tmp/salt/salt/ext/win_inet_pton.py[m[K[36m[K-[m[K[32m[K16[m[K[36m[K-[m[K    _fields_ = [("sa_family", ctypes.c_short),
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/ext/win_inet_pton.py[m[K[36m[K-[m[K[32m[K52[m[K[36m[K-[m[K    # https://msdn.microsoft.com/en-us/library/windows/desktop/ms738563.aspx
[35m[K/tmp/salt/salt/ext/win_inet_pton.py[m[K[36m[K:[m[K[32m[K53[m[K[36m[K:[m[K    addr = sock[01;31m[Kaddr([m[K)
[35m[K/tmp/salt/salt/ext/win_inet_pton.py[m[K[36m[K-[m[K[32m[K54[m[K[36m[K-[m[K    addr.sa_family = address_family
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/ext/win_inet_pton.py[m[K[36m[K-[m[K[32m[K74[m[K[36m[K-[m[Kdef inet_ntop(address_family, packed_ip):
[35m[K/tmp/salt/salt/ext/win_inet_pton.py[m[K[36m[K:[m[K[32m[K75[m[K[36m[K:[m[K    addr = sock[01;31m[Kaddr([m[K)
[35m[K/tmp/salt/salt/ext/win_inet_pton.py[m[K[36m[K-[m[K[32m[K76[m[K[36m[K-[m[K    addr.sa_family = address_family
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/cli/salt.py[m[K[36m[K-[m[K[32m[K56[m[K[36m[K-[m[K            # exit with the appropriate error condition
[35m[K/tmp/salt/salt/cli/salt.py[m[K[36m[K:[m[K[32m[K57[m[K[36m[K:[m[K            [01;31m[K# Execution[m[K will not continue past this point
[35m[K/tmp/salt/salt/cli/salt.py[m[K[36m[K-[m[K[32m[K58[m[K[36m[K-[m[K            # in batch mode.
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/states/loop.py[m[K[36m[K-[m[K[32m[K106[m[K[36m[K-[m[K        m_ret = __salt__[name](*m_args, **m_kwargs)
[35m[K/tmp/salt/salt/states/loop.py[m[K[36m[K:[m[K[32m[K107[m[K[36m[K:[m[K        if [01;31m[Keval(condition)[m[K:  # pylint: disable=W0123
[35m[K/tmp/salt/salt/states/loop.py[m[K[36m[K-[m[K[32m[K108[m[K[36m[K-[m[K            ret['result'] = True
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/states/git.py[m[K[36m[K-[m[K[32m[K1917[m[K[36m[K-[m[K        If a new repository is initialized, this argument will specify an
[35m[K/tmp/salt/salt/states/git.py[m[K[36m[K:[m[K[32m[K1918[m[K[36m[K:[m[K        alternate `[01;31m[K`$GIT_DIR`[m[K`
[35m[K/tmp/salt/salt/states/git.py[m[K[36m[K-[m[K[32m[K1919[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/states/win_network.py[m[K[36m[K-[m[K[32m[K115[m[K[36m[K-[m[K            bad_ips = [x for x in dns_servers
[35m[K/tmp/salt/salt/states/win_network.py[m[K[36m[K:[m[K[32m[K116[m[K[36m[K:[m[K                       if not salt.utils.validate.net.ipv4_[01;31m[Kaddr([m[Kx)]
[35m[K/tmp/salt/salt/states/win_network.py[m[K[36m[K-[m[K[32m[K117[m[K[36m[K-[m[K            if bad_ips:
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/states/win_network.py[m[K[36m[K-[m[K[32m[K143[m[K[36m[K-[m[K            bad_ips = [x for x in ip_addrs
[35m[K/tmp/salt/salt/states/win_network.py[m[K[36m[K:[m[K[32m[K144[m[K[36m[K:[m[K                       if not salt.utils.validate.net.ipv4_[01;31m[Kaddr([m[Kx)]
[35m[K/tmp/salt/salt/states/win_network.py[m[K[36m[K-[m[K[32m[K145[m[K[36m[K-[m[K            if bad_ips:
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/states/win_network.py[m[K[36m[K-[m[K[32m[K150[m[K[36m[K-[m[K            if gateway is not None:
[35m[K/tmp/salt/salt/states/win_network.py[m[K[36m[K:[m[K[32m[K151[m[K[36m[K:[m[K                if not salt.utils.validate.net.ipv4_[01;31m[Kaddr([m[Kgateway):
[35m[K/tmp/salt/salt/states/win_network.py[m[K[36m[K-[m[K[32m[K152[m[K[36m[K-[m[K                    errors.append('Gateway IP {0} is invalid.'.format(gateway))
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/states/host.py[m[K[36m[K-[m[K[32m[K74[m[K[36m[K-[m[K    ip
[35m[K/tmp/salt/salt/states/host.py[m[K[36m[K:[m[K[32m[K75[m[K[36m[K:[m[K        The ip [01;31m[Kaddr([m[Ks) to apply to the host
[35m[K/tmp/salt/salt/states/host.py[m[K[36m[K-[m[K[32m[K76[m[K[36m[K-[m[K    '''
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/states/host.py[m[K[36m[K-[m[K[32m[K93[m[K[36m[K-[m[K            else:
[35m[K/tmp/salt/salt/states/host.py[m[K[36m[K:[m[K[32m[K94[m[K[36m[K:[m[K                if salt.utils.validate.net.ipv4_[01;31m[Kaddr([m[K_ip) or salt.utils.validate.net.ipv6_[01;31m[Kaddr([m[K_ip):
[35m[K/tmp/salt/salt/states/host.py[m[K[36m[K-[m[K[32m[K95[m[K[36m[K-[m[K                    if __salt__['hosts.add_host'](_ip, name):
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/states/host.py[m[K[36m[K-[m[K[32m[K116[m[K[36m[K-[m[K    ip
[35m[K/tmp/salt/salt/states/host.py[m[K[36m[K:[m[K[32m[K117[m[K[36m[K:[m[K        The ip [01;31m[Kaddr([m[Ks) of the host to remove
[35m[K/tmp/salt/salt/states/host.py[m[K[36m[K-[m[K[32m[K118[m[K[36m[K-[m[K    '''
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/states/composer.py[m[K[36m[K-[m[K[32m[K107[m[K[36m[K-[m[K    composer_home
[35m[K/tmp/salt/salt/states/composer.py[m[K[36m[K:[m[K[32m[K108[m[K[36m[K:[m[K        `[01;31m[K`$COMPOSER_HOME`[m[K` environment variable
[35m[K/tmp/salt/salt/states/composer.py[m[K[36m[K-[m[K[32m[K109[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/states/composer.py[m[K[36m[K-[m[K[32m[K234[m[K[36m[K-[m[K    composer_home
[35m[K/tmp/salt/salt/states/composer.py[m[K[36m[K:[m[K[32m[K235[m[K[36m[K:[m[K        `[01;31m[K`$COMPOSER_HOME`[m[K` environment variable
[35m[K/tmp/salt/salt/states/composer.py[m[K[36m[K-[m[K[32m[K236[m[K[36m[K-[m[K    '''
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/renderers/gpg.py[m[K[36m[K-[m[K[32m[K123[m[K[36m[K-[m[K    # awk
[35m[K/tmp/salt/salt/renderers/gpg.py[m[K[36m[K:[m[K[32m[K124[m[K[36m[K:[m[K    ciphertext=[01;31m[K`echo -n "supersecret" | gpg --armor --batch --trust-model always --encrypt -r user@domain.com | awk '{printf "%s\\n",$0} END {print ""}'`[m[K
[35m[K/tmp/salt/salt/renderers/gpg.py[m[K[36m[K-[m[K[32m[K125[m[K[36m[K-[m[K    # Perl
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/renderers/gpg.py[m[K[36m[K-[m[K[32m[K173[m[K[36m[K-[m[K    # awk
[35m[K/tmp/salt/salt/renderers/gpg.py[m[K[36m[K:[m[K[32m[K174[m[K[36m[K:[m[K    ciphertext=[01;31m[K`echo -n "{'secret_a': 'CorrectHorseBatteryStaple', 'secret_b': 'GPG is fun!'}" | gpg --armor --batch --trust-model always --encrypt -r user@domain.com | awk '{printf "%s\\n",$0} END {print ""}'`[m[K
[35m[K/tmp/salt/salt/renderers/gpg.py[m[K[36m[K-[m[K[32m[K175[m[K[36m[K-[m[K    # Perl
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/auth/django.py[m[K[36m[K-[m[K[32m[K115[m[K[36m[K-[m[K        DJANGO_AUTH_CLASS_str = 'django_auth_module.{0}'.format(django_model_name)
[35m[K/tmp/salt/salt/auth/django.py[m[K[36m[K:[m[K[32m[K116[m[K[36m[K:[m[K        DJANGO_AUTH_CLASS = [01;31m[Keval(DJANGO_AUTH_CLASS_str)[m[K  # pylint: disable=W0123
[35m[K/tmp/salt/salt/auth/django.py[m[K[36m[K-[m[K[32m[K117[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/cloud/clouds/gce.py[m[K[36m[K-[m[K[32m[K401[m[K[36m[K-[m[K    try:
[35m[K/tmp/salt/salt/cloud/clouds/gce.py[m[K[36m[K:[m[K[32m[K402[m[K[36m[K:[m[K        tags = literal_[01;31m[Keval(t)[m[K
[35m[K/tmp/salt/salt/cloud/clouds/gce.py[m[K[36m[K-[m[K[32m[K403[m[K[36m[K-[m[K    except Exception:  # pylint: disable=W0703
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/cloud/clouds/gce.py[m[K[36m[K-[m[K[32m[K419[m[K[36m[K-[m[K    try:
[35m[K/tmp/salt/salt/cloud/clouds/gce.py[m[K[36m[K:[m[K[32m[K420[m[K[36m[K:[m[K        metadata = literal_[01;31m[Keval(md)[m[K
[35m[K/tmp/salt/salt/cloud/clouds/gce.py[m[K[36m[K-[m[K[32m[K421[m[K[36m[K-[m[K    except Exception:  # pylint: disable=W0703
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/cloud/deploy/bootstrap-salt.sh[m[K[36m[K-[m[K[32m[K1899[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/cloud/deploy/bootstrap-salt.sh[m[K[36m[K:[m[K[32m[K1900[m[K[36m[K:[m[K        # Just calling [01;31m[K`git reset --hard $GIT_REV`[m[K on a branch name that has
[35m[K/tmp/salt/salt/cloud/deploy/bootstrap-salt.sh[m[K[36m[K-[m[K[32m[K1901[m[K[36m[K-[m[K        # already been checked out will not update that branch to the upstream
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/cloud/deploy/bootstrap-salt.sh[m[K[36m[K-[m[K[32m[K4790[m[K[36m[K-[m[K    _PACKAGESITE="http://pkg.freebsd.org/${ABI}/latest"
[35m[K/tmp/salt/salt/cloud/deploy/bootstrap-salt.sh[m[K[36m[K:[m[K[32m[K4791[m[K[36m[K:[m[K    # Awkwardly, we want the [01;31m[K`${ABI}`[m[K to be in conf file without escaping
[35m[K/tmp/salt/salt/cloud/deploy/bootstrap-salt.sh[m[K[36m[K-[m[K[32m[K4792[m[K[36m[K-[m[K    PKGCONFURL="pkg+http://pkg.freebsd.org/\${ABI}/latest"
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/netapi/rest_cherrypy/index.html[m[K[36m[K-[m[K[32m[K57[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/netapi/rest_cherrypy/index.html[m[K[36m[K:[m[K[32m[K58[m[K[36m[K:[m[K        return [01;31m[K`<ul>${li.join('')}</ul>`[m[K;
[35m[K/tmp/salt/salt/netapi/rest_cherrypy/index.html[m[K[36m[K-[m[K[32m[K59[m[K[36m[K-[m[K    });
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K-[m[K[32m[K14[m[K[36m[K-[m[K- a Redis key consists of the bank name and the cache key separated by ``/``, e.g.:
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K:[m[K[32m[K15[m[K[36m[K:[m[K`[01;31m[K`$KEY_minions/alpha/stuff`[m[K` where ``minions/alpha`` is the bank name
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K-[m[K[32m[K16[m[K[36m[K-[m[Kand ``stuff`` is the key name.
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K-[m[K[32m[K22[m[K[36m[K-[m[KInstead, each bank hierarchy has a Redis SET associated
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K:[m[K[32m[K23[m[K[36m[K:[m[Kwhich stores the list of sub-banks. By default, these keys begin with `[01;31m[K`$BANK_`[m[K`.
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K-[m[K[32m[K24[m[K[36m[K-[m[K- in addition, each key name is stored in a separate SET
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K:[m[K[32m[K25[m[K[36m[K:[m[Kof all the keys within a bank. By default, these SETs begin with `[01;31m[K`$BANKEYS_`[m[K`.
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K-[m[K[32m[K26[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K-[m[K[32m[K42[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K:[m[K[32m[K43[m[K[36m[K:[m[K- `[01;31m[K`$BANK_*`[m[K` is a Redis SET containing the list of banks under the current bank
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K:[m[K[32m[K44[m[K[36m[K:[m[K- `[01;31m[K`$BANKEYS_*`[m[K` is a Redis SET containing the list of keys under the current bank
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K:[m[K[32m[K45[m[K[36m[K:[m[K- `[01;31m[K`$KEY_*`[m[K` keeps the value of the key
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K-[m[K[32m[K46[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K-[m[K[32m[K48[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K:[m[K[32m[K49[m[K[36m[K:[m[Kbank_prefix: `[01;31m[K`$BANK`[m[K`
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K-[m[K[32m[K50[m[K[36m[K-[m[K    The prefix used for the name of the Redis key storing the list of sub-banks.
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K-[m[K[32m[K51[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K:[m[K[32m[K52[m[K[36m[K:[m[Kbank_keys_prefix: `[01;31m[K`$BANKEYS`[m[K`
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K-[m[K[32m[K53[m[K[36m[K-[m[K    The prefix used for the name of the Redis keyt storing the list of keys under a certain bank.
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K-[m[K[32m[K54[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K:[m[K[32m[K55[m[K[36m[K:[m[Kkey_prefix: `[01;31m[K`$KEY`[m[K`
[35m[K/tmp/salt/salt/cache/redis_cache.py[m[K[36m[K-[m[K[32m[K56[m[K[36m[K-[m[K    The prefix of the Redis keys having the value of the keys to be cached under
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K-[m[K[32m[K32[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K:[m[K[32m[K33[m[K[36m[K:[m[Kdef __ip_[01;31m[Kaddr([m[Kaddr, address_family=socket.AF_INET):
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K-[m[K[32m[K34[m[K[36m[K-[m[K    '''
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K-[m[K[32m[K67[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K:[m[K[32m[K68[m[K[36m[K:[m[Kdef ipv4_[01;31m[Kaddr([m[Kaddr):
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K-[m[K[32m[K69[m[K[36m[K-[m[K    '''
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K-[m[K[32m[K72[m[K[36m[K-[m[K    '''
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K:[m[K[32m[K73[m[K[36m[K:[m[K    return __ip_[01;31m[Kaddr([m[Kaddr, socket.AF_INET)
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K-[m[K[32m[K74[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K-[m[K[32m[K75[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K:[m[K[32m[K76[m[K[36m[K:[m[Kdef ipv6_[01;31m[Kaddr([m[Kaddr):
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K-[m[K[32m[K77[m[K[36m[K-[m[K    '''
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K-[m[K[32m[K80[m[K[36m[K-[m[K    '''
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K:[m[K[32m[K81[m[K[36m[K:[m[K    return __ip_[01;31m[Kaddr([m[Kaddr, socket.AF_INET6)
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K-[m[K[32m[K82[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K-[m[K[32m[K94[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/utils/validate/net.py[m[K[36m[K:[m[K[32m[K95[m[K[36m[K:[m[K    return ipv4_[01;31m[Kaddr([m[Kmask) and octets == sorted(octets, reverse=True)
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/utils/yamlloader.py[m[K[36m[K-[m[K[32m[K108[m[K[36m[K-[m[K            if re.match(r'^u([\'"]).+\1$', node.value, flags=re.IGNORECASE):
[35m[K/tmp/salt/salt/utils/yamlloader.py[m[K[36m[K:[m[K[32m[K109[m[K[36m[K:[m[K                node.value = [01;31m[Keval(node.value, {}, {})[m[K  # pylint: disable=W0123
[35m[K/tmp/salt/salt/utils/yamlloader.py[m[K[36m[K-[m[K[32m[K110[m[K[36m[K-[m[K        return super(SaltYamlSafeLoader, self).construct_scalar(node)
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K-[m[K[32m[K199[m[K[36m[K-[m[K    try:
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K:[m[K[32m[K200[m[K[36m[K:[m[K        hostname, aliaslist, ipaddrlist = socket.gethostby[01;31m[Kaddr([m[Kip)
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K-[m[K[32m[K201[m[K[36m[K-[m[K    except Exception:
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K-[m[K[32m[K402[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K:[m[K[32m[K403[m[K[36m[K:[m[Kdef ip[01;31m[Kaddr([m[Kvalue, options=None):
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K-[m[K[32m[K404[m[K[36m[K-[m[K    '''
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K-[m[K[32m[K417[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K:[m[K[32m[K418[m[K[36m[K:[m[Kdef _filter_ip[01;31m[Kaddr([m[Kvalue, options, version=None):
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K-[m[K[32m[K419[m[K[36m[K-[m[K    ipaddr_filter_out = None
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K-[m[K[32m[K425[m[K[36m[K-[m[K    else:
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K:[m[K[32m[K426[m[K[36m[K:[m[K        ipaddr_filter_out = ip[01;31m[Kaddr([m[Kvalue, options)
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K-[m[K[32m[K427[m[K[36m[K-[m[K    if not ipaddr_filter_out:
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K-[m[K[32m[K437[m[K[36m[K-[m[K    '''
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K:[m[K[32m[K438[m[K[36m[K:[m[K    ipaddr_filter_out = _filter_ip[01;31m[Kaddr([m[Kvalue, options=options, version=version)
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K-[m[K[32m[K439[m[K[36m[K-[m[K    if not ipaddr_filter_out:
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K-[m[K[32m[K461[m[K[36m[K-[m[K    '''
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K:[m[K[32m[K462[m[K[36m[K:[m[K    ipaddr_filter_out = _filter_ip[01;31m[Kaddr([m[Kvalue, options=options, version=version)
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K-[m[K[32m[K463[m[K[36m[K-[m[K    if not ipaddr_filter_out:
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K-[m[K[32m[K480[m[K[36m[K-[m[K    '''
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K:[m[K[32m[K481[m[K[36m[K:[m[K    ipaddr_filter_out = _filter_ip[01;31m[Kaddr([m[Kvalue, options=options, version=version)
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K-[m[K[32m[K482[m[K[36m[K-[m[K    if not ipaddr_filter_out:
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K-[m[K[32m[K974[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K:[m[K[32m[K975[m[K[36m[K:[m[Kdef hw_[01;31m[Kaddr([m[Kiface):
[35m[K/tmp/salt/salt/utils/network.py[m[K[36m[K-[m[K[32m[K976[m[K[36m[K-[m[K    '''
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/utils/schedule.py[m[K[36m[K-[m[K[32m[K937[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/utils/schedule.py[m[K[36m[K:[m[K[32m[K938[m[K[36m[K:[m[K    def [01;31m[Keval(self)[m[K:
[35m[K/tmp/salt/salt/utils/schedule.py[m[K[36m[K-[m[K[32m[K939[m[K[36m[K-[m[K        '''
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/utils/minions.py[m[K[36m[K-[m[K[32m[K563[m[K[36m[K-[m[K            try:
[35m[K/tmp/salt/salt/utils/minions.py[m[K[36m[K:[m[K[32m[K564[m[K[36m[K:[m[K                return list([01;31m[Keval(results)[m[K)  # pylint: disable=W0123
[35m[K/tmp/salt/salt/utils/minions.py[m[K[36m[K-[m[K[32m[K565[m[K[36m[K-[m[K            except Exception:
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/roster/cloud.py[m[K[36m[K-[m[K[32m[K104[m[K[36m[K-[m[K                continue
[35m[K/tmp/salt/salt/roster/cloud.py[m[K[36m[K:[m[K[32m[K105[m[K[36m[K:[m[K            if not salt.utils.validate.net.ipv4_[01;31m[Kaddr([m[Kip_):
[35m[K/tmp/salt/salt/roster/cloud.py[m[K[36m[K-[m[K[32m[K106[m[K[36m[K-[m[K                continue
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/beacons/network_settings.py[m[K[36m[K-[m[K[32m[K178[m[K[36m[K-[m[K                        config_value = config[interface][attr]['onvalue']
[35m[K/tmp/salt/salt/beacons/network_settings.py[m[K[36m[K:[m[K[32m[K179[m[K[36m[K:[m[K                    new_value = ast.literal_[01;31m[Keval(_diff_stats_dict[attr])[m[K
[35m[K/tmp/salt/salt/beacons/network_settings.py[m[K[36m[K-[m[K[32m[K180[m[K[36m[K-[m[K                    if not config_value or config_value == new_value:
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/minion.py[m[K[36m[K-[m[K[32m[K3040[m[K[36m[K-[m[K        try:
[35m[K/tmp/salt/salt/minion.py[m[K[36m[K:[m[K[32m[K3041[m[K[36m[K:[m[K            return [01;31m[Keval(results)[m[K  # pylint: disable=W0123
[35m[K/tmp/salt/salt/minion.py[m[K[36m[K-[m[K[32m[K3042[m[K[36m[K-[m[K        except Exception:
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/x509.py[m[K[36m[K-[m[K[32m[K1035[m[K[36m[K-[m[K    if not isinstance(argdic, dict):
[35m[K/tmp/salt/salt/modules/x509.py[m[K[36m[K:[m[K[32m[K1036[m[K[36m[K:[m[K        argdic = ast.literal_[01;31m[Keval(argdic)[m[K
[35m[K/tmp/salt/salt/modules/x509.py[m[K[36m[K-[m[K[32m[K1037[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/win_pki.py[m[K[36m[K-[m[K[32m[K95[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/modules/win_pki.py[m[K[36m[K:[m[K[32m[K96[m[K[36m[K:[m[K    if not ast.literal_[01;31m[Keval(_cmd_run(cmd=cmd)[m[K):
[35m[K/tmp/salt/salt/modules/win_pki.py[m[K[36m[K-[m[K[32m[K97[m[K[36m[K-[m[K        raise SaltInvocationError(r"Invalid path specified: {0}".format(name))
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/win_pki.py[m[K[36m[K-[m[K[32m[K394[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/modules/win_pki.py[m[K[36m[K:[m[K[32m[K395[m[K[36m[K:[m[K    ret = ast.literal_[01;31m[Keval(_cmd_run(cmd=str()[m[K.join(cmd)))
[35m[K/tmp/salt/salt/modules/win_pki.py[m[K[36m[K-[m[K[32m[K396[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/win_pki.py[m[K[36m[K-[m[K[32m[K447[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/modules/win_pki.py[m[K[36m[K:[m[K[32m[K448[m[K[36m[K:[m[K    return ast.literal_[01;31m[Keval(_cmd_run(cmd=str()[m[K.join(cmd)))
[35m[K/tmp/salt/salt/modules/win_pki.py[m[K[36m[K-[m[K[32m[K449[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/status.py[m[K[36m[K-[m[K[32m[K181[m[K[36m[K-[m[K        func = '{0}()'.format(key.split('.')[1])
[35m[K/tmp/salt/salt/modules/status.py[m[K[36m[K:[m[K[32m[K182[m[K[36m[K:[m[K        vals = [01;31m[Keval(func)[m[K  # pylint: disable=W0123
[35m[K/tmp/salt/salt/modules/status.py[m[K[36m[K-[m[K[32m[K183[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/rh_ip.py[m[K[36m[K-[m[K[32m[K1064[m[K[36m[K-[m[K        ipaddr = route['ipaddr']
[35m[K/tmp/salt/salt/modules/rh_ip.py[m[K[36m[K:[m[K[32m[K1065[m[K[36m[K:[m[K        if salt.utils.validate.net.ipv6_[01;31m[Kaddr([m[Kipaddr):
[35m[K/tmp/salt/salt/modules/rh_ip.py[m[K[36m[K-[m[K[32m[K1066[m[K[36m[K-[m[K            opts6.append(route)
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/boto3_route53.py[m[K[36m[K-[m[K[32m[K851[m[K[36m[K-[m[K             }'
[35m[K/tmp/salt/salt/modules/boto3_route53.py[m[K[36m[K:[m[K[32m[K852[m[K[36m[K:[m[K        foo=[01;31m[K`echo $foo`[m[K  # Remove newlines
[35m[K/tmp/salt/salt/modules/boto3_route53.py[m[K[36m[K-[m[K[32m[K853[m[K[36m[K-[m[K        salt myminion boto3_route53.change_resource_record_sets DomainName=example.org. \
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/win_ip.py[m[K[36m[K-[m[K[32m[K246[m[K[36m[K-[m[K    '''
[35m[K/tmp/salt/salt/modules/win_ip.py[m[K[36m[K:[m[K[32m[K247[m[K[36m[K:[m[K    def _find_[01;31m[Kaddr([m[Kiface, addr, timeout=1):
[35m[K/tmp/salt/salt/modules/win_ip.py[m[K[36m[K-[m[K[32m[K248[m[K[36m[K-[m[K        ip, cidr = addr.rsplit('/', 1)
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/win_ip.py[m[K[36m[K-[m[K[32m[K257[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/modules/win_ip.py[m[K[36m[K:[m[K[32m[K258[m[K[36m[K:[m[K    if not salt.utils.validate.net.ipv4_[01;31m[Kaddr([m[Kaddr):
[35m[K/tmp/salt/salt/modules/win_ip.py[m[K[36m[K-[m[K[32m[K259[m[K[36m[K-[m[K        raise SaltInvocationError('Invalid address \'{0}\''.format(addr))
[35m[K/tmp/salt/salt/modules/win_ip.py[m[K[36m[K-[m[K[32m[K260[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/modules/win_ip.py[m[K[36m[K:[m[K[32m[K261[m[K[36m[K:[m[K    if gateway and not salt.utils.validate.net.ipv4_[01;31m[Kaddr([m[Kaddr):
[35m[K/tmp/salt/salt/modules/win_ip.py[m[K[36m[K-[m[K[32m[K262[m[K[36m[K-[m[K        raise SaltInvocationError(
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/win_ip.py[m[K[36m[K-[m[K[32m[K268[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/modules/win_ip.py[m[K[36m[K:[m[K[32m[K269[m[K[36m[K:[m[K    if append and _find_[01;31m[Kaddr([m[Kiface, addr):
[35m[K/tmp/salt/salt/modules/win_ip.py[m[K[36m[K-[m[K[32m[K270[m[K[36m[K-[m[K        raise CommandExecutionError(
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/win_ip.py[m[K[36m[K-[m[K[32m[K292[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/modules/win_ip.py[m[K[36m[K:[m[K[32m[K293[m[K[36m[K:[m[K    new_addr = _find_[01;31m[Kaddr([m[Kiface, addr, timeout=10)
[35m[K/tmp/salt/salt/modules/win_ip.py[m[K[36m[K-[m[K[32m[K294[m[K[36m[K-[m[K    if not new_addr:
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/git.py[m[K[36m[K-[m[K[32m[K1930[m[K[36m[K-[m[K    separate_git_dir
[35m[K/tmp/salt/salt/modules/git.py[m[K[36m[K:[m[K[32m[K1931[m[K[36m[K:[m[K        Set this argument to specify an alternate `[01;31m[K`$GIT_DIR`[m[K`
[35m[K/tmp/salt/salt/modules/git.py[m[K[36m[K-[m[K[32m[K1932[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/data.py[m[K[36m[K-[m[K[32m[K71[m[K[36m[K-[m[K    if not isinstance(new_data, dict):
[35m[K/tmp/salt/salt/modules/data.py[m[K[36m[K:[m[K[32m[K72[m[K[36m[K:[m[K        if isinstance(ast.literal_[01;31m[Keval(new_data)[m[K, dict):
[35m[K/tmp/salt/salt/modules/data.py[m[K[36m[K:[m[K[32m[K73[m[K[36m[K:[m[K            new_data = ast.literal_[01;31m[Keval(new_data)[m[K
[35m[K/tmp/salt/salt/modules/data.py[m[K[36m[K-[m[K[32m[K74[m[K[36m[K-[m[K        else:
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/win_iis.py[m[K[36m[K-[m[K[32m[K1653[m[K[36m[K-[m[K        Backups are made when a configuration is edited. Manual backups are
[35m[K/tmp/salt/salt/modules/win_iis.py[m[K[36m[K:[m[K[32m[K1654[m[K[36m[K:[m[K        stored in the `[01;31m[K`$env:Windir\System32\inetsrv\backup`[m[K` folder.
[35m[K/tmp/salt/salt/modules/win_iis.py[m[K[36m[K-[m[K[32m[K1655[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/win_iis.py[m[K[36m[K-[m[K[32m[K1697[m[K[36m[K-[m[K    .. note::
[35m[K/tmp/salt/salt/modules/win_iis.py[m[K[36m[K:[m[K[32m[K1698[m[K[36m[K:[m[K        Backups are stored in the `[01;31m[K`$env:Windir\System32\inetsrv\backup`[m[K`
[35m[K/tmp/salt/salt/modules/win_iis.py[m[K[36m[K-[m[K[32m[K1699[m[K[36m[K-[m[K        folder.
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/win_network.py[m[K[36m[K-[m[K[32m[K307[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/modules/win_network.py[m[K[36m[K:[m[K[32m[K308[m[K[36m[K:[m[Kdef hw_[01;31m[Kaddr([m[Kiface):
[35m[K/tmp/salt/salt/modules/win_network.py[m[K[36m[K-[m[K[32m[K309[m[K[36m[K-[m[K    '''
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/win_network.py[m[K[36m[K-[m[K[32m[K317[m[K[36m[K-[m[K    '''
[35m[K/tmp/salt/salt/modules/win_network.py[m[K[36m[K:[m[K[32m[K318[m[K[36m[K:[m[K    return salt.utils.network.hw_[01;31m[Kaddr([m[Kiface)
[35m[K/tmp/salt/salt/modules/win_network.py[m[K[36m[K-[m[K[32m[K319[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/win_network.py[m[K[36m[K-[m[K[32m[K422[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/modules/win_network.py[m[K[36m[K:[m[K[32m[K423[m[K[36m[K:[m[K    if salt.utils.validate.net.ipv4_[01;31m[Kaddr([m[Khost) or salt.utils.validate.net.ipv6_[01;31m[Kaddr([m[Khost):
[35m[K/tmp/salt/salt/modules/win_network.py[m[K[36m[K-[m[K[32m[K424[m[K[36m[K-[m[K        address = host
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/debian_ip.py[m[K[36m[K-[m[K[32m[K305[m[K[36m[K-[m[K    '''validate an IPv4 address'''
[35m[K/tmp/salt/salt/modules/debian_ip.py[m[K[36m[K:[m[K[32m[K306[m[K[36m[K:[m[K    return (salt.utils.validate.net.ipv4_[01;31m[Kaddr([m[Kvalue), value,
[35m[K/tmp/salt/salt/modules/debian_ip.py[m[K[36m[K-[m[K[32m[K307[m[K[36m[K-[m[K            'dotted IPv4 address')
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/debian_ip.py[m[K[36m[K-[m[K[32m[K311[m[K[36m[K-[m[K    '''validate an IPv6 address'''
[35m[K/tmp/salt/salt/modules/debian_ip.py[m[K[36m[K:[m[K[32m[K312[m[K[36m[K:[m[K    return (salt.utils.validate.net.ipv6_[01;31m[Kaddr([m[Kvalue), value,
[35m[K/tmp/salt/salt/modules/debian_ip.py[m[K[36m[K-[m[K[32m[K313[m[K[36m[K-[m[K            'IPv6 address')
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/nix.py[m[K[36m[K-[m[K[32m[K8[m[K[36m[K-[m[KDoes not require the machine to be Nixos, just have Nix installed and available to use for the user running this command. Their profile must
[35m[K/tmp/salt/salt/modules/nix.py[m[K[36m[K:[m[K[32m[K9[m[K[36m[K:[m[Kbe located in their home, under `[01;31m[K`$HOME/.nix-profile/`[m[K`, and the nix store, unless specially set up, should be in ``/nix``. To easily use this
[35m[K/tmp/salt/salt/modules/nix.py[m[K[36m[K-[m[K[32m[K10[m[K[36m[K-[m[Kwith multiple users or a root user, set up the _`nix-daemon`.
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/network.py[m[K[36m[K-[m[K[32m[K1023[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/modules/network.py[m[K[36m[K:[m[K[32m[K1024[m[K[36m[K:[m[Kdef hw_[01;31m[Kaddr([m[Kiface):
[35m[K/tmp/salt/salt/modules/network.py[m[K[36m[K-[m[K[32m[K1025[m[K[36m[K-[m[K    '''
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/network.py[m[K[36m[K-[m[K[32m[K1033[m[K[36m[K-[m[K    '''
[35m[K/tmp/salt/salt/modules/network.py[m[K[36m[K:[m[K[32m[K1034[m[K[36m[K:[m[K    return salt.utils.network.hw_[01;31m[Kaddr([m[Kiface)
[35m[K/tmp/salt/salt/modules/network.py[m[K[36m[K-[m[K[32m[K1035[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/network.py[m[K[36m[K-[m[K[32m[K1384[m[K[36m[K-[m[K
[35m[K/tmp/salt/salt/modules/network.py[m[K[36m[K:[m[K[32m[K1385[m[K[36m[K:[m[K    if salt.utils.validate.net.ipv4_[01;31m[Kaddr([m[Khost) or salt.utils.validate.net.ipv6_[01;31m[Kaddr([m[Khost):
[35m[K/tmp/salt/salt/modules/network.py[m[K[36m[K-[m[K[32m[K1386[m[K[36m[K-[m[K        address = host
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/ipmi.py[m[K[36m[K-[m[K[32m[K619[m[K[36m[K-[m[K            if reading:
[35m[K/tmp/salt/salt/modules/ipmi.py[m[K[36m[K:[m[K[32m[K620[m[K[36m[K:[m[K                r = ast.literal_[01;31m[Keval(repr(reading)[m[K)
[35m[K/tmp/salt/salt/modules/ipmi.py[m[K[36m[K-[m[K[32m[K621[m[K[36m[K-[m[K                data[r.pop('name')] = r
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/nilrt_ip.py[m[K[36m[K-[m[K[32m[K122[m[K[36m[K-[m[K    if len(value) == 3:
[35m[K/tmp/salt/salt/modules/nilrt_ip.py[m[K[36m[K:[m[K[32m[K123[m[K[36m[K:[m[K        if not salt.utils.validate.net.ipv4_[01;31m[Kaddr([m[Kvalue[0].strip()):
[35m[K/tmp/salt/salt/modules/nilrt_ip.py[m[K[36m[K-[m[K[32m[K124[m[K[36m[K-[m[K            return (False, 'Invalid ip address: {0} for ipv4 option'.format(value[0]))
[36m[K##############################################[m[K
[35m[K/tmp/salt/salt/modules/nilrt_ip.py[m[K[36m[K-[m[K[32m[K126[m[K[36m[K-[m[K            return (False, 'Invalid netmask: {0} for ipv4 option'.format(value[1]))
[35m[K/tmp/salt/salt/modules/nilrt_ip.py[m[K[36m[K:[m[K[32m[K127[m[K[36m[K:[m[K        if not salt.utils.validate.net.ipv4_[01;31m[Kaddr([m[Kvalue[2].strip()):
[35m[K/tmp/salt/salt/modules/nilrt_ip.py[m[K[36m[K-[m[K[32m[K128[m[K[36m[K-[m[K            return (False, 'Invalid gateway: {0} for ipv4 option'.format(value[2]))
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/salt.bash[m[K[36m[K-[m[K[32m[K72[m[K[36m[K-[m[K    if [ "${cur}" = ":" ]; then
[35m[K/tmp/salt/pkg/salt.bash[m[K[36m[K:[m[K[32m[K73[m[K[36m[K:[m[K        COMPREPLY=($(compgen -W "[01;31m[K`_salt_get_grain_values ${prev}`[m[K"  ))	
[35m[K/tmp/salt/pkg/salt.bash[m[K[36m[K-[m[K[32m[K74[m[K[36m[K-[m[K        return 0
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/salt.bash[m[K[36m[K-[m[K[32m[K80[m[K[36m[K-[m[K        if [ "${prev}" = ":" ]; then
[35m[K/tmp/salt/pkg/salt.bash[m[K[36m[K:[m[K[32m[K81[m[K[36m[K:[m[K        COMPREPLY=( $(compgen -W "[01;31m[K`_salt_get_grain_values ${pprev}`[m[K" -- ${cur}) )
[35m[K/tmp/salt/pkg/salt.bash[m[K[36m[K-[m[K[32m[K82[m[K[36m[K-[m[K        return 0
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/salt.bash[m[K[36m[K-[m[K[32m[K125[m[K[36m[K-[m[K	    MASTER_CONFIG='/etc/salt/master'
[35m[K/tmp/salt/pkg/salt.bash[m[K[36m[K:[m[K[32m[K126[m[K[36m[K:[m[K        COMPREPLY=($(compgen -W "[01;31m[K`awk -F ':'  'BEGIN {print_line = 0};  /^nodegroups/ {print_line = 1;getline } print_line && /^  */ {print $1} /^[^ ]/ {print_line = 0}' <${MASTER_CONFIG}`[m[K" -- ${cur}))
[35m[K/tmp/salt/pkg/salt.bash[m[K[36m[K-[m[K[32m[K127[m[K[36m[K-[m[K        return 0
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K76[m[K[36m[K-[m[K    # We're looking for a tarball starting with "$target-"
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K:[m[K[32m[K77[m[K[36m[K:[m[K    len_target=[01;31m[K`expr length "$target"`[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K78[m[K[36m[K-[m[K    let len_target=${len_target}+1
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K80[m[K[36m[K-[m[K    matches=()
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K:[m[K[32m[K81[m[K[36m[K:[m[K    for filename in [01;31m[K`ls "${location}"`[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K82[m[K[36m[K-[m[K    do
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K125[m[K[36m[K-[m[K        # tarballs using the instructions in the requirements.txt.
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K:[m[K[32m[K126[m[K[36m[K:[m[K        output=[01;31m[K`pip install $PIP_OPTS --download "$srcdir" --requirement "$requirements"`[m[K; return_code=$?
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K127[m[K[36m[K-[m[K    else
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K133[m[K[36m[K-[m[K        # otherwise this variable will be blank.
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K:[m[K[32m[K134[m[K[36m[K:[m[K        output=[01;31m[K`pip install $PIP_OPTS --download "$srcdir" "salt${version}"`[m[K; return_code=$?
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K135[m[K[36m[K-[m[K    fi
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K220[m[K[36m[K-[m[K_display "virtualenv == $VIRTUALENV"
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K:[m[K[32m[K221[m[K[36m[K:[m[Kif ! test -x "[01;31m[K`command -v $VIRTUALENV`[m[K"; then
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K222[m[K[36m[K-[m[K    _error "$VIRTUALENV is not executable"
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K231[m[K[36m[K-[m[K_display "Creating temp virtualenv at $venv_path"
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K:[m[K[32m[K232[m[K[36m[K:[m[Koutput=[01;31m[K`"$VIRTUALENV" $venv_name`[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K233[m[K[36m[K-[m[K_log "$output"
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K246[m[K[36m[K-[m[K_display "swig == $SWIG"
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K:[m[K[32m[K247[m[K[36m[K:[m[Kif ! test -x "[01;31m[K`command -v $SWIG`[m[K"; then
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K248[m[K[36m[K-[m[K    _error "$SWIG is not executable"
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K259[m[K[36m[K-[m[K    cp "$salt_tarball" "$srcdir" || _error "Unable to copy salt tarball to $srcdir"
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K:[m[K[32m[K260[m[K[36m[K:[m[K    salt_tarball=[01;31m[K`basename "$salt_tarball"`[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K261[m[K[36m[K-[m[K    salt_release=${salt_tarball%%.tar*}
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K275[m[K[36m[K-[m[Kdeps=()
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K:[m[K[32m[K276[m[K[36m[K:[m[Kfor dep in [01;31m[K`cat "$requirements" | awk '{print $1}'`[m[K; do
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K277[m[K[36m[K-[m[K    test "$dep" == 'salt' && continue
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K312[m[K[36m[K-[m[K        fi
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K:[m[K[32m[K313[m[K[36m[K:[m[K        zeromq_version=[01;31m[K`egrep '^Version' "$zeromq_spec" | awk '{print $2}'`[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K314[m[K[36m[K-[m[K        _display "ZeroMQ version: $zeromq_version"
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K318[m[K[36m[K-[m[K        arch=`uname -m`
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K:[m[K[32m[K319[m[K[36m[K:[m[K        output=[01;31m[K`env SWIG_FEATURES="-cpperraswarn -includeall -D__${arch}__ -I/usr/include/openssl" $INSTALL 2>&1`[m[K; return_code=$?
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K320[m[K[36m[K-[m[K    else
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K:[m[K[32m[K321[m[K[36m[K:[m[K        output=[01;31m[K`$INSTALL 2>&1`[m[K; return_code=$?
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K322[m[K[36m[K-[m[K    fi
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K329[m[K[36m[K-[m[K_display "Installing $salt_release"
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K:[m[K[32m[K330[m[K[36m[K:[m[Koutput=[01;31m[K`$INSTALL 2>&1`[m[K; return_code=$?
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K331[m[K[36m[K-[m[K_log "$output"
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K333[m[K[36m[K-[m[K_log 'Compressing man pages'
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K:[m[K[32m[K334[m[K[36m[K:[m[Koutput=[01;31m[K`find "${pkgdir}${prefix}/share/man" -type f -not -name '*.gz' -exec gzip {} \;`[m[K
[35m[K/tmp/salt/pkg/shar/build_shar.sh[m[K[36m[K-[m[K[32m[K335[m[K[36m[K-[m[K_log "$output"
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/shar/salt.sh[m[K[36m[K-[m[K[32m[K26[m[K[36m[K-[m[K        test -z "$python" && python=python
[35m[K/tmp/salt/pkg/shar/salt.sh[m[K[36m[K:[m[K[32m[K27[m[K[36m[K:[m[K        pyver=[01;31m[K`/usr/bin/env $python -V 2>&1 | cut -f2 -d' ' | cut -f1,2 -d.`[m[K
[35m[K/tmp/salt/pkg/shar/salt.sh[m[K[36m[K-[m[K[32m[K28[m[K[36m[K-[m[K    fi
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/rpm/salt.bash[m[K[36m[K-[m[K[32m[K72[m[K[36m[K-[m[K    if [ "${cur}" = ":" ]; then
[35m[K/tmp/salt/pkg/rpm/salt.bash[m[K[36m[K:[m[K[32m[K73[m[K[36m[K:[m[K        COMPREPLY=($(compgen -W "[01;31m[K`_salt_get_grain_values ${prev}`[m[K"  ))	
[35m[K/tmp/salt/pkg/rpm/salt.bash[m[K[36m[K-[m[K[32m[K74[m[K[36m[K-[m[K        return 0
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/rpm/salt.bash[m[K[36m[K-[m[K[32m[K80[m[K[36m[K-[m[K        if [ "${prev}" = ":" ]; then
[35m[K/tmp/salt/pkg/rpm/salt.bash[m[K[36m[K:[m[K[32m[K81[m[K[36m[K:[m[K        COMPREPLY=( $(compgen -W "[01;31m[K`_salt_get_grain_values ${pprev}`[m[K" -- ${cur}) )
[35m[K/tmp/salt/pkg/rpm/salt.bash[m[K[36m[K-[m[K[32m[K82[m[K[36m[K-[m[K        return 0
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/rpm/salt.bash[m[K[36m[K-[m[K[32m[K125[m[K[36m[K-[m[K	    MASTER_CONFIG='/etc/salt/master'
[35m[K/tmp/salt/pkg/rpm/salt.bash[m[K[36m[K:[m[K[32m[K126[m[K[36m[K:[m[K        COMPREPLY=($(compgen -W "[01;31m[K`awk -F ':'  'BEGIN {print_line = 0};  /^nodegroups/ {print_line = 1;getline } print_line && /^  */ {print $1} /^[^ ]/ {print_line = 0}' <${MASTER_CONFIG}`[m[K" -- ${cur}))
[35m[K/tmp/salt/pkg/rpm/salt.bash[m[K[36m[K-[m[K[32m[K127[m[K[36m[K-[m[K        return 0
[36m[K##############################################[m[K
[35m[K/tmp/salt/pkg/salt.postrm[m[K[36m[K-[m[K[32m[K37[m[K[36m[K-[m[K
[35m[K/tmp/salt/pkg/salt.postrm[m[K[36m[K:[m[K[32m[K38[m[K[36m[K:[m[Kpkg=[01;31m[K`echo $0 | cut -f1 -d. | cut -f2 -d-`[m[K
[35m[K/tmp/salt/pkg/salt.postrm[m[K[36m[K-[m[K[32m[K39[m[K[36m[K-[m[K
