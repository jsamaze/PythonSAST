===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[36m[K##############################################[m[K
[35m[K/tmp/confire/docs/index.rst[m[K[36m[K-[m[K[32m[K41[m[K[36m[K-[m[K- ``/etc/myapp.yaml``
[35m[K/tmp/confire/docs/index.rst[m[K[36m[K:[m[K[32m[K42[m[K[36m[K:[m[K- `[01;31m[K`$HOME/.myapp.yaml`[m[K`
[35m[K/tmp/confire/docs/index.rst[m[K[36m[K-[m[K[32m[K43[m[K[36m[K-[m[K- ``conf/myapp.yaml``
[36m[K##############################################[m[K
[35m[K/tmp/confire/docs/index.rst[m[K[36m[K-[m[K[32m[K118[m[K[36m[K-[m[K1. Configuration *should not* be Python (sorry Django). It's too easy to screw stuff up, and anyway, you don't want to deal with importing a settings file from ``/etc``!
[35m[K/tmp/confire/docs/index.rst[m[K[36m[K:[m[K[32m[K119[m[K[36m[K:[m[K2. Configuration should be on a per-system basis. This means that there should be an ``/etc/app.yaml`` configuration file as well as a `[01;31m[K`$HOME/.app.yaml`[m[K` configuration file that overwrites the system defaults for a particular user. For development purposes there should also be a `[01;31m[K`$(pwd)/app.yaml`[m[K` file so that you don't have to sprinkle things throughout the system if not needed.
[35m[K/tmp/confire/docs/index.rst[m[K[36m[K-[m[K[32m[K120[m[K[36m[K-[m[K3. Developers should be able to have reasonable defaults already written in code if no YAML file has been provided. These defaults should be added in an API like way that is class based and modularized.
