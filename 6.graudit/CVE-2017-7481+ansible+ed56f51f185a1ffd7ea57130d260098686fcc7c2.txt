===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/ansible/contrib/inventory/cloudforms.py[m[K[36m[K-[m[K[32m[K182[m[K[36m[K-[m[K
[35m[K/tmp/ansible/contrib/inventory/cloudforms.py[m[K[36m[K:[m[K[32m[K183[m[K[36m[K:[m[K        self.group_patterns = [01;31m[Keval(group_patterns)[m[K
[35m[K/tmp/ansible/contrib/inventory/cloudforms.py[m[K[36m[K-[m[K[32m[K184[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters.rst[m[K[36m[K-[m[K[32m[K315[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters.rst[m[K[36m[K:[m[K[32m[K316[m[K[36m[K:[m[K  {{ '192.0.2.1/24' | ip[01;31m[Kaddr([m[K'address') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters.rst[m[K[36m[K-[m[K[32m[K317[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_modules_best_practices.rst[m[K[36m[K-[m[K[32m[K58[m[K[36m[K-[m[K    <127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: badger
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_modules_best_practices.rst[m[K[36m[K:[m[K[32m[K59[m[K[36m[K:[m[K    <127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p "[01;31m[K` echo $HOME/.ansible/tmp/ansible-tmp-1461434734.35-235318071810595 `[m[K" && echo "[01;31m[K` echo $HOME/.ansible/tmp/ansible-tmp-1461434734.35-235318071810595 `[m[K" )'
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_modules_best_practices.rst[m[K[36m[K-[m[K[32m[K60[m[K[36m[K-[m[K    <127.0.0.1> PUT /var/tmp/tmpjdbJ1w TO /home/badger/.ansible/tmp/ansible-tmp-1461434734.35-235318071810595/ping
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_modules_documenting.rst[m[K[36m[K-[m[K[32m[K336[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_modules_documenting.rst[m[K[36m[K:[m[K[32m[K337[m[K[36m[K:[m[KPut your completed module file into the `[01;31m[K`lib/ansible/modules/$CATEGORY/`[m[K` directory and then
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_modules_documenting.rst[m[K[36m[K-[m[K[32m[K338[m[K[36m[K-[m[Krun the command: ``make webdocs``. The new 'modules.html' file will be
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_modules_documenting.rst[m[K[36m[K:[m[K[32m[K339[m[K[36m[K:[m[Kbuilt in the `[01;31m[K`docs/docsite/_build/html/$MODULENAME_module.html`[m[K` directory.
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_modules_documenting.rst[m[K[36m[K-[m[K[32m[K340[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_program_flow_modules.rst[m[K[36m[K-[m[K[32m[K240[m[K[36m[K-[m[Kwhether the interpreter in the shebang line has a specific path configured via
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_program_flow_modules.rst[m[K[36m[K:[m[K[32m[K241[m[K[36m[K:[m[Kan `[01;31m[K`ansible_$X_interpreter`[m[K` inventory variable.  If it does, Ansible
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_program_flow_modules.rst[m[K[36m[K-[m[K[32m[K242[m[K[36m[K-[m[Ksubstitutes that path for the interpreter path given in the module.  After
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_modules_in_groups.rst[m[K[36m[K-[m[K[32m[K84[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_modules_in_groups.rst[m[K[36m[K:[m[K[32m[K85[m[K[36m[K:[m[K* `[01;31m[K`lib/ansible/modules/$category/$topic/__init__.py`[m[K` - An empty file to initialize namespace and allow Python to import the files. *Required new file*
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_modules_in_groups.rst[m[K[36m[K:[m[K[32m[K86[m[K[36m[K:[m[K* `[01;31m[K`lib/ansible/modules/$category/$topic/$yourfirstmodule.py`[m[K` - A single module. *Required new file*
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_modules_in_groups.rst[m[K[36m[K:[m[K[32m[K87[m[K[36m[K:[m[K* `[01;31m[K`lib/ansible/utils/module_docs_fragments/$topic.py`[m[K` - Code documentation, such as details regarding common arguments. *Optional new file*
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_modules_in_groups.rst[m[K[36m[K:[m[K[32m[K88[m[K[36m[K:[m[K* `[01;31m[K`lib/ansible/module_utils/$topic.py`[m[K` - Code shared between more than one module, such as common arguments. *Optional new file*
[35m[K/tmp/ansible/docs/docsite/rst/dev_guide/developing_modules_in_groups.rst[m[K[36m[K-[m[K[32m[K89[m[K[36m[K-[m[K*  ``docs/docsite/rst/dev_guide/developing_module_utilities.rst`` - Document your new `module_utils` file. *Optional update to existing file*
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/intro_configuration.rst[m[K[36m[K-[m[K[32m[K1156[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/intro_configuration.rst[m[K[36m[K:[m[K[32m[K1157[m[K[36m[K:[m[KThis is the location of the ssh binary. It defaults to ``ssh`` which will use the first ssh binary available in `[01;31m[K`$PATH`[m[K`. This config can also be overridden with ``ansible_ssh_executable`` inventory variable::
[35m[K/tmp/ansible/docs/docsite/rst/intro_configuration.rst[m[K[36m[K-[m[K[32m[K1158[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/guide_rax.rst[m[K[36m[K-[m[K[32m[K169[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/guide_rax.rst[m[K[36m[K:[m[K[32m[K170[m[K[36m[K:[m[K.. note:: Dynamic inventory scripts (like ``rax.py``) are saved in ``/usr/share/ansible/inventory`` if Ansible has been installed globally.  If installed to a virtualenv, the inventory scripts are installed to `[01;31m[K`$VIRTUALENV/share/inventory`[m[K`.
[35m[K/tmp/ansible/docs/docsite/rst/guide_rax.rst[m[K[36m[K-[m[K[32m[K171[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K7[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K8[m[K[36m[K:[m[K``ip[01;31m[Kaddr([m[K)`` is a Jinja2 filter designed to provide an interface to `netaddr`_
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K9[m[K[36m[K-[m[KPython package from within Ansible. It can operate on strings or lists of
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K10[m[K[36m[K-[m[Kitems, test various data to check if they are valid IP addresses and manipulate
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K11[m[K[36m[K:[m[Kthe input data to extract requested information. ``ip[01;31m[Kaddr([m[K)`` works both with
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K12[m[K[36m[K-[m[KIPv4 and IPv6 addresses in various forms, there are also additional functions
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K31[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K32[m[K[36m[K:[m[K``ip[01;31m[Kaddr([m[K)`` is designed to return the input value if a query is True, and
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K33[m[K[36m[K-[m[K``False`` if query is False. This way it can be very easily used in chained
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K62[m[K[36m[K-[m[KSometimes you need either IPv4 or IPv6 addresses. To filter only for particular
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K63[m[K[36m[K:[m[Ktype, ``ip[01;31m[Kaddr([m[K)`` filter has two "aliases", ``ipv4()`` and ``ipv6()``.
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K64[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K92[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K93[m[K[36m[K:[m[KYou can filter entire lists - ``ip[01;31m[Kaddr([m[K)`` will return a list with values
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K94[m[K[36m[K-[m[Kvalid for a particular query::
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K130[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K131[m[K[36m[K:[m[KYou can provide single argument to each ``ip[01;31m[Kaddr([m[K)`` filter. Filter will then
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K132[m[K[36m[K-[m[Ktreat it as a query and return values modified by that query. Lists will
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K136[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K137[m[K[36m[K:[m[K- query by name: ``ip[01;31m[Kaddr([m[K'address')``, ``ipv4('network')``;
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K138[m[K[36m[K:[m[K- query by CIDR range: ``ip[01;31m[Kaddr([m[K'192.168.0.0/24')``, ``ipv6('2001:db8::/32')``;
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K139[m[K[36m[K:[m[K- query by index number: ``ip[01;31m[Kaddr([m[K'1')``, ``ip[01;31m[Kaddr([m[K'-1')``;
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K140[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K154[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K155[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'address') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K156[m[K[36m[K-[m[K    ['192.24.2.1', '::1', 'fe80::100']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K160[m[K[36m[K-[m[KCIDR prefixes (as is common with IPv6 addressing), you can use
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K161[m[K[36m[K:[m[K``ip[01;31m[Kaddr([m[K'host')`` filter::
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K162[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K163[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'host') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K164[m[K[36m[K-[m[K    ['192.24.2.1/32', '::1/128', 'fe80::100/10']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K176[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K177[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'public') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K178[m[K[36m[K-[m[K    ['192.24.2.1', '2001:db8:32c:faad::/64']
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K179[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K180[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'private') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K181[m[K[36m[K-[m[K    ['192.168.32.0/24', 'fe80::100/10']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K184[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K185[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'net') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K186[m[K[36m[K-[m[K    ['192.168.32.0/24', '2001:db8:32c:faad::/64']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K189[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K190[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'net') | ip[01;31m[Kaddr([m[K'size') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K191[m[K[36m[K-[m[K    [256, 18446744073709551616L]
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K195[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K196[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'192.0.0.0/8') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K197[m[K[36m[K-[m[K    ['192.24.2.1', '192.168.32.0/24']
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K198[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K199[m[K[36m[K:[m[KIf you specify a positive or negative integer as a query, ``ip[01;31m[Kaddr([m[K)`` will
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K200[m[K[36m[K-[m[Ktreat this as an index and will return specific IP address from a network
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K203[m[K[36m[K-[m[K    # First IP address (network address)
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K204[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'net') | ip[01;31m[Kaddr([m[K'0') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K205[m[K[36m[K-[m[K    ['192.168.32.0/24', '2001:db8:32c:faad::/64']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K207[m[K[36m[K-[m[K    # Second IP address (usually gateway host)
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K208[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'net') | ip[01;31m[Kaddr([m[K'1') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K209[m[K[36m[K-[m[K    ['192.168.32.1/24', '2001:db8:32c:faad::1/64']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K211[m[K[36m[K-[m[K    # Last IP address (broadcast in IPv4 networks)
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K212[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'net') | ip[01;31m[Kaddr([m[K'-1') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K213[m[K[36m[K-[m[K    ['192.168.32.255/24', '2001:db8:32c:faad:ffff:ffff:ffff:ffff/64']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K217[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K218[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'net') | ip[01;31m[Kaddr([m[K'200') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K219[m[K[36m[K-[m[K    ['192.168.32.200/24', '2001:db8:32c:faad::c8/64']
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K220[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K221[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'net') | ip[01;31m[Kaddr([m[K'-200') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K222[m[K[36m[K-[m[K    ['192.168.32.56/24', '2001:db8:32c:faad:ffff:ffff:ffff:ff38/64']
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K223[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K224[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'net') | ip[01;31m[Kaddr([m[K'400') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K225[m[K[36m[K-[m[K    ['2001:db8:32c:faad::190/64']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K231[m[K[36m[K-[m[KVery frequently you use combination of IP addresses and subnet prefixes
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K232[m[K[36m[K:[m[K("CIDR"), this is even more common with IPv6. ``ip[01;31m[Kaddr([m[K)`` filter can extract
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K233[m[K[36m[K-[m[Kuseful data from these prefixes.
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K241[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K242[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'host/prefix') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K243[m[K[36m[K-[m[K    ['2001:db8:deaf:be11::ef3/64', '192.0.2.48/24']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K251[m[K[36m[K-[m[K    iface eth0 inet static
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K252[m[K[36m[K:[m[K        address   {{ ipv4_host | ip[01;31m[Kaddr([m[K'address') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K253[m[K[36m[K:[m[K        network   {{ ipv4_host | ip[01;31m[Kaddr([m[K'network') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K254[m[K[36m[K:[m[K        netmask   {{ ipv4_host | ip[01;31m[Kaddr([m[K'netmask') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K255[m[K[36m[K:[m[K        broadcast {{ ipv4_host | ip[01;31m[Kaddr([m[K'broadcast') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K256[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K285[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K286[m[K[36m[K:[m[K    # {{ host_prefix | ip[01;31m[Kaddr([m[K'host/prefix') | ip[01;31m[Kaddr([m[K'subnet') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K287[m[K[36m[K-[m[K    ['2001:db8:deaf:be11::/64', '192.0.2.0/24']
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K288[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K289[m[K[36m[K:[m[K    # {{ host_prefix | ip[01;31m[Kaddr([m[K'host/prefix') | ip[01;31m[Kaddr([m[K'prefix') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K290[m[K[36m[K-[m[K    [64, 24]
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K294[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K295[m[K[36m[K:[m[KGiven a subnet in the form of network address and subnet mask, it can be converted into CIDR notation using ``ip[01;31m[Kaddr([m[K)``.  This can be useful for converting Ansible facts gathered about network configuration from subnet masks into CIDR format::
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K296[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K314[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K315[m[K[36m[K:[m[KThis result can be canonicalised with ``ip[01;31m[Kaddr([m[K)`` to produce a subnet in CIDR format::
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K316[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K317[m[K[36m[K:[m[K    # {{ net_mask | ip[01;31m[Kaddr([m[K'prefix') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K318[m[K[36m[K-[m[K    '24'
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K319[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K320[m[K[36m[K:[m[K    # {{ net_mask | ip[01;31m[Kaddr([m[K'net') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K321[m[K[36m[K-[m[K    '192.168.0.0/24'
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K343[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K344[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'ipv6') | ip[01;31m[Kaddr([m[K'ipv4') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K345[m[K[36m[K-[m[K    ['192.24.2.1/32', '0.0.0.1/32', '192.168.32.0/24']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K349[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K350[m[K[36m[K:[m[K    # {{ test_list | ip[01;31m[Kaddr([m[K'address') | ip[01;31m[Kaddr([m[K'int') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K351[m[K[36m[K-[m[K    [3222798849, 1, '3232243712/24', '338288524927261089654018896841347694848/10', '42540766412265424405338506004571095040/64']
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K355[m[K[36m[K-[m[K    # {% for address in test_list | ipaddr %}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K356[m[K[36m[K:[m[K    # {{ address | ip[01;31m[Kaddr([m[K'revdns') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K357[m[K[36m[K-[m[K    # {% endfor %}
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K376[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K377[m[K[36m[K:[m[K    # {{ '193.0.2.0' | ip[01;31m[Kaddr([m[K'6to4') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K378[m[K[36m[K-[m[K    2002:c100:0200::1/48
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K454[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K455[m[K[36m[K:[m[KYou can use ``ipsubnet()`` filter with ``ip[01;31m[Kaddr([m[K)`` filter to for example split
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K456[m[K[36m[K-[m[Kgiven ``/48`` prefix into smaller, ``/64`` subnets::
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K457[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K458[m[K[36m[K:[m[K    # {{ '193.0.2.0' | ip[01;31m[Kaddr([m[K'6to4') | ipsubnet(64, 58820) | ip[01;31m[Kaddr([m[K'1') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K459[m[K[36m[K-[m[K    2002:c100:200:e5c4::1/64
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K468[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K469[m[K[36m[K:[m[KYou can use ``hw[01;31m[Kaddr([m[K)`` filter to check if a given string is a MAC address or
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K470[m[K[36m[K-[m[Kconvert it between various formats. Examples::
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K479[m[K[36m[K-[m[K    # Convert MAC address to PostgreSQL format
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K480[m[K[36m[K:[m[K    # {{ macaddress | hw[01;31m[Kaddr([m[K'pgsql') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K481[m[K[36m[K-[m[K    1a2b3c:4d5e6f
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K483[m[K[36m[K-[m[K    # Convert MAC address to Cisco format
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K:[m[K[32m[K484[m[K[36m[K:[m[K    # {{ macaddress | hw[01;31m[Kaddr([m[K'cisco') }}
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_filters_ipaddr.rst[m[K[36m[K-[m[K[32m[K485[m[K[36m[K-[m[K    1a2b.3c4d.5e6f
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_acceleration.rst[m[K[36m[K-[m[K[32m[K79[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_acceleration.rst[m[K[36m[K:[m[K[32m[K80[m[K[36m[K:[m[KWhen enabled, the daemon will open a UNIX socket file (by default [01;31m[K`$ANSIBLE_REMOTE_TEMP/.ansible-accelerate/.local.socket`[m[K). New connections over SSH can
[35m[K/tmp/ansible/docs/docsite/rst/playbooks_acceleration.rst[m[K[36m[K-[m[K[32m[K81[m[K[36m[K-[m[Kuse this socket file to upload new keys to the daemon.
[36m[K##############################################[m[K
[35m[K/tmp/ansible/docs/docsite/rst/guide_gce.rst[m[K[36m[K-[m[K[32m[K80[m[K[36m[K-[m[K
[35m[K/tmp/ansible/docs/docsite/rst/guide_gce.rst[m[K[36m[K:[m[K[32m[K81[m[K[36m[K:[m[KCreate a file ``secrets.py`` looking like following, and put it in some folder which is in your `[01;31m[K`$PYTHONPATH`[m[K`:
[35m[K/tmp/ansible/docs/docsite/rst/guide_gce.rst[m[K[36m[K-[m[K[32m[K82[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/hacking/metadata-tool.py[m[K[36m[K-[m[K[32m[K220[m[K[36m[K-[m[K                    if isinstance(child.value, ast.Dict):
[35m[K/tmp/ansible/hacking/metadata-tool.py[m[K[36m[K:[m[K[32m[K221[m[K[36m[K:[m[K                        metadata = ast.literal_[01;31m[Keval(child.value)[m[K
[35m[K/tmp/ansible/hacking/metadata-tool.py[m[K[36m[K-[m[K[32m[K222[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1569[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K1570[m[K[36m[K:[m[K    def safe_[01;31m[Keval(self, value, locals=None, include_exceptions=False)[m[K:
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1571[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1587[m[K[36m[K-[m[K        try:
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K1588[m[K[36m[K:[m[K            result = literal_[01;31m[Keval(value)[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1589[m[K[36m[K-[m[K            if include_exceptions:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1625[m[K[36m[K-[m[K                except:
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K1626[m[K[36m[K:[m[K                    (result, exc) = self.safe_[01;31m[Keval(value, dict()[m[K, include_exceptions=True)
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K1627[m[K[36m[K-[m[K                    if exc is not None:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K2346[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K:[m[K[32m[K2347[m[K[36m[K:[m[K        # exp[01;31m[Kand things like $[m[KHOME and ~
[35m[K/tmp/ansible/lib/ansible/module_utils/basic.py[m[K[36m[K-[m[K[32m[K2348[m[K[36m[K-[m[K        if not shell:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/pycompat24.py[m[K[36m[K-[m[K[32m[K56[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/module_utils/pycompat24.py[m[K[36m[K:[m[K[32m[K57[m[K[36m[K:[m[K    def literal_[01;31m[Keval(node_or_string)[m[K:
[35m[K/tmp/ansible/lib/ansible/module_utils/pycompat24.py[m[K[36m[K-[m[K[32m[K58[m[K[36m[K-[m[K        """
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/inventory/ini.py[m[K[36m[K-[m[K[32m[K330[m[K[36m[K-[m[K        try:
[35m[K/tmp/ansible/lib/ansible/inventory/ini.py[m[K[36m[K:[m[K[32m[K331[m[K[36m[K:[m[K            v = ast.literal_[01;31m[Keval(v)[m[K
[35m[K/tmp/ansible/lib/ansible/inventory/ini.py[m[K[36m[K-[m[K[32m[K332[m[K[36m[K-[m[K        # Using explicit exceptions.
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/strategy/debug.py[m[K[36m[K-[m[K[32m[K146[m[K[36m[K-[m[K        try:
[35m[K/tmp/ansible/lib/ansible/plugins/strategy/debug.py[m[K[36m[K:[m[K[32m[K147[m[K[36m[K:[m[K            return [01;31m[Keval(args, globals()[m[K, self.scope)
[35m[K/tmp/ansible/lib/ansible/plugins/strategy/debug.py[m[K[36m[K-[m[K[32m[K148[m[K[36m[K-[m[K        except:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/shell/powershell.py[m[K[36m[K-[m[K[32m[K111[m[K[36m[K-[m[K    # redefine Write-Host to dump to output instead of failing- lots of scripts use it
[35m[K/tmp/ansible/lib/ansible/plugins/shell/powershell.py[m[K[36m[K:[m[K[32m[K112[m[K[36m[K:[m[K    $ps.AddStatement().AddScript("Function Write-Host([01;31m[K`$msg){ Write-Output `[m[K$msg }") | Out-Null
[35m[K/tmp/ansible/lib/ansible/plugins/shell/powershell.py[m[K[36m[K-[m[K[32m[K113[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/shell/powershell.py[m[K[36m[K-[m[K[32m[K802[m[K[36m[K-[m[K    $exec_cmd = [Ansible.Async.NativeProcessUtil]::SearchPath("powershell.exe")
[35m[K/tmp/ansible/lib/ansible/plugins/shell/powershell.py[m[K[36m[K:[m[K[32m[K803[m[K[36m[K:[m[K    $exec_args = New-Object System.Text.StringBuilder @("[01;31m[K`"$exec_cmd`[m[K" -NonInteractive -NoProfile -ExecutionPolicy Bypass -EncodedCommand $encoded_command")
[35m[K/tmp/ansible/lib/ansible/plugins/shell/powershell.py[m[K[36m[K-[m[K[32m[K804[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K59[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K60[m[K[36m[K:[m[K        if ip[01;31m[Kaddr([m[Kipconv, 'public'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K61[m[K[36m[K-[m[K            numbers = list(map(int, ipconv.split('.')))
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K69[m[K[36m[K-[m[K        if vtype == 'address':
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K70[m[K[36m[K:[m[K            if ip[01;31m[Kaddr([m[Kstr(v), '2002::/16'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K71[m[K[36m[K-[m[K                return value
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K73[m[K[36m[K-[m[K            if v.ip != v.network:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K74[m[K[36m[K:[m[K                if ip[01;31m[Kaddr([m[Kstr(v.ip), '2002::/16'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K75[m[K[36m[K-[m[K                    return value
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K143[m[K[36m[K-[m[K    if v.version == 4:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K144[m[K[36m[K:[m[K        if ip[01;31m[Kaddr([m[Kstr(v_ip), '169.254.0.0/24'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K145[m[K[36m[K-[m[K            return value
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K147[m[K[36m[K-[m[K    elif v.version == 6:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K148[m[K[36m[K:[m[K        if ip[01;31m[Kaddr([m[Kstr(v_ip), 'fe80::/10'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K149[m[K[36m[K-[m[K            return value
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K260[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K261[m[K[36m[K:[m[Kdef ip[01;31m[Kaddr([m[Kvalue, query = '', version = False, alias = 'ipaddr'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K262[m[K[36m[K-[m[K    ''' Check if string is an IP address or network and filter it '''
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K333[m[K[36m[K-[m[K        for element in value:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K334[m[K[36m[K:[m[K            if ip[01;31m[Kaddr([m[Kelement, str(query), version):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K335[m[K[36m[K:[m[K                _ret.append(ip[01;31m[Kaddr([m[Kelement, str(query), version))
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K336[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K424[m[K[36m[K-[m[K        ### ?? 6to4 and link-local were True here before.  Should they still?
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K425[m[K[36m[K:[m[K        if query and (query not in query_func_map or query == 'cidr_lookup') and ip[01;31m[Kaddr([m[Kquery, 'network'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K426[m[K[36m[K-[m[K            iplist = netaddr.IPSet([netaddr.IPNetwork(query)])
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K431[m[K[36m[K-[m[K    # This code checks if value maches the IP version the user wants, ie. if
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K432[m[K[36m[K:[m[K    # it's any version ("ip[01;31m[Kaddr([m[K)"), IPv4 ("ipv4()") or IPv6 ("ipv6()")
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K433[m[K[36m[K-[m[K    # If version does not match, return False
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K470[m[K[36m[K-[m[K            for element in value:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K471[m[K[36m[K:[m[K                if ip[01;31m[Kaddr([m[Kelement, query, version = False, alias = 'ipwrap'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K472[m[K[36m[K:[m[K                    _ret.append(ip[01;31m[Kaddr([m[Kelement, 'wrap'))
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K473[m[K[36m[K-[m[K                else:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K477[m[K[36m[K-[m[K        else:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K478[m[K[36m[K:[m[K            _ret = ip[01;31m[Kaddr([m[Kvalue, query, version = False, alias = 'ipwrap')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K479[m[K[36m[K-[m[K            if _ret:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K480[m[K[36m[K:[m[K                return ip[01;31m[Kaddr([m[K_ret, 'wrap')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K481[m[K[36m[K-[m[K            else:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K488[m[K[36m[K-[m[Kdef ipv4(value, query = ''):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K489[m[K[36m[K:[m[K    return ip[01;31m[Kaddr([m[Kvalue, query, version = 4, alias = 'ipv4')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K490[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K492[m[K[36m[K-[m[Kdef ipv6(value, query = ''):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K493[m[K[36m[K:[m[K    return ip[01;31m[Kaddr([m[Kvalue, query, version = 6, alias = 'ipv6')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K494[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K517[m[K[36m[K-[m[K    try:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K518[m[K[36m[K:[m[K        vtype = ip[01;31m[Kaddr([m[Kvalue, 'type')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K519[m[K[36m[K-[m[K        if vtype == 'address':
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K520[m[K[36m[K:[m[K            v = ip[01;31m[Kaddr([m[Kvalue, 'cidr')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K521[m[K[36m[K-[m[K        elif vtype == 'network':
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K522[m[K[36m[K:[m[K            v = ip[01;31m[Kaddr([m[Kvalue, 'subnet')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K523[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K531[m[K[36m[K-[m[K    elif str(query).isdigit():
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K532[m[K[36m[K:[m[K        vsize = ip[01;31m[Kaddr([m[Kv, 'size')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K533[m[K[36m[K-[m[K        query = int(query)
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K573[m[K[36m[K-[m[K    try:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K574[m[K[36m[K:[m[K        vtype = ip[01;31m[Kaddr([m[Kvalue, 'type')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K575[m[K[36m[K-[m[K        if vtype == 'address':
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K576[m[K[36m[K:[m[K            v = ip[01;31m[Kaddr([m[Kvalue, 'cidr')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K577[m[K[36m[K-[m[K        elif vtype == 'network':
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K578[m[K[36m[K:[m[K            v = ip[01;31m[Kaddr([m[Kvalue, 'subnet')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K579[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K603[m[K[36m[K-[m[K    try:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K604[m[K[36m[K:[m[K        vtype = ip[01;31m[Kaddr([m[Kvalue, 'type')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K605[m[K[36m[K-[m[K        if vtype == 'address':
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K606[m[K[36m[K:[m[K            v = ip[01;31m[Kaddr([m[Kvalue, 'cidr')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K607[m[K[36m[K-[m[K        elif vtype == 'network':
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K608[m[K[36m[K:[m[K            v = ip[01;31m[Kaddr([m[Kvalue, 'subnet')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K609[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K610[m[K[36m[K:[m[K        if ip[01;31m[Kaddr([m[Kvalue, 'version') != 6:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K611[m[K[36m[K-[m[K            return False
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K620[m[K[36m[K-[m[K    try:
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K621[m[K[36m[K:[m[K        mac = hw[01;31m[Kaddr([m[Kquery, alias = 'slaac')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K622[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K631[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K632[m[K[36m[K:[m[Kdef hw[01;31m[Kaddr([m[Kvalue, query = '', alias = 'hwaddr'):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K633[m[K[36m[K-[m[K    ''' Check if string is a HW/MAC address and filter it '''
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K668[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K669[m[K[36m[K:[m[Kdef mac[01;31m[Kaddr([m[Kvalue, query = ''):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K670[m[K[36m[K:[m[K    return hw[01;31m[Kaddr([m[Kvalue, query, alias = 'macaddr')
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K671[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K:[m[K[32m[K672[m[K[36m[K:[m[Kdef _need_net[01;31m[Kaddr([m[Kf_name, *args, **kwargs):
[35m[K/tmp/ansible/lib/ansible/plugins/filter/ipaddr.py[m[K[36m[K-[m[K[32m[K673[m[K[36m[K-[m[K    raise errors.AnsibleFilterError('The {0} filter requires python-netaddr be'
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/utils/plugin_docs.py[m[K[36m[K-[m[K[32m[K145[m[K[36m[K-[m[K                            if isinstance(child.value, ast.Dict):
[35m[K/tmp/ansible/lib/ansible/utils/plugin_docs.py[m[K[36m[K:[m[K[32m[K146[m[K[36m[K:[m[K                                data[varkey] = ast.literal_[01;31m[Keval(child.value)[m[K
[35m[K/tmp/ansible/lib/ansible/utils/plugin_docs.py[m[K[36m[K-[m[K[32m[K147[m[K[36m[K-[m[K                            else:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/template/safe_eval.py[m[K[36m[K-[m[K[32m[K28[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/template/safe_eval.py[m[K[36m[K:[m[K[32m[K29[m[K[36m[K:[m[Kdef safe_[01;31m[Keval(expr, locals={}, include_exceptions=False)[m[K:
[35m[K/tmp/ansible/lib/ansible/template/safe_eval.py[m[K[36m[K-[m[K[32m[K30[m[K[36m[K-[m[K    '''
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/template/safe_eval.py[m[K[36m[K-[m[K[32m[K130[m[K[36m[K-[m[K        # addition to the filtering of builtins done in CleansingNodeVisitor
[35m[K/tmp/ansible/lib/ansible/template/safe_eval.py[m[K[36m[K:[m[K[32m[K131[m[K[36m[K:[m[K        result = [01;31m[Keval(compiled, JSON_TYPES, dict(locals)[m[K)
[35m[K/tmp/ansible/lib/ansible/template/safe_eval.py[m[K[36m[K-[m[K[32m[K132[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/template/__init__.py[m[K[36m[K-[m[K[32m[K451[m[K[36m[K-[m[K                                    result.startswith("[") or result in ("True", "False"):
[35m[K/tmp/ansible/lib/ansible/template/__init__.py[m[K[36m[K:[m[K[32m[K452[m[K[36m[K:[m[K                                eval_results = safe_[01;31m[Keval(result, locals=self._available_variables, include_exceptions=True)[m[K
[35m[K/tmp/ansible/lib/ansible/template/__init__.py[m[K[36m[K-[m[K[32m[K453[m[K[36m[K-[m[K                                if eval_results[1] is None:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/template/__init__.py[m[K[36m[K-[m[K[32m[K629[m[K[36m[K-[m[K                    key = key.strip()
[35m[K/tmp/ansible/lib/ansible/template/__init__.py[m[K[36m[K:[m[K[32m[K630[m[K[36m[K:[m[K                    setattr(myenv, key, ast.literal_[01;31m[Keval(val.strip()[m[K))
[35m[K/tmp/ansible/lib/ansible/template/__init__.py[m[K[36m[K-[m[K[32m[K631[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/cloud/amazon/ec2.py[m[K[36m[K-[m[K[32m[K667[m[K[36m[K-[m[K            try:
[35m[K/tmp/ansible/lib/ansible/modules/cloud/amazon/ec2.py[m[K[36m[K:[m[K[32m[K668[m[K[36m[K:[m[K                tags = literal_[01;31m[Keval(tags)[m[K
[35m[K/tmp/ansible/lib/ansible/modules/cloud/amazon/ec2.py[m[K[36m[K-[m[K[32m[K669[m[K[36m[K-[m[K            except:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/cloud/lxc/lxc_container.py[m[K[36m[K-[m[K[32m[K731[m[K[36m[K-[m[K        import ast
[35m[K/tmp/ansible/lib/ansible/modules/cloud/lxc/lxc_container.py[m[K[36m[K:[m[K[32m[K732[m[K[36m[K:[m[K        options_dict = ast.literal_[01;31m[Keval(_container_config)[m[K
[35m[K/tmp/ansible/lib/ansible/modules/cloud/lxc/lxc_container.py[m[K[36m[K-[m[K[32m[K733[m[K[36m[K-[m[K        parsed_options = [i.split('=', 1) for i in options_dict]
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/cloud/google/gce.py[m[K[36m[K-[m[K[32m[K444[m[K[36m[K-[m[K            try:
[35m[K/tmp/ansible/lib/ansible/modules/cloud/google/gce.py[m[K[36m[K:[m[K[32m[K445[m[K[36m[K:[m[K                md = literal_[01;31m[Keval(str(metadata)[m[K)
[35m[K/tmp/ansible/lib/ansible/modules/cloud/google/gce.py[m[K[36m[K-[m[K[32m[K446[m[K[36m[K-[m[K                if not isinstance(md, dict):
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/cloud/google/gce_instance_template.py[m[K[36m[K-[m[K[32m[K368[m[K[36m[K-[m[K            try:
[35m[K/tmp/ansible/lib/ansible/modules/cloud/google/gce_instance_template.py[m[K[36m[K:[m[K[32m[K369[m[K[36m[K:[m[K                md = literal_[01;31m[Keval(str(metadata)[m[K)
[35m[K/tmp/ansible/lib/ansible/modules/cloud/google/gce_instance_template.py[m[K[36m[K-[m[K[32m[K370[m[K[36m[K-[m[K                if not isinstance(md, dict):
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K-[m[K[32m[K264[m[K[36m[K-[m[K    timeout = module.params.get('timeout')
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K:[m[K[32m[K265[m[K[36m[K:[m[K    sender_phrase, sender_addr = parse[01;31m[Kaddr([m[Ksender)
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K-[m[K[32m[K266[m[K[36m[K-[m[K    secure_state = False
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K-[m[K[32m[K335[m[K[36m[K-[m[K    msg['Subject'] = subject
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K:[m[K[32m[K336[m[K[36m[K:[m[K    msg['From'] = format[01;31m[Kaddr([m[K(sender_phrase, sender_addr))
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K-[m[K[32m[K337[m[K[36m[K-[m[K    msg.preamble = "Multipart message"
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K-[m[K[32m[K355[m[K[36m[K-[m[K        for addr in [x.strip() for x in recipients.split(',')]:
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K:[m[K[32m[K356[m[K[36m[K:[m[K            to_list.append( format[01;31m[Kaddr([m[K parse[01;31m[Kaddr([m[Kaddr)) )
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K:[m[K[32m[K357[m[K[36m[K:[m[K            addr_list.append( parse[01;31m[Kaddr([m[Kaddr)[1] )    # address only, w/o phrase
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K-[m[K[32m[K358[m[K[36m[K-[m[K    if copies is not None:
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K-[m[K[32m[K359[m[K[36m[K-[m[K        for addr in [x.strip() for x in copies.split(',')]:
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K:[m[K[32m[K360[m[K[36m[K:[m[K            cc_list.append( format[01;31m[Kaddr([m[K parse[01;31m[Kaddr([m[Kaddr)) )
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K:[m[K[32m[K361[m[K[36m[K:[m[K            addr_list.append( parse[01;31m[Kaddr([m[Kaddr)[1] )    # address only, w/o phrase
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K-[m[K[32m[K362[m[K[36m[K-[m[K    if blindcopies is not None:
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K-[m[K[32m[K363[m[K[36m[K-[m[K        for addr in [x.strip() for x in blindcopies.split(',')]:
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K:[m[K[32m[K364[m[K[36m[K:[m[K            addr_list.append( parse[01;31m[Kaddr([m[Kaddr)[1] )
[35m[K/tmp/ansible/lib/ansible/modules/notification/mail.py[m[K[36m[K-[m[K[32m[K365[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/windows/async_wrapper.ps1[m[K[36m[K-[m[K[32m[K397[m[K[36m[K-[m[K    $exec_cmd = [Ansible.Async.NativeProcessUtil]::SearchPath("powershell.exe")
[35m[K/tmp/ansible/lib/ansible/modules/windows/async_wrapper.ps1[m[K[36m[K:[m[K[32m[K398[m[K[36m[K:[m[K    $exec_args = "[01;31m[K`"$exec_cmd`[m[K" -NoProfile -ExecutionPolicy Bypass -EncodedCommand $encoded_command"
[35m[K/tmp/ansible/lib/ansible/modules/windows/async_wrapper.ps1[m[K[36m[K-[m[K[32m[K399[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_msi.ps1[m[K[36m[K-[m[K[32m[K47[m[K[36m[K-[m[K    if ($wait) {
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_msi.ps1[m[K[36m[K:[m[K[32m[K48[m[K[36m[K:[m[K        Start-Process -FilePath msiexec.exe -ArgumentList "/x [01;31m[K`"$path`[m[K" /qn /l $logfile $extra_args" -Verb Runas -Wait
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_msi.ps1[m[K[36m[K-[m[K[32m[K49[m[K[36m[K-[m[K    } else {
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_msi.ps1[m[K[36m[K:[m[K[32m[K50[m[K[36m[K:[m[K        Start-Process -FilePath msiexec.exe -ArgumentList "/x [01;31m[K`"$path`[m[K" /qn /l $logfile $extra_args" -Verb Runas
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_msi.ps1[m[K[36m[K-[m[K[32m[K51[m[K[36m[K-[m[K    }
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_msi.ps1[m[K[36m[K-[m[K[32m[K55[m[K[36m[K-[m[K    if ($wait) {
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_msi.ps1[m[K[36m[K:[m[K[32m[K56[m[K[36m[K:[m[K        Start-Process -FilePath msiexec.exe -ArgumentList "/i [01;31m[K`"$path`[m[K" /qn /l $logfile $extra_args" -Verb Runas -Wait
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_msi.ps1[m[K[36m[K-[m[K[32m[K57[m[K[36m[K-[m[K    } else {
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_msi.ps1[m[K[36m[K:[m[K[32m[K58[m[K[36m[K:[m[K        Start-Process -FilePath msiexec.exe -ArgumentList "/i [01;31m[K`"$path`[m[K" /qn /l $logfile $extra_args" -Verb Runas
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_msi.ps1[m[K[36m[K-[m[K[32m[K59[m[K[36m[K-[m[K    }
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_psexec.ps1[m[K[36m[K-[m[K[32m[K96[m[K[36m[K-[m[KIf ($username -ne $null) {
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_psexec.ps1[m[K[36m[K:[m[K[32m[K97[m[K[36m[K:[m[K    $arguments += " -u [01;31m[K`"$username`[m[K""
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_psexec.ps1[m[K[36m[K-[m[K[32m[K98[m[K[36m[K-[m[K}
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_psexec.ps1[m[K[36m[K-[m[K[32m[K101[m[K[36m[K-[m[KIf ($password -ne $null) {
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_psexec.ps1[m[K[36m[K:[m[K[32m[K102[m[K[36m[K:[m[K    $arguments += " -p [01;31m[K`"$password`[m[K""
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_psexec.ps1[m[K[36m[K-[m[K[32m[K103[m[K[36m[K-[m[K}
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_psexec.ps1[m[K[36m[K-[m[K[32m[K105[m[K[36m[K-[m[KIf ($chdir -ne $null) {
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_psexec.ps1[m[K[36m[K:[m[K[32m[K106[m[K[36m[K:[m[K    $arguments += " -w [01;31m[K`"$chdir`[m[K""
[35m[K/tmp/ansible/lib/ansible/modules/windows/win_psexec.ps1[m[K[36m[K-[m[K[32m[K107[m[K[36m[K-[m[K}
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K188[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K:[m[K[32m[K189[m[K[36m[K:[m[K    def delete_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K190[m[K[36m[K-[m[K        cmd = [self.module.get_bin_path('ipadm')]
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K196[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K:[m[K[32m[K197[m[K[36m[K:[m[K    def create_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K198[m[K[36m[K-[m[K        cmd = [self.module.get_bin_path('ipadm')]
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K218[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K:[m[K[32m[K219[m[K[36m[K:[m[K    def up_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K220[m[K[36m[K-[m[K        cmd = [self.module.get_bin_path('ipadm')]
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K230[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K:[m[K[32m[K231[m[K[36m[K:[m[K    def down_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K232[m[K[36m[K-[m[K        cmd = [self.module.get_bin_path('ipadm')]
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K242[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K:[m[K[32m[K243[m[K[36m[K:[m[K    def enable_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K244[m[K[36m[K-[m[K        cmd = [self.module.get_bin_path('ipadm')]
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K251[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K:[m[K[32m[K252[m[K[36m[K:[m[K    def disable_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K253[m[K[36m[K-[m[K        cmd = [self.module.get_bin_path('ipadm')]
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K260[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K:[m[K[32m[K261[m[K[36m[K:[m[K    def refresh_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K262[m[K[36m[K-[m[K        cmd = [self.module.get_bin_path('ipadm')]
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K311[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K:[m[K[32m[K312[m[K[36m[K:[m[K            (rc, out, err) = addr.delete_[01;31m[Kaddr([m[K)
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K313[m[K[36m[K-[m[K            if rc != 0:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K323[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K:[m[K[32m[K324[m[K[36m[K:[m[K            (rc, out, err) = addr.create_[01;31m[Kaddr([m[K)
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K325[m[K[36m[K-[m[K            if rc != 0:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K336[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K:[m[K[32m[K337[m[K[36m[K:[m[K            (rc, out, err) = addr.up_[01;31m[Kaddr([m[K)
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K338[m[K[36m[K-[m[K            if rc != 0:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K348[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K:[m[K[32m[K349[m[K[36m[K:[m[K            (rc, out, err) = addr.down_[01;31m[Kaddr([m[K)
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K350[m[K[36m[K-[m[K            if rc != 0:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K361[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K:[m[K[32m[K362[m[K[36m[K:[m[K                (rc, out, err) = addr.refresh_[01;31m[Kaddr([m[K)
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K363[m[K[36m[K-[m[K                if rc != 0:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K378[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K:[m[K[32m[K379[m[K[36m[K:[m[K            (rc, out, err) = addr.enable_[01;31m[Kaddr([m[K)
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K380[m[K[36m[K-[m[K            if rc != 0:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K390[m[K[36m[K-[m[K
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K:[m[K[32m[K391[m[K[36m[K:[m[K            (rc, out, err) = addr.disable_[01;31m[Kaddr([m[K)
[35m[K/tmp/ansible/lib/ansible/modules/network/illumos/ipadm_addr.py[m[K[36m[K-[m[K[32m[K392[m[K[36m[K-[m[K            if rc != 0:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/test/units/module_utils/test_basic.py[m[K[36m[K-[m[K[32m[K104[m[K[36m[K-[m[K    @unittest.skipIf(sys.version_info[0] >= 3, "literal_eval is available in every version of Python3")
[35m[K/tmp/ansible/test/units/module_utils/test_basic.py[m[K[36m[K:[m[K[32m[K105[m[K[36m[K:[m[K    def test_module_utils_basic_import_literal_[01;31m[Keval(self, mock_import)[m[K:
[35m[K/tmp/ansible/test/units/module_utils/test_basic.py[m[K[36m[K-[m[K[32m[K106[m[K[36m[K-[m[K        def _mock_import(name, *args, **kwargs):
[36m[K##############################################[m[K
[35m[K/tmp/ansible/test/units/module_utils/basic/test_safe_eval.py[m[K[36m[K-[m[K[32m[K57[m[K[36m[K-[m[K    # test some basic usage for various types
[35m[K/tmp/ansible/test/units/module_utils/basic/test_safe_eval.py[m[K[36m[K:[m[K[32m[K58[m[K[36m[K:[m[K    self.assertEqual(self.am.safe_[01;31m[Keval(code)[m[K, expected)
[35m[K/tmp/ansible/test/units/module_utils/basic/test_safe_eval.py[m[K[36m[K-[m[K[32m[K59[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/test/units/module_utils/basic/test_safe_eval.py[m[K[36m[K-[m[K[32m[K61[m[K[36m[K-[m[K    # Test simple types with exceptions requested
[35m[K/tmp/ansible/test/units/module_utils/basic/test_safe_eval.py[m[K[36m[K:[m[K[32m[K62[m[K[36m[K:[m[K    self.assertEqual(self.am.safe_[01;31m[Keval(code, include_exceptions=True)[m[K, (expected, None))
[35m[K/tmp/ansible/test/units/module_utils/basic/test_safe_eval.py[m[K[36m[K-[m[K[32m[K63[m[K[36m[K-[m[K
[35m[K/tmp/ansible/test/units/module_utils/basic/test_safe_eval.py[m[K[36m[K-[m[K[32m[K64[m[K[36m[K-[m[Kdef _check_invalid_strings(self, code, expected):
[35m[K/tmp/ansible/test/units/module_utils/basic/test_safe_eval.py[m[K[36m[K:[m[K[32m[K65[m[K[36m[K:[m[K    self.assertEqual(self.am.safe_[01;31m[Keval(code)[m[K, expected)
[35m[K/tmp/ansible/test/units/module_utils/basic/test_safe_eval.py[m[K[36m[K-[m[K[32m[K66[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/test/units/plugins/filter/test_ipaddr.py[m[K[36m[K-[m[K[32m[K26[m[K[36m[K-[m[K        address = '1.1.1.1/24'
[35m[K/tmp/ansible/test/units/plugins/filter/test_ipaddr.py[m[K[36m[K:[m[K[32m[K27[m[K[36m[K:[m[K        self.assertEqual(ip[01;31m[Kaddr([m[Kaddress, 'netmask'), '255.255.255.0')
[35m[K/tmp/ansible/test/units/plugins/filter/test_ipaddr.py[m[K[36m[K-[m[K[32m[K28[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/test/units/plugins/filter/test_ipaddr.py[m[K[36m[K-[m[K[32m[K30[m[K[36m[K-[m[K        address = '1.1.1.1/25'
[35m[K/tmp/ansible/test/units/plugins/filter/test_ipaddr.py[m[K[36m[K:[m[K[32m[K31[m[K[36m[K:[m[K        self.assertEqual(ip[01;31m[Kaddr([m[Kaddress, 'netmask'), '255.255.255.128')
[35m[K/tmp/ansible/test/units/plugins/filter/test_ipaddr.py[m[K[36m[K-[m[K[32m[K32[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/ansible/test/units/plugins/filter/test_ipaddr.py[m[K[36m[K-[m[K[32m[K34[m[K[36m[K-[m[K        address = '1.12.1.34/32'
[35m[K/tmp/ansible/test/units/plugins/filter/test_ipaddr.py[m[K[36m[K:[m[K[32m[K35[m[K[36m[K:[m[K        self.assertEqual(ip[01;31m[Kaddr([m[Kaddress, 'netmask'), '255.255.255.255')
[36m[K##############################################[m[K
[35m[K/tmp/ansible/test/units/plugins/action/test_synchronize.py[m[K[36m[K-[m[K[32m[K34[m[K[36m[K-[m[K        sdata = str(v)
[35m[K/tmp/ansible/test/units/plugins/action/test_synchronize.py[m[K[36m[K:[m[K[32m[K35[m[K[36m[K:[m[K        newv = [01;31m[Keval(sdata)[m[K
[35m[K/tmp/ansible/test/units/plugins/action/test_synchronize.py[m[K[36m[K-[m[K[32m[K36[m[K[36m[K-[m[K        safe_vars[k] = newv
[36m[K##############################################[m[K
[35m[K/tmp/ansible/test/units/plugins/action/test_synchronize.py[m[K[36m[K-[m[K[32m[K171[m[K[36m[K-[m[K        for check in test_meta['asserts']:
[35m[K/tmp/ansible/test/units/plugins/action/test_synchronize.py[m[K[36m[K:[m[K[32m[K172[m[K[36m[K:[m[K            value = [01;31m[Keval(check)[m[K
[35m[K/tmp/ansible/test/units/plugins/action/test_synchronize.py[m[K[36m[K-[m[K[32m[K173[m[K[36m[K-[m[K            #if not value:
[36m[K##############################################[m[K
[35m[K/tmp/ansible/Makefile[m[K[36m[K-[m[K[32m[K235[m[K[36m[K-[m[K	--define "_rpmfilename %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" \
[35m[K/tmp/ansible/Makefile[m[K[36m[K:[m[K[32m[K236[m[K[36m[K:[m[K	--define "__python [01;31m[K`which $(PYTHON)`[m[K" \
[35m[K/tmp/ansible/Makefile[m[K[36m[K-[m[K[32m[K237[m[K[36m[K-[m[K	-ba rpm-build/$(NAME).spec
