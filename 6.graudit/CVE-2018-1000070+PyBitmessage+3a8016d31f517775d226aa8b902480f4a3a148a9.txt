===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/PyBitmessage/src/bitmessagecli.py[m[K[36m[K-[m[K[32m[K378[m[K[36m[K-[m[K    address_information = api.decodeAddress(address)
[35m[K/tmp/PyBitmessage/src/bitmessagecli.py[m[K[36m[K:[m[K[32m[K379[m[K[36m[K:[m[K    address_information = [01;31m[Keval(address_information)[m[K
[35m[K/tmp/PyBitmessage/src/bitmessagecli.py[m[K[36m[K-[m[K[32m[K380[m[K[36m[K-[m[K        
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/src/bitmessagecli.py[m[K[36m[K-[m[K[32m[K1349[m[K[36m[K-[m[K        address_information = api.decodeAddress(tmp_address)
[35m[K/tmp/PyBitmessage/src/bitmessagecli.py[m[K[36m[K:[m[K[32m[K1350[m[K[36m[K:[m[K        address_information = [01;31m[Keval(address_information)[m[K
[35m[K/tmp/PyBitmessage/src/bitmessagecli.py[m[K[36m[K-[m[K[32m[K1351[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/src/class_receiveDataThread.py[m[K[36m[K-[m[K[32m[K218[m[K[36m[K-[m[K                if command == 'addr':
[35m[K/tmp/PyBitmessage/src/class_receiveDataThread.py[m[K[36m[K:[m[K[32m[K219[m[K[36m[K:[m[K                    self.rec[01;31m[Kaddr([m[Kpayload)
[35m[K/tmp/PyBitmessage/src/class_receiveDataThread.py[m[K[36m[K-[m[K[32m[K220[m[K[36m[K-[m[K                elif command == 'inv':
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/src/class_receiveDataThread.py[m[K[36m[K-[m[K[32m[K402[m[K[36m[K-[m[K
[35m[K/tmp/PyBitmessage/src/class_receiveDataThread.py[m[K[36m[K:[m[K[32m[K403[m[K[36m[K:[m[K        self.send[01;31m[Kaddr([m[K)  # This is one large addr message to this one peer.
[35m[K/tmp/PyBitmessage/src/class_receiveDataThread.py[m[K[36m[K-[m[K[32m[K404[m[K[36m[K-[m[K        if len(shared.connectedHostsList) > \
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/src/class_receiveDataThread.py[m[K[36m[K-[m[K[32m[K605[m[K[36m[K-[m[K    # We have received an addr message.
[35m[K/tmp/PyBitmessage/src/class_receiveDataThread.py[m[K[36m[K:[m[K[32m[K606[m[K[36m[K:[m[K    def rec[01;31m[Kaddr([m[Kself, data):
[35m[K/tmp/PyBitmessage/src/class_receiveDataThread.py[m[K[36m[K-[m[K[32m[K607[m[K[36m[K-[m[K        numberOfAddressesIncluded, lengthOfNumberOfAddresses = decodeVarint(
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/src/class_receiveDataThread.py[m[K[36m[K-[m[K[32m[K680[m[K[36m[K-[m[K    # messages).
[35m[K/tmp/PyBitmessage/src/class_receiveDataThread.py[m[K[36m[K:[m[K[32m[K681[m[K[36m[K:[m[K    def send[01;31m[Kaddr([m[Kself):
[35m[K/tmp/PyBitmessage/src/class_receiveDataThread.py[m[K[36m[K-[m[K[32m[K682[m[K[36m[K-[m[K        def sendChunk():
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/src/inventory.py[m[K[36m[K-[m[K[32m[K23[m[K[36m[K-[m[K        self._className = "storage." + self._moduleName + "." + self._moduleName.title() + "Inventory"
[35m[K/tmp/PyBitmessage/src/inventory.py[m[K[36m[K:[m[K[32m[K24[m[K[36m[K:[m[K        self._inventoryClass = [01;31m[Keval(self._className)[m[K
[35m[K/tmp/PyBitmessage/src/inventory.py[m[K[36m[K-[m[K[32m[K25[m[K[36m[K-[m[K        self._realInventory = self._inventoryClass()
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/src/network/asyncore_pollchoose.py[m[K[36m[K-[m[K[32m[K576[m[K[36m[K-[m[K
[35m[K/tmp/PyBitmessage/src/network/asyncore_pollchoose.py[m[K[36m[K:[m[K[32m[K577[m[K[36m[K:[m[K    def set_reuse_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/PyBitmessage/src/network/asyncore_pollchoose.py[m[K[36m[K-[m[K[32m[K578[m[K[36m[K-[m[K        # try to re-use a server port if possible
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/src/network/httpd.py[m[K[36m[K-[m[K[32m[K112[m[K[36m[K-[m[K        self.create_socket(socket.AF_INET, socket.SOCK_STREAM)
[35m[K/tmp/PyBitmessage/src/network/httpd.py[m[K[36m[K:[m[K[32m[K113[m[K[36m[K:[m[K        self.set_reuse_[01;31m[Kaddr([m[K)
[35m[K/tmp/PyBitmessage/src/network/httpd.py[m[K[36m[K-[m[K[32m[K114[m[K[36m[K-[m[K        self.bind(('127.0.0.1', HTTPServer.port))
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/src/network/bmproto.py[m[K[36m[K-[m[K[32m[K167[m[K[36m[K-[m[K        # Q = uint64
[35m[K/tmp/PyBitmessage/src/network/bmproto.py[m[K[36m[K:[m[K[32m[K168[m[K[36m[K:[m[K        # i = net_[01;31m[Kaddr ([m[Kwithout time and stream number)
[35m[K/tmp/PyBitmessage/src/network/bmproto.py[m[K[36m[K-[m[K[32m[K169[m[K[36m[K-[m[K        # s = string
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/src/network/bmproto.py[m[K[36m[K-[m[K[32m[K372[m[K[36m[K-[m[K
[35m[K/tmp/PyBitmessage/src/network/bmproto.py[m[K[36m[K:[m[K[32m[K373[m[K[36m[K:[m[K    def _decode_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/PyBitmessage/src/network/bmproto.py[m[K[36m[K-[m[K[32m[K374[m[K[36m[K-[m[K        return self.decode_payload_content("LQIQ16sH")
[35m[K/tmp/PyBitmessage/src/network/bmproto.py[m[K[36m[K-[m[K[32m[K375[m[K[36m[K-[m[K
[35m[K/tmp/PyBitmessage/src/network/bmproto.py[m[K[36m[K:[m[K[32m[K376[m[K[36m[K:[m[K    def bm_command_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/PyBitmessage/src/network/bmproto.py[m[K[36m[K:[m[K[32m[K377[m[K[36m[K:[m[K        addresses = self._decode_[01;31m[Kaddr([m[K)
[35m[K/tmp/PyBitmessage/src/network/bmproto.py[m[K[36m[K-[m[K[32m[K378[m[K[36m[K-[m[K        for i in addresses:
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/src/network/tcp.py[m[K[36m[K-[m[K[32m[K262[m[K[36m[K-[m[K        self.create_socket(socket.AF_INET, socket.SOCK_STREAM)
[35m[K/tmp/PyBitmessage/src/network/tcp.py[m[K[36m[K:[m[K[32m[K263[m[K[36m[K:[m[K        self.set_reuse_[01;31m[Kaddr([m[K)
[35m[K/tmp/PyBitmessage/src/network/tcp.py[m[K[36m[K-[m[K[32m[K264[m[K[36m[K-[m[K        for attempt in range(50):
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/src/network/udp.py[m[K[36m[K-[m[K[32m[K66[m[K[36m[K-[m[K    # disable most commands before doing research / testing
[35m[K/tmp/PyBitmessage/src/network/udp.py[m[K[36m[K:[m[K[32m[K67[m[K[36m[K:[m[K    # only [01;31m[Kaddr ([m[Kpeer discovery), error and object are implemented
[35m[K/tmp/PyBitmessage/src/network/udp.py[m[K[36m[K-[m[K[32m[K68[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/src/network/udp.py[m[K[36m[K-[m[K[32m[K82[m[K[36m[K-[m[K
[35m[K/tmp/PyBitmessage/src/network/udp.py[m[K[36m[K:[m[K[32m[K83[m[K[36m[K:[m[K    def bm_command_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/PyBitmessage/src/network/udp.py[m[K[36m[K-[m[K[32m[K84[m[K[36m[K-[m[K#        BMProto.bm_command_object(self)
[35m[K/tmp/PyBitmessage/src/network/udp.py[m[K[36m[K:[m[K[32m[K85[m[K[36m[K:[m[K        addresses = self._decode_[01;31m[Kaddr([m[K)
[35m[K/tmp/PyBitmessage/src/network/udp.py[m[K[36m[K-[m[K[32m[K86[m[K[36m[K-[m[K        # only allow peer discovery from private IPs in order to avoid attacks from random IPs on the internet
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/packages/unmaintained/puppy.sh[m[K[36m[K-[m[K[32m[K57[m[K[36m[K-[m[K# Create the PET package
[35m[K/tmp/PyBitmessage/packages/unmaintained/puppy.sh[m[K[36m[K:[m[K[32m[K58[m[K[36m[K:[m[KMD5SUM="[01;31m[K`md5sum ${APP}-${VERSION}-${RELEASE}.tar.gz | cut -f 1 -d ' '`[m[K"
[35m[K/tmp/PyBitmessage/packages/unmaintained/puppy.sh[m[K[36m[K-[m[K[32m[K59[m[K[36m[K-[m[Kecho -n "$MD5SUM" >> ${APP}-${VERSION}-${RELEASE}.tar.gz
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/packages/unmaintained/debian.sh[m[K[36m[K-[m[K[32m[K9[m[K[36m[K-[m[KCURDIR=`pwd`
[35m[K/tmp/PyBitmessage/packages/unmaintained/debian.sh[m[K[36m[K:[m[K[32m[K10[m[K[36m[K:[m[KSHORTDIR=[01;31m[K`basename ${CURDIR}`[m[K
[35m[K/tmp/PyBitmessage/packages/unmaintained/debian.sh[m[K[36m[K-[m[K[32m[K11[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/packages/upstart/bitmessage.conf[m[K[36m[K-[m[K[32m[K31[m[K[36m[K-[m[K	if [ -f $HOME/.config/PyBitmessage/singleton.lock ]; then
[35m[K/tmp/PyBitmessage/packages/upstart/bitmessage.conf[m[K[36m[K:[m[K[32m[K32[m[K[36m[K:[m[K		pid=[01;31m[K`lsof -F p $HOME/.config/PyBitmessage/singleton.lock|cut -b2-`[m[K
[35m[K/tmp/PyBitmessage/packages/upstart/bitmessage.conf[m[K[36m[K-[m[K[32m[K33[m[K[36m[K-[m[K		if [ -n "$pid" ]; then
[36m[K##############################################[m[K
[35m[K/tmp/PyBitmessage/build/updatetranslations.sh[m[K[36m[K-[m[K[32m[K12[m[K[36m[K-[m[Kfor i in $srcdir/*ts; do
[35m[K/tmp/PyBitmessage/build/updatetranslations.sh[m[K[36m[K:[m[K[32m[K13[m[K[36m[K:[m[K	o=[01;31m[K`basename $i|cut -b3-`[m[K
[35m[K/tmp/PyBitmessage/build/updatetranslations.sh[m[K[36m[K-[m[K[32m[K14[m[K[36m[K-[m[K	o="${o,,}"
