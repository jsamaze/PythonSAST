===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K-[m[K[32m[K242[m[K[36m[K-[m[K    @radiusmock.activate
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K:[m[K[32m[K243[m[K[36m[K:[m[K    def test_06_[01;31m[Kpassthru(self)[m[K:
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K-[m[K[32m[K244[m[K[36m[K-[m[K        user = User("cornelius", realm="r1")
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K-[m[K[32m[K248[m[K[36m[K-[m[K        self.assertEqual(get_tokens(user=user, count=True), 0)
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K:[m[K[32m[K249[m[K[36m[K:[m[K        rv = auth_user_[01;31m[Kpassthru(check_user_pass, user, passw, options)[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K-[m[K[32m[K250[m[K[36m[K-[m[K        self.assertFalse(rv[0])
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K-[m[K[32m[K616[m[K[36m[K-[m[K        self.assertEqual(get_tokens(user=user, count=True), 0)
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K:[m[K[32m[K617[m[K[36m[K:[m[K        rv = auth_user_[01;31m[Kpassthru(check_user_pass, user, passw, options)[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K-[m[K[32m[K618[m[K[36m[K-[m[K        self.assertFalse(rv[0])
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K-[m[K[32m[K648[m[K[36m[K-[m[K        with self.assertRaises(PolicyError):
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K:[m[K[32m[K649[m[K[36m[K:[m[K            auth_user_[01;31m[Kpassthru(check_user_pass, user, passw, options=options)[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K-[m[K[32m[K650[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K-[m[K[32m[K654[m[K[36m[K-[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K:[m[K[32m[K655[m[K[36m[K:[m[K        rv = auth_user_[01;31m[Kpassthru(check_user_pass, user, passw, options=options)[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K-[m[K[32m[K656[m[K[36m[K-[m[K        self.assertTrue(rv[0])
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K-[m[K[32m[K663[m[K[36m[K-[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K:[m[K[32m[K664[m[K[36m[K:[m[K        rv = auth_user_[01;31m[Kpassthru(check_user_pass, user, passw, options=options)[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K-[m[K[32m[K665[m[K[36m[K-[m[K        self.assertTrue(rv[0])
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K-[m[K[32m[K674[m[K[36m[K-[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K:[m[K[32m[K675[m[K[36m[K:[m[K        rv = auth_user_[01;31m[Kpassthru(check_user_pass, user, passw, options=options)[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K-[m[K[32m[K676[m[K[36m[K-[m[K        self.assertTrue(rv[0])
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K-[m[K[32m[K683[m[K[36m[K-[m[K        with self.assertRaises(PolicyError):
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K:[m[K[32m[K684[m[K[36m[K:[m[K            auth_user_[01;31m[Kpassthru(check_user_pass, user, passw, options=options)[m[K
[35m[K/tmp/privacyidea/tests/test_lib_policydecorator.py[m[K[36m[K-[m[K[32m[K685[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/tests/test_api_validate.py[m[K[36m[K-[m[K[32m[K1324[m[K[36m[K-[m[K
[35m[K/tmp/privacyidea/tests/test_api_validate.py[m[K[36m[K:[m[K[32m[K1325[m[K[36m[K:[m[K    def test_19_validate_[01;31m[Kpassthru(self)[m[K:
[35m[K/tmp/privacyidea/tests/test_api_validate.py[m[K[36m[K-[m[K[32m[K1326[m[K[36m[K-[m[K        # user passthru, realm: self.realm2, passwd: pthru
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/tests/ldap3mock.py[m[K[36m[K-[m[K[32m[K709[m[K[36m[K-[m[K                data = f.read()
[35m[K/tmp/privacyidea/tests/ldap3mock.py[m[K[36m[K:[m[K[32m[K710[m[K[36m[K:[m[K                return literal_[01;31m[Keval(data)[m[K
[35m[K/tmp/privacyidea/tests/ldap3mock.py[m[K[36m[K-[m[K[32m[K711[m[K[36m[K-[m[K        except OSError as e:
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/privacyidea/lib/policydecorators.py[m[K[36m[K-[m[K[32m[K273[m[K[36m[K-[m[K
[35m[K/tmp/privacyidea/privacyidea/lib/policydecorators.py[m[K[36m[K:[m[K[32m[K274[m[K[36m[K:[m[Kdef auth_user_[01;31m[Kpassthru(wrapped_function, user_object, passw, options=None)[m[K:
[35m[K/tmp/privacyidea/privacyidea/lib/policydecorators.py[m[K[36m[K-[m[K[32m[K275[m[K[36m[K-[m[K    """
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/authmodules/TYPO3/privacyidea/Classes/PrivacyideaAuth.php[m[K[36m[K-[m[K[32m[K64[m[K[36m[K-[m[K		}
[35m[K/tmp/privacyidea/authmodules/TYPO3/privacyidea/Classes/PrivacyideaAuth.php[m[K[36m[K:[m[K[32m[K65[m[K[36m[K:[m[K		$response = curl_[01;31m[Kexec($curl_instance);[m[K
[35m[K/tmp/privacyidea/authmodules/TYPO3/privacyidea/Classes/PrivacyideaAuth.php[m[K[36m[K-[m[K[32m[K66[m[K[36m[K-[m[K		$this->logger->debug($response);
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/tools/privacyidea-convert-token[m[K[36m[K-[m[K[32m[K53[m[K[36m[K-[m[K    if ($file) {
[35m[K/tmp/privacyidea/tools/privacyidea-convert-token[m[K[36m[K:[m[K[32m[K54[m[K[36m[K:[m[K	@tokens=[01;31m[K`cat "$file"`[m[K;
[35m[K/tmp/privacyidea/tools/privacyidea-convert-token[m[K[36m[K-[m[K[32m[K55[m[K[36m[K-[m[K    }else{
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/tools/privacyidea-convert-xml-to-csv[m[K[36m[K-[m[K[32m[K49[m[K[36m[K-[m[K    if ($file) {
[35m[K/tmp/privacyidea/tools/privacyidea-convert-xml-to-csv[m[K[36m[K:[m[K[32m[K50[m[K[36m[K:[m[K	@tokens=[01;31m[K`cat "$file"`[m[K;
[35m[K/tmp/privacyidea/tools/privacyidea-convert-xml-to-csv[m[K[36m[K-[m[K[32m[K51[m[K[36m[K-[m[K    }else{
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/pi-manage[m[K[36m[K-[m[K[32m[K744[m[K[36m[K-[m[K
[35m[K/tmp/privacyidea/pi-manage[m[K[36m[K:[m[K[32m[K745[m[K[36m[K:[m[K    params = ast.literal_[01;31m[Keval(contents)[m[K
[35m[K/tmp/privacyidea/pi-manage[m[K[36m[K-[m[K[32m[K746[m[K[36m[K-[m[K    params["resolver"] = name
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/pi-manage[m[K[36m[K-[m[K[32m[K948[m[K[36m[K-[m[K
[35m[K/tmp/privacyidea/pi-manage[m[K[36m[K:[m[K[32m[K949[m[K[36m[K:[m[K    events = ast.literal_[01;31m[Keval(contents)[m[K
[35m[K/tmp/privacyidea/pi-manage[m[K[36m[K-[m[K[32m[K950[m[K[36m[K-[m[K    for event in events:
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/pi-manage[m[K[36m[K-[m[K[32m[K1039[m[K[36m[K-[m[K        contents = f.read()
[35m[K/tmp/privacyidea/pi-manage[m[K[36m[K:[m[K[32m[K1040[m[K[36m[K:[m[K    policies = ast.literal_[01;31m[Keval(contents)[m[K
[35m[K/tmp/privacyidea/pi-manage[m[K[36m[K-[m[K[32m[K1041[m[K[36m[K-[m[K    for policy in policies:
[36m[K##############################################[m[K
[35m[K/tmp/privacyidea/pi-manage[m[K[36m[K-[m[K[32m[K1073[m[K[36m[K-[m[K
[35m[K/tmp/privacyidea/pi-manage[m[K[36m[K:[m[K[32m[K1074[m[K[36m[K:[m[K            params = ast.literal_[01;31m[Keval(contents)[m[K
[35m[K/tmp/privacyidea/pi-manage[m[K[36m[K-[m[K[32m[K1075[m[K[36m[K-[m[K
