===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K180[m[K[36m[K-[m[K    def test_get_where_mongo_combined_date(self):
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K:[m[K[32m[K181[m[K[36m[K:[m[K        [01;31m[Kwhere = '{"$and":[m[K [{"ref": "%s"}, {"_created": \
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K182[m[K[36m[K-[m[K                {"$gte": "Tue, 01 Oct 2013 00:59:22 GMT"}}]}' % self.item_name
[36m[K##############################################[m[K
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K199[m[K[36m[K-[m[K    def test_get_mongo_query_blacklist(self):
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K:[m[K[32m[K200[m[K[36m[K:[m[K        [01;31m[Kwhere = '{"$where":[m[K "this.ref == ''%s''"}' % self.item_name
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K201[m[K[36m[K-[m[K        _, status = self.get(self.known_resource, '?where=%s' % where)
[36m[K##############################################[m[K
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K203[m[K[36m[K-[m[K
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K:[m[K[32m[K204[m[K[36m[K:[m[K        [01;31m[Kwhere = '{"ref": {"$regex":[m[K "%s"}}' % self.item_name
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K205[m[K[36m[K-[m[K        _, status = self.get(self.known_resource, '?where=%s' % where)
[36m[K##############################################[m[K
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K208[m[K[36m[K-[m[K    def test_get_mongo_query_blacklist_nested(self):
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K:[m[K[32m[K209[m[K[36m[K:[m[K        [01;31m[Kwhere = '{"$or": [{"$where":[m[K "this.ref == ''%s''"}]}' % self.item_name
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K210[m[K[36m[K-[m[K        _, status = self.get(self.known_resource, '?where=%s' % where)
[36m[K##############################################[m[K
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K212[m[K[36m[K-[m[K
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K:[m[K[32m[K213[m[K[36m[K:[m[K        [01;31m[Kwhere = '{"$or": [{"ref": {"$regex":[m[K "%s"}}]}' % self.item_name
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K214[m[K[36m[K-[m[K        _, status = self.get(self.known_resource, '?where=%s' % where)
[36m[K##############################################[m[K
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K1035[m[K[36m[K-[m[K        """
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K:[m[K[32m[K1036[m[K[36m[K:[m[K        [01;31m[Kwhere = '?where={"$and":[m[K [{"field1": "value1"}, {"field2": "value2"}]}'
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K1037[m[K[36m[K-[m[K        settings = self.app.config['DOMAIN'][self.known_resource]
[36m[K##############################################[m[K
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K1081[m[K[36m[K-[m[K        # test for an outright missing/invalid field present
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K:[m[K[32m[K1082[m[K[36m[K:[m[K        [01;31m[Kwhere = '?where={"$and":[m[K [{"bad_field": "val"}, {"fld2": "val2"}]}'
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K1083[m[K[36m[K-[m[K        response, status = self.get(self.known_resource, where)
[36m[K##############################################[m[K
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K1381[m[K[36m[K-[m[K
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K:[m[K[32m[K1382[m[K[36m[K:[m[K        [01;31m[Kwhere = '?where={"prog": {"$bitsAllClear":[m[K [1, 5]}}'
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K1383[m[K[36m[K-[m[K        response, status = self.get(self.known_resource, where)
[36m[K##############################################[m[K
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K1387[m[K[36m[K-[m[K
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K:[m[K[32m[K1388[m[K[36m[K:[m[K        [01;31m[Kwhere = '?where={"prog": {"$bitsAllClear":[m[K [2, 5]}}'
[35m[K/tmp/eve/eve/tests/methods/get.py[m[K[36m[K-[m[K[32m[K1389[m[K[36m[K-[m[K        response, status = self.get(self.known_resource, where)
[36m[K##############################################[m[K
[35m[K/tmp/eve/eve/tests/response.py[m[K[36m[K-[m[K[32m[K18[m[K[36m[K-[m[K        try:
[35m[K/tmp/eve/eve/tests/response.py[m[K[36m[K:[m[K[32m[K19[m[K[36m[K:[m[K            response = literal_[01;31m[Keval(self.r.get_data()[m[K.decode())
[35m[K/tmp/eve/eve/tests/response.py[m[K[36m[K-[m[K[32m[K20[m[K[36m[K-[m[K        except:
[36m[K##############################################[m[K
[35m[K/tmp/eve/eve/tests/response.py[m[K[36m[K-[m[K[32m[K24[m[K[36m[K-[m[K    def test_response_object(self):
[35m[K/tmp/eve/eve/tests/response.py[m[K[36m[K:[m[K[32m[K25[m[K[36m[K:[m[K        response = literal_[01;31m[Keval(self.r.get_data()[m[K.decode())
[35m[K/tmp/eve/eve/tests/response.py[m[K[36m[K-[m[K[32m[K26[m[K[36m[K-[m[K        self.assertTrue(isinstance(response, dict))
[36m[K##############################################[m[K
[35m[K/tmp/eve/eve/io/mongo/mongo.py[m[K[36m[K-[m[K[32m[K207[m[K[36m[K-[m[K                # assume it's mongo syntax (ie. ?sort=[("name", 1)])
[35m[K/tmp/eve/eve/io/mongo/mongo.py[m[K[36m[K:[m[K[32m[K208[m[K[36m[K:[m[K                client_sort = ast.literal_[01;31m[Keval(req.sort)[m[K
[35m[K/tmp/eve/eve/io/mongo/mongo.py[m[K[36m[K-[m[K[32m[K209[m[K[36m[K-[m[K            except ValueError:
[36m[K##############################################[m[K
[35m[K/tmp/eve/eve/io/mongo/mongo.py[m[K[36m[K-[m[K[32m[K350[m[K[36m[K-[m[K        This query is generated to *preserve the order* of the elements
[35m[K/tmp/eve/eve/io/mongo/mongo.py[m[K[36m[K:[m[K[32m[K351[m[K[36m[K:[m[K        in the `ids` list. An alternative would be to use the [01;31m[K`$in`[m[K operator
[35m[K/tmp/eve/eve/io/mongo/mongo.py[m[K[36m[K-[m[K[32m[K352[m[K[36m[K-[m[K        and accept non-dependable ordering for a slight performance boost
[36m[K##############################################[m[K
[35m[K/tmp/eve/eve/io/mongo/mongo.py[m[K[36m[K-[m[K[32m[K639[m[K[36m[K-[m[K        This implementation of the function just combines everything in the
[35m[K/tmp/eve/eve/io/mongo/mongo.py[m[K[36m[K:[m[K[32m[K640[m[K[36m[K:[m[K        two dicts using the [01;31m[K`$and`[m[K operator.
[35m[K/tmp/eve/eve/io/mongo/mongo.py[m[K[36m[K-[m[K[32m[K641[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/eve/eve/io/mongo/parser.py[m[K[36m[K-[m[K[32m[K133[m[K[36m[K-[m[K            if expr:
[35m[K/tmp/eve/eve/io/mongo/parser.py[m[K[36m[K:[m[K[32m[K134[m[K[36m[K:[m[K                self.current_value = [01;31m[Keval(node.func.id + expr)[m[K
[35m[K/tmp/eve/eve/io/mongo/parser.py[m[K[36m[K-[m[K[32m[K135[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K-[m[K[32m[K1818[m[K[36m[K-[m[KAs a general rule all MongoDB `geospatial query operators`_ and their associated
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K:[m[K[32m[K1819[m[K[36m[K:[m[Kgeometry specifiers are supported. In this example we are using the [01;31m[K`$near`[m[K_
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K-[m[K[32m[K1820[m[K[36m[K-[m[Koperator to query for all contacts living in a location within 1000 meters from
[36m[K##############################################[m[K
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K-[m[K[32m[K2123[m[K[36m[K-[m[KAs python dictionaries don’t maintain order you should use ``SON`` or
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K:[m[K[32m[K2124[m[K[36m[K:[m[Kcollections ``OrderedDict`` where explicit ordering is required eg `[01;31m[K`$sort`[m[K`:
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K-[m[K[32m[K2125[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K-[m[K[32m[K2157[m[K[36m[K-[m[K
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K:[m[K[32m[K2158[m[K[36m[K:[m[KAs you can see the `count` field is now going to sum the value of `[01;31m[K`$value`[m[K`,
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K-[m[K[32m[K2159[m[K[36m[K-[m[Kwhich will be set by the client upon perfoming the request:
[36m[K##############################################[m[K
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K-[m[K[32m[K2165[m[K[36m[K-[m[KThe request above will cause the aggregation to be executed on the server with
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K:[m[K[32m[K2166[m[K[36m[K:[m[Ka `count` field configured as if it was a static `[01;31m[K`{"$sum": 2}`[m[K`. The client
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K-[m[K[32m[K2167[m[K[36m[K-[m[Ksimply adds the ``aggregate`` query parameter and then passes a dictionary with
[36m[K##############################################[m[K
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K-[m[K[32m[K2180[m[K[36m[K-[m[KClient pagination (``?page=2``) is enabled by default. This is currently
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K:[m[K[32m[K2181[m[K[36m[K:[m[Kachieved by injecting two additional stages (`[01;31m[K`$limit`[m[K` first, then `[01;31m[K`$skip`[m[K`)
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K-[m[K[32m[K2182[m[K[36m[K-[m[Kto the very end of the aggregation pipeline. You can turn pagination off by setting
[36m[K##############################################[m[K
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K-[m[K[32m[K2188[m[K[36m[K-[m[KClient sorting (``?sort=field1``) is not supported at aggregation endpoints.
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K:[m[K[32m[K2189[m[K[36m[K:[m[KYou can of course add one or more `[01;31m[K`$sort`[m[K` stages to the pipeline, as we did
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K:[m[K[32m[K2190[m[K[36m[K:[m[Kwith the example above. If you do add a `[01;31m[K`$sort`[m[K` stage to the pipeline,
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K:[m[K[32m[K2191[m[K[36m[K:[m[Kconsider adding it at the end of the pipeline. According to MongoDB's `[01;31m[K`$limit`[m[K`
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K-[m[K[32m[K2192[m[K[36m[K-[m[Kdocumentation (link_):
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K-[m[K[32m[K2193[m[K[36m[K-[m[K
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K:[m[K[32m[K2194[m[K[36m[K:[m[K    When a `[01;31m[K`$sort`[m[K` immediately precedes a `[01;31m[K`$limit`[m[K` in the pipeline, the
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K-[m[K[32m[K2195[m[K[36m[K-[m[K    sort operation only maintains the top **n** results as it progresses, where
[36m[K##############################################[m[K
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K-[m[K[32m[K2198[m[K[36m[K-[m[K
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K:[m[K[32m[K2199[m[K[36m[K:[m[KAs we just saw earlier, pagination adds a `[01;31m[K`$limit`[m[K` stage to the end of the
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K:[m[K[32m[K2200[m[K[36m[K:[m[Kpipeline. So if pagination is enabled and `[01;31m[K`$sort`[m[K` is the last stage of your
[35m[K/tmp/eve/docs/features.rst[m[K[36m[K-[m[K[32m[K2201[m[K[36m[K-[m[Kpipeline, then the resulting combined pipeline should be optimized.
[36m[K##############################################[m[K
[35m[K/tmp/eve/CHANGES[m[K[36m[K-[m[K[32m[K19[m[K[36m[K-[m[K  will be used to secure  it. Closes #1083.
[35m[K/tmp/eve/CHANGES[m[K[36m[K:[m[K[32m[K20[m[K[36m[K:[m[K- New: Add support for MongoDB bitwise query operators `[01;31m[K`$bitsAllClear`[m[K`,
[35m[K/tmp/eve/CHANGES[m[K[36m[K-[m[K[32m[K21[m[K[36m[K-[m[K  ``bitsAllSet``, ``bitsAnyClear``, ``bitsAnySet``. Closes 1053 (Qiang Zhang).
[36m[K##############################################[m[K
[35m[K/tmp/eve/CHANGES[m[K[36m[K-[m[K[32m[K93[m[K[36m[K-[m[K  blacklist for mongo wueries could be bypassed, allowing for dangerous
[35m[K/tmp/eve/CHANGES[m[K[36m[K:[m[K[32m[K94[m[K[36m[K:[m[K  `[01;31m[K`$where`[m[K` queries (Moritz Schneider).
[35m[K/tmp/eve/CHANGES[m[K[36m[K-[m[K[32m[K95[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/eve/CHANGES[m[K[36m[K-[m[K[32m[K230[m[K[36m[K-[m[K  aggregation results. Clients can optionally influence aggregation
[35m[K/tmp/eve/CHANGES[m[K[36m[K:[m[K[32m[K231[m[K[36m[K:[m[K  results by using the new ``aggregate`` option: `[01;31m[K`aggregate={"$year": 2015}`[m[K`.
[35m[K/tmp/eve/CHANGES[m[K[36m[K-[m[K[32m[K232[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/eve/CHANGES[m[K[36m[K-[m[K[32m[K809[m[K[36m[K-[m[K  Lytkin)
[35m[K/tmp/eve/CHANGES[m[K[36m[K:[m[K[32m[K810[m[K[36m[K:[m[K- Fix: Add missing `[01;31m[K`$options`[m[K` and `[01;31m[K`$list`[m[K` MongoDB operators to the
[35m[K/tmp/eve/CHANGES[m[K[36m[K-[m[K[32m[K811[m[K[36m[K-[m[K  allowed list (Jaroslav Semančík).
[36m[K##############################################[m[K
[35m[K/tmp/eve/CHANGES[m[K[36m[K-[m[K[32m[K1065[m[K[36m[K-[m[K  can be achieved with:
[35m[K/tmp/eve/CHANGES[m[K[36m[K:[m[K[32m[K1066[m[K[36m[K:[m[K  `[01;31m[K`/resource?where={"updated":{"$gt":"if-modified-since-date"}}`[m[K` (Josh
[35m[K/tmp/eve/CHANGES[m[K[36m[K-[m[K[32m[K1067[m[K[36m[K-[m[K  Villbrandt).
