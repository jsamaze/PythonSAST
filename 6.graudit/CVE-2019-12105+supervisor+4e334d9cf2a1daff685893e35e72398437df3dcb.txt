===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/supervisor/docs/logging.rst[m[K[36m[K-[m[K[32m[K16[m[K[36m[K-[m[K``logfile`` parameter in the ``[supervisord]`` section of the
[35m[K/tmp/supervisor/docs/logging.rst[m[K[36m[K:[m[K[32m[K17[m[K[36m[K:[m[Kconfiguration file, defaulting to :file:[01;31m[K`$CWD/supervisord.log`[m[K.
[35m[K/tmp/supervisor/docs/logging.rst[m[K[36m[K-[m[K[32m[K18[m[K[36m[K-[m[KSample activity log traffic is shown in the example below.  Some lines
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/docs/subprocess.rst[m[K[36m[K-[m[K[32m[K128[m[K[36m[K-[m[KThe :program:`pidproxy` program is put into your configuration's
[35m[K/tmp/supervisor/docs/subprocess.rst[m[K[36m[K:[m[K[32m[K129[m[K[36m[K:[m[K`[01;31m[K`$BINDIR`[m[K` when supervisor is installed (it is a "console script").
[35m[K/tmp/supervisor/docs/subprocess.rst[m[K[36m[K-[m[K[32m[K130[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/docs/configuration.rst[m[K[36m[K-[m[K[32m[K12[m[K[36m[K-[m[K
[35m[K/tmp/supervisor/docs/configuration.rst[m[K[36m[K:[m[K[32m[K13[m[K[36m[K:[m[K#. :file:[01;31m[K`$CWD/supervisord.conf`[m[K
[35m[K/tmp/supervisor/docs/configuration.rst[m[K[36m[K-[m[K[32m[K14[m[K[36m[K-[m[K
[35m[K/tmp/supervisor/docs/configuration.rst[m[K[36m[K:[m[K[32m[K15[m[K[36m[K:[m[K#. :file:[01;31m[K`$CWD/etc/supervisord.conf`[m[K
[35m[K/tmp/supervisor/docs/configuration.rst[m[K[36m[K-[m[K[32m[K16[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/docs/configuration.rst[m[K[36m[K-[m[K[32m[K235[m[K[36m[K-[m[K
[35m[K/tmp/supervisor/docs/configuration.rst[m[K[36m[K:[m[K[32m[K236[m[K[36m[K:[m[K  *Default*:  :file:[01;31m[K`$CWD/supervisord.log`[m[K
[35m[K/tmp/supervisor/docs/configuration.rst[m[K[36m[K-[m[K[32m[K237[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/docs/configuration.rst[m[K[36m[K-[m[K[32m[K287[m[K[36m[K-[m[K
[35m[K/tmp/supervisor/docs/configuration.rst[m[K[36m[K:[m[K[32m[K288[m[K[36m[K:[m[K  *Default*:  :file:[01;31m[K`$CWD/supervisord.pid`[m[K
[35m[K/tmp/supervisor/docs/configuration.rst[m[K[36m[K-[m[K[32m[K289[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/docs/configuration.rst[m[K[36m[K-[m[K[32m[K601[m[K[36m[K-[m[K  relative (e.g. ``programname``).  If it is relative, the
[35m[K/tmp/supervisor/docs/configuration.rst[m[K[36m[K:[m[K[32m[K602[m[K[36m[K:[m[K  supervisord's environment `[01;31m[K`$PATH`[m[K` will be searched for the
[35m[K/tmp/supervisor/docs/configuration.rst[m[K[36m[K-[m[K[32m[K603[m[K[36m[K-[m[K  executable.  Programs can accept arguments, e.g. ``/path/to/program
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/docs/running.rst[m[K[36m[K-[m[K[32m[K42[m[K[36m[K-[m[K
[35m[K/tmp/supervisor/docs/running.rst[m[K[36m[K:[m[K[32m[K43[m[K[36m[K:[m[KTo start :program:`supervisord`, run :file:[01;31m[K`$BINDIR/supervisord`[m[K.  The
[35m[K/tmp/supervisor/docs/running.rst[m[K[36m[K-[m[K[32m[K44[m[K[36m[K-[m[Kresulting process will daemonize itself and detach from the terminal.
[35m[K/tmp/supervisor/docs/running.rst[m[K[36m[K:[m[K[32m[K45[m[K[36m[K:[m[KIt keeps an operations log at :file:[01;31m[K`$CWD/supervisor.log`[m[K by default.
[35m[K/tmp/supervisor/docs/running.rst[m[K[36m[K-[m[K[32m[K46[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/docs/running.rst[m[K[36m[K-[m[K[32m[K171[m[K[36m[K-[m[K
[35m[K/tmp/supervisor/docs/running.rst[m[K[36m[K:[m[K[32m[K172[m[K[36m[K:[m[KTo start :program:`supervisorctl`, run `[01;31m[K`$BINDIR/supervisorctl`[m[K`.  A
[35m[K/tmp/supervisor/docs/running.rst[m[K[36m[K-[m[K[32m[K173[m[K[36m[K-[m[Kshell will be presented that will allow you to control the processes
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/docs/running.rst[m[K[36m[K-[m[K[32m[K382[m[K[36m[K-[m[Kthe ``pidfile`` parameter in the ``[supervisord]`` section of the
[35m[K/tmp/supervisor/docs/running.rst[m[K[36m[K:[m[K[32m[K383[m[K[36m[K:[m[Kconfiguration file (by default it's :file:[01;31m[K`$CWD/supervisord.pid`[m[K).
[35m[K/tmp/supervisor/docs/running.rst[m[K[36m[K-[m[K[32m[K384[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K-[m[K[32m[K455[m[K[36m[K-[m[K
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K:[m[K[32m[K456[m[K[36m[K:[m[K    def test_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K-[m[K[32m[K457[m[K[36m[K-[m[K        conf = self._makeOne('127.0.0.1', 8675)
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K:[m[K[32m[K458[m[K[36m[K:[m[K        addr = conf.[01;31m[Kaddr([m[K)
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K-[m[K[32m[K459[m[K[36m[K-[m[K        self.assertEqual(addr, ('127.0.0.1', 8675))
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K-[m[K[32m[K462[m[K[36m[K-[m[K        conf = self._makeOne('localhost', '5001')
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K:[m[K[32m[K463[m[K[36m[K:[m[K        addr = conf.[01;31m[Kaddr([m[K)
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K-[m[K[32m[K464[m[K[36m[K-[m[K        self.assertEqual(addr, ('localhost', 5001))
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K-[m[K[32m[K470[m[K[36m[K-[m[K        self.assertTrue(reuse)
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K:[m[K[32m[K471[m[K[36m[K:[m[K        self.assertEqual(conf.[01;31m[Kaddr([m[K), sock.getsockname()) #verifies that bind was called
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K-[m[K[32m[K472[m[K[36m[K-[m[K        sock.close()
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K-[m[K[32m[K512[m[K[36m[K-[m[K
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K:[m[K[32m[K513[m[K[36m[K:[m[K    def test_get_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K-[m[K[32m[K514[m[K[36m[K-[m[K        conf = self._makeOne('/tmp/foo.sock')
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K:[m[K[32m[K515[m[K[36m[K:[m[K        addr = conf.[01;31m[Kaddr([m[K)
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K-[m[K[32m[K516[m[K[36m[K-[m[K        self.assertEqual(addr, '/tmp/foo.sock')
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K-[m[K[32m[K536[m[K[36m[K-[m[K        # verifies that bind was called
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K:[m[K[32m[K537[m[K[36m[K:[m[K        self.assertEqual(conf.[01;31m[Kaddr([m[K), sock.getsockname())
[35m[K/tmp/supervisor/supervisor/tests/test_datatypes.py[m[K[36m[K-[m[K[32m[K538[m[K[36m[K-[m[K        sock.close()
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/tests/base.py[m[K[36m[K-[m[K[32m[K349[m[K[36m[K-[m[K
[35m[K/tmp/supervisor/supervisor/tests/base.py[m[K[36m[K:[m[K[32m[K350[m[K[36m[K:[m[K    def [01;31m[Kaddr([m[Kself):
[35m[K/tmp/supervisor/supervisor/tests/base.py[m[K[36m[K-[m[K[32m[K351[m[K[36m[K-[m[K        return 'dummy addr'
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/datatypes.py[m[K[36m[K-[m[K[32m[K184[m[K[36m[K-[m[K
[35m[K/tmp/supervisor/supervisor/datatypes.py[m[K[36m[K:[m[K[32m[K185[m[K[36m[K:[m[K    def [01;31m[Kaddr([m[Kself): # pragma: no cover
[35m[K/tmp/supervisor/supervisor/datatypes.py[m[K[36m[K-[m[K[32m[K186[m[K[36m[K-[m[K        raise NotImplementedError
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/datatypes.py[m[K[36m[K-[m[K[32m[K202[m[K[36m[K-[m[K
[35m[K/tmp/supervisor/supervisor/datatypes.py[m[K[36m[K:[m[K[32m[K203[m[K[36m[K:[m[K    def [01;31m[Kaddr([m[Kself):
[35m[K/tmp/supervisor/supervisor/datatypes.py[m[K[36m[K-[m[K[32m[K204[m[K[36m[K-[m[K        return self.host, self.port
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/datatypes.py[m[K[36m[K-[m[K[32m[K209[m[K[36m[K-[m[K            sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
[35m[K/tmp/supervisor/supervisor/datatypes.py[m[K[36m[K:[m[K[32m[K210[m[K[36m[K:[m[K            sock.bind(self.[01;31m[Kaddr([m[K))
[35m[K/tmp/supervisor/supervisor/datatypes.py[m[K[36m[K-[m[K[32m[K211[m[K[36m[K-[m[K        except:
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/datatypes.py[m[K[36m[K-[m[K[32m[K230[m[K[36m[K-[m[K
[35m[K/tmp/supervisor/supervisor/datatypes.py[m[K[36m[K:[m[K[32m[K231[m[K[36m[K:[m[K    def [01;31m[Kaddr([m[Kself):
[35m[K/tmp/supervisor/supervisor/datatypes.py[m[K[36m[K-[m[K[32m[K232[m[K[36m[K-[m[K        return self.path
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/datatypes.py[m[K[36m[K-[m[K[32m[K238[m[K[36m[K-[m[K        try:
[35m[K/tmp/supervisor/supervisor/datatypes.py[m[K[36m[K:[m[K[32m[K239[m[K[36m[K:[m[K            sock.bind(self.[01;31m[Kaddr([m[K))
[35m[K/tmp/supervisor/supervisor/datatypes.py[m[K[36m[K-[m[K[32m[K240[m[K[36m[K-[m[K            self._chown()
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/http.py[m[K[36m[K-[m[K[32m[K488[m[K[36m[K-[m[K        sock.setblocking(0)
[35m[K/tmp/supervisor/supervisor/http.py[m[K[36m[K:[m[K[32m[K489[m[K[36m[K:[m[K        self.set_reuse_[01;31m[Kaddr([m[K)
[35m[K/tmp/supervisor/supervisor/http.py[m[K[36m[K-[m[K[32m[K490[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/http.py[m[K[36m[K-[m[K[32m[K543[m[K[36m[K-[m[K        try:
[35m[K/tmp/supervisor/supervisor/http.py[m[K[36m[K:[m[K[32m[K544[m[K[36m[K:[m[K            self.server_name = socket.gethostby[01;31m[Kaddr ([m[Kip)[0]
[35m[K/tmp/supervisor/supervisor/http.py[m[K[36m[K-[m[K[32m[K545[m[K[36m[K-[m[K        except socket.error:
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/medusa/docs/programming.html[m[K[36m[K-[m[K[32m[K488[m[K[36m[K-[m[K        self.create_socket (socket.AF_INET, socket.SOCK_STREAM)
[35m[K/tmp/supervisor/supervisor/medusa/docs/programming.html[m[K[36m[K:[m[K[32m[K489[m[K[36m[K:[m[K        self.set_reuse_[01;31m[Kaddr([m[K)
[35m[K/tmp/supervisor/supervisor/medusa/docs/programming.html[m[K[36m[K-[m[K[32m[K490[m[K[36m[K-[m[K        self.there = (host, port)
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/medusa/http_server.py[m[K[36m[K-[m[K[32m[K670[m[K[36m[K-[m[K
[35m[K/tmp/supervisor/supervisor/medusa/http_server.py[m[K[36m[K:[m[K[32m[K671[m[K[36m[K:[m[K        self.set_reuse_[01;31m[Kaddr([m[K)
[35m[K/tmp/supervisor/supervisor/medusa/http_server.py[m[K[36m[K-[m[K[32m[K672[m[K[36m[K-[m[K        self.bind ((ip, port))
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/medusa/http_server.py[m[K[36m[K-[m[K[32m[K681[m[K[36m[K-[m[K        try:
[35m[K/tmp/supervisor/supervisor/medusa/http_server.py[m[K[36m[K:[m[K[32m[K682[m[K[36m[K:[m[K            self.server_name = socket.gethostby[01;31m[Kaddr ([m[Kip)[0]
[35m[K/tmp/supervisor/supervisor/medusa/http_server.py[m[K[36m[K-[m[K[32m[K683[m[K[36m[K-[m[K        except socket.error:
[36m[K##############################################[m[K
[35m[K/tmp/supervisor/supervisor/medusa/asyncore_25.py[m[K[36m[K-[m[K[32m[K269[m[K[36m[K-[m[K
[35m[K/tmp/supervisor/supervisor/medusa/asyncore_25.py[m[K[36m[K:[m[K[32m[K270[m[K[36m[K:[m[K    def set_reuse_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/supervisor/supervisor/medusa/asyncore_25.py[m[K[36m[K-[m[K[32m[K271[m[K[36m[K-[m[K        # try to re-use a server port if possible
