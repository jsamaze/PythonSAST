===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/werkzeug/src/werkzeug/middleware/proxy_fix.py[m[K[36m[K-[m[K[32m[K120[m[K[36m[K-[m[K
[35m[K/tmp/werkzeug/src/werkzeug/middleware/proxy_fix.py[m[K[36m[K:[m[K[32m[K121[m[K[36m[K:[m[K    def get_remote_[01;31m[Kaddr([m[Kself, forwarded_for):
[35m[K/tmp/werkzeug/src/werkzeug/middleware/proxy_fix.py[m[K[36m[K-[m[K[32m[K122[m[K[36m[K-[m[K        """Get the real ``remote_addr`` by looking backwards ``x_for``
[36m[K##############################################[m[K
[35m[K/tmp/werkzeug/src/werkzeug/debug/tbtools.py[m[K[36m[K-[m[K[32m[K555[m[K[36m[K-[m[K            code = compile(code, "<interactive>", mode)
[35m[K/tmp/werkzeug/src/werkzeug/debug/tbtools.py[m[K[36m[K:[m[K[32m[K556[m[K[36m[K:[m[K        return [01;31m[Keval(code, self.globals, self.locals)[m[K
[35m[K/tmp/werkzeug/src/werkzeug/debug/tbtools.py[m[K[36m[K-[m[K[32m[K557[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/werkzeug/src/werkzeug/debug/console.py[m[K[36m[K-[m[K[32m[K179[m[K[36m[K-[m[K        try:
[35m[K/tmp/werkzeug/src/werkzeug/debug/console.py[m[K[36m[K:[m[K[32m[K180[m[K[36m[K:[m[K            [01;31m[Keval(code, self.globals, self.locals)[m[K
[35m[K/tmp/werkzeug/src/werkzeug/debug/console.py[m[K[36m[K-[m[K[32m[K181[m[K[36m[K-[m[K        except Exception:
[36m[K##############################################[m[K
[35m[K/tmp/werkzeug/src/werkzeug/debug/console.py[m[K[36m[K-[m[K[32m[K209[m[K[36m[K-[m[K
[35m[K/tmp/werkzeug/src/werkzeug/debug/console.py[m[K[36m[K:[m[K[32m[K210[m[K[36m[K:[m[K    def [01;31m[Keval(self, code)[m[K:
[35m[K/tmp/werkzeug/src/werkzeug/debug/console.py[m[K[36m[K-[m[K[32m[K211[m[K[36m[K-[m[K        _local._current_ipy = self._ipy
[36m[K##############################################[m[K
[35m[K/tmp/werkzeug/src/werkzeug/debug/__init__.py[m[K[36m[K-[m[K[32m[K363[m[K[36m[K-[m[K        """Execute a command in a console."""
[35m[K/tmp/werkzeug/src/werkzeug/debug/__init__.py[m[K[36m[K:[m[K[32m[K364[m[K[36m[K:[m[K        return Response(frame.console.[01;31m[Keval(command)[m[K, mimetype="text/html")
[35m[K/tmp/werkzeug/src/werkzeug/debug/__init__.py[m[K[36m[K-[m[K[32m[K365[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/werkzeug/src/werkzeug/serving.py[m[K[36m[K-[m[K[32m[K651[m[K[36m[K-[m[K
[35m[K/tmp/werkzeug/src/werkzeug/serving.py[m[K[36m[K:[m[K[32m[K652[m[K[36m[K:[m[Kdef get_sock[01;31m[Kaddr([m[Khost, port, family):
[35m[K/tmp/werkzeug/src/werkzeug/serving.py[m[K[36m[K-[m[K[32m[K653[m[K[36m[K-[m[K    """Return a fully qualified socket address that can be passed to
[36m[K##############################################[m[K
[35m[K/tmp/werkzeug/src/werkzeug/serving.py[m[K[36m[K-[m[K[32m[K692[m[K[36m[K-[m[K
[35m[K/tmp/werkzeug/src/werkzeug/serving.py[m[K[36m[K:[m[K[32m[K693[m[K[36m[K:[m[K        server_address = get_sock[01;31m[Kaddr([m[Khost, int(port), self.address_family)
[35m[K/tmp/werkzeug/src/werkzeug/serving.py[m[K[36m[K-[m[K[32m[K694[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/werkzeug/src/werkzeug/serving.py[m[K[36m[K-[m[K[32m[K983[m[K[36m[K-[m[K            address_family = select_address_family(hostname, port)
[35m[K/tmp/werkzeug/src/werkzeug/serving.py[m[K[36m[K:[m[K[32m[K984[m[K[36m[K:[m[K            server_address = get_sock[01;31m[Kaddr([m[Khostname, port, address_family)
[35m[K/tmp/werkzeug/src/werkzeug/serving.py[m[K[36m[K-[m[K[32m[K985[m[K[36m[K-[m[K            s = socket.socket(address_family, socket.SOCK_STREAM)
[36m[K##############################################[m[K
[35m[K/tmp/werkzeug/src/werkzeug/wrappers/base_request.py[m[K[36m[K-[m[K[32m[K623[m[K[36m[K-[m[K    @property
[35m[K/tmp/werkzeug/src/werkzeug/wrappers/base_request.py[m[K[36m[K:[m[K[32m[K624[m[K[36m[K:[m[K    def remote_[01;31m[Kaddr([m[Kself):
[35m[K/tmp/werkzeug/src/werkzeug/wrappers/base_request.py[m[K[36m[K-[m[K[32m[K625[m[K[36m[K-[m[K        """The remote address of the client."""
[36m[K##############################################[m[K
[35m[K/tmp/werkzeug/tests/middleware/test_proxy_fix.py[m[K[36m[K-[m[K[32m[K185[m[K[36m[K-[m[K    with pytest.deprecated_call():
[35m[K/tmp/werkzeug/tests/middleware/test_proxy_fix.py[m[K[36m[K:[m[K[32m[K186[m[K[36m[K:[m[K        assert app.get_remote_[01;31m[Kaddr([m[K["spam", "eggs"]) == "spam"
[36m[K##############################################[m[K
[35m[K/tmp/werkzeug/tests/test_debug.py[m[K[36m[K-[m[K[32m[K293[m[K[36m[K-[m[K        try:
[35m[K/tmp/werkzeug/tests/test_debug.py[m[K[36m[K:[m[K[32m[K294[m[K[36m[K:[m[K            [01;31m[Keval(code)[m[K
[35m[K/tmp/werkzeug/tests/test_debug.py[m[K[36m[K-[m[K[32m[K295[m[K[36m[K-[m[K        except ZeroDivisionError:
