===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/Limnoria/supybot/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K95[m[K[36m[K-[m[K    _evalEnv.update(globals())
[35m[K/tmp/Limnoria/supybot/plugins/Debug/plugin.py[m[K[36m[K:[m[K[32m[K96[m[K[36m[K:[m[K    def [01;31m[Keval(self, irc, msg, args, s)[m[K:
[35m[K/tmp/Limnoria/supybot/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K97[m[K[36m[K-[m[K        """<expression>
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/supybot/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K105[m[K[36m[K-[m[K            self._evalEnv.update(locals())
[35m[K/tmp/Limnoria/supybot/plugins/Debug/plugin.py[m[K[36m[K:[m[K[32m[K106[m[K[36m[K:[m[K            x = [01;31m[Keval(s, self._evalEnv, self._evalEnv)[m[K
[35m[K/tmp/Limnoria/supybot/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K107[m[K[36m[K-[m[K            self._evalEnv['___'] = self._evalEnv['__']
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/supybot/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K124[m[K[36m[K-[m[K
[35m[K/tmp/Limnoria/supybot/plugins/Debug/plugin.py[m[K[36m[K:[m[K[32m[K125[m[K[36m[K:[m[K    def simple[01;31m[Keval(self, irc, msg, args, text)[m[K:
[35m[K/tmp/Limnoria/supybot/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K126[m[K[36m[K-[m[K        """<expression>
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/supybot/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K131[m[K[36m[K-[m[K        try:
[35m[K/tmp/Limnoria/supybot/plugins/Debug/plugin.py[m[K[36m[K:[m[K[32m[K132[m[K[36m[K:[m[K            irc.reply(repr([01;31m[Keval(text)[m[K))
[35m[K/tmp/Limnoria/supybot/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K133[m[K[36m[K-[m[K        except Exception as e:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/supybot/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K222[m[K[36m[K-[m[K            self.log.info('evaluating %q from %s', text, msg.prefix)
[35m[K/tmp/Limnoria/supybot/plugins/Math/plugin.py[m[K[36m[K:[m[K[32m[K223[m[K[36m[K:[m[K            x = complex([01;31m[Keval(text, self._mathSafeEnv, self._mathSafeEnv)[m[K)
[35m[K/tmp/Limnoria/supybot/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K224[m[K[36m[K-[m[K            irc.reply(self._complexToString(x))
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/supybot/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K259[m[K[36m[K-[m[K            self.log.info('evaluating %q from %s', text, msg.prefix)
[35m[K/tmp/Limnoria/supybot/plugins/Math/plugin.py[m[K[36m[K:[m[K[32m[K260[m[K[36m[K:[m[K            irc.reply(str([01;31m[Keval(text, self._mathEnv, self._mathEnv)[m[K))
[35m[K/tmp/Limnoria/supybot/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K261[m[K[36m[K-[m[K        except OverflowError:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/supybot/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K312[m[K[36m[K-[m[K                    try:
[35m[K/tmp/Limnoria/supybot/plugins/Math/plugin.py[m[K[36m[K:[m[K[32m[K313[m[K[36m[K:[m[K                        stack.append([01;31m[Keval(s, self._mathSafeEnv, self._mathSafeEnv)[m[K)
[35m[K/tmp/Limnoria/supybot/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K314[m[K[36m[K-[m[K                    except SyntaxError:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/supybot/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1068[m[K[36m[K-[m[K                if isFrom:
[35m[K/tmp/Limnoria/supybot/plugins/Math/local/convertcore.py[m[K[36m[K:[m[K[32m[K1069[m[K[36m[K:[m[K                    temp =  float([01;31m[Keval(self.unitList[0].fromEqn)[m[K)
[35m[K/tmp/Limnoria/supybot/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1070[m[K[36m[K-[m[K                    return temp
[35m[K/tmp/Limnoria/supybot/plugins/Math/local/convertcore.py[m[K[36m[K:[m[K[32m[K1071[m[K[36m[K:[m[K                temp = float([01;31m[Keval(self.unitList[0].toEqn)[m[K)
[35m[K/tmp/Limnoria/supybot/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1072[m[K[36m[K-[m[K                return temp
[35m[K/tmp/Limnoria/supybot/plugins/Math/local/convertcore.py[m[K[36m[K:[m[K[32m[K1073[m[K[36m[K:[m[K            data = list([01;31m[Keval(self.unitList[0].fromEqn)[m[K)  # extrapolation list
[35m[K/tmp/Limnoria/supybot/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1074[m[K[36m[K-[m[K            if isFrom:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/supybot/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1195[m[K[36m[K-[m[K                    try:
[35m[K/tmp/Limnoria/supybot/plugins/Math/local/convertcore.py[m[K[36m[K:[m[K[32m[K1196[m[K[36m[K:[m[K                        self.factor = float([01;31m[Keval(parts[0])[m[K)
[35m[K/tmp/Limnoria/supybot/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1197[m[K[36m[K-[m[K                        self.equiv = parts[1]
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/supybot/plugins/Praise/README.md[m[K[36m[K-[m[K[32m[K3[m[K[36m[K-[m[KExample:
[35m[K/tmp/Limnoria/supybot/plugins/Praise/README.md[m[K[36m[K:[m[K[32m[K4[m[K[36m[K:[m[K* If you add [01;31m[K`hugs $who`[m[K.
[35m[K/tmp/Limnoria/supybot/plugins/Praise/README.md[m[K[36m[K-[m[K[32m[K5[m[K[36m[K-[m[K* Someone says `@praise ChanServ`.
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/supybot/plugins/Lart/README.md[m[K[36m[K-[m[K[32m[K3[m[K[36m[K-[m[KExample:
[35m[K/tmp/Limnoria/supybot/plugins/Lart/README.md[m[K[36m[K:[m[K[32m[K4[m[K[36m[K:[m[K* If you add [01;31m[K`slaps $who`[m[K.
[35m[K/tmp/Limnoria/supybot/plugins/Lart/README.md[m[K[36m[K-[m[K[32m[K5[m[K[36m[K-[m[K* And Someone says `@lart ChanServ`.
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/supybot/plugins/ChannelStats/plugin.py[m[K[36m[K-[m[K[32m[K333[m[K[36m[K-[m[K                try:
[35m[K/tmp/Limnoria/supybot/plugins/ChannelStats/plugin.py[m[K[36m[K:[m[K[32m[K334[m[K[36m[K:[m[K                    v = [01;31m[Keval(expr, e, e)[m[K
[35m[K/tmp/Limnoria/supybot/plugins/ChannelStats/plugin.py[m[K[36m[K-[m[K[32m[K335[m[K[36m[K-[m[K                except ZeroDivisionError:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/supybot/utils/gen.py[m[K[36m[K-[m[K[32m[K205[m[K[36m[K-[m[K        if namespace is None:
[35m[K/tmp/Limnoria/supybot/utils/gen.py[m[K[36m[K:[m[K[32m[K206[m[K[36m[K:[m[K            return [01;31m[Keval(s, namespace, namespace)[m[K
[35m[K/tmp/Limnoria/supybot/utils/gen.py[m[K[36m[K-[m[K[32m[K207[m[K[36m[K-[m[K        else:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/supybot/utils/gen.py[m[K[36m[K-[m[K[32m[K209[m[K[36m[K-[m[K            # but it's an extra security.
[35m[K/tmp/Limnoria/supybot/utils/gen.py[m[K[36m[K:[m[K[32m[K210[m[K[36m[K:[m[K            return ast.literal_[01;31m[Keval(node)[m[K
[35m[K/tmp/Limnoria/supybot/utils/gen.py[m[K[36m[K-[m[K[32m[K211[m[K[36m[K-[m[K    else:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/supybot/test.py[m[K[36m[K-[m[K[32m[K128[m[K[36m[K-[m[Kclass TestPlugin(callbacks.Plugin):
[35m[K/tmp/Limnoria/supybot/test.py[m[K[36m[K:[m[K[32m[K129[m[K[36m[K:[m[K    def [01;31m[Keval(self, irc, msg, args)[m[K:
[35m[K/tmp/Limnoria/supybot/test.py[m[K[36m[K-[m[K[32m[K130[m[K[36m[K-[m[K        """<text>
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/supybot/irclib.py[m[K[36m[K-[m[K[32m[K1004[m[K[36m[K-[m[K        self.nick = get_value('nick')
[35m[K/tmp/Limnoria/supybot/irclib.py[m[K[36m[K:[m[K[32m[K1005[m[K[36m[K:[m[K        # Exp[01;31m[Kand variables like $[m[Kversion in realname.
[35m[K/tmp/Limnoria/supybot/irclib.py[m[K[36m[K-[m[K[32m[K1006[m[K[36m[K-[m[K        self.user = ircutils.standardSubstitute(self, None, get_value('user'))
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/src/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K95[m[K[36m[K-[m[K    _evalEnv.update(globals())
[35m[K/tmp/Limnoria/src/plugins/Debug/plugin.py[m[K[36m[K:[m[K[32m[K96[m[K[36m[K:[m[K    def [01;31m[Keval(self, irc, msg, args, s)[m[K:
[35m[K/tmp/Limnoria/src/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K97[m[K[36m[K-[m[K        """<expression>
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/src/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K105[m[K[36m[K-[m[K            self._evalEnv.update(locals())
[35m[K/tmp/Limnoria/src/plugins/Debug/plugin.py[m[K[36m[K:[m[K[32m[K106[m[K[36m[K:[m[K            x = [01;31m[Keval(s, self._evalEnv, self._evalEnv)[m[K
[35m[K/tmp/Limnoria/src/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K107[m[K[36m[K-[m[K            self._evalEnv['___'] = self._evalEnv['__']
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/src/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K124[m[K[36m[K-[m[K
[35m[K/tmp/Limnoria/src/plugins/Debug/plugin.py[m[K[36m[K:[m[K[32m[K125[m[K[36m[K:[m[K    def simple[01;31m[Keval(self, irc, msg, args, text)[m[K:
[35m[K/tmp/Limnoria/src/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K126[m[K[36m[K-[m[K        """<expression>
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/src/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K131[m[K[36m[K-[m[K        try:
[35m[K/tmp/Limnoria/src/plugins/Debug/plugin.py[m[K[36m[K:[m[K[32m[K132[m[K[36m[K:[m[K            irc.reply(repr([01;31m[Keval(text)[m[K))
[35m[K/tmp/Limnoria/src/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K133[m[K[36m[K-[m[K        except Exception as e:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/src/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K222[m[K[36m[K-[m[K            self.log.info('evaluating %q from %s', text, msg.prefix)
[35m[K/tmp/Limnoria/src/plugins/Math/plugin.py[m[K[36m[K:[m[K[32m[K223[m[K[36m[K:[m[K            x = complex([01;31m[Keval(text, self._mathSafeEnv, self._mathSafeEnv)[m[K)
[35m[K/tmp/Limnoria/src/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K224[m[K[36m[K-[m[K            irc.reply(self._complexToString(x))
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/src/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K259[m[K[36m[K-[m[K            self.log.info('evaluating %q from %s', text, msg.prefix)
[35m[K/tmp/Limnoria/src/plugins/Math/plugin.py[m[K[36m[K:[m[K[32m[K260[m[K[36m[K:[m[K            irc.reply(str([01;31m[Keval(text, self._mathEnv, self._mathEnv)[m[K))
[35m[K/tmp/Limnoria/src/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K261[m[K[36m[K-[m[K        except OverflowError:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/src/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K312[m[K[36m[K-[m[K                    try:
[35m[K/tmp/Limnoria/src/plugins/Math/plugin.py[m[K[36m[K:[m[K[32m[K313[m[K[36m[K:[m[K                        stack.append([01;31m[Keval(s, self._mathSafeEnv, self._mathSafeEnv)[m[K)
[35m[K/tmp/Limnoria/src/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K314[m[K[36m[K-[m[K                    except SyntaxError:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/src/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1068[m[K[36m[K-[m[K                if isFrom:
[35m[K/tmp/Limnoria/src/plugins/Math/local/convertcore.py[m[K[36m[K:[m[K[32m[K1069[m[K[36m[K:[m[K                    temp =  float([01;31m[Keval(self.unitList[0].fromEqn)[m[K)
[35m[K/tmp/Limnoria/src/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1070[m[K[36m[K-[m[K                    return temp
[35m[K/tmp/Limnoria/src/plugins/Math/local/convertcore.py[m[K[36m[K:[m[K[32m[K1071[m[K[36m[K:[m[K                temp = float([01;31m[Keval(self.unitList[0].toEqn)[m[K)
[35m[K/tmp/Limnoria/src/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1072[m[K[36m[K-[m[K                return temp
[35m[K/tmp/Limnoria/src/plugins/Math/local/convertcore.py[m[K[36m[K:[m[K[32m[K1073[m[K[36m[K:[m[K            data = list([01;31m[Keval(self.unitList[0].fromEqn)[m[K)  # extrapolation list
[35m[K/tmp/Limnoria/src/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1074[m[K[36m[K-[m[K            if isFrom:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/src/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1195[m[K[36m[K-[m[K                    try:
[35m[K/tmp/Limnoria/src/plugins/Math/local/convertcore.py[m[K[36m[K:[m[K[32m[K1196[m[K[36m[K:[m[K                        self.factor = float([01;31m[Keval(parts[0])[m[K)
[35m[K/tmp/Limnoria/src/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1197[m[K[36m[K-[m[K                        self.equiv = parts[1]
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/src/plugins/Praise/README.md[m[K[36m[K-[m[K[32m[K3[m[K[36m[K-[m[KExample:
[35m[K/tmp/Limnoria/src/plugins/Praise/README.md[m[K[36m[K:[m[K[32m[K4[m[K[36m[K:[m[K* If you add [01;31m[K`hugs $who`[m[K.
[35m[K/tmp/Limnoria/src/plugins/Praise/README.md[m[K[36m[K-[m[K[32m[K5[m[K[36m[K-[m[K* Someone says `@praise ChanServ`.
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/src/plugins/Lart/README.md[m[K[36m[K-[m[K[32m[K3[m[K[36m[K-[m[KExample:
[35m[K/tmp/Limnoria/src/plugins/Lart/README.md[m[K[36m[K:[m[K[32m[K4[m[K[36m[K:[m[K* If you add [01;31m[K`slaps $who`[m[K.
[35m[K/tmp/Limnoria/src/plugins/Lart/README.md[m[K[36m[K-[m[K[32m[K5[m[K[36m[K-[m[K* And Someone says `@lart ChanServ`.
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/src/plugins/ChannelStats/plugin.py[m[K[36m[K-[m[K[32m[K333[m[K[36m[K-[m[K                try:
[35m[K/tmp/Limnoria/src/plugins/ChannelStats/plugin.py[m[K[36m[K:[m[K[32m[K334[m[K[36m[K:[m[K                    v = [01;31m[Keval(expr, e, e)[m[K
[35m[K/tmp/Limnoria/src/plugins/ChannelStats/plugin.py[m[K[36m[K-[m[K[32m[K335[m[K[36m[K-[m[K                except ZeroDivisionError:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/src/utils/gen.py[m[K[36m[K-[m[K[32m[K205[m[K[36m[K-[m[K        if namespace is None:
[35m[K/tmp/Limnoria/src/utils/gen.py[m[K[36m[K:[m[K[32m[K206[m[K[36m[K:[m[K            return [01;31m[Keval(s, namespace, namespace)[m[K
[35m[K/tmp/Limnoria/src/utils/gen.py[m[K[36m[K-[m[K[32m[K207[m[K[36m[K-[m[K        else:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/src/utils/gen.py[m[K[36m[K-[m[K[32m[K209[m[K[36m[K-[m[K            # but it's an extra security.
[35m[K/tmp/Limnoria/src/utils/gen.py[m[K[36m[K:[m[K[32m[K210[m[K[36m[K:[m[K            return ast.literal_[01;31m[Keval(node)[m[K
[35m[K/tmp/Limnoria/src/utils/gen.py[m[K[36m[K-[m[K[32m[K211[m[K[36m[K-[m[K    else:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/src/test.py[m[K[36m[K-[m[K[32m[K128[m[K[36m[K-[m[Kclass TestPlugin(callbacks.Plugin):
[35m[K/tmp/Limnoria/src/test.py[m[K[36m[K:[m[K[32m[K129[m[K[36m[K:[m[K    def [01;31m[Keval(self, irc, msg, args)[m[K:
[35m[K/tmp/Limnoria/src/test.py[m[K[36m[K-[m[K[32m[K130[m[K[36m[K-[m[K        """<text>
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/src/irclib.py[m[K[36m[K-[m[K[32m[K1004[m[K[36m[K-[m[K        self.nick = get_value('nick')
[35m[K/tmp/Limnoria/src/irclib.py[m[K[36m[K:[m[K[32m[K1005[m[K[36m[K:[m[K        # Exp[01;31m[Kand variables like $[m[Kversion in realname.
[35m[K/tmp/Limnoria/src/irclib.py[m[K[36m[K-[m[K[32m[K1006[m[K[36m[K-[m[K        self.user = ircutils.standardSubstitute(self, None, get_value('user'))
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/ChangeLog[m[K[36m[K-[m[K[32m[K1900[m[K[36m[K-[m[K	* Added plugins.standardSubstitute to do standard substitutions
[35m[K/tmp/Limnoria/ChangeLog[m[K[36m[K:[m[K[32m[K1901[m[K[36m[K:[m[K	f[01;31m[Kor things like $who, $nick, $[m[Kchannel, etc.
[35m[K/tmp/Limnoria/ChangeLog[m[K[36m[K-[m[K[32m[K1902[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K95[m[K[36m[K-[m[K    _evalEnv.update(globals())
[35m[K/tmp/Limnoria/plugins/Debug/plugin.py[m[K[36m[K:[m[K[32m[K96[m[K[36m[K:[m[K    def [01;31m[Keval(self, irc, msg, args, s)[m[K:
[35m[K/tmp/Limnoria/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K97[m[K[36m[K-[m[K        """<expression>
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K105[m[K[36m[K-[m[K            self._evalEnv.update(locals())
[35m[K/tmp/Limnoria/plugins/Debug/plugin.py[m[K[36m[K:[m[K[32m[K106[m[K[36m[K:[m[K            x = [01;31m[Keval(s, self._evalEnv, self._evalEnv)[m[K
[35m[K/tmp/Limnoria/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K107[m[K[36m[K-[m[K            self._evalEnv['___'] = self._evalEnv['__']
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K124[m[K[36m[K-[m[K
[35m[K/tmp/Limnoria/plugins/Debug/plugin.py[m[K[36m[K:[m[K[32m[K125[m[K[36m[K:[m[K    def simple[01;31m[Keval(self, irc, msg, args, text)[m[K:
[35m[K/tmp/Limnoria/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K126[m[K[36m[K-[m[K        """<expression>
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K131[m[K[36m[K-[m[K        try:
[35m[K/tmp/Limnoria/plugins/Debug/plugin.py[m[K[36m[K:[m[K[32m[K132[m[K[36m[K:[m[K            irc.reply(repr([01;31m[Keval(text)[m[K))
[35m[K/tmp/Limnoria/plugins/Debug/plugin.py[m[K[36m[K-[m[K[32m[K133[m[K[36m[K-[m[K        except Exception as e:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K222[m[K[36m[K-[m[K            self.log.info('evaluating %q from %s', text, msg.prefix)
[35m[K/tmp/Limnoria/plugins/Math/plugin.py[m[K[36m[K:[m[K[32m[K223[m[K[36m[K:[m[K            x = complex([01;31m[Keval(text, self._mathSafeEnv, self._mathSafeEnv)[m[K)
[35m[K/tmp/Limnoria/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K224[m[K[36m[K-[m[K            irc.reply(self._complexToString(x))
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K259[m[K[36m[K-[m[K            self.log.info('evaluating %q from %s', text, msg.prefix)
[35m[K/tmp/Limnoria/plugins/Math/plugin.py[m[K[36m[K:[m[K[32m[K260[m[K[36m[K:[m[K            irc.reply(str([01;31m[Keval(text, self._mathEnv, self._mathEnv)[m[K))
[35m[K/tmp/Limnoria/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K261[m[K[36m[K-[m[K        except OverflowError:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K312[m[K[36m[K-[m[K                    try:
[35m[K/tmp/Limnoria/plugins/Math/plugin.py[m[K[36m[K:[m[K[32m[K313[m[K[36m[K:[m[K                        stack.append([01;31m[Keval(s, self._mathSafeEnv, self._mathSafeEnv)[m[K)
[35m[K/tmp/Limnoria/plugins/Math/plugin.py[m[K[36m[K-[m[K[32m[K314[m[K[36m[K-[m[K                    except SyntaxError:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1068[m[K[36m[K-[m[K                if isFrom:
[35m[K/tmp/Limnoria/plugins/Math/local/convertcore.py[m[K[36m[K:[m[K[32m[K1069[m[K[36m[K:[m[K                    temp =  float([01;31m[Keval(self.unitList[0].fromEqn)[m[K)
[35m[K/tmp/Limnoria/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1070[m[K[36m[K-[m[K                    return temp
[35m[K/tmp/Limnoria/plugins/Math/local/convertcore.py[m[K[36m[K:[m[K[32m[K1071[m[K[36m[K:[m[K                temp = float([01;31m[Keval(self.unitList[0].toEqn)[m[K)
[35m[K/tmp/Limnoria/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1072[m[K[36m[K-[m[K                return temp
[35m[K/tmp/Limnoria/plugins/Math/local/convertcore.py[m[K[36m[K:[m[K[32m[K1073[m[K[36m[K:[m[K            data = list([01;31m[Keval(self.unitList[0].fromEqn)[m[K)  # extrapolation list
[35m[K/tmp/Limnoria/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1074[m[K[36m[K-[m[K            if isFrom:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1195[m[K[36m[K-[m[K                    try:
[35m[K/tmp/Limnoria/plugins/Math/local/convertcore.py[m[K[36m[K:[m[K[32m[K1196[m[K[36m[K:[m[K                        self.factor = float([01;31m[Keval(parts[0])[m[K)
[35m[K/tmp/Limnoria/plugins/Math/local/convertcore.py[m[K[36m[K-[m[K[32m[K1197[m[K[36m[K-[m[K                        self.equiv = parts[1]
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/plugins/Praise/README.md[m[K[36m[K-[m[K[32m[K3[m[K[36m[K-[m[KExample:
[35m[K/tmp/Limnoria/plugins/Praise/README.md[m[K[36m[K:[m[K[32m[K4[m[K[36m[K:[m[K* If you add [01;31m[K`hugs $who`[m[K.
[35m[K/tmp/Limnoria/plugins/Praise/README.md[m[K[36m[K-[m[K[32m[K5[m[K[36m[K-[m[K* Someone says `@praise ChanServ`.
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/plugins/Lart/README.md[m[K[36m[K-[m[K[32m[K3[m[K[36m[K-[m[KExample:
[35m[K/tmp/Limnoria/plugins/Lart/README.md[m[K[36m[K:[m[K[32m[K4[m[K[36m[K:[m[K* If you add [01;31m[K`slaps $who`[m[K.
[35m[K/tmp/Limnoria/plugins/Lart/README.md[m[K[36m[K-[m[K[32m[K5[m[K[36m[K-[m[K* And Someone says `@lart ChanServ`.
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/plugins/ChannelStats/plugin.py[m[K[36m[K-[m[K[32m[K333[m[K[36m[K-[m[K                try:
[35m[K/tmp/Limnoria/plugins/ChannelStats/plugin.py[m[K[36m[K:[m[K[32m[K334[m[K[36m[K:[m[K                    v = [01;31m[Keval(expr, e, e)[m[K
[35m[K/tmp/Limnoria/plugins/ChannelStats/plugin.py[m[K[36m[K-[m[K[32m[K335[m[K[36m[K-[m[K                except ZeroDivisionError:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/sandbox/release.py[m[K[36m[K-[m[K[32m[K37[m[K[36m[K-[m[Kdef checkGitRepo():
[35m[K/tmp/Limnoria/sandbox/release.py[m[K[36m[K:[m[K[32m[K38[m[K[36m[K:[m[K    [01;31m[Ksystem('test "$(git rev-parse --is-inside-work-tree)[m[K" = "true"',
[35m[K/tmp/Limnoria/sandbox/release.py[m[K[36m[K-[m[K[32m[K39[m[K[36m[K-[m[K           'Must be run from a git checkout.',
[35m[K/tmp/Limnoria/sandbox/release.py[m[K[36m[K-[m[K[32m[K40[m[K[36m[K-[m[K           shell=True)
[35m[K/tmp/Limnoria/sandbox/release.py[m[K[36m[K:[m[K[32m[K41[m[K[36m[K:[m[K    [01;31m[Ksystem('test "$(git rev-parse --show-cdup >/dev/null)[m[K" = ""',
[35m[K/tmp/Limnoria/sandbox/release.py[m[K[36m[K-[m[K[32m[K42[m[K[36m[K-[m[K           'Must be run from the top-level directory of the git checkout.',
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/sandbox/Debug/plugin.py[m[K[36m[K-[m[K[32m[K95[m[K[36m[K-[m[K    _evalEnv.update(globals())
[35m[K/tmp/Limnoria/sandbox/Debug/plugin.py[m[K[36m[K:[m[K[32m[K96[m[K[36m[K:[m[K    def [01;31m[Keval(self, irc, msg, args, s)[m[K:
[35m[K/tmp/Limnoria/sandbox/Debug/plugin.py[m[K[36m[K-[m[K[32m[K97[m[K[36m[K-[m[K        """<expression>
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/sandbox/Debug/plugin.py[m[K[36m[K-[m[K[32m[K105[m[K[36m[K-[m[K            self._evalEnv.update(locals())
[35m[K/tmp/Limnoria/sandbox/Debug/plugin.py[m[K[36m[K:[m[K[32m[K106[m[K[36m[K:[m[K            x = [01;31m[Keval(s, self._evalEnv, self._evalEnv)[m[K
[35m[K/tmp/Limnoria/sandbox/Debug/plugin.py[m[K[36m[K-[m[K[32m[K107[m[K[36m[K-[m[K            self._evalEnv['___'] = self._evalEnv['__']
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/sandbox/Debug/plugin.py[m[K[36m[K-[m[K[32m[K124[m[K[36m[K-[m[K
[35m[K/tmp/Limnoria/sandbox/Debug/plugin.py[m[K[36m[K:[m[K[32m[K125[m[K[36m[K:[m[K    def simple[01;31m[Keval(self, irc, msg, args, text)[m[K:
[35m[K/tmp/Limnoria/sandbox/Debug/plugin.py[m[K[36m[K-[m[K[32m[K126[m[K[36m[K-[m[K        """<expression>
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/sandbox/Debug/plugin.py[m[K[36m[K-[m[K[32m[K131[m[K[36m[K-[m[K        try:
[35m[K/tmp/Limnoria/sandbox/Debug/plugin.py[m[K[36m[K:[m[K[32m[K132[m[K[36m[K:[m[K            irc.reply(repr([01;31m[Keval(text)[m[K))
[35m[K/tmp/Limnoria/sandbox/Debug/plugin.py[m[K[36m[K-[m[K[32m[K133[m[K[36m[K-[m[K        except Exception as e:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K106[m[K[36m[K-[m[K                  '(True,False,None)', '"foo"', '{"foo": "bar"}']:
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K107[m[K[36m[K:[m[K            self.assertEqual([01;31m[Keval(s)[m[K, utils.safeEval(s))
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K108[m[K[36m[K-[m[K        for s in ['lambda: 2', 'import foo', 'foo.bar']:
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K271[m[K[36m[K-[m[K            r = utils.str.dqrepr(s)
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K272[m[K[36m[K:[m[K            self.assertEqual(s, [01;31m[Keval(r)[m[K, s)
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K273[m[K[36m[K-[m[K            self.failUnless(r[0] == '"' and r[-1] == '"', s)
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K753[m[K[36m[K-[m[K            q1.enqueue(i)
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K754[m[K[36m[K:[m[K        q2 = [01;31m[Keval(repr(q1)[m[K)
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K755[m[K[36m[K-[m[K        for (i, elt) in enumerate(q2):
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K819[m[K[36m[K-[m[K        q.enqueue(1)
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K820[m[K[36m[K:[m[K        self.assertEqual(q, [01;31m[Keval(repr(q)[m[K), 'repr doesn\'t eval to same queue')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K821[m[K[36m[K-[m[K        q.enqueue('foo')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K822[m[K[36m[K:[m[K        self.assertEqual(q, [01;31m[Keval(repr(q)[m[K), 'repr doesn\'t eval to same queue')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K823[m[K[36m[K-[m[K        q.enqueue(None)
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K824[m[K[36m[K:[m[K        self.assertEqual(q, [01;31m[Keval(repr(q)[m[K), 'repr doesn\'t eval to same queue')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K825[m[K[36m[K-[m[K        q.enqueue(1.0)
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K826[m[K[36m[K:[m[K        self.assertEqual(q, [01;31m[Keval(repr(q)[m[K), 'repr doesn\'t eval to same queue')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K827[m[K[36m[K-[m[K        q.enqueue([])
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K828[m[K[36m[K:[m[K        self.assertEqual(q, [01;31m[Keval(repr(q)[m[K), 'repr doesn\'t eval to same queue')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K829[m[K[36m[K-[m[K        q.enqueue(())
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K830[m[K[36m[K:[m[K        self.assertEqual(q, [01;31m[Keval(repr(q)[m[K), 'repr doesn\'t eval to same queue')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K831[m[K[36m[K-[m[K        q.enqueue([1])
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K832[m[K[36m[K:[m[K        self.assertEqual(q, [01;31m[Keval(repr(q)[m[K), 'repr doesn\'t eval to same queue')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K833[m[K[36m[K-[m[K        q.enqueue((1,))
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K834[m[K[36m[K:[m[K        self.assertEqual(q, [01;31m[Keval(repr(q)[m[K), 'repr doesn\'t eval to same queue')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K835[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K918[m[K[36m[K-[m[K            q1.enqueue(i)
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K919[m[K[36m[K:[m[K        q2 = [01;31m[Keval(repr(q1)[m[K)
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K920[m[K[36m[K-[m[K        for (i, elt) in enumerate(q2):
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K984[m[K[36m[K-[m[K        q.enqueue(1)
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K985[m[K[36m[K:[m[K        self.assertEqual(q, [01;31m[Keval(repr(q)[m[K), 'repr doesn\'t eval to same queue')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K986[m[K[36m[K-[m[K        q.enqueue('foo')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K987[m[K[36m[K:[m[K        self.assertEqual(q, [01;31m[Keval(repr(q)[m[K), 'repr doesn\'t eval to same queue')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K988[m[K[36m[K-[m[K        q.enqueue(None)
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K989[m[K[36m[K:[m[K        self.assertEqual(q, [01;31m[Keval(repr(q)[m[K), 'repr doesn\'t eval to same queue')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K990[m[K[36m[K-[m[K        q.enqueue(1.0)
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K991[m[K[36m[K:[m[K        self.assertEqual(q, [01;31m[Keval(repr(q)[m[K), 'repr doesn\'t eval to same queue')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K992[m[K[36m[K-[m[K        q.enqueue([])
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K993[m[K[36m[K:[m[K        self.assertEqual(q, [01;31m[Keval(repr(q)[m[K), 'repr doesn\'t eval to same queue')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K994[m[K[36m[K-[m[K        q.enqueue(())
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K995[m[K[36m[K:[m[K        self.assertEqual(q, [01;31m[Keval(repr(q)[m[K), 'repr doesn\'t eval to same queue')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K996[m[K[36m[K-[m[K        q.enqueue([1])
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K997[m[K[36m[K:[m[K        self.assertEqual(q, [01;31m[Keval(repr(q)[m[K), 'repr doesn\'t eval to same queue')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K998[m[K[36m[K-[m[K        q.enqueue((1,))
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K:[m[K[32m[K999[m[K[36m[K:[m[K        self.assertEqual(q, [01;31m[Keval(repr(q)[m[K), 'repr doesn\'t eval to same queue')
[35m[K/tmp/Limnoria/test/test_utils.py[m[K[36m[K-[m[K[32m[K1000[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/test/test_ircmsgs.py[m[K[36m[K-[m[K[32m[K55[m[K[36m[K-[m[K        for msg in msgs:
[35m[K/tmp/Limnoria/test/test_ircmsgs.py[m[K[36m[K:[m[K[32m[K56[m[K[36m[K:[m[K            self.assertEqual(msg, [01;31m[Keval(repr(msg)[m[K))
[35m[K/tmp/Limnoria/test/test_ircmsgs.py[m[K[36m[K-[m[K[32m[K57[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/test/test_ircdb.py[m[K[36m[K-[m[K[32m[K113[m[K[36m[K-[m[K        s = ircdb.UserCapabilitySet()
[35m[K/tmp/Limnoria/test/test_ircdb.py[m[K[36m[K:[m[K[32m[K114[m[K[36m[K:[m[K        self.assertEqual(s, [01;31m[Keval(repr(s)[m[K, ircdb.__dict__, ircdb.__dict__))
[35m[K/tmp/Limnoria/test/test_ircdb.py[m[K[36m[K-[m[K[32m[K115[m[K[36m[K-[m[K        s.add('foo')
[35m[K/tmp/Limnoria/test/test_ircdb.py[m[K[36m[K:[m[K[32m[K116[m[K[36m[K:[m[K        self.assertEqual(s, [01;31m[Keval(repr(s)[m[K, ircdb.__dict__, ircdb.__dict__))
[35m[K/tmp/Limnoria/test/test_ircdb.py[m[K[36m[K-[m[K[32m[K117[m[K[36m[K-[m[K        s.add('bar')
[35m[K/tmp/Limnoria/test/test_ircdb.py[m[K[36m[K:[m[K[32m[K118[m[K[36m[K:[m[K        self.assertEqual(s, [01;31m[Keval(repr(s)[m[K, ircdb.__dict__, ircdb.__dict__))
[35m[K/tmp/Limnoria/test/test_ircdb.py[m[K[36m[K-[m[K[32m[K119[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/Limnoria/test/test_ircdb.py[m[K[36m[K-[m[K[32m[K177[m[K[36m[K-[m[K        s = ircdb.UserCapabilitySet()
[35m[K/tmp/Limnoria/test/test_ircdb.py[m[K[36m[K:[m[K[32m[K178[m[K[36m[K:[m[K        self.assertEqual(s, [01;31m[Keval(repr(s)[m[K, ircdb.__dict__, ircdb.__dict__))
[35m[K/tmp/Limnoria/test/test_ircdb.py[m[K[36m[K-[m[K[32m[K179[m[K[36m[K-[m[K        s.add('foo')
[35m[K/tmp/Limnoria/test/test_ircdb.py[m[K[36m[K:[m[K[32m[K180[m[K[36m[K:[m[K        self.assertEqual(s, [01;31m[Keval(repr(s)[m[K, ircdb.__dict__, ircdb.__dict__))
[35m[K/tmp/Limnoria/test/test_ircdb.py[m[K[36m[K-[m[K[32m[K181[m[K[36m[K-[m[K        s.add('bar')
[35m[K/tmp/Limnoria/test/test_ircdb.py[m[K[36m[K:[m[K[32m[K182[m[K[36m[K:[m[K        self.assertEqual(s, [01;31m[Keval(repr(s)[m[K, ircdb.__dict__, ircdb.__dict__))
[35m[K/tmp/Limnoria/test/test_ircdb.py[m[K[36m[K-[m[K[32m[K183[m[K[36m[K-[m[K
