===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/django/tests/check_framework/urls/include_contains_tuple.py[m[K[36m[K-[m[K[32m[K3[m[K[36m[K-[m[Kurlpatterns = [
[35m[K/tmp/django/tests/check_framework/urls/include_contains_tuple.py[m[K[36m[K:[m[K[32m[K4[m[K[36m[K:[m[K    path('', [01;31m[Kinclude([(r'^tuple/$', lambda x: x)]))[m[K,
[35m[K/tmp/django/tests/check_framework/urls/include_contains_tuple.py[m[K[36m[K-[m[K[32m[K5[m[K[36m[K-[m[K]
[36m[K##############################################[m[K
[35m[K/tmp/django/tests/template_tests/test_smartif.py[m[K[36m[K-[m[K[32m[K8[m[K[36m[K-[m[K    def assertCalcEqual(self, expected, tokens):
[35m[K/tmp/django/tests/template_tests/test_smartif.py[m[K[36m[K:[m[K[32m[K9[m[K[36m[K:[m[K        self.assertEqual(expected, IfParser(tokens).parse().[01;31m[Keval({})[m[K)
[35m[K/tmp/django/tests/template_tests/test_smartif.py[m[K[36m[K-[m[K[32m[K10[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/django/tests/template_tests/test_smartif.py[m[K[36m[K-[m[K[32m[K16[m[K[36m[K-[m[K        self.assertEqual("(not (literal False))", repr(var))
[35m[K/tmp/django/tests/template_tests/test_smartif.py[m[K[36m[K:[m[K[32m[K17[m[K[36m[K:[m[K        self.assertTrue(var.[01;31m[Keval({})[m[K)
[35m[K/tmp/django/tests/template_tests/test_smartif.py[m[K[36m[K-[m[K[32m[K18[m[K[36m[K-[m[K
[35m[K/tmp/django/tests/template_tests/test_smartif.py[m[K[36m[K:[m[K[32m[K19[m[K[36m[K:[m[K        self.assertFalse(IfParser(["not", True]).parse().[01;31m[Keval({})[m[K)
[35m[K/tmp/django/tests/template_tests/test_smartif.py[m[K[36m[K-[m[K[32m[K20[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/django/tests/template_tests/test_smartif.py[m[K[36m[K-[m[K[32m[K23[m[K[36m[K-[m[K        self.assertEqual("(or (literal True) (literal False))", repr(var))
[35m[K/tmp/django/tests/template_tests/test_smartif.py[m[K[36m[K:[m[K[32m[K24[m[K[36m[K:[m[K        self.assertTrue(var.[01;31m[Keval({})[m[K)
[35m[K/tmp/django/tests/template_tests/test_smartif.py[m[K[36m[K-[m[K[32m[K25[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/django/tests/m2m_through/tests.py[m[K[36m[K-[m[K[32m[K563[m[K[36m[K-[m[K
[35m[K/tmp/django/tests/m2m_through/tests.py[m[K[36m[K:[m[K[32m[K564[m[K[36m[K:[m[K    def test_retri[01;31m[Keval(self)[m[K:
[35m[K/tmp/django/tests/m2m_through/tests.py[m[K[36m[K-[m[K[32m[K565[m[K[36m[K-[m[K        # Forward retrieval
[36m[K##############################################[m[K
[35m[K/tmp/django/tests/requests/tests.py[m[K[36m[K-[m[K[32m[K826[m[K[36m[K-[m[K
[35m[K/tmp/django/tests/requests/tests.py[m[K[36m[K:[m[K[32m[K827[m[K[36m[K:[m[K    def test_host_retri[01;31m[Keval(self)[m[K:
[35m[K/tmp/django/tests/requests/tests.py[m[K[36m[K-[m[K[32m[K828[m[K[36m[K-[m[K        request = HttpRequest()
[36m[K##############################################[m[K
[35m[K/tmp/django/tests/aggregation_regress/tests.py[m[K[36m[K-[m[K[32m[K142[m[K[36m[K-[m[K
[35m[K/tmp/django/tests/aggregation_regress/tests.py[m[K[36m[K:[m[K[32m[K143[m[K[36m[K:[m[K    def test_aggregates_in_where_clause_pre_[01;31m[Keval(self)[m[K:
[35m[K/tmp/django/tests/aggregation_regress/tests.py[m[K[36m[K-[m[K[32m[K144[m[K[36m[K-[m[K        """
[36m[K##############################################[m[K
[35m[K/tmp/django/tests/mail/tests.py[m[K[36m[K-[m[K[32m[K1305[m[K[36m[K-[m[K        m = message_from_bytes(data)
[35m[K/tmp/django/tests/mail/tests.py[m[K[36m[K:[m[K[32m[K1306[m[K[36m[K:[m[K        maddr = parse[01;31m[Kaddr([m[Km.get('from'))[1]
[35m[K/tmp/django/tests/mail/tests.py[m[K[36m[K-[m[K[32m[K1307[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/django/scripts/manage_translations.py[m[K[36m[K-[m[K[32m[K184[m[K[36m[K-[m[K
[35m[K/tmp/django/scripts/manage_translations.py[m[K[36m[K:[m[K[32m[K185[m[K[36m[K:[m[K    [01;31m[Keval(options.cmd[0])[m[K(options.resources, options.languages)
[36m[K##############################################[m[K
[35m[K/tmp/django/docs/ref/contrib/admin/javascript.txt[m[K[36m[K-[m[K[32m[K14[m[K[36m[K-[m[K* ``event`` is the ``jQuery`` event.
[35m[K/tmp/django/docs/ref/contrib/admin/javascript.txt[m[K[36m[K:[m[K[32m[K15[m[K[36m[K:[m[K* `[01;31m[K`$row`[m[K` is the newly added (or removed) row.
[35m[K/tmp/django/docs/ref/contrib/admin/javascript.txt[m[K[36m[K-[m[K[32m[K16[m[K[36m[K-[m[K* ``formsetName`` is the formset the row belongs to.
[36m[K##############################################[m[K
[35m[K/tmp/django/docs/ref/forms/api.txt[m[K[36m[K-[m[K[32m[K161[m[K[36m[K-[m[Kattack. You can do this in JavaScript with ``element.textContent = errorText``
[35m[K/tmp/django/docs/ref/forms/api.txt[m[K[36m[K:[m[K[32m[K162[m[K[36m[K:[m[Kor with jQuery's `[01;31m[K`$(el).text(errorText)`[m[K` (rather than its ``.html()``
[35m[K/tmp/django/docs/ref/forms/api.txt[m[K[36m[K-[m[K[32m[K163[m[K[36m[K-[m[Kfunction).
[36m[K##############################################[m[K
[35m[K/tmp/django/docs/internals/contributing/writing-code/javascript.txt[m[K[36m[K-[m[K[32m[K29[m[K[36m[K-[m[K  ``$('body').on('click', selector, func)`` instead of
[35m[K/tmp/django/docs/internals/contributing/writing-code/javascript.txt[m[K[36m[K:[m[K[32m[K30[m[K[36m[K:[m[K  `[01;31m[K`$(selector).click(func)`[m[K`. This makes it easier for projects to extend
[35m[K/tmp/django/docs/internals/contributing/writing-code/javascript.txt[m[K[36m[K-[m[K[32m[K31[m[K[36m[K-[m[K  Django's default behavior with JavaScript.
[36m[K##############################################[m[K
[35m[K/tmp/django/docs/internals/howto-release-django.txt[m[K[36m[K-[m[K[32m[K310[m[K[36m[K-[m[K        $ RELEASE_VERSION='1.7.2'
[35m[K/tmp/django/docs/internals/howto-release-django.txt[m[K[36m[K:[m[K[32m[K311[m[K[36m[K:[m[K        $ MAJOR_VERSION=[01;31m[K`echo $RELEASE_VERSION| cut -c 1-3`[m[K
[35m[K/tmp/django/docs/internals/howto-release-django.txt[m[K[36m[K-[m[K[32m[K312[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/django/docs/topics/i18n/translation.txt[m[K[36m[K-[m[K[32m[K2128[m[K[36m[K-[m[K  searched for ``<language>/LC_MESSAGES/django.(po|mo)``
[35m[K/tmp/django/docs/topics/i18n/translation.txt[m[K[36m[K:[m[K[32m[K2129[m[K[36m[K:[m[K* `[01;31m[K`$APPPATH/locale/<language>/LC_MESSAGES/django.(po|mo)`[m[K`
[35m[K/tmp/django/docs/topics/i18n/translation.txt[m[K[36m[K:[m[K[32m[K2130[m[K[36m[K:[m[K* `[01;31m[K`$PYTHONPATH/django/conf/locale/<language>/LC_MESSAGES/django.(po|mo)`[m[K`
[35m[K/tmp/django/docs/topics/i18n/translation.txt[m[K[36m[K-[m[K[32m[K2131[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/django/docs/releases/1.8.6.txt[m[K[36m[K-[m[K[32m[K34[m[K[36m[K-[m[K* Made deferred models use their proxied model's ``_meta.apps`` for caching
[35m[K/tmp/django/docs/releases/1.8.6.txt[m[K[36m[K:[m[K[32m[K35[m[K[36m[K:[m[K  and retri[01;31m[Keval (:ticket:`25563`)[m[K. This prevents any models generated in data
[35m[K/tmp/django/docs/releases/1.8.6.txt[m[K[36m[K-[m[K[32m[K36[m[K[36m[K-[m[K  migrations using ``QuerySet.defer()`` from leaking to test and application
[36m[K##############################################[m[K
[35m[K/tmp/django/django/urls/resolvers.py[m[K[36m[K-[m[K[32m[K103[m[K[36m[K-[m[K        if isinstance(pattern, str):
[35m[K/tmp/django/django/urls/resolvers.py[m[K[36m[K:[m[K[32m[K104[m[K[36m[K:[m[K            instance.__dict__['regex'] = instance[01;31m[K._compile([m[Kpattern)
[35m[K/tmp/django/django/urls/resolvers.py[m[K[36m[K-[m[K[32m[K105[m[K[36m[K-[m[K            return instance.__dict__['regex']
[36m[K##############################################[m[K
[35m[K/tmp/django/django/urls/resolvers.py[m[K[36m[K-[m[K[32m[K107[m[K[36m[K-[m[K        if language_code not in instance._regex_dict:
[35m[K/tmp/django/django/urls/resolvers.py[m[K[36m[K:[m[K[32m[K108[m[K[36m[K:[m[K            instance._regex_dict[language_code] = instance[01;31m[K._compile([m[Kstr(pattern))
[35m[K/tmp/django/django/urls/resolvers.py[m[K[36m[K-[m[K[32m[K109[m[K[36m[K-[m[K        return instance._regex_dict[language_code]
[36m[K##############################################[m[K
[35m[K/tmp/django/django/views/decorators/http.py[m[K[36m[K-[m[K[32m[K56[m[K[36m[K-[m[K    """
[35m[K/tmp/django/django/views/decorators/http.py[m[K[36m[K:[m[K[32m[K57[m[K[36m[K:[m[K    Decorator to support conditional retri[01;31m[Keval (or change)[m[K for a view
[35m[K/tmp/django/django/views/decorators/http.py[m[K[36m[K-[m[K[32m[K58[m[K[36m[K-[m[K    function.
[36m[K##############################################[m[K
[35m[K/tmp/django/django/contrib/gis/serializers/geojson.py[m[K[36m[K-[m[K[32m[K52[m[K[36m[K-[m[K                self._geometry.transform(self._cts[self._geometry.srid])
[35m[K/tmp/django/django/contrib/gis/serializers/geojson.py[m[K[36m[K:[m[K[32m[K53[m[K[36m[K:[m[K            data["geometry"] = [01;31m[Keval(self._geometry.geojson)[m[K
[35m[K/tmp/django/django/contrib/gis/serializers/geojson.py[m[K[36m[K-[m[K[32m[K54[m[K[36m[K-[m[K        else:
[36m[K##############################################[m[K
[35m[K/tmp/django/django/template/defaulttags.py[m[K[36m[K-[m[K[32m[K302[m[K[36m[K-[m[K                try:
[35m[K/tmp/django/django/template/defaulttags.py[m[K[36m[K:[m[K[32m[K303[m[K[36m[K:[m[K                    match = condition.[01;31m[Keval(context)[m[K
[35m[K/tmp/django/django/template/defaulttags.py[m[K[36m[K-[m[K[32m[K304[m[K[36m[K-[m[K                except VariableDoesNotExist:
[36m[K##############################################[m[K
[35m[K/tmp/django/django/template/defaulttags.py[m[K[36m[K-[m[K[32m[K875[m[K[36m[K-[m[K
[35m[K/tmp/django/django/template/defaulttags.py[m[K[36m[K:[m[K[32m[K876[m[K[36m[K:[m[K    def [01;31m[Keval(self, context)[m[K:
[35m[K/tmp/django/django/template/defaulttags.py[m[K[36m[K-[m[K[32m[K877[m[K[36m[K-[m[K        return self.value.resolve(context, ignore_failures=True)
[36m[K##############################################[m[K
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K-[m[K[32m[K55[m[K[36m[K-[m[K
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K:[m[K[32m[K56[m[K[36m[K:[m[K        def [01;31m[Keval(self, context)[m[K:
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K-[m[K[32m[K57[m[K[36m[K-[m[K            try:
[36m[K##############################################[m[K
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K-[m[K[32m[K80[m[K[36m[K-[m[K
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K:[m[K[32m[K81[m[K[36m[K:[m[K        def [01;31m[Keval(self, context)[m[K:
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K-[m[K[32m[K82[m[K[36m[K-[m[K            try:
[36m[K##############################################[m[K
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K-[m[K[32m[K93[m[K[36m[K-[m[KOPERATORS = {
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K:[m[K[32m[K94[m[K[36m[K:[m[K    'or': infix(6, lambda context, x, y: x.[01;31m[Keval(context)[m[K or y.[01;31m[Keval(context)[m[K),
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K:[m[K[32m[K95[m[K[36m[K:[m[K    'and': infix(7, lambda context, x, y: x.[01;31m[Keval(context)[m[K and y.[01;31m[Keval(context)[m[K),
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K:[m[K[32m[K96[m[K[36m[K:[m[K    'not': prefix(8, lambda context, x: not x.[01;31m[Keval(context)[m[K),
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K:[m[K[32m[K97[m[K[36m[K:[m[K    'in': infix(9, lambda context, x, y: x.[01;31m[Keval(context)[m[K in y.[01;31m[Keval(context)[m[K),
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K:[m[K[32m[K98[m[K[36m[K:[m[K    'not in': infix(9, lambda context, x, y: x.[01;31m[Keval(context)[m[K not in y.[01;31m[Keval(context)[m[K),
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K:[m[K[32m[K99[m[K[36m[K:[m[K    'is': infix(10, lambda context, x, y: x.[01;31m[Keval(context)[m[K is y.[01;31m[Keval(context)[m[K),
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K:[m[K[32m[K100[m[K[36m[K:[m[K    'is not': infix(10, lambda context, x, y: x.[01;31m[Keval(context)[m[K is not y.[01;31m[Keval(context)[m[K),
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K:[m[K[32m[K101[m[K[36m[K:[m[K    '==': infix(10, lambda context, x, y: x.[01;31m[Keval(context)[m[K == y.[01;31m[Keval(context)[m[K),
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K:[m[K[32m[K102[m[K[36m[K:[m[K    '!=': infix(10, lambda context, x, y: x.[01;31m[Keval(context)[m[K != y.[01;31m[Keval(context)[m[K),
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K:[m[K[32m[K103[m[K[36m[K:[m[K    '>': infix(10, lambda context, x, y: x.[01;31m[Keval(context)[m[K > y.[01;31m[Keval(context)[m[K),
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K:[m[K[32m[K104[m[K[36m[K:[m[K    '>=': infix(10, lambda context, x, y: x.[01;31m[Keval(context)[m[K >= y.[01;31m[Keval(context)[m[K),
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K:[m[K[32m[K105[m[K[36m[K:[m[K    '<': infix(10, lambda context, x, y: x.[01;31m[Keval(context)[m[K < y.[01;31m[Keval(context)[m[K),
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K:[m[K[32m[K106[m[K[36m[K:[m[K    '<=': infix(10, lambda context, x, y: x.[01;31m[Keval(context)[m[K <= y.[01;31m[Keval(context)[m[K),
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K-[m[K[32m[K107[m[K[36m[K-[m[K}
[36m[K##############################################[m[K
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K-[m[K[32m[K132[m[K[36m[K-[m[K
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K:[m[K[32m[K133[m[K[36m[K:[m[K    def [01;31m[Keval(self, context)[m[K:
[35m[K/tmp/django/django/template/smartif.py[m[K[36m[K-[m[K[32m[K134[m[K[36m[K-[m[K        return self.value
