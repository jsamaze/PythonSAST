===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/mpmath/doc/source/technical.txt[m[K[36m[K-[m[K[32m[K106[m[K[36m[K-[m[K
[35m[K/tmp/mpmath/doc/source/technical.txt[m[K[36m[K:[m[K[32m[K107[m[K[36m[K:[m[KThe extra digits in the output from ``repr`` ensure that ``x == [01;31m[Keval(repr(x)[m[K)`` holds, i.e. that numbers can be converted to strings and back losslessly.
[35m[K/tmp/mpmath/doc/source/technical.txt[m[K[36m[K-[m[K[32m[K108[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/mpmath/doc/source/contexts.txt[m[K[36m[K-[m[K[32m[K83[m[K[36m[K-[m[K
[35m[K/tmp/mpmath/doc/source/contexts.txt[m[K[36m[K:[m[K[32m[K84[m[K[36m[K:[m[K``ctx.pretty`` controls whether objects should be pretty-printed automatically by :func:`repr`. Pretty-printing for ``mp`` numbers is disabled by default so that they can clearly be distinguished from Python numbers and so that ``[01;31m[Keval(repr(x)[m[K) == x`` works::
[35m[K/tmp/mpmath/doc/source/contexts.txt[m[K[36m[K-[m[K[32m[K85[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/mpmath/doc/source/contexts.txt[m[K[36m[K-[m[K[32m[K88[m[K[36m[K-[m[K    >>> mpf = mp.mpf
[35m[K/tmp/mpmath/doc/source/contexts.txt[m[K[36m[K:[m[K[32m[K89[m[K[36m[K:[m[K    >>> [01;31m[Keval(repr(mp.mpf(3)[m[K))
[35m[K/tmp/mpmath/doc/source/contexts.txt[m[K[36m[K-[m[K[32m[K90[m[K[36m[K-[m[K    mpf('3.0')
[36m[K##############################################[m[K
[35m[K/tmp/mpmath/doc/source/basics.txt[m[K[36m[K-[m[K[32m[K195[m[K[36m[K-[m[K
[35m[K/tmp/mpmath/doc/source/basics.txt[m[K[36m[K:[m[K[32m[K196[m[K[36m[K:[m[K    >>> [01;31m[Keval(repr(mpf(2.5)[m[K))
[35m[K/tmp/mpmath/doc/source/basics.txt[m[K[36m[K-[m[K[32m[K197[m[K[36m[K-[m[K    mpf('2.5')
[36m[K##############################################[m[K
[35m[K/tmp/mpmath/mpmath/tests/extratest_gamma.py[m[K[36m[K-[m[K[32m[K55[m[K[36m[K-[m[K    mp.dps = 1010
[35m[K/tmp/mpmath/mpmath/tests/extratest_gamma.py[m[K[36m[K:[m[K[32m[K56[m[K[36m[K:[m[K    z = [01;31m[Keval(z)[m[K
[35m[K/tmp/mpmath/mpmath/tests/extratest_gamma.py[m[K[36m[K-[m[K[32m[K57[m[K[36m[K-[m[K    mp.dps = maxdps + 50
[36m[K##############################################[m[K
[35m[K/tmp/mpmath/mpmath/tests/extratest_gamma.py[m[K[36m[K-[m[K[32m[K63[m[K[36m[K-[m[K    else:
[35m[K/tmp/mpmath/mpmath/tests/extratest_gamma.py[m[K[36m[K:[m[K[32m[K64[m[K[36m[K:[m[K        loggamma_val = [01;31m[Keval(result)[m[K
[35m[K/tmp/mpmath/mpmath/tests/extratest_gamma.py[m[K[36m[K-[m[K[32m[K65[m[K[36m[K-[m[K        gamma_val = exp(loggamma_val)
[36m[K##############################################[m[K
[35m[K/tmp/mpmath/mpmath/tests/test_linalg.py[m[K[36m[K-[m[K[32m[K180[m[K[36m[K-[m[K              'qr_solve(%s, %s)' % (A, b), 'qr_solve(%s, %s)' % (B, b)]:
[35m[K/tmp/mpmath/mpmath/tests/test_linalg.py[m[K[36m[K:[m[K[32m[K181[m[K[36m[K:[m[K        pytest.raises((ZeroDivisionError, ValueError), lambda: [01;31m[Keval(i)[m[K)
[35m[K/tmp/mpmath/mpmath/tests/test_linalg.py[m[K[36m[K-[m[K[32m[K182[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/mpmath/mpmath/tests/test_convert.py[m[K[36m[K-[m[K[32m[K81[m[K[36m[K-[m[Kdef test_eval_repr_invariant():
[35m[K/tmp/mpmath/mpmath/tests/test_convert.py[m[K[36m[K:[m[K[32m[K82[m[K[36m[K:[m[K    """Test that [01;31m[Keval(repr(x)[m[K) == x"""
[35m[K/tmp/mpmath/mpmath/tests/test_convert.py[m[K[36m[K-[m[K[32m[K83[m[K[36m[K-[m[K    random.seed(123)
[36m[K##############################################[m[K
[35m[K/tmp/mpmath/mpmath/tests/test_convert.py[m[K[36m[K-[m[K[32m[K87[m[K[36m[K-[m[K            a = mpf(random.random())**0.5 * 10**random.randint(-100, 100)
[35m[K/tmp/mpmath/mpmath/tests/test_convert.py[m[K[36m[K:[m[K[32m[K88[m[K[36m[K:[m[K            assert [01;31m[Keval(repr(a)[m[K) == a
[35m[K/tmp/mpmath/mpmath/tests/test_convert.py[m[K[36m[K-[m[K[32m[K89[m[K[36m[K-[m[K    mp.dps = 15
[36m[K##############################################[m[K
[35m[K/tmp/mpmath/mpmath/tests/test_matrices.py[m[K[36m[K-[m[K[32m[K24[m[K[36m[K-[m[K    assert A6.tolist() == l
[35m[K/tmp/mpmath/mpmath/tests/test_matrices.py[m[K[36m[K:[m[K[32m[K25[m[K[36m[K:[m[K    assert A6 == [01;31m[Keval(repr(A6)[m[K)
[35m[K/tmp/mpmath/mpmath/tests/test_matrices.py[m[K[36m[K-[m[K[32m[K26[m[K[36m[K-[m[K    A6 = fp.matrix(A6)
[35m[K/tmp/mpmath/mpmath/tests/test_matrices.py[m[K[36m[K:[m[K[32m[K27[m[K[36m[K:[m[K    assert A6 == [01;31m[Keval(repr(A6)[m[K)
[35m[K/tmp/mpmath/mpmath/tests/test_matrices.py[m[K[36m[K:[m[K[32m[K28[m[K[36m[K:[m[K    assert A6*1j == [01;31m[Keval(repr(A6*1j)[m[K)
[35m[K/tmp/mpmath/mpmath/tests/test_matrices.py[m[K[36m[K-[m[K[32m[K29[m[K[36m[K-[m[K    assert A3 * 10 == 10 * A3 == A6
[36m[K##############################################[m[K
[35m[K/tmp/mpmath/mpmath/tests/test_fp.py[m[K[36m[K-[m[K[32m[K18[m[K[36m[K-[m[K    testline = "%s(%s)" % (fname, argstr)
[35m[K/tmp/mpmath/mpmath/tests/test_fp.py[m[K[36m[K:[m[K[32m[K19[m[K[36m[K:[m[K    ans = str([01;31m[Keval(testline)[m[K)
[35m[K/tmp/mpmath/mpmath/tests/test_fp.py[m[K[36m[K-[m[K[32m[K20[m[K[36m[K-[m[K    print "    assert ae(fp.%s, %s)" % (testline, ans)
[36m[K##############################################[m[K
[35m[K/tmp/mpmath/mpmath/identification.py[m[K[36m[K-[m[K[32m[K776[m[K[36m[K-[m[K            namespace = dict((name, getattr(ctx,name)) for name in dir(ctx))
[35m[K/tmp/mpmath/mpmath/identification.py[m[K[36m[K:[m[K[32m[K777[m[K[36m[K:[m[K            constants = [([01;31m[Keval(p, namespace)[m[K, p) for p in constants]
[35m[K/tmp/mpmath/mpmath/identification.py[m[K[36m[K-[m[K[32m[K778[m[K[36m[K-[m[K    else:
[36m[K##############################################[m[K
[35m[K/tmp/mpmath/demo/plotting.py[m[K[36m[K-[m[K[32m[K30[m[K[36m[K-[m[K    if xlim:
[35m[K/tmp/mpmath/demo/plotting.py[m[K[36m[K:[m[K[32m[K31[m[K[36m[K:[m[K        xlim = [01;31m[Keval(xlim)[m[K
[35m[K/tmp/mpmath/demo/plotting.py[m[K[36m[K-[m[K[32m[K32[m[K[36m[K-[m[K    else:
[36m[K##############################################[m[K
[35m[K/tmp/mpmath/CHANGES[m[K[36m[K-[m[K[32m[K505[m[K[36m[K-[m[K* Fixed comparison with -inf.
[35m[K/tmp/mpmath/CHANGES[m[K[36m[K:[m[K[32m[K506[m[K[36m[K:[m[K* Changed repr format of the mpi interval type to make [01;31m[Keval(repr(x)[m[K) == x.
[35m[K/tmp/mpmath/CHANGES[m[K[36m[K-[m[K[32m[K507[m[K[36m[K-[m[K* Improved printing of intervals, with configurable output format (contributed
