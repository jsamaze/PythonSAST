===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/scrapy/tests/test_link.py[m[K[36m[K-[m[K[32m[K42[m[K[36m[K-[m[K        l1 = Link("http://www.example.com", text="test", fragment='something', nofollow=True)
[35m[K/tmp/scrapy/tests/test_link.py[m[K[36m[K:[m[K[32m[K43[m[K[36m[K:[m[K        l2 = [01;31m[Keval(repr(l1)[m[K)
[35m[K/tmp/scrapy/tests/test_link.py[m[K[36m[K-[m[K[32m[K44[m[K[36m[K-[m[K        self._assert_same_links(l1, l2)
[36m[K##############################################[m[K
[35m[K/tmp/scrapy/tests/test_exporters.py[m[K[36m[K-[m[K[32m[K201[m[K[36m[K-[m[K    def _check_output(self):
[35m[K/tmp/scrapy/tests/test_exporters.py[m[K[36m[K:[m[K[32m[K202[m[K[36m[K:[m[K        self._assert_expected_item([01;31m[Keval(self.output.getvalue()[m[K))
[35m[K/tmp/scrapy/tests/test_exporters.py[m[K[36m[K-[m[K[32m[K203[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/scrapy/tests/test_item.py[m[K[36m[K-[m[K[32m[K59[m[K[36m[K-[m[K
[35m[K/tmp/scrapy/tests/test_item.py[m[K[36m[K:[m[K[32m[K60[m[K[36m[K:[m[K        i2 = [01;31m[Keval(itemrepr)[m[K
[35m[K/tmp/scrapy/tests/test_item.py[m[K[36m[K-[m[K[32m[K61[m[K[36m[K-[m[K        self.assertEqual(i2['name'], 'John Doe')
[36m[K##############################################[m[K
[35m[K/tmp/scrapy/docs/topics/commands.rst[m[K[36m[K-[m[K[32m[K27[m[K[36m[K-[m[K1. ``/etc/scrapy.cfg`` or ``c:\scrapy\scrapy.cfg`` (system-wide),
[35m[K/tmp/scrapy/docs/topics/commands.rst[m[K[36m[K:[m[K[32m[K28[m[K[36m[K:[m[K2. ``~/.config/scrapy.cfg`` (`[01;31m[K`$XDG_CONFIG_HOME`[m[K`) and ``~/.scrapy.cfg`` (`[01;31m[K`$HOME`[m[K`)
[35m[K/tmp/scrapy/docs/topics/commands.rst[m[K[36m[K-[m[K[32m[K29[m[K[36m[K-[m[K   for global (user-wide) settings, and
[36m[K##############################################[m[K
[35m[K/tmp/scrapy/docs/topics/selectors.rst[m[K[36m[K-[m[K[32m[K622[m[K[36m[K-[m[KXPath allows you to reference variables in your XPath expressions, using
[35m[K/tmp/scrapy/docs/topics/selectors.rst[m[K[36m[K:[m[K[32m[K623[m[K[36m[K:[m[Kthe `[01;31m[K`$somevariable`[m[K` syntax. This is somewhat similar to parameterized
[35m[K/tmp/scrapy/docs/topics/selectors.rst[m[K[36m[K-[m[K[32m[K624[m[K[36m[K-[m[Kqueries or prepared statements in the SQL world where you replace
[36m[K##############################################[m[K
[35m[K/tmp/scrapy/docs/topics/selectors.rst[m[K[36m[K-[m[K[32m[K630[m[K[36m[K-[m[K
[35m[K/tmp/scrapy/docs/topics/selectors.rst[m[K[36m[K:[m[K[32m[K631[m[K[36m[K:[m[K>>> # [01;31m[K`$val`[m[K used in the expression, a `val` argument needs to be passed
[35m[K/tmp/scrapy/docs/topics/selectors.rst[m[K[36m[K-[m[K[32m[K632[m[K[36m[K-[m[K>>> response.xpath('//div[@id=$val]/a/text()', val='images').get()
[36m[K##############################################[m[K
[35m[K/tmp/scrapy/docs/contributing.rst[m[K[36m[K-[m[K[32m[K146[m[K[36m[K-[m[KYou can pull an existing pull request to a local branch
[35m[K/tmp/scrapy/docs/contributing.rst[m[K[36m[K:[m[K[32m[K147[m[K[36m[K:[m[Kby running `[01;31m[K`git fetch upstream pull/$PR_NUMBER/head:$BRANCH_NAME_TO_CREATE`[m[K`
[35m[K/tmp/scrapy/docs/contributing.rst[m[K[36m[K-[m[K[32m[K148[m[K[36m[K-[m[K(replace 'upstream' with a remote name for scrapy repository,
[35m[K/tmp/scrapy/docs/contributing.rst[m[K[36m[K:[m[K[32m[K149[m[K[36m[K:[m[K`[01;31m[K`$PR_NUMBER`[m[K` with an ID of the pull request, and `[01;31m[K`$BRANCH_NAME_TO_CREATE`[m[K`
[35m[K/tmp/scrapy/docs/contributing.rst[m[K[36m[K-[m[K[32m[K150[m[K[36m[K-[m[Kwith a name of the branch you want to create locally).
[36m[K##############################################[m[K
[35m[K/tmp/scrapy/scrapy/spiders/crawl.py[m[K[36m[K-[m[K[32m[K132[m[K[36m[K-[m[K            self._rules.append(copy.copy(rule))
[35m[K/tmp/scrapy/scrapy/spiders/crawl.py[m[K[36m[K:[m[K[32m[K133[m[K[36m[K:[m[K            self._rules[-1][01;31m[K._compile([m[Kself)
[35m[K/tmp/scrapy/scrapy/spiders/crawl.py[m[K[36m[K-[m[K[32m[K134[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/scrapy/scrapy/shell.py[m[K[36m[K-[m[K[32m[K51[m[K[36m[K-[m[K        if self.code:
[35m[K/tmp/scrapy/scrapy/shell.py[m[K[36m[K:[m[K[32m[K52[m[K[36m[K:[m[K            print([01;31m[Keval(self.code, globals()[m[K, self.vars))
[35m[K/tmp/scrapy/scrapy/shell.py[m[K[36m[K-[m[K[32m[K53[m[K[36m[K-[m[K        else:
[36m[K##############################################[m[K
[35m[K/tmp/scrapy/scrapy/utils/engine.py[m[K[36m[K-[m[K[32m[K28[m[K[36m[K-[m[K        try:
[35m[K/tmp/scrapy/scrapy/utils/engine.py[m[K[36m[K:[m[K[32m[K29[m[K[36m[K:[m[K            checks += [(test, [01;31m[Keval(test)[m[K)]
[35m[K/tmp/scrapy/scrapy/utils/engine.py[m[K[36m[K-[m[K[32m[K30[m[K[36m[K-[m[K        except Exception as e:
