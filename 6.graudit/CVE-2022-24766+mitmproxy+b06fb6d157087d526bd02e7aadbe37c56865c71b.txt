===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/mitmproxy/release/docker/README.md[m[K[36m[K-[m[K[32m[K2[m[K[36m[K-[m[K
[35m[K/tmp/mitmproxy/release/docker/README.md[m[K[36m[K:[m[K[32m[K3[m[K[36m[K:[m[K 1. Copy [01;31m[K`mitmproxy-$VERSION-py3-none-any.whl`[m[K into this directory.  
[35m[K/tmp/mitmproxy/release/docker/README.md[m[K[36m[K-[m[K[32m[K4[m[K[36m[K-[m[K    You can get the latest public release at https://mitmproxy.org/downloads/.
[35m[K/tmp/mitmproxy/release/docker/README.md[m[K[36m[K-[m[K[32m[K5[m[K[36m[K-[m[K 2. Replace $VERSION with your mitmproxy version and 
[35m[K/tmp/mitmproxy/release/docker/README.md[m[K[36m[K:[m[K[32m[K6[m[K[36m[K:[m[K    run [01;31m[K`docker build --build-arg MITMPROXY_WHEEL=mitmproxy-$VERSION-py3-none-any.whl .`[m[K.
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/mitmproxy/platform/linux.py[m[K[36m[K-[m[K[32m[K9[m[K[36m[K-[m[K
[35m[K/tmp/mitmproxy/mitmproxy/platform/linux.py[m[K[36m[K:[m[K[32m[K10[m[K[36m[K:[m[Kdef original_[01;31m[Kaddr([m[Kcsock: socket.socket) -> typing.Tuple[str, int]:
[35m[K/tmp/mitmproxy/mitmproxy/platform/linux.py[m[K[36m[K-[m[K[32m[K11[m[K[36m[K-[m[K    # Get the original destination on Linux.
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/mitmproxy/platform/osx.py[m[K[36m[K-[m[K[32m[K19[m[K[36m[K-[m[K
[35m[K/tmp/mitmproxy/mitmproxy/platform/osx.py[m[K[36m[K:[m[K[32m[K20[m[K[36m[K:[m[Kdef original_[01;31m[Kaddr([m[Kcsock):
[35m[K/tmp/mitmproxy/mitmproxy/platform/osx.py[m[K[36m[K-[m[K[32m[K21[m[K[36m[K-[m[K    peer = csock.getpeername()
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/mitmproxy/platform/openbsd.py[m[K[36m[K:[m[K[32m[K1[m[K[36m[K:[m[Kdef original_[01;31m[Kaddr([m[Kcsock):
[35m[K/tmp/mitmproxy/mitmproxy/platform/openbsd.py[m[K[36m[K-[m[K[32m[K2[m[K[36m[K-[m[K    return csock.getsockname()
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/mitmproxy/platform/windows.py[m[K[36m[K-[m[K[32m[K60[m[K[36m[K-[m[K
[35m[K/tmp/mitmproxy/mitmproxy/platform/windows.py[m[K[36m[K:[m[K[32m[K61[m[K[36m[K:[m[K    def original_[01;31m[Kaddr([m[Kself, csock: socket.socket):
[35m[K/tmp/mitmproxy/mitmproxy/platform/windows.py[m[K[36m[K-[m[K[32m[K62[m[K[36m[K-[m[K        ip, port = csock.getpeername()[:2]
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/mitmproxy/platform/windows.py[m[K[36m[K-[m[K[32m[K73[m[K[36m[K-[m[K                self._connect()
[35m[K/tmp/mitmproxy/mitmproxy/platform/windows.py[m[K[36m[K:[m[K[32m[K74[m[K[36m[K:[m[K                return self.original_[01;31m[Kaddr([m[Kcsock)
[35m[K/tmp/mitmproxy/mitmproxy/platform/windows.py[m[K[36m[K-[m[K[32m[K75[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/mitmproxy/addons/cut.py[m[K[36m[K-[m[K[32m[K22[m[K[36m[K-[m[K
[35m[K/tmp/mitmproxy/mitmproxy/addons/cut.py[m[K[36m[K:[m[K[32m[K23[m[K[36m[K:[m[Kdef is_[01;31m[Kaddr([m[Kv):
[35m[K/tmp/mitmproxy/mitmproxy/addons/cut.py[m[K[36m[K-[m[K[32m[K24[m[K[36m[K-[m[K    return isinstance(v, tuple) and len(v) > 1
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/mitmproxy/addons/cut.py[m[K[36m[K-[m[K[32m[K35[m[K[36m[K-[m[K        if i == len(path) - 1:
[35m[K/tmp/mitmproxy/mitmproxy/addons/cut.py[m[K[36m[K:[m[K[32m[K36[m[K[36m[K:[m[K            if spec == "port" and is_[01;31m[Kaddr([m[Kcurrent):
[35m[K/tmp/mitmproxy/mitmproxy/addons/cut.py[m[K[36m[K-[m[K[32m[K37[m[K[36m[K-[m[K                return str(current[1])
[35m[K/tmp/mitmproxy/mitmproxy/addons/cut.py[m[K[36m[K:[m[K[32m[K38[m[K[36m[K:[m[K            if spec == "host" and is_[01;31m[Kaddr([m[Kcurrent):
[35m[K/tmp/mitmproxy/mitmproxy/addons/cut.py[m[K[36m[K-[m[K[32m[K39[m[K[36m[K-[m[K                return str(current[0])
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/mitmproxy/proxy/layers/modes.py[m[K[36m[K-[m[K[32m[K66[m[K[36m[K-[m[K        try:
[35m[K/tmp/mitmproxy/mitmproxy/proxy/layers/modes.py[m[K[36m[K:[m[K[32m[K67[m[K[36m[K:[m[K            self.context.server.address = platform.original_[01;31m[Kaddr([m[Ksocket)
[35m[K/tmp/mitmproxy/mitmproxy/proxy/layers/modes.py[m[K[36m[K-[m[K[32m[K68[m[K[36m[K-[m[K        except Exception as e:
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/flow/export.ts[m[K[36m[K-[m[K[32m[K4[m[K[36m[K-[m[Kexport const copy = async (flow: Flow, format: string): Promise<void> => {
[35m[K/tmp/mitmproxy/web/src/js/flow/export.ts[m[K[36m[K:[m[K[32m[K5[m[K[36m[K:[m[K    let ret = await runCommand("export", format, [01;31m[K`@${flow.id}`[m[K);
[35m[K/tmp/mitmproxy/web/src/js/flow/export.ts[m[K[36m[K-[m[K[32m[K6[m[K[36m[K-[m[K    if(ret.value) {
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/flow/utils.ts[m[K[36m[K-[m[K[32m[K65[m[K[36m[K-[m[K        }
[35m[K/tmp/mitmproxy/web/src/js/flow/utils.ts[m[K[36m[K:[m[K[32m[K66[m[K[36m[K:[m[K        const lineStr = lines ? [01;31m[K`?lines=${lines}`[m[K : "";
[35m[K/tmp/mitmproxy/web/src/js/flow/utils.ts[m[K[36m[K:[m[K[32m[K67[m[K[36m[K:[m[K        return [01;31m[K`./flows/${flow.id}/${part}/`[m[K + (view ? [01;31m[K`content/${encodeURIComponent(view)}.json${lineStr}`[m[K : 'content.data');
[35m[K/tmp/mitmproxy/web/src/js/flow/utils.ts[m[K[36m[K-[m[K[32m[K68[m[K[36m[K-[m[K    }
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/backends/static.tsx[m[K[36m[K-[m[K[32m[K24[m[K[36m[K-[m[K    fetchData(resource) {
[35m[K/tmp/mitmproxy/web/src/js/backends/static.tsx[m[K[36m[K:[m[K[32m[K25[m[K[36m[K:[m[K        fetchApi([01;31m[K`./${resource}`[m[K)
[35m[K/tmp/mitmproxy/web/src/js/backends/static.tsx[m[K[36m[K-[m[K[32m[K26[m[K[36m[K-[m[K            .then(res => res.json())
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/backends/static.tsx[m[K[36m[K-[m[K[32m[K32[m[K[36m[K-[m[K    receive(resource, data) {
[35m[K/tmp/mitmproxy/web/src/js/backends/static.tsx[m[K[36m[K:[m[K[32m[K33[m[K[36m[K:[m[K        let type = [01;31m[K`${resource}_RECEIVE`[m[K.toUpperCase()
[35m[K/tmp/mitmproxy/web/src/js/backends/static.tsx[m[K[36m[K-[m[K[32m[K34[m[K[36m[K-[m[K        this.store.dispatch({type, cmd: "receive", resource, data})
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/backends/websocket.tsx[m[K[36m[K-[m[K[32m[K46[m[K[36m[K-[m[K        this.activeFetches[resource] = queue
[35m[K/tmp/mitmproxy/web/src/js/backends/websocket.tsx[m[K[36m[K:[m[K[32m[K47[m[K[36m[K:[m[K        fetchApi([01;31m[K`./${resource}`[m[K)
[35m[K/tmp/mitmproxy/web/src/js/backends/websocket.tsx[m[K[36m[K-[m[K[32m[K48[m[K[36m[K-[m[K            .then(res => res.json())
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/backends/websocket.tsx[m[K[36m[K-[m[K[32m[K63[m[K[36m[K-[m[K        } else {
[35m[K/tmp/mitmproxy/web/src/js/backends/websocket.tsx[m[K[36m[K:[m[K[32m[K64[m[K[36m[K:[m[K            let type = [01;31m[K`${msg.resource}_${msg.cmd}`[m[K.toUpperCase()
[35m[K/tmp/mitmproxy/web/src/js/backends/websocket.tsx[m[K[36m[K-[m[K[32m[K65[m[K[36m[K-[m[K            this.store.dispatch({type, ...msg})
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/backends/websocket.tsx[m[K[36m[K-[m[K[32m[K69[m[K[36m[K-[m[K    receive(resource, data) {
[35m[K/tmp/mitmproxy/web/src/js/backends/websocket.tsx[m[K[36m[K:[m[K[32m[K70[m[K[36m[K:[m[K        let type = [01;31m[K`${resource}_RECEIVE`[m[K.toUpperCase()
[35m[K/tmp/mitmproxy/web/src/js/backends/websocket.tsx[m[K[36m[K-[m[K[32m[K71[m[K[36m[K-[m[K        this.store.dispatch({type, cmd: "receive", resource, data})
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/backends/websocket.tsx[m[K[36m[K-[m[K[32m[K83[m[K[36m[K-[m[K        this.store.dispatch(connectionActions.connectionError(
[35m[K/tmp/mitmproxy/web/src/js/backends/websocket.tsx[m[K[36m[K:[m[K[32m[K84[m[K[36m[K:[m[K            [01;31m[K`Connection closed at ${new Date().toUTCString()} with error code ${closeEvent.code}.`[m[K
[35m[K/tmp/mitmproxy/web/src/js/backends/websocket.tsx[m[K[36m[K-[m[K[32m[K85[m[K[36m[K-[m[K        ))
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/app.tsx[m[K[36m[K-[m[K[32m[K23[m[K[36m[K-[m[Kwindow.addEventListener('error', (e: ErrorEvent) => {
[35m[K/tmp/mitmproxy/web/src/js/app.tsx[m[K[36m[K:[m[K[32m[K24[m[K[36m[K:[m[K    store.dispatch(addLog([01;31m[K`${e.message}\n${e.error.stack}`[m[K))
[35m[K/tmp/mitmproxy/web/src/js/app.tsx[m[K[36m[K-[m[K[32m[K25[m[K[36m[K-[m[K})
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/urlState.ts[m[K[36m[K-[m[K[32m[K53[m[K[36m[K-[m[K                    default:
[35m[K/tmp/mitmproxy/web/src/js/urlState.ts[m[K[36m[K:[m[K[32m[K54[m[K[36m[K:[m[K                        console.error([01;31m[K`unimplemented query arg: ${x}`[m[K)
[35m[K/tmp/mitmproxy/web/src/js/urlState.ts[m[K[36m[K-[m[K[32m[K55[m[K[36m[K-[m[K                }
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/urlState.ts[m[K[36m[K-[m[K[32m[K69[m[K[36m[K-[m[K        .filter(k => query[k])
[35m[K/tmp/mitmproxy/web/src/js/urlState.ts[m[K[36m[K:[m[K[32m[K70[m[K[36m[K:[m[K        .map(k => [01;31m[K`${k}=${encodeURIComponent(query[k])}`[m[K)
[35m[K/tmp/mitmproxy/web/src/js/urlState.ts[m[K[36m[K-[m[K[32m[K71[m[K[36m[K-[m[K        .join("&")
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/urlState.ts[m[K[36m[K-[m[K[32m[K74[m[K[36m[K-[m[K    if (state.flows.selected.length > 0) {
[35m[K/tmp/mitmproxy/web/src/js/urlState.ts[m[K[36m[K:[m[K[32m[K75[m[K[36m[K:[m[K        url = [01;31m[K`/flows/${state.flows.selected[0]}/${state.ui.flow.tab}`[m[K
[35m[K/tmp/mitmproxy/web/src/js/urlState.ts[m[K[36m[K-[m[K[32m[K76[m[K[36m[K-[m[K    } else {
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/urlState.ts[m[K[36m[K-[m[K[32m[K87[m[K[36m[K-[m[K    if (window.location.hash.substr(1) !== url) {
[35m[K/tmp/mitmproxy/web/src/js/urlState.ts[m[K[36m[K:[m[K[32m[K88[m[K[36m[K:[m[K        history.replaceState(undefined, "", [01;31m[K`${pathname}#${url}`[m[K)
[35m[K/tmp/mitmproxy/web/src/js/urlState.ts[m[K[36m[K-[m[K[32m[K89[m[K[36m[K-[m[K    }
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/contentviews/useContent.tsx[m[K[36m[K-[m[K[32m[K26[m[K[36m[K-[m[K                    if (!response.ok)
[35m[K/tmp/mitmproxy/web/src/js/components/contentviews/useContent.tsx[m[K[36m[K:[m[K[32m[K27[m[K[36m[K:[m[K                        throw [01;31m[K`${response.status} ${response.statusText}`[m[K.trim();
[35m[K/tmp/mitmproxy/web/src/js/components/contentviews/useContent.tsx[m[K[36m[K-[m[K[32m[K28[m[K[36m[K-[m[K                    return response.text()
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/contentviews/useContent.tsx[m[K[36m[K-[m[K[32m[K36[m[K[36m[K-[m[K                    }
[35m[K/tmp/mitmproxy/web/src/js/components/contentviews/useContent.tsx[m[K[36m[K:[m[K[32m[K37[m[K[36m[K:[m[K                    setContent([01;31m[K`Error getting content: ${e}.`[m[K);
[35m[K/tmp/mitmproxy/web/src/js/components/contentviews/useContent.tsx[m[K[36m[K-[m[K[32m[K38[m[K[36m[K-[m[K                });
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/contentviews/HttpMessage.tsx[m[K[36m[K-[m[K[32m[K40[m[K[36m[K-[m[K            } catch (e) {
[35m[K/tmp/mitmproxy/web/src/js/components/contentviews/HttpMessage.tsx[m[K[36m[K:[m[K[32m[K41[m[K[36m[K:[m[K                const err: ContentViewData = {"description": "Network Error", lines: [[["error", [01;31m[K`${content}`[m[K]]]};
[35m[K/tmp/mitmproxy/web/src/js/components/contentviews/HttpMessage.tsx[m[K[36m[K-[m[K[32m[K42[m[K[36m[K-[m[K                return err;
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/EventLog/EventList.tsx[m[K[36m[K-[m[K[32m[K104[m[K[36m[K-[m[K    }[event.level] || 'info'
[35m[K/tmp/mitmproxy/web/src/js/components/EventLog/EventList.tsx[m[K[36m[K:[m[K[32m[K105[m[K[36m[K:[m[K    return <i className={[01;31m[K`fa fa-fw fa-${icon}`[m[K}/>
[35m[K/tmp/mitmproxy/web/src/js/components/EventLog/EventList.tsx[m[K[36m[K-[m[K[32m[K106[m[K[36m[K-[m[K}
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/FlowTable.jsx[m[K[36m[K-[m[K[32m[K99[m[K[36m[K-[m[K                <table>
[35m[K/tmp/mitmproxy/web/src/js/components/FlowTable.jsx[m[K[36m[K:[m[K[32m[K100[m[K[36m[K:[m[K                    <thead ref="head" style={{ transform: [01;31m[K`translateY(${viewportTop}px)`[m[K }}>
[35m[K/tmp/mitmproxy/web/src/js/components/FlowTable.jsx[m[K[36m[K-[m[K[32m[K101[m[K[36m[K-[m[K                        <FlowTableHead />
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/FlowView/Messages.tsx[m[K[36m[K-[m[K[32m[K36[m[K[36m[K-[m[K            {messages.map((d: ContentViewData, i) => {
[35m[K/tmp/mitmproxy/web/src/js/components/FlowView/Messages.tsx[m[K[36m[K:[m[K[32m[K37[m[K[36m[K:[m[K                const className = [01;31m[K`fa fa-fw fa-arrow-${d.from_client ? "right text-primary" : "left text-danger"}`[m[K;
[35m[K/tmp/mitmproxy/web/src/js/components/FlowView/Messages.tsx[m[K[36m[K-[m[K[32m[K38[m[K[36m[K-[m[K                const renderer = <div key={i}>
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/FlowView/WebSocket.tsx[m[K[36m[K-[m[K[32m[K21[m[K[36m[K-[m[K        return null;
[35m[K/tmp/mitmproxy/web/src/js/components/FlowView/WebSocket.tsx[m[K[36m[K:[m[K[32m[K22[m[K[36m[K:[m[K    const reason = websocket.close_reason ? [01;31m[K`(${websocket.close_reason})`[m[K : ""
[35m[K/tmp/mitmproxy/web/src/js/components/FlowView/WebSocket.tsx[m[K[36m[K-[m[K[32m[K23[m[K[36m[K-[m[K    return <div>
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/FlowTable/FlowTableHead.tsx[m[K[36m[K-[m[K[32m[K19[m[K[36m[K-[m[K            {displayColumns.map(Column => (
[35m[K/tmp/mitmproxy/web/src/js/components/FlowTable/FlowTableHead.tsx[m[K[36m[K:[m[K[32m[K20[m[K[36m[K:[m[K                <th className={classnames([01;31m[K`col-${Column.name}`[m[K, sortColumn === Column.name && sortType)}
[35m[K/tmp/mitmproxy/web/src/js/components/FlowTable/FlowTableHead.tsx[m[K[36m[K-[m[K[32m[K21[m[K[36m[K-[m[K                    key={Column.name}
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/FlowTable/FlowColumns.tsx[m[K[36m[K-[m[K[32m[K78[m[K[36m[K-[m[K        case "tcp":
[35m[K/tmp/mitmproxy/web/src/js/components/FlowTable/FlowColumns.tsx[m[K[36m[K:[m[K[32m[K79[m[K[36m[K:[m[K            return [01;31m[K`${flow.client_conn.peername.join(':')} ↔ ${flow.server_conn?.address?.join(':')}`[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/FlowTable/FlowColumns.tsx[m[K[36m[K-[m[K[32m[K80[m[K[36m[K-[m[K    }
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/common/DocsLink.tsx[m[K[36m[K-[m[K[32m[K7[m[K[36m[K-[m[Kexport default function DocsLink({ children, resource }: DocLinkProps) {
[35m[K/tmp/mitmproxy/web/src/js/components/common/DocsLink.tsx[m[K[36m[K:[m[K[32m[K8[m[K[36m[K:[m[K    let url = [01;31m[K`https://docs.mitmproxy.org/stable/${resource}`[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/common/DocsLink.tsx[m[K[36m[K-[m[K[32m[K9[m[K[36m[K-[m[K    return (
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/common/Splitter.tsx[m[K[36m[K-[m[K[32m[K58[m[K[36m[K-[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/common/Splitter.tsx[m[K[36m[K:[m[K[32m[K59[m[K[36m[K:[m[K        prev.style.flex = [01;31m[K`0 0 ${Math.max(0, flexBasis)}px`[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/common/Splitter.tsx[m[K[36m[K-[m[K[32m[K60[m[K[36m[K-[m[K        node.nextElementSibling.style.flex = '1 1 auto'
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/common/Splitter.tsx[m[K[36m[K-[m[K[32m[K73[m[K[36m[K-[m[K        }
[35m[K/tmp/mitmproxy/web/src/js/components/common/Splitter.tsx[m[K[36m[K:[m[K[32m[K74[m[K[36m[K:[m[K        ReactDOM.findDOMNode(this).style.transform = [01;31m[K`translate(${dX}px, ${dY}px)`[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/common/Splitter.tsx[m[K[36m[K-[m[K[32m[K75[m[K[36m[K-[m[K    }
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/CommandBar.tsx[m[K[36m[K-[m[K[32m[K159[m[K[36m[K-[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/CommandBar.tsx[m[K[36m[K:[m[K[32m[K160[m[K[36m[K:[m[K            fetchApi.post([01;31m[K`/commands/${cmd}`[m[K, {arguments: args})
[35m[K/tmp/mitmproxy/web/src/js/components/CommandBar.tsx[m[K[36m[K-[m[K[32m[K161[m[K[36m[K-[m[K                .then(response => response.json())
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/Modal/Option.jsx[m[K[36m[K-[m[K[32m[K123[m[K[36m[K-[m[K        if (!Opt)
[35m[K/tmp/mitmproxy/web/src/js/components/Modal/Option.jsx[m[K[36m[K:[m[K[32m[K124[m[K[36m[K:[m[K            throw [01;31m[K`unknown option type ${type}`[m[K
[35m[K/tmp/mitmproxy/web/src/js/components/Modal/Option.jsx[m[K[36m[K-[m[K[32m[K125[m[K[36m[K-[m[K    }
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/utils.ts[m[K[36m[K-[m[K[32m[K110[m[K[36m[K-[m[Kexport async function runCommand(command: string, ...args): Promise<any> {
[35m[K/tmp/mitmproxy/web/src/js/utils.ts[m[K[36m[K:[m[K[32m[K111[m[K[36m[K:[m[K    let response = await fetchApi([01;31m[K`/commands/${command}`[m[K, {
[35m[K/tmp/mitmproxy/web/src/js/utils.ts[m[K[36m[K-[m[K[32m[K112[m[K[36m[K-[m[K        method: 'POST', headers: {
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K-[m[K[32m[K162[m[K[36m[K-[m[Kexport function resume(flow: Flow) {
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K:[m[K[32m[K163[m[K[36m[K:[m[K    return dispatch => fetchApi([01;31m[K`/flows/${flow.id}/resume`[m[K, {method: 'POST'})
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K-[m[K[32m[K164[m[K[36m[K-[m[K}
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K-[m[K[32m[K170[m[K[36m[K-[m[Kexport function kill(flow: Flow) {
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K:[m[K[32m[K171[m[K[36m[K:[m[K    return dispatch => fetchApi([01;31m[K`/flows/${flow.id}/kill`[m[K, {method: 'POST'})
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K-[m[K[32m[K172[m[K[36m[K-[m[K}
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K-[m[K[32m[K179[m[K[36m[K-[m[Kexport function remove(flow: Flow) {
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K:[m[K[32m[K180[m[K[36m[K:[m[K    return dispatch => fetchApi([01;31m[K`/flows/${flow.id}`[m[K, {method: 'DELETE'})
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K-[m[K[32m[K181[m[K[36m[K-[m[K}
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K-[m[K[32m[K183[m[K[36m[K-[m[Kexport function duplicate(flow: Flow) {
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K:[m[K[32m[K184[m[K[36m[K:[m[K    return dispatch => fetchApi([01;31m[K`/flows/${flow.id}/duplicate`[m[K, {method: 'POST'})
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K-[m[K[32m[K185[m[K[36m[K-[m[K}
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K-[m[K[32m[K187[m[K[36m[K-[m[Kexport function replay(flow: Flow) {
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K:[m[K[32m[K188[m[K[36m[K:[m[K    return dispatch => fetchApi([01;31m[K`/flows/${flow.id}/replay`[m[K, {method: 'POST'})
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K-[m[K[32m[K189[m[K[36m[K-[m[K}
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K-[m[K[32m[K191[m[K[36m[K-[m[Kexport function revert(flow: Flow) {
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K:[m[K[32m[K192[m[K[36m[K:[m[K    return dispatch => fetchApi([01;31m[K`/flows/${flow.id}/revert`[m[K, {method: 'POST'})
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K-[m[K[32m[K193[m[K[36m[K-[m[K}
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K-[m[K[32m[K195[m[K[36m[K-[m[Kexport function update(flow: Flow, data) {
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K:[m[K[32m[K196[m[K[36m[K:[m[K    return dispatch => fetchApi.put([01;31m[K`/flows/${flow.id}`[m[K, data)
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K-[m[K[32m[K197[m[K[36m[K-[m[K}
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K-[m[K[32m[K202[m[K[36m[K-[m[K    body.append('file', file)
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K:[m[K[32m[K203[m[K[36m[K:[m[K    return dispatch => fetchApi([01;31m[K`/flows/${flow.id}/${type}/content.data`[m[K, {method: 'POST', body})
[35m[K/tmp/mitmproxy/web/src/js/ducks/flows.ts[m[K[36m[K-[m[K[32m[K204[m[K[36m[K-[m[K}
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/web/src/js/ducks/options.ts[m[K[36m[K-[m[K[32m[K69[m[K[36m[K-[m[K        } else {
[35m[K/tmp/mitmproxy/web/src/js/ducks/options.ts[m[K[36m[K:[m[K[32m[K70[m[K[36m[K:[m[K            intercept = [01;31m[K`${intercept} | ${example}`[m[K
[35m[K/tmp/mitmproxy/web/src/js/ducks/options.ts[m[K[36m[K-[m[K[32m[K71[m[K[36m[K-[m[K        }
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/docs/src/content/howto-install-system-trusted-ca-android.md[m[K[36m[K-[m[K[32m[K43[m[K[36m[K-[m[K- Enter your certificate folder: `cd ~/.mitmproxy/`
[35m[K/tmp/mitmproxy/docs/src/content/howto-install-system-trusted-ca-android.md[m[K[36m[K:[m[K[32m[K44[m[K[36m[K:[m[K- Generate hash and copy certificate : ``hashed_name=`openssl x509 -inform PEM -subject_hash_old -in mitmproxy-ca-cert.cer | head -1[01;31m[K` && cp mitmproxy-ca-cert.cer $hashed_name.0`[m[K`
[35m[K/tmp/mitmproxy/docs/src/content/howto-install-system-trusted-ca-android.md[m[K[36m[K-[m[K[32m[K45[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/docs/src/content/concepts-certificates.md[m[K[36m[K-[m[K[32m[K74[m[K[36m[K-[m[K- [Java](https://docs.oracle.com/cd/E19906-01/820-4916/geygn/index.html):  
[35m[K/tmp/mitmproxy/docs/src/content/concepts-certificates.md[m[K[36m[K:[m[K[32m[K75[m[K[36m[K:[m[K  [01;31m[K`sudo keytool -importcert -alias mitmproxy -storepass changeit -keystore $JAVA_HOME/lib/security/cacerts -trustcacerts -file ~/.mitmproxy/mitmproxy-ca-cert.pem`[m[K
[35m[K/tmp/mitmproxy/docs/src/content/concepts-certificates.md[m[K[36m[K-[m[K[32m[K76[m[K[36m[K-[m[K- [Android/Android Simulator](http://wiki.cacert.org/FAQ/ImportRootCert#Android_Phones_.26_Tablets)
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/docs/src/content/howto-transparent.md[m[K[36m[K-[m[K[32m[K128[m[K[36m[K-[m[K
[35m[K/tmp/mitmproxy/docs/src/content/howto-transparent.md[m[K[36m[K:[m[K[32m[K129[m[K[36m[K:[m[KThese rules tell pf to divert all traffic from [01;31m[K`$mitm_if`[m[K destined for port 80
[35m[K/tmp/mitmproxy/docs/src/content/howto-transparent.md[m[K[36m[K-[m[K[32m[K130[m[K[36m[K-[m[Kor 443 to the local mitmproxy instance running on port 8080. You should replace
[35m[K/tmp/mitmproxy/docs/src/content/howto-transparent.md[m[K[36m[K:[m[K[32m[K131[m[K[36m[K:[m[K[01;31m[K`$mitm_if`[m[K value with the interface on which your test device will appear.
[35m[K/tmp/mitmproxy/docs/src/content/howto-transparent.md[m[K[36m[K-[m[K[32m[K132[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_raw.py[m[K[36m[K-[m[K[32m[K5[m[K[36m[K-[m[Kdef test_view_raw():
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_raw.py[m[K[36m[K:[m[K[32m[K6[m[K[36m[K:[m[K    v = full_[01;31m[Keval(raw.ViewRaw()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_raw.py[m[K[36m[K-[m[K[32m[K7[m[K[36m[K-[m[K    assert v(b"foo")
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_css.py[m[K[36m[K-[m[K[32m[K29[m[K[36m[K-[m[Kdef test_simple():
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_css.py[m[K[36m[K:[m[K[32m[K30[m[K[36m[K:[m[K    v = full_[01;31m[Keval(css.ViewCSS()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_css.py[m[K[36m[K-[m[K[32m[K31[m[K[36m[K-[m[K    assert v(b"#foo{color:red}") == ('CSS', [
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_multipart.py[m[K[36m[K-[m[K[32m[K5[m[K[36m[K-[m[Kdef test_view_multipart():
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_multipart.py[m[K[36m[K:[m[K[32m[K6[m[K[36m[K:[m[K    view = full_[01;31m[Keval(multipart.ViewMultipart()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_multipart.py[m[K[36m[K-[m[K[32m[K7[m[K[36m[K-[m[K    v = b"""
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_protobuf.py[m[K[36m[K-[m[K[32m[K9[m[K[36m[K-[m[Kdef test_view_protobuf_request(tdata):
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_protobuf.py[m[K[36m[K:[m[K[32m[K10[m[K[36m[K:[m[K    v = full_[01;31m[Keval(protobuf.ViewProtobuf()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_protobuf.py[m[K[36m[K-[m[K[32m[K11[m[K[36m[K-[m[K    p = tdata.path(datadir + "protobuf01.bin")
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_wbxml.py[m[K[36m[K-[m[K[32m[K7[m[K[36m[K-[m[Kdef test_wbxml(tdata):
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_wbxml.py[m[K[36m[K:[m[K[32m[K8[m[K[36m[K:[m[K    v = full_[01;31m[Keval(wbxml.ViewWBXML()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_wbxml.py[m[K[36m[K-[m[K[32m[K9[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_graphql.py[m[K[36m[K-[m[K[32m[K32[m[K[36m[K-[m[Kdef test_view_graphql_doesnt_crash(data):
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_graphql.py[m[K[36m[K:[m[K[32m[K33[m[K[36m[K:[m[K    v = full_[01;31m[Keval(graphql.ViewGraphQL()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_graphql.py[m[K[36m[K-[m[K[32m[K34[m[K[36m[K-[m[K    v(data)
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_xml_html.py[m[K[36m[K-[m[K[32m[K9[m[K[36m[K-[m[Kdef test_simple(tdata):
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_xml_html.py[m[K[36m[K:[m[K[32m[K10[m[K[36m[K:[m[K    v = full_[01;31m[Keval(xml_html.ViewXmlHtml()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_xml_html.py[m[K[36m[K-[m[K[32m[K11[m[K[36m[K-[m[K    assert v(b"foo") == ('XML', [[('text', 'foo')]])
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_hex.py[m[K[36m[K-[m[K[32m[K5[m[K[36m[K-[m[Kdef test_view_hex():
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_hex.py[m[K[36m[K:[m[K[32m[K6[m[K[36m[K:[m[K    v = full_[01;31m[Keval(hex.ViewHex()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_hex.py[m[K[36m[K-[m[K[32m[K7[m[K[36m[K-[m[K    assert v(b"foo")
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/image/test_view.py[m[K[36m[K-[m[K[32m[K5[m[K[36m[K-[m[Kdef test_view_image(tdata):
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/image/test_view.py[m[K[36m[K:[m[K[32m[K6[m[K[36m[K:[m[K    v = full_[01;31m[Keval(image.ViewImage()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/image/test_view.py[m[K[36m[K-[m[K[32m[K7[m[K[36m[K-[m[K    for img in [
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_msgpack.py[m[K[36m[K-[m[K[32m[K34[m[K[36m[K-[m[Kdef test_view_msgpack():
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_msgpack.py[m[K[36m[K:[m[K[32m[K35[m[K[36m[K:[m[K    v = full_[01;31m[Keval(msgpack.ViewMsgPack()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_msgpack.py[m[K[36m[K-[m[K[32m[K36[m[K[36m[K-[m[K    assert v(msgpack_encode({}))
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_msgpack.py[m[K[36m[K-[m[K[32m[K44[m[K[36m[K-[m[Kdef test_view_msgpack_doesnt_crash(data):
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_msgpack.py[m[K[36m[K:[m[K[32m[K45[m[K[36m[K:[m[K    v = full_[01;31m[Keval(msgpack.ViewMsgPack()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_msgpack.py[m[K[36m[K-[m[K[32m[K46[m[K[36m[K-[m[K    v(data)
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K74[m[K[36m[K-[m[Kdef test_view_protobuf(tdata):
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K:[m[K[32m[K75[m[K[36m[K:[m[K    v = full_[01;31m[Keval(ViewGrpcProtobuf()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K76[m[K[36m[K-[m[K    p = tdata.path(datadir + "msg1.bin")
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K95[m[K[36m[K-[m[Kdef test_view_protobuf_custom_parsing_request(tdata):
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K:[m[K[32m[K96[m[K[36m[K:[m[K    v = full_[01;31m[Keval(ViewGrpcProtobuf(custom_view_config_parser_rules)[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K97[m[K[36m[K-[m[K    p = tdata.path(datadir + "msg1.bin")
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K120[m[K[36m[K-[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K:[m[K[32m[K121[m[K[36m[K:[m[K    v = full_[01;31m[Keval(ViewGrpcProtobuf(custom_view_config_parser_rules)[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K122[m[K[36m[K-[m[K    p = tdata.path(datadir + "msg3.bin")
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K188[m[K[36m[K-[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K:[m[K[32m[K189[m[K[36m[K:[m[K    v = full_[01;31m[Keval(ViewGrpcProtobuf(custom_view_config_parser_rules)[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K190[m[K[36m[K-[m[K    p = tdata.path(datadir + "msg3.bin")
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K252[m[K[36m[K-[m[Kdef test_view_protobuf_custom_config(tdata):
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K:[m[K[32m[K253[m[K[36m[K:[m[K    v = full_[01;31m[Keval(ViewGrpcProtobuf(custom_view_config)[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K254[m[K[36m[K-[m[K    p = tdata.path(datadir + "msg1.bin")
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K270[m[K[36m[K-[m[Kdef test_view_grpc(tdata):
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K:[m[K[32m[K271[m[K[36m[K:[m[K    v = full_[01;31m[Keval(ViewGrpcProtobuf()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K272[m[K[36m[K-[m[K    p = tdata.path(datadir + "msg1.bin")
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K298[m[K[36m[K-[m[Kdef test_view_grpc_compressed(tdata):
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K:[m[K[32m[K299[m[K[36m[K:[m[K    v = full_[01;31m[Keval(grpc.ViewGrpcProtobuf()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K300[m[K[36m[K-[m[K    p = tdata.path(datadir + "msg1.bin")
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K520[m[K[36m[K-[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K:[m[K[32m[K521[m[K[36m[K:[m[K    v = full_[01;31m[Keval(ViewGrpcProtobuf()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K522[m[K[36m[K-[m[K    view_text, output = v(msg1)
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K564[m[K[36m[K-[m[K    )
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K:[m[K[32m[K565[m[K[36m[K:[m[K    v = full_[01;31m[Keval(ViewGrpcProtobuf(view_config)[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K566[m[K[36m[K-[m[K    msg_inner2 = helper_gen_bits64_msg_field_packed(2, [12, 23, 456789012345678])
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K606[m[K[36m[K-[m[K    )
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K:[m[K[32m[K607[m[K[36m[K:[m[K    v = full_[01;31m[Keval(ViewGrpcProtobuf(view_config)[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K608[m[K[36m[K-[m[K    # provide the view a flow and response message dummies, to allow custom rules to work
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K646[m[K[36m[K-[m[K    )
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K:[m[K[32m[K647[m[K[36m[K:[m[K    v = full_[01;31m[Keval(ViewGrpcProtobuf(view_config)[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K648[m[K[36m[K-[m[K    # provide the view a flow and response message dummies, to allow custom rules to work
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K684[m[K[36m[K-[m[K    )
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K:[m[K[32m[K685[m[K[36m[K:[m[K    v = full_[01;31m[Keval(ViewGrpcProtobuf(view_config)[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K686[m[K[36m[K-[m[K    # provide the view a flow and response message dummies, to allow custom rules to work
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K716[m[K[36m[K-[m[K    )
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K:[m[K[32m[K717[m[K[36m[K:[m[K    v = full_[01;31m[Keval(ViewGrpcProtobuf(view_config)[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K718[m[K[36m[K-[m[K    # provide the view a flow and response message dummies, to allow custom rules to work
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K745[m[K[36m[K-[m[K    )
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K:[m[K[32m[K746[m[K[36m[K:[m[K    v = full_[01;31m[Keval(ViewGrpcProtobuf(view_config)[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K747[m[K[36m[K-[m[K    # provide the view a flow and response message dummies, to allow custom rules to work
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K774[m[K[36m[K-[m[K    )
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K:[m[K[32m[K775[m[K[36m[K:[m[K    v = full_[01;31m[Keval(ViewGrpcProtobuf(view_config)[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_grpc.py[m[K[36m[K-[m[K[32m[K776[m[K[36m[K-[m[K    # provide the view a flow and response message dummies, to allow custom rules to work
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_query.py[m[K[36m[K-[m[K[32m[K7[m[K[36m[K-[m[K    d = ""
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_query.py[m[K[36m[K:[m[K[32m[K8[m[K[36m[K:[m[K    v = full_[01;31m[Keval(query.ViewQuery()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_query.py[m[K[36m[K-[m[K[32m[K9[m[K[36m[K-[m[K    req = tutils.treq()
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_auto.py[m[K[36m[K-[m[K[32m[K6[m[K[36m[K-[m[Kdef test_view_auto():
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_auto.py[m[K[36m[K:[m[K[32m[K7[m[K[36m[K:[m[K    v = full_[01;31m[Keval(auto.ViewAuto()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_auto.py[m[K[36m[K-[m[K[32m[K8[m[K[36m[K-[m[K    f = v(
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_javascript.py[m[K[36m[K-[m[K[32m[K7[m[K[36m[K-[m[Kdef test_view_javascript():
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_javascript.py[m[K[36m[K:[m[K[32m[K8[m[K[36m[K:[m[K    v = full_[01;31m[Keval(javascript.ViewJavaScript()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_javascript.py[m[K[36m[K-[m[K[32m[K9[m[K[36m[K-[m[K    assert v(b"[1, 2, 3]")
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_json.py[m[K[36m[K-[m[K[32m[K30[m[K[36m[K-[m[Kdef test_view_json():
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_json.py[m[K[36m[K:[m[K[32m[K31[m[K[36m[K:[m[K    v = full_[01;31m[Keval(json.ViewJSON()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_json.py[m[K[36m[K-[m[K[32m[K32[m[K[36m[K-[m[K    assert v(b"null")
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_json.py[m[K[36m[K-[m[K[32m[K41[m[K[36m[K-[m[Kdef test_view_json_doesnt_crash(data):
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_json.py[m[K[36m[K:[m[K[32m[K42[m[K[36m[K:[m[K    v = full_[01;31m[Keval(json.ViewJSON()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_json.py[m[K[36m[K-[m[K[32m[K43[m[K[36m[K-[m[K    v(data)
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/__init__.py[m[K[36m[K:[m[K[32m[K1[m[K[36m[K:[m[Kdef full_[01;31m[Keval(instance)[m[K:
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/__init__.py[m[K[36m[K-[m[K[32m[K2[m[K[36m[K-[m[K    def call(data, **metadata):
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_urlencoded.py[m[K[36m[K-[m[K[32m[K6[m[K[36m[K-[m[Kdef test_view_urlencoded():
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_urlencoded.py[m[K[36m[K:[m[K[32m[K7[m[K[36m[K:[m[K    v = full_[01;31m[Keval(urlencoded.ViewURLEncoded()[m[K)
[35m[K/tmp/mitmproxy/test/mitmproxy/contentviews/test_urlencoded.py[m[K[36m[K-[m[K[32m[K8[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/proxy/tutils.py[m[K[36m[K-[m[K[32m[K188[m[K[36m[K-[m[K                    try:
[35m[K/tmp/mitmproxy/test/mitmproxy/proxy/tutils.py[m[K[36m[K:[m[K[32m[K189[m[K[36m[K:[m[K                        x = self.expected[i] = x.playbook_[01;31m[Keval(self)[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/proxy/tutils.py[m[K[36m[K-[m[K[32m[K190[m[K[36m[K-[m[K                    except Exception:
[36m[K##############################################[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/proxy/tutils.py[m[K[36m[K-[m[K[32m[K294[m[K[36m[K-[m[K
[35m[K/tmp/mitmproxy/test/mitmproxy/proxy/tutils.py[m[K[36m[K:[m[K[32m[K295[m[K[36m[K:[m[K    def playbook_[01;31m[Keval(self, playbook: Playbook)[m[K -> events.CommandCompleted:
[35m[K/tmp/mitmproxy/test/mitmproxy/proxy/tutils.py[m[K[36m[K-[m[K[32m[K296[m[K[36m[K-[m[K        if isinstance(self.to, int):
