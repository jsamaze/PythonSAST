===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/mako/doc/build/filtering.rst[m[K[36m[K-[m[K[32m[K219[m[K[36m[K-[m[Kcall a def using the normal expression syntax, i.e.
[35m[K/tmp/mako/doc/build/filtering.rst[m[K[36m[K:[m[K[32m[K220[m[K[36m[K:[m[K`[01;31m[K`${somedef()}`[m[K`, it may appear that the return value of the
[35m[K/tmp/mako/doc/build/filtering.rst[m[K[36m[K-[m[K[32m[K221[m[K[36m[K-[m[Kfunction is the content it produced, which is then delivered to
[36m[K##############################################[m[K
[35m[K/tmp/mako/doc/build/filtering.rst[m[K[36m[K-[m[K[32m[K223[m[K[36m[K-[m[Kexcept that normally, this is not the case; the return value of
[35m[K/tmp/mako/doc/build/filtering.rst[m[K[36m[K:[m[K[32m[K224[m[K[36m[K:[m[K`[01;31m[K`${somedef()}`[m[K` is simply the empty string ``''``. By the time
[35m[K/tmp/mako/doc/build/filtering.rst[m[K[36m[K-[m[K[32m[K225[m[K[36m[K-[m[Kyou receive this empty string, the output of ``somedef()`` has
[36m[K##############################################[m[K
[35m[K/tmp/mako/doc/build/inheritance.rst[m[K[36m[K-[m[K[32m[K166[m[K[36m[K-[m[K
[35m[K/tmp/mako/doc/build/inheritance.rst[m[K[36m[K:[m[K[32m[K167[m[K[36m[K:[m[KNote when we overrode ``header``, we added an extra call `[01;31m[K`${parent.header()}`[m[K` in order to invoke
[35m[K/tmp/mako/doc/build/inheritance.rst[m[K[36m[K-[m[K[32m[K168[m[K[36m[K-[m[Kthe parent's ``header`` block in addition to our own.  That's described in more detail below,
[36m[K##############################################[m[K
[35m[K/tmp/mako/test/test_ast.py[m[K[36m[K-[m[K[32m[K303[m[K[36m[K-[m[K        newcode = pyparser.ExpressionGenerator(astnode).value()
[35m[K/tmp/mako/test/test_ast.py[m[K[36m[K:[m[K[32m[K304[m[K[36m[K:[m[K        eq_([01;31m[Keval(code, local_dict)[m[K, [01;31m[Keval(newcode, local_dict)[m[K)
[35m[K/tmp/mako/test/test_ast.py[m[K[36m[K-[m[K[32m[K305[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/mako/test/test_ast.py[m[K[36m[K-[m[K[32m[K315[m[K[36m[K-[m[K        newcode = pyparser.ExpressionGenerator(astnode).value()
[35m[K/tmp/mako/test/test_ast.py[m[K[36m[K:[m[K[32m[K316[m[K[36m[K:[m[K        eq_([01;31m[Keval(code, local_dict)[m[K, [01;31m[Keval(newcode, local_dict)[m[K)
[35m[K/tmp/mako/test/test_ast.py[m[K[36m[K-[m[K[32m[K317[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/mako/test/test_ast.py[m[K[36m[K-[m[K[32m[K321[m[K[36m[K-[m[K        newcode = pyparser.ExpressionGenerator(astnode).value()
[35m[K/tmp/mako/test/test_ast.py[m[K[36m[K:[m[K[32m[K322[m[K[36m[K:[m[K        eq_([01;31m[Keval(code, local_dict)[m[K, [01;31m[Keval(newcode, local_dict)[m[K)
[35m[K/tmp/mako/test/test_ast.py[m[K[36m[K-[m[K[32m[K323[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/mako/test/test_ast.py[m[K[36m[K-[m[K[32m[K349[m[K[36m[K-[m[K            else:
[35m[K/tmp/mako/test/test_ast.py[m[K[36m[K:[m[K[32m[K350[m[K[36m[K:[m[K                eq_([01;31m[Keval(code, local_dict)[m[K, [01;31m[Keval(newcode, local_dict)[m[K)
