===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/kitty/kittens/ssh/main.py[m[K[36m[K-[m[K[32m[K492[m[K[36m[K-[m[K        es = standard_b64encode(sh_script.encode('utf-8')).decode('ascii')
[35m[K/tmp/kitty/kittens/ssh/main.py[m[K[36m[K:[m[K[32m[K493[m[K[36m[K:[m[K        unwrap_script = '''"import base64, sys; [01;31m[Keval(compile(base64.standard_b64decode(sys.argv[-1])[m[K, 'bootstrap.py', 'exec'))"'''
[35m[K/tmp/kitty/kittens/ssh/main.py[m[K[36m[K-[m[K[32m[K494[m[K[36m[K-[m[K    else:
[36m[K##############################################[m[K
[35m[K/tmp/kitty/docs/changelog.rst[m[K[36m[K-[m[K[32m[K280[m[K[36m[K-[m[K
[35m[K/tmp/kitty/docs/changelog.rst[m[K[36m[K:[m[K[32m[K281[m[K[36m[K:[m[K- Shell integration: Fix the default Bash :code:[01;31m[K`$HISTFILE`[m[K changing to :file:`~/.sh_history` instead of :file:`~/.bash_history` (:iss:`4765`)
[35m[K/tmp/kitty/docs/changelog.rst[m[K[36m[K-[m[K[32m[K282[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/kitty/docs/conf.rst[m[K[36m[K-[m[K[32m[K32[m[K[36m[K-[m[Klocation of the current config file. Note that environment variables are
[35m[K/tmp/kitty/docs/conf.rst[m[K[36m[K:[m[K[32m[K33[m[K[36m[K:[m[Kexpanded, so :code:[01;31m[K`${USER}.conf`[m[K becomes :file:`name.conf` if
[35m[K/tmp/kitty/docs/conf.rst[m[K[36m[K-[m[K[32m[K34[m[K[36m[K-[m[K:code:`USER=name`. Also, you can use :code:`globinclude` to include files
[36m[K##############################################[m[K
[35m[K/tmp/kitty/kitty/options/definition.py[m[K[36m[K-[m[K[32m[K2677[m[K[36m[K-[m[K:envvar:`VISUAL` and :envvar:`EDITOR` in that order. If these variables aren't
[35m[K/tmp/kitty/kitty/options/definition.py[m[K[36m[K:[m[K[32m[K2678[m[K[36m[K:[m[Kset, kitty will run your :opt:`shell` (:code:[01;31m[K`$SHELL -l -i -c env`[m[K) to see if
[35m[K/tmp/kitty/kitty/options/definition.py[m[K[36m[K-[m[K[32m[K2679[m[K[36m[K-[m[Kyour shell startup rc files set :envvar:`VISUAL` or :envvar:`EDITOR`. If that
[36m[K##############################################[m[K
[35m[K/tmp/kitty/kitty/options/definition.py[m[K[36m[K-[m[K[32m[K2763[m[K[36m[K-[m[Kon a TCP socket. This option accepts only UNIX sockets, such as
[35m[K/tmp/kitty/kitty/options/definition.py[m[K[36m[K:[m[K[32m[K2764[m[K[36m[K:[m[K:code:[01;31m[K`unix:${TEMP}/mykitty`[m[K or :code:`unix:@mykitty` (on Linux). Environment
[35m[K/tmp/kitty/kitty/options/definition.py[m[K[36m[K-[m[K[32m[K2765[m[K[36m[K-[m[Kvariables are expanded and relative paths are resolved with respect to the
[36m[K##############################################[m[K
[35m[K/tmp/kitty/kitty/options/definition.py[m[K[36m[K-[m[K[32m[K2928[m[K[36m[K-[m[K:code:`venv`
[35m[K/tmp/kitty/kitty/options/definition.py[m[K[36m[K:[m[K[32m[K2929[m[K[36m[K:[m[K    Source the file :file:[01;31m[K`$VIRTUAL_ENV/bin/activate`[m[K. This is used by the
[35m[K/tmp/kitty/kitty/options/definition.py[m[K[36m[K-[m[K[32m[K2930[m[K[36m[K-[m[K    Python stdlib venv module and allows cloning venvs automatically.
[35m[K/tmp/kitty/kitty/options/definition.py[m[K[36m[K-[m[K[32m[K2931[m[K[36m[K-[m[K:code:`conda`
[35m[K/tmp/kitty/kitty/options/definition.py[m[K[36m[K:[m[K[32m[K2932[m[K[36m[K:[m[K    Run :code:[01;31m[K`conda activate $CONDA_DEFAULT_ENV`[m[K. This supports the virtual
[35m[K/tmp/kitty/kitty/options/definition.py[m[K[36m[K-[m[K[32m[K2933[m[K[36m[K-[m[K    environments created by :program:`conda`.
[36m[K##############################################[m[K
[35m[K/tmp/kitty/kitty/cli.py[m[K[36m[K-[m[K[32m[K42[m[K[36m[K-[m[KIf this option is not specified, config files are searched for in the order:
[35m[K/tmp/kitty/kitty/cli.py[m[K[36m[K:[m[K[32m[K43[m[K[36m[K:[m[K:file:[01;31m[K`$XDG_CONFIG_HOME/{appname}/{conf_name}.conf`[m[K,
[35m[K/tmp/kitty/kitty/cli.py[m[K[36m[K-[m[K[32m[K44[m[K[36m[K-[m[K:file:`~/.config/{appname}/{conf_name}.conf`,{macos_confpath}
[35m[K/tmp/kitty/kitty/cli.py[m[K[36m[K:[m[K[32m[K45[m[K[36m[K:[m[K:file:[01;31m[K`$XDG_CONFIG_DIRS/{appname}/{conf_name}.conf`[m[K. The first one that exists
[35m[K/tmp/kitty/kitty/cli.py[m[K[36m[K-[m[K[32m[K46[m[K[36m[K-[m[Kis used as the config file.
[36m[K##############################################[m[K
[35m[K/tmp/kitty/kitty/cli.py[m[K[36m[K-[m[K[32m[K276[m[K[36m[K-[m[K                    elif k == 'condition':
[35m[K/tmp/kitty/kitty/cli.py[m[K[36m[K:[m[K[32m[K277[m[K[36m[K:[m[K                        current_cmd['condition'] = bool([01;31m[Keval(v)[m[K)
[35m[K/tmp/kitty/kitty/cli.py[m[K[36m[K-[m[K[32m[K278[m[K[36m[K-[m[K                    elif k == 'completion':
[36m[K##############################################[m[K
[35m[K/tmp/kitty/kitty/tab_bar.py[m[K[36m[K-[m[K[32m[K228[m[K[36m[K-[m[K    try:
[35m[K/tmp/kitty/kitty/tab_bar.py[m[K[36m[K:[m[K[32m[K229[m[K[36m[K:[m[K        title = [01;31m[Keval(compile_template(template)[m[K, {'__builtins__': safe_builtins}, eval_locals)
[35m[K/tmp/kitty/kitty/tab_bar.py[m[K[36m[K-[m[K[32m[K230[m[K[36m[K-[m[K    except Exception as e:
