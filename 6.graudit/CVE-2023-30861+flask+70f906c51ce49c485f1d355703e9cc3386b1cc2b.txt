===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/flask/src/flask/cli.py[m[K[36m[K-[m[K[32m[K140[m[K[36m[K-[m[K        try:
[35m[K/tmp/flask/src/flask/cli.py[m[K[36m[K:[m[K[32m[K141[m[K[36m[K:[m[K            args = [ast.literal_[01;31m[Keval(arg)[m[K for arg in expr.args]
[35m[K/tmp/flask/src/flask/cli.py[m[K[36m[K:[m[K[32m[K142[m[K[36m[K:[m[K            kwargs = {kw.arg: ast.literal_[01;31m[Keval(kw.value)[m[K for kw in expr.keywords}
[35m[K/tmp/flask/src/flask/cli.py[m[K[36m[K-[m[K[32m[K143[m[K[36m[K-[m[K        except ValueError:
[36m[K##############################################[m[K
[35m[K/tmp/flask/src/flask/cli.py[m[K[36m[K-[m[K[32m[K962[m[K[36m[K-[m[K        with open(startup) as f:
[35m[K/tmp/flask/src/flask/cli.py[m[K[36m[K:[m[K[32m[K963[m[K[36m[K:[m[K            [01;31m[Keval(compile(f.read()[m[K, startup, "exec"), ctx)
[35m[K/tmp/flask/src/flask/cli.py[m[K[36m[K-[m[K[32m[K964[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/flask/examples/celery/src/task_app/templates/index.html[m[K[36m[K-[m[K[32m[K50[m[K[36m[K-[m[K          const poll = () => {
[35m[K/tmp/flask/examples/celery/src/task_app/templates/index.html[m[K[36m[K:[m[K[32m[K51[m[K[36m[K:[m[K            fetch([01;31m[K`/tasks/result/${data["result_id"]}`[m[K)
[35m[K/tmp/flask/examples/celery/src/task_app/templates/index.html[m[K[36m[K-[m[K[32m[K52[m[K[36m[K-[m[K              .then(response => response.json())
[36m[K##############################################[m[K
[35m[K/tmp/flask/examples/celery/src/task_app/templates/index.html[m[K[36m[K-[m[K[32m[K96[m[K[36m[K-[m[K    } else if (!data["ready"]) {
[35m[K/tmp/flask/examples/celery/src/task_app/templates/index.html[m[K[36m[K:[m[K[32m[K97[m[K[36m[K:[m[K      el.innerText = [01;31m[K`${data["value"]["current"]} / ${data["value"]["total"]}`[m[K
[35m[K/tmp/flask/examples/celery/src/task_app/templates/index.html[m[K[36m[K-[m[K[32m[K98[m[K[36m[K-[m[K    } else if (!data["successful"]) {
[36m[K##############################################[m[K
[35m[K/tmp/flask/docs/patterns/javascript.rst[m[K[36m[K-[m[K[32m[K92[m[K[36m[K-[m[K    let user_id = ...  // do something to get a user id from the page
[35m[K/tmp/flask/docs/patterns/javascript.rst[m[K[36m[K:[m[K[32m[K93[m[K[36m[K:[m[K    let user_url = [01;31m[K`${SCRIPT_ROOT}/user/${user_id}`[m[K
[35m[K/tmp/flask/docs/patterns/javascript.rst[m[K[36m[K-[m[K[32m[K94[m[K[36m[K-[m[K    fetch(user_url).then(...)
[36m[K##############################################[m[K
[35m[K/tmp/flask/docs/config.rst[m[K[36m[K-[m[K[32m[K687[m[K[36m[K-[m[K
[35m[K/tmp/flask/docs/config.rst[m[K[36m[K:[m[K[32m[K688[m[K[36m[K:[m[K    `[01;31m[K`$PREFIX`[m[K` is the prefix of your Python installation.  This can be
[35m[K/tmp/flask/docs/config.rst[m[K[36m[K-[m[K[32m[K689[m[K[36m[K-[m[K    ``/usr`` or the path to your virtualenv.  You can print the value of
