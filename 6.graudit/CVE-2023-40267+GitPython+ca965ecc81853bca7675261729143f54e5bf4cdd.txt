===========================================================
                                      .___ __  __   
          _________________  __ __  __| _/|__|/  |_ 
         / ___\_` __ \__  \ |  |  \/ __ | | \\_  __\
        / /_/  >  | \// __ \|  |  / /_/ | |  ||  |  
        \___  /|__|  (____  /____/\____ | |__||__|  
       /_____/            \/           \/           
              grep rough audit - static analysis tool
                  v3.5 written by @Wireghoul
=================================[justanotherhacker.com]===
[35m[K/tmp/GitPython/doc/source/tutorial.rst[m[K[36m[K-[m[K[32m[K417[m[K[36m[K-[m[K
[35m[K/tmp/GitPython/doc/source/tutorial.rst[m[K[36m[K:[m[K[32m[K418[m[K[36m[K:[m[KAdditionally, GitPython adds functionality to track a specific branch, instead of just a commit. Supported by customized update methods, you are able to automatically update submodules to the latest revision available in the remote repository, as well as to keep track of changes and movements of these submodules. To use it, set the name of the branch you want to track to the `[01;31m[K`submodule.$name.branch`[m[K` option of the *.gitmodules*  file, and use GitPython update methods on the resulting repository with the ``to_latest_revision`` parameter turned on. In the latter case, the sha of your submodule will be ignored, instead a local tracking branch will be updated to the respective remote branch automatically, provided there are no local changes. The resulting behaviour is much like the one of svn::externals, which can be useful in times.
[35m[K/tmp/GitPython/doc/source/tutorial.rst[m[K[36m[K-[m[K[32m[K419[m[K[36m[K-[m[K
[36m[K##############################################[m[K
[35m[K/tmp/GitPython/test/fixtures/diff_mode_only[m[K[36m[K-[m[K[32m[K974[m[K[36m[K-[m[K     controller = controller_klass.build(request)
[35m[K/tmp/GitPython/test/fixtures/diff_mode_only[m[K[36m[K:[m[K[32m[K975[m[K[36m[K:[m[K     controller.instance_[01;31m[Keval(&blk)[m[K if block_given?
[35m[K/tmp/GitPython/test/fixtures/diff_mode_only[m[K[36m[K-[m[K[32m[K976[m[K[36m[K-[m[K     controller._dispatch(action)
[36m[K##############################################[m[K
[35m[K/tmp/GitPython/test/test_installation.py[m[K[36m[K-[m[K[32m[K55[m[K[36m[K-[m[K        syspath = result.stdout.decode("utf-8").splitlines()[0]
[35m[K/tmp/GitPython/test/test_installation.py[m[K[36m[K:[m[K[32m[K56[m[K[36m[K:[m[K        syspath = ast.literal_[01;31m[Keval(syspath)[m[K
[35m[K/tmp/GitPython/test/test_installation.py[m[K[36m[K-[m[K[32m[K57[m[K[36m[K-[m[K        self.assertEqual(
