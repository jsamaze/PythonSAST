                    
                    
┌──────────────────┐
│ 10 Code Findings │
└──────────────────┘
                             
  [36m[22m[24m  bin/lshell[0m
    ❯❱ [1mpython.lang.security.audit.eval-detected.eval-detected[0m
          Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this 
          content can be input from outside the program, this may be a code injection vulnerability. Ensure
          evaluated content is not definable by external sources.                                          
          Details: https://sg.run/ZvrD                                                                     
                                                                                                           
           34┆ args = sys.argv[1:] + eval(os.environ['LSHELL_ARGS'])
                                        
  [36m[22m[24m  lshell/checkconfig.py[0m
    ❯❱ [1mpython.lang.security.audit.eval-detected.eval-detected[0m
          Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this 
          content can be input from outside the program, this may be a code injection vulnerability. Ensure
          evaluated content is not definable by external sources.                                          
          Details: https://sg.run/ZvrD                                                                     
                                                                                                           
          171┆ logname = eval(self.conf['syslogname'])
            ⋮┆----------------------------------------
          220┆ logfilename = eval(self.conf['logfilename'])
            ⋮┆----------------------------------------
          338┆ for path in eval(stuff):
            ⋮┆----------------------------------------
          344┆ elif stuff and type(eval(stuff)) is list:
            ⋮┆----------------------------------------
          413┆ evaluated = eval(value)
            ⋮┆----------------------------------------
          521┆ self.conf['path'] = eval(self.conf_raw['path'])
            ⋮┆----------------------------------------
          564┆ self.conf['history_file'] = eval(
          565┆     self.conf_raw['history_file'].replace(
          566┆         "%u", self.conf['username']))
                                
  [36m[22m[24m  lshell/sec.py[0m
   ❯❯❱ [1mpython.lang.security.audit.subprocess-shell-true.subprocess-shell-true[0m
          Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will   
          spawn the command using a shell process. Doing so propagates current shell settings and variables,
          which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.  
          Details: https://sg.run/J92w                                                                      
                                                                                                            
           [32m▶▶┆ Autofix ▶ [0msubprocess.Popen("`which echo` %s" %                                    
              item,shell=False,stdin=subprocess.PIPE,stdout=subprocess.PIPE,stderr=subprocess.PIP
              E)                                                                                 
           93┆ p = subprocess.Popen("`which echo` %s" % item,
           94┆                      shell=True,
           95┆                      stdin=subprocess.PIPE,
           96┆                      stdout=subprocess.PIPE,
           97┆                      stderr=subprocess.PIPE)
                                  
  [36m[22m[24m  lshell/utils.py[0m
   ❯❯❱ [1mpython.lang.security.audit.subprocess-shell-true.subprocess-shell-true[0m
          Found 'subprocess' function 'Popen' with 'shell=True'. This is dangerous because this call will   
          spawn the command using a shell process. Doing so propagates current shell settings and variables,
          which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.  
          Details: https://sg.run/J92w                                                                      
                                                                                                            
           [32m▶▶┆ Autofix ▶ [0msubprocess.Popen([cmd], shell=False)
           92┆ proc = subprocess.Popen([cmd], shell=True)
