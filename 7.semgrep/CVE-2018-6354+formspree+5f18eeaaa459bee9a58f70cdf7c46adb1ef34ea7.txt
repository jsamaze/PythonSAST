                     
                     
┌───────────────────┐
│ 160 Code Findings │
└───────────────────┘
                                             
  [36m[22m[24m  formspree/forms/helpers.py[0m
     ❱ [1mpython.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http[0m
          Detected a request using 'http://'. This request will be unencrypted, and attackers could listen
          into traffic on the network and be able to obtain sensitive information. Use 'https://' instead.
          Details: https://sg.run/W8J4                                                                    
                                                                                                          
           92┆ res = requests.get(url, timeout=3, headers={
                                            
  [36m[22m[24m  formspree/forms/models.py[0m
    ❯❱ [1mpython.flask.security.unescaped-template-extension.unescaped-template-extension[0m
          Flask does not automatically escape Jinja templates unless they have .html, .htm, .xml, or .xhtml
          extensions. This could lead to XSS attacks. Use .html, .htm, .xml, or .xhtml for your template   
          extensions. See https://flask.palletsprojects.com/en/1.1.x/templating/#jinja-setup for more      
          information.                                                                                     
          Details: https://sg.run/x1Rg                                                                     
                                                                                                           
          200┆ text = render_template('email/form.txt', data=data, host=self.host, keys=keys, now=now)
            ⋮┆----------------------------------------
          214┆ text = render_template('email/overlimit-notification.txt', host=self.host)
            ⋮┆----------------------------------------
          290┆ return render_template('email/confirm.%s' % ext,
          291┆                        email=self.email,
          292┆                        host=self.host,
          293┆                        nonce_link=link,
          294┆                        keys=keys)
                                           
  [36m[22m[24m  formspree/forms/views.py[0m
    ❯❱ [1mpython.django.security.injection.raw-html-format.raw-html-format[0m
          Detected user input flowing into a manually constructed HTML string. You may be accidentally       
          bypassing secure methods of rendering HTML by manually constructing HTML and this could create a   
          cross-site scripting vulnerability, which could let attackers steal sensitive user data. To be sure
          this is safe, check that the HTML is rendered safely. Otherwise, use templates                     
          (`django.shortcuts.render`) which will safely render HTML instead.                                 
          Details: https://sg.run/oYj1                                                                       
                                                                                                             
           80┆ text='<p>Make sure you open this page through a web server, Formspree will not work in  
               pages browsed as HTML files. Also make sure that you\'re posting to                     
               <b>{host}{path}</b>.</p><p>For geeks: could not find the "Referrer" header.</p>'.format(
           81┆     host=settings.SERVICE_URL,
           82┆     path=request.path
           83┆ )
   
    ❯❱ [1mpython.flask.security.injection.raw-html-concat.raw-html-format[0m
          Detected user input flowing into a manually constructed HTML string. You may be accidentally       
          bypassing secure methods of rendering HTML by manually constructing HTML and this could create a   
          cross-site scripting vulnerability, which could let attackers steal sensitive user data. To be sure
          this is safe, check that the HTML is rendered safely. Otherwise, use templates                     
          (`flask.render_template`) which will safely render HTML instead.                                   
          Details: https://sg.run/Pb7e                                                                       
                                                                                                             
           80┆ text='<p>Make sure you open this page through a web server, Formspree will not work in  
               pages browsed as HTML files. Also make sure that you\'re posting to                     
               <b>{host}{path}</b>.</p><p>For geeks: could not find the "Referrer" header.</p>'.format(
           81┆     host=settings.SERVICE_URL,
           82┆     path=request.path
           83┆ )
   
    ❯❱ [1mpython.django.security.injection.raw-html-format.raw-html-format[0m
          Detected user input flowing into a manually constructed HTML string. You may be accidentally       
          bypassing secure methods of rendering HTML by manually constructing HTML and this could create a   
          cross-site scripting vulnerability, which could let attackers steal sensitive user data. To be sure
          this is safe, check that the HTML is rendered safely. Otherwise, use templates                     
          (`django.shortcuts.render`) which will safely render HTML instead.                                 
          Details: https://sg.run/oYj1                                                                       
                                                                                                             
          218┆ text=u'<p>Make sure you have placed the <a                                                 
               href="http://www.w3schools.com/tags/att_input_name.asp" target="_blank"><code>"name"</code>
               attribute</a> in all your form elements. Also, to prevent empty form submissions, take a   
               look at the <a href="http://www.w3schools.com/tags/att_input_required.asp"                 
               target="_blank"><code>"required"</code> property</a>.</p><p>This error also happens when   
               you have an <code>"enctype"</code> attribute set in your <code>&lt;form&gt;</code>, so make
               sure you don\'t.</p><p><a href="{}">Return to form</a></p>'.format(referrer)               
   
    ❯❱ [1mpython.flask.security.injection.raw-html-concat.raw-html-format[0m
          Detected user input flowing into a manually constructed HTML string. You may be accidentally       
          bypassing secure methods of rendering HTML by manually constructing HTML and this could create a   
          cross-site scripting vulnerability, which could let attackers steal sensitive user data. To be sure
          this is safe, check that the HTML is rendered safely. Otherwise, use templates                     
          (`flask.render_template`) which will safely render HTML instead.                                   
          Details: https://sg.run/Pb7e                                                                       
                                                                                                             
          218┆ text=u'<p>Make sure you have placed the <a                                                 
               href="http://www.w3schools.com/tags/att_input_name.asp" target="_blank"><code>"name"</code>
               attribute</a> in all your form elements. Also, to prevent empty form submissions, take a   
               look at the <a href="http://www.w3schools.com/tags/att_input_required.asp"                 
               target="_blank"><code>"required"</code> property</a>.</p><p>This error also happens when   
               you have an <code>"enctype"</code> attribute set in your <code>&lt;form&gt;</code>, so make
               sure you don\'t.</p><p><a href="{}">Return to form</a></p>'.format(referrer)               
   
    ❯❱ [1mpython.django.security.injection.raw-html-format.raw-html-format[0m
          Detected user input flowing into a manually constructed HTML string. You may be accidentally       
          bypassing secure methods of rendering HTML by manually constructing HTML and this could create a   
          cross-site scripting vulnerability, which could let attackers steal sensitive user data. To be sure
          this is safe, check that the HTML is rendered safely. Otherwise, use templates                     
          (`django.shortcuts.render`) which will safely render HTML instead.                                 
          Details: https://sg.run/oYj1                                                                       
                                                                                                             
          244┆ text=u'You entered <span class="code">{address}</span>. That is an invalid email address.  
               Please correct the form and try to submit again <a href="{back}">here</a>.<p style="font-  
               size: small">This could also be a problem with the form. For example, there could be two   
               fields with <span class="code">_replyto</span> or <span class="code">email</span> name     
               attribute. If you suspect the form is broken, please contact the form owner and ask them to
               investigate</p>'''.format(address=status['address'], back=status['referrer'])              
   
    ❯❱ [1mpython.flask.security.injection.raw-html-concat.raw-html-format[0m
          Detected user input flowing into a manually constructed HTML string. You may be accidentally       
          bypassing secure methods of rendering HTML by manually constructing HTML and this could create a   
          cross-site scripting vulnerability, which could let attackers steal sensitive user data. To be sure
          this is safe, check that the HTML is rendered safely. Otherwise, use templates                     
          (`flask.render_template`) which will safely render HTML instead.                                   
          Details: https://sg.run/Pb7e                                                                       
                                                                                                             
          244┆ text=u'You entered <span class="code">{address}</span>. That is an invalid email address.  
               Please correct the form and try to submit again <a href="{back}">here</a>.<p style="font-  
               size: small">This could also be a problem with the form. For example, there could be two   
               fields with <span class="code">_replyto</span> or <span class="code">email</span> name     
               attribute. If you suspect the form is broken, please contact the form owner and ask them to
               investigate</p>'''.format(address=status['address'], back=status['referrer'])              
   
    ❯❱ [1mpython.django.security.injection.raw-html-format.raw-html-format[0m
          Detected user input flowing into a manually constructed HTML string. You may be accidentally       
          bypassing secure methods of rendering HTML by manually constructing HTML and this could create a   
          cross-site scripting vulnerability, which could let attackers steal sensitive user data. To be sure
          this is safe, check that the HTML is rendered safely. Otherwise, use templates                     
          (`django.shortcuts.render`) which will safely render HTML instead.                                 
          Details: https://sg.run/oYj1                                                                       
                                                                                                             
          254┆ text=u'Unable to send email. If you can, please send the link to your form and the error
               information to  <b>{email}</b>. And send them the following:                            
               <p><pre><code>{message}</code></pre></p>'.format(message=json.dumps(status),            
               email=settings.CONTACT_EMAIL)                                                           
   
    ❯❱ [1mpython.flask.security.injection.raw-html-concat.raw-html-format[0m
          Detected user input flowing into a manually constructed HTML string. You may be accidentally       
          bypassing secure methods of rendering HTML by manually constructing HTML and this could create a   
          cross-site scripting vulnerability, which could let attackers steal sensitive user data. To be sure
          this is safe, check that the HTML is rendered safely. Otherwise, use templates                     
          (`flask.render_template`) which will safely render HTML instead.                                   
          Details: https://sg.run/Pb7e                                                                       
                                                                                                             
          254┆ text=u'Unable to send email. If you can, please send the link to your form and the error
               information to  <b>{email}</b>. And send them the following:                            
               <p><pre><code>{message}</code></pre></p>'.format(message=json.dumps(status),            
               email=settings.CONTACT_EMAIL)                                                           
   
    ❯❱ [1mpython.django.security.injection.tainted-url-host.tainted-url-host[0m
          User data flows into the host portion of this manually-constructed URL. This could allow an attacker
          to send data to their own server, potentially exposing sensitive data such as cookies or            
          authorization information sent with this request. They could also probe internal servers or other   
          resources that the server runnig this code can access. (This is called server-side request forgery, 
          or SSRF.) Do not allow arbitrary hosts. Instead, create an allowlist for approved hosts hardcode the
          correct host.                                                                                       
          Details: https://sg.run/oYz6                                                                        
                                                                                                              
          439┆ url = 'http://' + url if not url.startswith('http') else url
   
    ❯❱ [1mpython.flask.security.injection.tainted-url-host.tainted-url-host[0m
          User data flows into the host portion of this manually-constructed URL. This could allow an attacker
          to send data to their own server, potentially exposing sensitive data such as cookies or            
          authorization information sent with this request. They could also probe internal servers or other   
          resources that the server runnig this code can access. (This is called server-side request forgery, 
          or SSRF.) Do not allow arbitrary hosts. Instead, create an allowlist for approved hosts hardcode the
          correct host.                                                                                       
          Details: https://sg.run/RXpK                                                                        
                                                                                                              
          439┆ url = 'http://' + url if not url.startswith('http') else url
                                                
  [36m[22m[24m  formspree/static/js/bundle.js[0m
    ❯❱ [1mjavascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp[0m
          RegExp() called with a `separator` function argument, this might allow an attacker to cause a       
          Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main      
          thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on
          user-controlled input, consider performing input validation or use a regex checking/sanitization    
          library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear      
          vulnerable to ReDoS.                                                                                
          Details: https://sg.run/gr65                                                                        
                                                                                                              
          297┆ separator = new RegExp(separator.source, flags + "g"),
            ⋮┆----------------------------------------
          302┆ separator2 = new RegExp("^" + separator.source + "$(?!\\s)", flags);
                                                                    
  [36m[22m[24m  formspree/templates/email/90-percent-warning.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           41┆ We've made it easy to upgrade! Simply register using the link below with this email, and   
               we'll automatically upgrade all your forms. In addition to getting unlimited monthly       
               submissions, you get all the <a href="{{ url_for('index', _external=True) }}#features"     
               style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box;
               font-size: 14px; color: #348eda; text-decoration: underline; margin: 0;">{{                
               config.UPGRADED_PLAN_NAME }} features</a>, including invisible emails, sitewide forms, and 
               a submission archive.                                                                      
            ⋮┆----------------------------------------
           46┆ <a href="{{ url_for('register') }}" class="btn-primary" style="font-family: 'Helvetica 
               Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; color:   
               #359173; text-decoration: none; line-height: 2em; font-weight: 600; text-align: center;
               cursor: pointer; display: inline-block; text-transform: capitalize; margin: 0; padding:
               0.6em 0.9em; border: 2px solid #359173;">Unlock Gold</a>                               
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           46┆ <a href="{{ url_for('register') }}" class="btn-primary" style="font-family: 'Helvetica 
               Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; color:   
               #359173; text-decoration: none; line-height: 2em; font-weight: 600; text-align: center;
               cursor: pointer; display: inline-block; text-transform: capitalize; margin: 0; padding:
               0.6em 0.9em; border: 2px solid #359173;">Unlock Gold</a>                               
   
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           56┆ <td class="aligncenter content-block" style="font-family: 'Helvetica Neue', Helvetica,     
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; vertical-align: top; color:    
               #999; text-align: center; margin: 0; padding: 0 0 20px;" align="center" valign="top">You   
               are receiving this because you confirmed this email address on <a                          
               href="{{config.SERVICE_URL}}" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-
               serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration: underline;   
               margin: 0;">{{config.SERVICE_NAME}}</a>. If you don't remember doing that, or no longer    
               wish to receive these emails, please remove the form on {{host}} or send an email to <a    
               href="mailto:{{config.CONTACT_EMAIL}}" style="font-family: 'Helvetica Neue', Helvetica,    
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration:  
               underline; margin: 0;">{{config.CONTACT_EMAIL}}</a>.</td>                                  
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           56┆ <td class="aligncenter content-block" style="font-family: 'Helvetica Neue', Helvetica,     
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; vertical-align: top; color:    
               #999; text-align: center; margin: 0; padding: 0 0 20px;" align="center" valign="top">You   
               are receiving this because you confirmed this email address on <a                          
               href="{{config.SERVICE_URL}}" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-
               serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration: underline;   
               margin: 0;">{{config.SERVICE_NAME}}</a>. If you don't remember doing that, or no longer    
               wish to receive these emails, please remove the form on {{host}} or send an email to <a    
               href="mailto:{{config.CONTACT_EMAIL}}" style="font-family: 'Helvetica Neue', Helvetica,    
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration:  
               underline; margin: 0;">{{config.CONTACT_EMAIL}}</a>.</td>                                  
   
    ❯❱ [1mpython.flask.security.xss.audit.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a 
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)
          attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content
          Security Policy (CSP) header.                                                               
          Details: https://sg.run/Do7o                                                                
                                                                                                      
           56┆ <td class="aligncenter content-block" style="font-family: 'Helvetica Neue', Helvetica,     
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; vertical-align: top; color:    
               #999; text-align: center; margin: 0; padding: 0 0 20px;" align="center" valign="top">You   
               are receiving this because you confirmed this email address on <a                          
               href="{{config.SERVICE_URL}}" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-
               serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration: underline;   
               margin: 0;">{{config.SERVICE_NAME}}</a>. If you don't remember doing that, or no longer    
               wish to receive these emails, please remove the form on {{host}} or send an email to <a    
               href="mailto:{{config.CONTACT_EMAIL}}" style="font-family: 'Helvetica Neue', Helvetica,    
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration:  
               underline; margin: 0;">{{config.CONTACT_EMAIL}}</a>.</td>                                  
                                                                 
  [36m[22m[24m  formspree/templates/email/confirm-account.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           35┆ <a href="{{ link }}" class="btn-primary" style="font-family: 'Helvetica Neue', Helvetica,  
               Arial, sans-serif; box-sizing: border-box; font-size: 14px; color: #359173; text-          
               decoration: none; line-height: 2em; font-weight: 600; text-align: center; cursor: pointer; 
               display: inline-block; text-transform: capitalize; margin: 0; padding: 0.6em 0.9em; border:
               2px solid #359173;">Confirm account</a>                                                    
                                                         
  [36m[22m[24m  formspree/templates/email/confirm.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           35┆ <a href="{{nonce_link}}" class="btn-primary" style="font-family: 'Helvetica Neue',    
               Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; color: #359173;
               text-decoration: none; line-height: 2em; font-weight: 600; text-align: center; cursor:
               pointer; display: inline-block; text-transform: capitalize; margin: 0; padding: 0.6em 
               0.9em; border: 2px solid #359173;">Confirm form</a>                                   
                                                            
  [36m[22m[24m  formspree/templates/email/downgraded.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           32┆ We have successfully downgraded your subscription from {{ config.SERVICE_NAME }} {{       
               config.UPGRADED_PLAN_NAME }}. If you didn't mean for this to happen you can easily        
               resubscribe from your <a href="{{ url_for('account', _external=True) }}" style="font-     
               family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size:
               14px; color: #348eda; text-decoration: underline; margin: 0;">{{ config.SERVICE_NAME }}   
               dashboard</a>.                                                                            
            ⋮┆----------------------------------------
           37┆ Please note that your form will no longer have unlimited submissions and other <a href="{{
               url_for('index', _external=True) }}#features" style="font-family: 'Helvetica Neue',       
               Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; color: #348eda;    
               text-decoration: underline; margin: 0;">{{ config.UPGRADED_PLAN_NAME }} features</a>.     
                                                        
  [36m[22m[24m  formspree/templates/email/footer.html[0m
    ❯❱ [1mhtml.security.plaintext-http-link.plaintext-http-link[0m
          This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
          Details: https://sg.run/RA5q                                                        
                                                                                              
            3┆ <a href="http://facebook.com/formspree" style="font-family: 'Helvetica Neue', Helvetica,   
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration:  
               underline; margin: 0;"><img src="{{url_for('static', filename='img/social/fb.png',         
               _external=True)}}" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-
               sizing: border-box; font-size: 14px; max-width: 100%; margin: 0;" /></a>                   
            ⋮┆----------------------------------------
            4┆ <a href="http://twitter.com/formspree" style="font-family: 'Helvetica Neue', Helvetica,    
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration:  
               underline; margin: 0;"><img src="{{url_for('static', filename='img/social/twitter.png',    
               _external=True)}}" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-
               sizing: border-box; font-size: 14px; max-width: 100%; margin: 0;" />                       
            5┆ </a><a href="http://github.com/formspree/formspree" style="font-family: 'Helvetica Neue', 
               Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 12px; color: #999; text- 
               decoration: underline; margin: 0;"><img src="{{url_for('static',                          
               filename='img/social/github.png', _external=True)}}" style="font-family: 'Helvetica Neue',
               Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; max-width: 100%;   
               margin: 0;" />                                                                            
            ⋮┆----------------------------------------
            5┆     </a><a href="http://github.com/formspree/formspree" style="font-family: 'Helvetica    
               Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 12px; color: #999;
               text-decoration: underline; margin: 0;"><img src="{{url_for('static',                     
               filename='img/social/github.png', _external=True)}}" style="font-family: 'Helvetica Neue',
               Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; max-width: 100%;   
               margin: 0;" />                                                                            
            6┆ </a></td>
                                                      
  [36m[22m[24m  formspree/templates/email/form.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           63┆ <td class="aligncenter content-block" style="font-family: 'Helvetica Neue', Helvetica,     
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; vertical-align: top; color:    
               #999; text-align: center; margin: 0; padding: 0 0 20px;" align="center" valign="top">You   
               are receiving this because you confirmed this email address on <a                          
               href="{{config.SERVICE_URL}}" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-
               serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration: underline;   
               margin: 0;">{{config.SERVICE_NAME}}</a>. If you don't remember doing that, or no longer    
               wish to receive these emails, please remove the form on {{host}} or send an email to <a    
               href="mailto:{{config.CONTACT_EMAIL}}" style="font-family: 'Helvetica Neue', Helvetica,    
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration:  
               underline; margin: 0;">{{config.CONTACT_EMAIL}}</a>.</td>                                  
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           63┆ <td class="aligncenter content-block" style="font-family: 'Helvetica Neue', Helvetica,     
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; vertical-align: top; color:    
               #999; text-align: center; margin: 0; padding: 0 0 20px;" align="center" valign="top">You   
               are receiving this because you confirmed this email address on <a                          
               href="{{config.SERVICE_URL}}" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-
               serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration: underline;   
               margin: 0;">{{config.SERVICE_NAME}}</a>. If you don't remember doing that, or no longer    
               wish to receive these emails, please remove the form on {{host}} or send an email to <a    
               href="mailto:{{config.CONTACT_EMAIL}}" style="font-family: 'Helvetica Neue', Helvetica,    
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration:  
               underline; margin: 0;">{{config.CONTACT_EMAIL}}</a>.</td>                                  
   
    ❯❱ [1mpython.flask.security.xss.audit.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a 
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)
          attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content
          Security Policy (CSP) header.                                                               
          Details: https://sg.run/Do7o                                                                
                                                                                                      
           63┆ <td class="aligncenter content-block" style="font-family: 'Helvetica Neue', Helvetica,     
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; vertical-align: top; color:    
               #999; text-align: center; margin: 0; padding: 0 0 20px;" align="center" valign="top">You   
               are receiving this because you confirmed this email address on <a                          
               href="{{config.SERVICE_URL}}" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-
               serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration: underline;   
               margin: 0;">{{config.SERVICE_NAME}}</a>. If you don't remember doing that, or no longer    
               wish to receive these emails, please remove the form on {{host}} or send an email to <a    
               href="mailto:{{config.CONTACT_EMAIL}}" style="font-family: 'Helvetica Neue', Helvetica,    
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration:  
               underline; margin: 0;">{{config.CONTACT_EMAIL}}</a>.</td>                                  
                                                                        
  [36m[22m[24m  formspree/templates/email/overlimit-notification.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           45┆ <a href="{{ config.SERVICE_URL }}/register" class="btn-primary" style="font-family:     
               'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px;
               color: #359173; text-decoration: none; line-height: 2em; font-weight: 600; text-align:  
               center; cursor: pointer; display: inline-block; text-transform: capitalize; margin: 0;  
               padding: 0.6em 0.9em; border: 2px solid #359173;">Retrieve submissions</a>              
            ⋮┆----------------------------------------
           55┆ <td class="aligncenter content-block" style="font-family: 'Helvetica Neue', Helvetica,     
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; vertical-align: top; color:    
               #999; text-align: center; margin: 0; padding: 0 0 20px;" align="center" valign="top">You   
               are receiving this because you confirmed this email address on <a                          
               href="{{config.SERVICE_URL}}" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-
               serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration: underline;   
               margin: 0;">{{config.SERVICE_NAME}}</a>. If you don't remember doing that, or no longer    
               wish to receive these emails, please remove the form on {{host}} or send an email to <a    
               href="mailto:{{config.CONTACT_EMAIL}}" style="font-family: 'Helvetica Neue', Helvetica,    
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration:  
               underline; margin: 0;">{{config.CONTACT_EMAIL}}</a>.</td>                                  
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           55┆ <td class="aligncenter content-block" style="font-family: 'Helvetica Neue', Helvetica,     
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; vertical-align: top; color:    
               #999; text-align: center; margin: 0; padding: 0 0 20px;" align="center" valign="top">You   
               are receiving this because you confirmed this email address on <a                          
               href="{{config.SERVICE_URL}}" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-
               serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration: underline;   
               margin: 0;">{{config.SERVICE_NAME}}</a>. If you don't remember doing that, or no longer    
               wish to receive these emails, please remove the form on {{host}} or send an email to <a    
               href="mailto:{{config.CONTACT_EMAIL}}" style="font-family: 'Helvetica Neue', Helvetica,    
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration:  
               underline; margin: 0;">{{config.CONTACT_EMAIL}}</a>.</td>                                  
   
    ❯❱ [1mpython.flask.security.xss.audit.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a 
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)
          attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content
          Security Policy (CSP) header.                                                               
          Details: https://sg.run/Do7o                                                                
                                                                                                      
           55┆ <td class="aligncenter content-block" style="font-family: 'Helvetica Neue', Helvetica,     
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; vertical-align: top; color:    
               #999; text-align: center; margin: 0; padding: 0 0 20px;" align="center" valign="top">You   
               are receiving this because you confirmed this email address on <a                          
               href="{{config.SERVICE_URL}}" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-
               serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration: underline;   
               margin: 0;">{{config.SERVICE_NAME}}</a>. If you don't remember doing that, or no longer    
               wish to receive these emails, please remove the form on {{host}} or send an email to <a    
               href="mailto:{{config.CONTACT_EMAIL}}" style="font-family: 'Helvetica Neue', Helvetica,    
               Arial, sans-serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration:  
               underline; margin: 0;">{{config.CONTACT_EMAIL}}</a>.</td>                                  
                                                                
  [36m[22m[24m  formspree/templates/email/payment-failed.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           37┆ Please update your payment information as soon as possible by logging in to your <a   
               href="{{ url_for('account', _external=True) }}" style="font-family: 'Helvetica Neue', 
               Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; color: #348eda;
               text-decoration: underline; margin: 0;">{{ config.SERVICE_NAME }} dashboard</a>.      
                                                            
  [36m[22m[24m  formspree/templates/email/plain_form.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           24┆ <p>You are receiving this because you confirmed this email address on <a                   
               href="{{config.SERVICE_URL}}">{{config.SERVICE_NAME}}</a>. If you don't remember doing     
               that, or no longer wish to receive these emails, please remove the form on {{host}} or send
               an email to {{config.CONTACT_EMAIL}}.</p>                                                  
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           24┆ <p>You are receiving this because you confirmed this email address on <a                   
               href="{{config.SERVICE_URL}}">{{config.SERVICE_NAME}}</a>. If you don't remember doing     
               that, or no longer wish to receive these emails, please remove the form on {{host}} or send
               an email to {{config.CONTACT_EMAIL}}.</p>                                                  
   
    ❯❱ [1mpython.flask.security.xss.audit.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a 
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)
          attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content
          Security Policy (CSP) header.                                                               
          Details: https://sg.run/Do7o                                                                
                                                                                                      
           24┆ <p>You are receiving this because you confirmed this email address on <a                   
               href="{{config.SERVICE_URL}}">{{config.SERVICE_NAME}}</a>. If you don't remember doing     
               that, or no longer wish to receive these emails, please remove the form on {{host}} or send
               an email to {{config.CONTACT_EMAIL}}.</p>                                                  
                                                                                     
  [36m[22m[24m  formspree/templates/email/pre_inline_style/90-percent-warning.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           41┆ We've made it easy to upgrade! Simply register using the link below with this email, and  
               we'll automatically upgrade all your forms. In addition to getting unlimited monthly      
               submissions, you get all the <a href="{{ url_for('index', _external=True) }}#features">{{ 
               config.UPGRADED_PLAN_NAME }} features</a>, including invisible emails, sitewide forms, and
               a submission archive.                                                                     
            ⋮┆----------------------------------------
           46┆ <a href="{{ url_for('register') }}" class="btn-primary">Unlock Gold</a>
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           46┆ <a href="{{ url_for('register') }}" class="btn-primary">Unlock Gold</a>
   
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           56┆ <td class="aligncenter content-block">You are receiving this because you confirmed this    
               email address on <a href="{{config.SERVICE_URL}}">{{config.SERVICE_NAME}}</a>. If you don't
               remember doing that, or no longer wish to receive these emails, please remove the form on  
               {{host}} or send an email to <a                                                            
               href="mailto:{{config.CONTACT_EMAIL}}">{{config.CONTACT_EMAIL}}</a>.</td>                  
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           56┆ <td class="aligncenter content-block">You are receiving this because you confirmed this    
               email address on <a href="{{config.SERVICE_URL}}">{{config.SERVICE_NAME}}</a>. If you don't
               remember doing that, or no longer wish to receive these emails, please remove the form on  
               {{host}} or send an email to <a                                                            
               href="mailto:{{config.CONTACT_EMAIL}}">{{config.CONTACT_EMAIL}}</a>.</td>                  
   
    ❯❱ [1mpython.flask.security.xss.audit.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a 
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)
          attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content
          Security Policy (CSP) header.                                                               
          Details: https://sg.run/Do7o                                                                
                                                                                                      
           56┆ <td class="aligncenter content-block">You are receiving this because you confirmed this    
               email address on <a href="{{config.SERVICE_URL}}">{{config.SERVICE_NAME}}</a>. If you don't
               remember doing that, or no longer wish to receive these emails, please remove the form on  
               {{host}} or send an email to <a                                                            
               href="mailto:{{config.CONTACT_EMAIL}}">{{config.CONTACT_EMAIL}}</a>.</td>                  
                                                                                  
  [36m[22m[24m  formspree/templates/email/pre_inline_style/confirm-account.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           36┆ <a href="{{ link }}" class="btn-primary">Confirm account</a>
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           36┆ <a href="{{ link }}" class="btn-primary">Confirm account</a>
   
    ❯❱ [1mpython.flask.security.xss.audit.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a 
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)
          attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content
          Security Policy (CSP) header.                                                               
          Details: https://sg.run/Do7o                                                                
                                                                                                      
           36┆ <a href="{{ link }}" class="btn-primary">Confirm account</a>
                                                                          
  [36m[22m[24m  formspree/templates/email/pre_inline_style/confirm.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           36┆ <a href="{{nonce_link}}" class="btn-primary">Confirm form</a>
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           36┆ <a href="{{nonce_link}}" class="btn-primary">Confirm form</a>
   
    ❯❱ [1mpython.flask.security.xss.audit.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a 
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)
          attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content
          Security Policy (CSP) header.                                                               
          Details: https://sg.run/Do7o                                                                
                                                                                                      
           36┆ <a href="{{nonce_link}}" class="btn-primary">Confirm form</a>
                                                                             
  [36m[22m[24m  formspree/templates/email/pre_inline_style/downgraded.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           31┆ We have successfully downgraded your subscription from {{ config.SERVICE_NAME }} {{
               config.UPGRADED_PLAN_NAME }}. If you didn't mean for this to happen you can easily 
               resubscribe from your <a href="{{ url_for('account', _external=True) }}">{{        
               config.SERVICE_NAME }} dashboard</a>.                                              
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           31┆ We have successfully downgraded your subscription from {{ config.SERVICE_NAME }} {{
               config.UPGRADED_PLAN_NAME }}. If you didn't mean for this to happen you can easily 
               resubscribe from your <a href="{{ url_for('account', _external=True) }}">{{        
               config.SERVICE_NAME }} dashboard</a>.                                              
   
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           36┆ Please note that your form will no longer have unlimited submissions and other <a href="{{ 
               url_for('index', _external=True) }}#features">{{ config.UPGRADED_PLAN_NAME }} features</a>.
                                                                       
  [36m[22m[24m  formspree/templates/email/pre_inline_style/form.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           64┆ <td class="aligncenter content-block">You are receiving this because you confirmed this    
               email address on <a href="{{config.SERVICE_URL}}">{{config.SERVICE_NAME}}</a>. If you don't
               remember doing that, or no longer wish to receive these emails, please remove the form on  
               {{host}} or send an email to <a                                                            
               href="mailto:{{config.CONTACT_EMAIL}}">{{config.CONTACT_EMAIL}}</a>.</td>                  
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           64┆ <td class="aligncenter content-block">You are receiving this because you confirmed this    
               email address on <a href="{{config.SERVICE_URL}}">{{config.SERVICE_NAME}}</a>. If you don't
               remember doing that, or no longer wish to receive these emails, please remove the form on  
               {{host}} or send an email to <a                                                            
               href="mailto:{{config.CONTACT_EMAIL}}">{{config.CONTACT_EMAIL}}</a>.</td>                  
   
    ❯❱ [1mpython.flask.security.xss.audit.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a 
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)
          attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content
          Security Policy (CSP) header.                                                               
          Details: https://sg.run/Do7o                                                                
                                                                                                      
           64┆ <td class="aligncenter content-block">You are receiving this because you confirmed this    
               email address on <a href="{{config.SERVICE_URL}}">{{config.SERVICE_NAME}}</a>. If you don't
               remember doing that, or no longer wish to receive these emails, please remove the form on  
               {{host}} or send an email to <a                                                            
               href="mailto:{{config.CONTACT_EMAIL}}">{{config.CONTACT_EMAIL}}</a>.</td>                  
                                                                                         
  [36m[22m[24m  formspree/templates/email/pre_inline_style/overlimit-notification.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           46┆ <a href="{{ config.SERVICE_URL }}/register" class="btn-primary">Retrieve submissions</a>
            ⋮┆----------------------------------------
           56┆ <td class="aligncenter content-block">You are receiving this because you confirmed this    
               email address on <a href="{{config.SERVICE_URL}}">{{config.SERVICE_NAME}}</a>. If you don't
               remember doing that, or no longer wish to receive these emails, please remove the form on  
               {{host}} or send an email to <a                                                            
               href="mailto:{{config.CONTACT_EMAIL}}">{{config.CONTACT_EMAIL}}</a>.</td>                  
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           56┆ <td class="aligncenter content-block">You are receiving this because you confirmed this    
               email address on <a href="{{config.SERVICE_URL}}">{{config.SERVICE_NAME}}</a>. If you don't
               remember doing that, or no longer wish to receive these emails, please remove the form on  
               {{host}} or send an email to <a                                                            
               href="mailto:{{config.CONTACT_EMAIL}}">{{config.CONTACT_EMAIL}}</a>.</td>                  
   
    ❯❱ [1mpython.flask.security.xss.audit.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a 
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)
          attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content
          Security Policy (CSP) header.                                                               
          Details: https://sg.run/Do7o                                                                
                                                                                                      
           56┆ <td class="aligncenter content-block">You are receiving this because you confirmed this    
               email address on <a href="{{config.SERVICE_URL}}">{{config.SERVICE_NAME}}</a>. If you don't
               remember doing that, or no longer wish to receive these emails, please remove the form on  
               {{host}} or send an email to <a                                                            
               href="mailto:{{config.CONTACT_EMAIL}}">{{config.CONTACT_EMAIL}}</a>.</td>                  
                                                                                 
  [36m[22m[24m  formspree/templates/email/pre_inline_style/payment-failed.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           36┆ Please update your payment information as soon as possible by logging in to your <a     
               href="{{ url_for('account', _external=True) }}">{{ config.SERVICE_NAME }} dashboard</a>.
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           36┆ Please update your payment information as soon as possible by logging in to your <a     
               href="{{ url_for('account', _external=True) }}">{{ config.SERVICE_NAME }} dashboard</a>.
                                                                                 
  [36m[22m[24m  formspree/templates/email/pre_inline_style/reset-password.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           38┆ <a href="{{ link }}" class="btn-primary">Choose a new password</a>
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           38┆ <a href="{{ link }}" class="btn-primary">Choose a new password</a>
   
    ❯❱ [1mpython.flask.security.xss.audit.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a 
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)
          attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content
          Security Policy (CSP) header.                                                               
          Details: https://sg.run/Do7o                                                                
                                                                                                      
           38┆ <a href="{{ link }}" class="btn-primary">Choose a new password</a>
                                                                
  [36m[22m[24m  formspree/templates/email/reset-password.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           36┆ <a href="{{ link }}" class="btn-primary" style="font-family: 'Helvetica Neue', Helvetica,
               Arial, sans-serif; box-sizing: border-box; font-size: 14px; color: #FFF; text-decoration:
               none; line-height: 2em; font-weight: bold; text-align: center; cursor: pointer; display: 
               inline-block; border-radius: 5px; text-transform: capitalize; background-color: #348eda; 
               margin: 0; border-color: #348eda; border-style: solid; border-width: 10px 20px;">Choose a
               new password</a>                                                                         
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           36┆ <a href="{{ link }}" class="btn-primary" style="font-family: 'Helvetica Neue', Helvetica,
               Arial, sans-serif; box-sizing: border-box; font-size: 14px; color: #FFF; text-decoration:
               none; line-height: 2em; font-weight: bold; text-align: center; cursor: pointer; display: 
               inline-block; border-radius: 5px; text-transform: capitalize; background-color: #348eda; 
               margin: 0; border-color: #348eda; border-style: solid; border-width: 10px 20px;">Choose a
               new password</a>                                                                         
   
    ❯❱ [1mpython.flask.security.xss.audit.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a 
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)
          attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content
          Security Policy (CSP) header.                                                               
          Details: https://sg.run/Do7o                                                                
                                                                                                      
           36┆ <a href="{{ link }}" class="btn-primary" style="font-family: 'Helvetica Neue', Helvetica,
               Arial, sans-serif; box-sizing: border-box; font-size: 14px; color: #FFF; text-decoration:
               none; line-height: 2em; font-weight: bold; text-align: center; cursor: pointer; display: 
               inline-block; border-radius: 5px; text-transform: capitalize; background-color: #348eda; 
               margin: 0; border-color: #348eda; border-style: solid; border-width: 10px 20px;">Choose a
               new password</a>                                                                         
                                                         
  [36m[22m[24m  formspree/templates/forms/captcha.html[0m
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
           85┆ <form action="{{ action }}" method="POST" id="passthrough">
           86┆   <div id="recaptcha" style="text-align:center; display:inline-block"></div>
           87┆ </form>
   
    ❯❱ [1mhtml.security.audit.missing-integrity.missing-integrity[0m
          This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows
          for the browser to verify that externally hosted files (for example from a CDN) are delivered       
          without unexpected manipulation. Without this attribute, if an attacker can modify the externally   
          hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the    
          base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 
          'integrity' attribute for all externally hosted files.                                              
          Details: https://sg.run/krXA                                                                        
                                                                                                              
           95┆ <script src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit"
           96┆         async defer>
           97┆ </script>
                                                                   
  [36m[22m[24m  formspree/templates/forms/confirmation_sent.html[0m
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
           32┆ <form class="resend" style="display: none"
           33┆   action="{{ url_for('resend_confirmation', email=email) }}"
           34┆   method="POST"
           35┆ >
           36┆   <div id="recaptcha" style="text-align:center; display:inline-block"></div>
           37┆   <input type="hidden" name="host" value="{{ host }}">
           38┆ </form>
   
    ❯❱ [1mhtml.security.audit.missing-integrity.missing-integrity[0m
          This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows
          for the browser to verify that externally hosted files (for example from a CDN) are delivered       
          without unexpected manipulation. Without this attribute, if an attacker can modify the externally   
          hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the    
          base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 
          'integrity' attribute for all externally hosted files.                                              
          Details: https://sg.run/krXA                                                                        
                                                                                                              
           44┆ <script src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit"
               async defer></script>                                                                      
                                                        
  [36m[22m[24m  formspree/templates/forms/create.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           48┆ <h6 class="light">Please <a href="{{ url_for('account') }}">upgrade your account</a> in
               order to create forms from the dashboard and manage the forms currently associated with
               your emails.</h6>                                                                      
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           48┆ <h6 class="light">Please <a href="{{ url_for('account') }}">upgrade your account</a> in
               order to create forms from the dashboard and manage the forms currently associated with
               your emails.</h6>                                                                      
                                                           
  [36m[22m[24m  formspree/templates/forms/list-item.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           31┆ <a href="{{ url_for('form-submissions', hashid=form.hashid) }}" class="no-underline">
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           31┆ <a href="{{ url_for('form-submissions', hashid=form.hashid) }}" class="no-underline">
   
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
           39┆ <td data-label="Disable"><form method="POST" action="{{ url_for('form-toggle',       
               hashid=form.hashid) }}"><button class="no-border"><i class="fa fa-{% if form.disabled
               %}lock{% else %}unlock{% endif %} fa-fw"></i></button></form></td>                   
                                                      
  [36m[22m[24m  formspree/templates/forms/list.html[0m
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           32┆ href="{{ url_for('account') }}">verify your email</a>.</h6>
   
   ❯❯❱ [1mpython.django.security.audit.xss.var-in-script-tag.var-in-script-tag[0m
          Detected a template variable used in a script tag. Although template variables are HTML escaped,    
          HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in      
          JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion     
          (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one        
          available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and
          retrieving the data in your script by using the element ID (e.g., `document.getElementById`).       
          Details: https://sg.run/Ge7q                                                                        
                                                                                                              
           36┆ <script src="{{ url_for('static', filename='js/captcha-toggle.js') }}"></script>
   
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
           96┆ <form method="POST" action="{{ url_for('form-deletion', hashid=form.hashid) }}">
           97┆   <span class="cancel"><button type="button" onclick="return false;">Cancel</button></span>
           98┆   <button class="delete">Confirm deletion</button>
           99┆ </form>
                                                             
  [36m[22m[24m  formspree/templates/forms/submissions.html[0m
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
           50┆ <td><form method="POST" action="{{ url_for('submission-deletion', hashid=form.hashid,
               submissionid=s.id) }}"><button class="no-border"><i class="fa fa-trash-o             
               delete"></i></button></form></td>                                                    
   
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           62┆ <a href="{{ url_for('form-submissions', hashid=form.hashid, format='csv') }}"
               target="_blank" class="button export">Export&nbsp;as&nbsp;CSV</a>            
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           62┆ <a href="{{ url_for('form-submissions', hashid=form.hashid, format='csv') }}"
               target="_blank" class="button export">Export&nbsp;as&nbsp;CSV</a>            
   
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           63┆ <a href="{{ url_for('form-submissions', hashid=form.hashid, format='json') }}"
               target="_blank" class="button export">Export&nbsp;as&nbsp;JSON</a>            
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           63┆ <a href="{{ url_for('form-submissions', hashid=form.hashid, format='json') }}"
               target="_blank" class="button export">Export&nbsp;as&nbsp;JSON</a>            
                                                        
  [36m[22m[24m  formspree/templates/forms/thanks.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           15┆ <a href="{{ request.args.get('next') }}" class="button" style="margin-top: 1em;">Return to
               original site</a>                                                                         
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           15┆ <a href="{{ request.args.get('next') }}" class="button" style="margin-top: 1em;">Return to
               original site</a>                                                                         
   
    ❯❱ [1mpython.flask.security.xss.audit.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a 
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)
          attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content
          Security Policy (CSP) header.                                                               
          Details: https://sg.run/Do7o                                                                
                                                                                                      
           15┆ <a href="{{ request.args.get('next') }}" class="button" style="margin-top: 1em;">Return to
               original site</a>                                                                         
                                                               
  [36m[22m[24m  formspree/templates/forms/unblock_email.html[0m
    ❯❱ [1mgeneric.html-templates.security.var-in-script-tag.var-in-script-tag[0m
          Detected a template variable used in a script tag. Although template variables are HTML escaped,    
          HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in      
          JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion     
          (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one        
          available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and
          retrieving the data in your script by using the element ID (e.g., `document.getElementById`).       
          Details: https://sg.run/eLWE                                                                        
                                                                                                              
            7┆ 'sitekey' : {{ config.RECAPTCHA_KEY|tojson|safe }},
   
   ❯❯❱ [1mpython.django.security.audit.xss.var-in-script-tag.var-in-script-tag[0m
          Detected a template variable used in a script tag. Although template variables are HTML escaped,    
          HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in      
          JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion     
          (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one        
          available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and
          retrieving the data in your script by using the element ID (e.g., `document.getElementById`).       
          Details: https://sg.run/Ge7q                                                                        
                                                                                                              
            7┆ 'sitekey' : {{ config.RECAPTCHA_KEY|tojson|safe }},
   
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
           31┆ <form
           32┆   action="{{ url_for('unblock_email', email=email) }}"
           33┆   method="POST"
           34┆ >
           35┆   <div id="recaptcha" style="text-align:center; display:inline-block"></div>
           36┆ </form>
   
    ❯❱ [1mhtml.security.audit.missing-integrity.missing-integrity[0m
          This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows
          for the browser to verify that externally hosted files (for example from a CDN) are delivered       
          without unexpected manipulation. Without this attribute, if an attacker can modify the externally   
          hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the    
          base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 
          'integrity' attribute for all externally hosted files.                                              
          Details: https://sg.run/krXA                                                                        
                                                                                                              
           44┆ <script src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit"
               async defer></script>                                                                      
                                                        
  [36m[22m[24m  formspree/templates/layouts/base.html[0m
    ❯❱ [1mgeneric.html-templates.security.var-in-script-tag.var-in-script-tag[0m
          Detected a template variable used in a script tag. Although template variables are HTML escaped,    
          HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in      
          JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion     
          (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one        
          available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and
          retrieving the data in your script by using the element ID (e.g., `document.getElementById`).       
          Details: https://sg.run/eLWE                                                                        
                                                                                                              
           18┆ ga('create', '{{config.GA_KEY}}', 'auto');
   
   ❯❯❱ [1mpython.django.security.audit.xss.var-in-script-tag.var-in-script-tag[0m
          Detected a template variable used in a script tag. Although template variables are HTML escaped,    
          HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in      
          JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion     
          (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one        
          available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and
          retrieving the data in your script by using the element ID (e.g., `document.getElementById`).       
          Details: https://sg.run/Ge7q                                                                        
                                                                                                              
           18┆ ga('create', '{{config.GA_KEY}}', 'auto');
   
    ❯❱ [1mhtml.security.audit.missing-integrity.missing-integrity[0m
          This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows
          for the browser to verify that externally hosted files (for example from a CDN) are delivered       
          without unexpected manipulation. Without this attribute, if an attacker can modify the externally   
          hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the    
          base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 
          'integrity' attribute for all externally hosted files.                                              
          Details: https://sg.run/krXA                                                                        
                                                                                                              
           23┆ <script src="//use.typekit.net/{{config.TYPEKIT_KEY}}.js"></script>
   
   ❯❯❱ [1mpython.django.security.audit.xss.var-in-script-tag.var-in-script-tag[0m
          Detected a template variable used in a script tag. Although template variables are HTML escaped,    
          HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in      
          JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion     
          (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one        
          available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and
          retrieving the data in your script by using the element ID (e.g., `document.getElementById`).       
          Details: https://sg.run/Ge7q                                                                        
                                                                                                              
           23┆ <script src="//use.typekit.net/{{config.TYPEKIT_KEY}}.js"></script>
   
    ❯❱ [1mhtml.security.audit.missing-integrity.missing-integrity[0m
          This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows
          for the browser to verify that externally hosted files (for example from a CDN) are delivered       
          without unexpected manipulation. Without this attribute, if an attacker can modify the externally   
          hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the    
          base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 
          'integrity' attribute for all externally hosted files.                                              
          Details: https://sg.run/krXA                                                                        
                                                                                                              
           28┆ <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-
               awesome.min.css">                                                                        
   
   ❯❯❱ [1mpython.django.security.audit.xss.var-in-script-tag.var-in-script-tag[0m
          Detected a template variable used in a script tag. Although template variables are HTML escaped,    
          HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in      
          JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion     
          (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one        
          available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and
          retrieving the data in your script by using the element ID (e.g., `document.getElementById`).       
          Details: https://sg.run/Ge7q                                                                        
                                                                                                              
           29┆ <script src="{{ url_for('static', filename='js/vendor/jquery.min.js') }}"></script>
   
    ❯❱ [1mhtml.security.audit.missing-integrity.missing-integrity[0m
          This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows
          for the browser to verify that externally hosted files (for example from a CDN) are delivered       
          without unexpected manipulation. Without this attribute, if an attacker can modify the externally   
          hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the    
          base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 
          'integrity' attribute for all externally hosted files.                                              
          Details: https://sg.run/krXA                                                                        
                                                                                                              
           30┆ <script type="text/javascript" src="https://js.stripe.com/v3/"></script>
   
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           58┆ (<a href="{{ url_for('logout') }}">logout</a>)
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           58┆ (<a href="{{ url_for('logout') }}">logout</a>)
   
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           63┆ <span class="item"><a href="{{ url_for('forms') }}">Your forms</a></span>
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           63┆ <span class="item"><a href="{{ url_for('forms') }}">Your forms</a></span>
   
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           64┆ <span class="item"><a href="{{ url_for('account') }}">{% if current_user.upgraded %}Your{%
               else %}Upgrade{% endif %} account</a></span>                                              
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           64┆ <span class="item"><a href="{{ url_for('account') }}">{% if current_user.upgraded %}Your{%
               else %}Upgrade{% endif %} account</a></span>                                              
   
    ❯❱ [1mhtml.security.plaintext-http-link.plaintext-http-link[0m
          This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
          Details: https://sg.run/RA5q                                                        
                                                                                              
           68┆ <a href="http://testformspree.com/" target="_blank">Try Formspree!</a>
   
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           73┆ {% if request.path != '/login' %}<span class="item"><a href="{{ url_for('login') }}"
               class="login">{{ config.UPGRADED_PLAN_NAME }} account login</a></span>{% endif %}   
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           73┆ {% if request.path != '/login' %}<span class="item"><a href="{{ url_for('login') }}"
               class="login">{{ config.UPGRADED_PLAN_NAME }} account login</a></span>{% endif %}   
   
    ❯❱ [1mhtml.security.audit.missing-integrity.missing-integrity[0m
          This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows
          for the browser to verify that externally hosted files (for example from a CDN) are delivered       
          without unexpected manipulation. Without this attribute, if an attacker can modify the externally   
          hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the    
          base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 
          'integrity' attribute for all externally hosted files.                                              
          Details: https://sg.run/krXA                                                                        
                                                                                                              
           91┆ <script                                                                               
               src="//cdnjs.cloudflare.com/ajax/libs/SlickNav/1.0.3/jquery.slicknav.min.js"></script>
            ⋮┆----------------------------------------
           92┆ <script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/2.1.1/toastr.min.js"></script>
   
    ❯❱ [1mgeneric.html-templates.security.var-in-script-tag.var-in-script-tag[0m
          Detected a template variable used in a script tag. Although template variables are HTML escaped,    
          HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in      
          JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion     
          (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one        
          available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and
          retrieving the data in your script by using the element ID (e.g., `document.getElementById`).       
          Details: https://sg.run/eLWE                                                                        
                                                                                                              
           95┆ window.popupMessages = {{ get_flashed_messages(with_categories=True) | json | safe }}
   
   ❯❯❱ [1mpython.django.security.audit.xss.var-in-script-tag.var-in-script-tag[0m
          Detected a template variable used in a script tag. Although template variables are HTML escaped,    
          HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in      
          JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion     
          (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one        
          available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and
          retrieving the data in your script by using the element ID (e.g., `document.getElementById`).       
          Details: https://sg.run/Ge7q                                                                        
                                                                                                              
           95┆ window.popupMessages = {{ get_flashed_messages(with_categories=True) | json | safe }}
   
    ❯❱ [1mhtml.security.audit.missing-integrity.missing-integrity[0m
          This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows
          for the browser to verify that externally hosted files (for example from a CDN) are delivered       
          without unexpected manipulation. Without this attribute, if an attacker can modify the externally   
          hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the    
          base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 
          'integrity' attribute for all externally hosted files.                                              
          Details: https://sg.run/krXA                                                                        
                                                                                                              
           97┆ <script src="https://checkout.stripe.com/checkout.js"></script>
            ⋮┆----------------------------------------
           98┆ <script type="text/javascript" src="https://js.stripe.com/v2/"></script>
   
    ❯❱ [1mgeneric.html-templates.security.var-in-script-tag.var-in-script-tag[0m
          Detected a template variable used in a script tag. Although template variables are HTML escaped,    
          HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in      
          JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion     
          (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one        
          available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and
          retrieving the data in your script by using the element ID (e.g., `document.getElementById`).       
          Details: https://sg.run/eLWE                                                                        
                                                                                                              
          100┆ Stripe.setPublishableKey('{{config.STRIPE_PUBLISHABLE_KEY}}');
   
   ❯❯❱ [1mpython.django.security.audit.xss.var-in-script-tag.var-in-script-tag[0m
          Detected a template variable used in a script tag. Although template variables are HTML escaped,    
          HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in      
          JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion     
          (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one        
          available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and
          retrieving the data in your script by using the element ID (e.g., `document.getElementById`).       
          Details: https://sg.run/Ge7q                                                                        
                                                                                                              
          100┆ Stripe.setPublishableKey('{{config.STRIPE_PUBLISHABLE_KEY}}');
            ⋮┆----------------------------------------
          102┆ <script src="{{ url_for('static', filename='js/bundle.js') }}"></script>
                                                           
  [36m[22m[24m  formspree/templates/layouts/message.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
            7┆ <p class="footer">Powered by {{config.SERVICE_NAME}}. <a href="{{config.SERVICE_URL}}">Read
               more.</a></p>                                                                              
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
            7┆ <p class="footer">Powered by {{config.SERVICE_NAME}}. <a href="{{config.SERVICE_URL}}">Read
               more.</a></p>                                                                              
   
    ❯❱ [1mpython.flask.security.xss.audit.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a 
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)
          attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content
          Security Policy (CSP) header.                                                               
          Details: https://sg.run/Do7o                                                                
                                                                                                      
            7┆ <p class="footer">Powered by {{config.SERVICE_NAME}}. <a href="{{config.SERVICE_URL}}">Read
               more.</a></p>                                                                              
                                                            
  [36m[22m[24m  formspree/templates/layouts/progress.html[0m
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           35┆ <p class="footer">Part of the {{ config.SERVICE_NAME }} sign up process. <a href="{{
               config.SERVICE_URL }}">Read more</a>.</p>                                           
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           35┆ <p class="footer">Part of the {{ config.SERVICE_NAME }} sign up process. <a href="{{
               config.SERVICE_URL }}">Read more</a>.</p>                                           
   
    ❯❱ [1mpython.flask.security.xss.audit.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a 
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)
          attacks. Use 'url_for()' to safely generate a URL. You may also consider setting the Content
          Security Policy (CSP) header.                                                               
          Details: https://sg.run/Do7o                                                                
                                                                                                      
           35┆ <p class="footer">Part of the {{ config.SERVICE_NAME }} sign up process. <a href="{{
               config.SERVICE_URL }}">Read more</a>.</p>                                           
                                                              
  [36m[22m[24m  formspree/templates/static_pages/index.html[0m
    ❯❱ [1mhtml.security.plaintext-http-link.plaintext-http-link[0m
          This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
          Details: https://sg.run/RA5q                                                        
                                                                                              
           28┆ <a href="http://testformspree.com/" target="_blank">Test it out now with your email!</a>
   
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
          236┆ <h1 class="center"><a class="button emphasis" href="{{ url_for('account') }}">$
               9.99</a></h1>                                                                  
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
          236┆ <h1 class="center"><a class="button emphasis" href="{{ url_for('account') }}">$
               9.99</a></h1>                                                                  
   
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
          239┆ <a style="display: block" class="button center emphasis" href="{{ url_for('account')
               }}">Upgrade now</a>                                                                 
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
          239┆ <a style="display: block" class="button center emphasis" href="{{ url_for('account')
               }}">Upgrade now</a>                                                                 
   
    ❯❱ [1mhtml.security.plaintext-http-link.plaintext-http-link[0m
          This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
          Details: https://sg.run/RA5q                                                        
                                                                                              
          300┆ <p>If you have a problem, please look <a href="http://help.formspree.io/">here</a> first.
               To sign up for our newsletter, use the form on the right.</p>                            
            ⋮┆----------------------------------------
          301┆ <p>For a quick demo of Formspree, <a href="http://testformspree.com/" target="_blank">click
               here</a>.</p>                                                                              
   
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
          304┆ <form method="POST" action="{{config.API_ROOT}}/{{config.NEWSLETTER_EMAIL}}">
          305┆   <input type="text" name="name" placeholder="Your name" required />
          306┆   <input type="email" name="_replyto" placeholder="Your email" required />
          307┆   <input type="text" name="_gotcha" style="display:none">
          308┆   <input type="hidden" name="_format" value="plain" style="display:none">
          309┆   <button style="width: 100%" type="submit">Get Our Newsletter</button>
          310┆ </form>
                                                         
  [36m[22m[24m  formspree/templates/users/account.html[0m
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
           16┆ <form method="post" action="{{ url_for('add-account-email') }}">
           17┆   <td>
           18┆     <input name="address" placeholder="Add an email to your account">
           19┆   </td>
           20┆   <td style="width: 1px">
           21┆     <button type="submit" style="font-size: 0.76em; padding: 1em 0.9em">Verify</button>
           22┆   </td>
           23┆ </form>
            ⋮┆----------------------------------------
           50┆ <form action="/account/resubscribe" method="POST">
           51┆   <button type="submit">Resubscribe</button>
           52┆ </form>
            ⋮┆----------------------------------------
           55┆ <form action="/account/downgrade" method="POST">
           56┆   <button type="submit">Cancel subscription</button>
           57┆ </form>
            ⋮┆----------------------------------------
           78┆ <form action="{{ url_for('change-default-card', cardid=card.id) }}" method="POST">
           79┆   <button type="submit" style="margin-bottom: 18px;">Make Default</button>
           80┆ </form>
            ⋮┆----------------------------------------
           82┆ <form action="{{ url_for('delete-card', cardid=card.id) }}" method="POST">
           83┆     <button type="submit">Delete</button>
           84┆ </form>
                                                      
  [36m[22m[24m  formspree/templates/users/card.html[0m
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
            9┆ <form method="POST" action="{{ url_for('add-card') }}" id="payment-form">
           10┆     <div id="card-element" class="field"></div>
           11┆     <div class="col-1-1">
           12┆         <input type="submit" class="submit card" value="Add Card">
           13┆     </div>
           14┆ </form>
                                                           
  [36m[22m[24m  formspree/templates/users/dashboard.html[0m
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
           26┆ <form method="POST" action="{{config.API_ROOT}}/{{config.CONTACT_FORM_HASHID}}">
           27┆   <input type="email" name="_replyto" placeholder="Your email"
               value="{{current_user.email}}"                                
           28┆          required/>
           29┆   <textarea name="message" rows="5" placeholder="Your message" required></textarea>
           30┆   <input type="text" name="_gotcha" style="display:none">
           31┆   <input type="hidden" name="_format" value="plain" style="display:none">
           32┆   <button type="submit">Send</button>
           33┆ </form>
   
    ❯❱ [1mhtml.security.plaintext-http-link.plaintext-http-link[0m
          This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.
          Details: https://sg.run/RA5q                                                        
                                                                                              
           37┆ <p>If you have a problem, please look <a href="http://help.formspree.io/">here</a> first.
               To sign up for our newsletter, use the form on the right.</p>                            
            ⋮┆----------------------------------------
           38┆ <p>For a quick demo of Formspree, <a href="http://testformspree.com/" target="_blank">click
               here</a>.</p>                                                                              
   
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
           41┆ <form method="POST" action="{{config.API_ROOT}}/{{config.NEWSLETTER_EMAIL}}">
           42┆   <input type="text" name="name" placeholder="Your name" required />
           43┆   <input type="email" name="_replyto" placeholder="Your email" required />
           44┆   <input type="text" name="_gotcha" style="display:none">
           45┆   <input type="hidden" name="_format" value="plain" style="display:none">
           46┆   <button style="width: 100%" type="submit">Get Our Newsletter</button>
           47┆ </form>
                                                        
  [36m[22m[24m  formspree/templates/users/forgot.html[0m
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
           10┆ <form action="{{ url_for('forgot-password', next=request.args.get('next')) }}" method=post>
           11┆   <h2>Enter your registered email</h2>
           12┆   <input type="email" name="email" placeholder="me@email.com" required>
           13┆   <button type="submit">Done</button>
           14┆ </form>
                                                       
  [36m[22m[24m  formspree/templates/users/login.html[0m
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
           10┆ <form action="" method=post>
           11┆   <h2>Log in to {{ config.SERVICE_NAME }}</h2>
           12┆   <input type="email" id="email" name="email" placeholder="Enter Email" required>
           13┆   <input type="password" id="password" name="password" placeholder="Enter Password"
               required>                                                                          
           14┆   <button type="submit">Sign in</button>
           15┆ </form>
   
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           17┆ <p>Don't have an account? <a href="{{ url_for('register', next=request.args.get('next'))
               }}">Register</a>!</p>                                                                   
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           17┆ <p>Don't have an account? <a href="{{ url_for('register', next=request.args.get('next'))
               }}">Register</a>!</p>                                                                   
   
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           18┆ <p>Forgot your password? <a href="{{ url_for('forgot-password',
               next=request.args.get('next')) }}">Reset it</a>!</p>           
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           18┆ <p>Forgot your password? <a href="{{ url_for('forgot-password',
               next=request.args.get('next')) }}">Reset it</a>!</p>           
                                                          
  [36m[22m[24m  formspree/templates/users/register.html[0m
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
            4┆ <form action="" method=post>
            5┆   <h2>Sign up for {{ config.SERVICE_NAME }} </h2>
            6┆
            7┆   <input type="email" id="email" name="email" placeholder="Enter Email" value="{{
               request.form.email }}" required>                                                 
            8┆
            9┆   <input type="password" id="password" name="password" placeholder="Enter Password"
               value="{{ request.form.password }}" required>                                      
           10┆   <button type="submit" class="btn btn-success">Sign up</button>
           11┆ </form>
   
    ❯❱ [1mjavascript.express.security.audit.xss.mustache.var-in-href.var-in-href[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a       
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)      
          attacks. If using a relative URL, start with a literal forward slash and concatenate the URL, like
          this: href='/{{link}}'. You may also consider setting the Content Security Policy (CSP) header.   
          Details: https://sg.run/8yOq                                                                      
                                                                                                            
           13┆ <p>Already have an account? <a href="{{ url_for('login', next=request.args.get('next'))
               }}">Log in</a>.</p>                                                                    
   
    ❯❱ [1mpython.django.security.audit.xss.template-href-var.template-href-var[0m
          Detected a template variable used in an anchor tag with the 'href' attribute. This allows a    
          malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS)   
          attacks. Use the 'url' template tag to safely generate a URL. You may also consider setting the
          Content Security Policy (CSP) header.                                                          
          Details: https://sg.run/4x25                                                                   
                                                                                                         
           13┆ <p>Already have an account? <a href="{{ url_for('login', next=request.args.get('next'))
               }}">Log in</a>.</p>                                                                    
                                                       
  [36m[22m[24m  formspree/templates/users/reset.html[0m
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
           10┆ <form action="{{ url_for('reset-password', digest=digest, next=request.args.get('next'))
               }}" method=post>                                                                        
           11┆   <h2>Set a new password for {{ current_user.email }}</h2>
           12┆   <input type="password" name="password1" placeholder="Enter Password" required>
           13┆   <input type="password" name="password2" placeholder="Enter it again, to make sure you'll
               not forget" required>                                                                     
           14┆   <button type="submit">Done</button>
           15┆ </form>
                                            
  [36m[22m[24m  formspree/users/models.py[0m
    ❯❱ [1mpython.flask.security.unescaped-template-extension.unescaped-template-extension[0m
          Flask does not automatically escape Jinja templates unless they have .html, .htm, .xml, or .xhtml
          extensions. This could lead to XSS attacks. Use .html, .htm, .xml, or .xhtml for your template   
          extensions. See https://flask.palletsprojects.com/en/1.1.x/templating/#jinja-setup for more      
          information.                                                                                     
          Details: https://sg.run/x1Rg                                                                     
                                                                                                           
           75┆ text=render_template('email/reset-password.txt', addr=self.email, link=link),
            ⋮┆----------------------------------------
          130┆ text=render_template('email/confirm-account.txt', email=addr, link=link),
                                     
  [36m[22m[24m  formspree/utils.py[0m
    ❯❱ [1mpython.django.security.injection.tainted-url-host.tainted-url-host[0m
          User data flows into the host portion of this manually-constructed URL. This could allow an attacker
          to send data to their own server, potentially exposing sensitive data such as cookies or            
          authorization information sent with this request. They could also probe internal servers or other   
          resources that the server runnig this code can access. (This is called server-side request forgery, 
          or SSRF.) Do not allow arbitrary hosts. Instead, create an allowlist for approved hosts hardcode the
          correct host.                                                                                       
          Details: https://sg.run/oYz6                                                                        
                                                                                                              
           69┆ path = "https://" + url_parts[2] + path
   
    ❯❱ [1mpython.flask.security.injection.tainted-url-host.tainted-url-host[0m
          User data flows into the host portion of this manually-constructed URL. This could allow an attacker
          to send data to their own server, potentially exposing sensitive data such as cookies or            
          authorization information sent with this request. They could also probe internal servers or other   
          resources that the server runnig this code can access. (This is called server-side request forgery, 
          or SSRF.) Do not allow arbitrary hosts. Instead, create an allowlist for approved hosts hardcode the
          correct host.                                                                                       
          Details: https://sg.run/RXpK                                                                        
                                                                                                              
           69┆ path = "https://" + url_parts[2] + path
                                       
  [36m[22m[24m  web/test-heroku.html[0m
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
            2┆ <form action="https://formspree-test.herokuapp.com/test@formspree.io" method="POST">
            3┆ <input type="text" name="email" placeholder="email" />
            4┆ <input type="text" name="message" placeholder="message" />
            5┆ <input type="submit"/>
            6┆ </form>
                                
  [36m[22m[24m  web/test.html[0m
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
            2┆ <form action="http://localhost:5000/test@formspree.io" method="POST">
            3┆ <input type="text" name="email" placeholder="email" />
            4┆ <input type="text" name="message" placeholder="message" />
            5┆ <input type="hidden" name="_next" value="http://localhost:8000/thanks.html"/>
            6┆ <input type="submit"/>
            7┆ </form>
                                 
  [36m[22m[24m  web/test2.html[0m
    ❯❱ [1mpython.django.security.django-no-csrf-token.django-no-csrf-token[0m
          Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks
          Details: https://sg.run/N0Bp                                                                  
                                                                                                        
            2┆ <form action="http://localhost:5000/test@formspree.io" method="POST">
            3┆ <input type="text" name="email" placeholder="email" />
            4┆ <input type="text" name="message" placeholder="message" />
            5┆ <input type="hidden" name="_next" value="http://localhost:8000/thanks.html"/>
            6┆ <input type="submit"/>
            7┆ </form>
