                    
                    
┌──────────────────┐
│ 16 Code Findings │
└──────────────────┘
                                       
  [36m[22m[24m  demos/demo_server.py[0m
     ❱ [1mpython.lang.security.audit.network.bind.avoid-bind-to-all-interfaces[0m
          Running `socket.bind` to 0.0.0.0, or empty string could unexpectedly expose the server publicly as
          it binds to all available interfaces. Consider instead getting correct address from an environment
          variable or configuration file.                                                                   
          Details: https://sg.run/rdln                                                                      
                                                                                                            
          117┆ sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
          118┆ sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
          119┆ sock.bind(('', 2200))
                                     
  [36m[22m[24m  demos/test_rsa.key[0m
   ❯❯❱ [1mgeneric.secrets.security.detected-private-key.detected-private-key[0m
          Private Key detected. This is a sensitive credential and should not be hardcoded here. Instead,
          store this in a separate, private file.                                                        
          Details: https://sg.run/b7dr                                                                   
                                                                                                         
            1┆ -----BEGIN RSA PRIVATE KEY-----
            2┆ MIICWgIBAAKBgQDTj1bqB4WmayWNPB+8jVSYpZYk80Ujvj680pOTh2bORBjbIAyz
                                     
  [36m[22m[24m  demos/user_rsa_key[0m
   ❯❯❱ [1mgeneric.secrets.security.detected-private-key.detected-private-key[0m
          Private Key detected. This is a sensitive credential and should not be hardcoded here. Instead,
          store this in a separate, private file.                                                        
          Details: https://sg.run/b7dr                                                                   
                                                                                                         
            1┆ -----BEGIN RSA PRIVATE KEY-----
            2┆ MIICXQIBAAKBgQDI7iK3d8eWYZlYloat94c5VjtFY7c/0zuGl8C7uMnZ3t6i2G99
                                     
  [36m[22m[24m  paramiko/dsskey.py[0m
    ❯❱ [1mpython.cryptography.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1[0m
          Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is
          therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.                 
          Details: https://sg.run/J9Qy                                                                     
                                                                                                           
           [32m▶▶┆ Autofix ▶ [0mSHA256
          115┆ signer = key.signer(hashes.SHA1())
            ⋮┆----------------------------------------
           [32m▶▶┆ Autofix ▶ [0mSHA256
          155┆ verifier = key.verifier(signature, hashes.SHA1())
                                       
  [36m[22m[24m  paramiko/hostkeys.py[0m
    ❯❱ [1mpython.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1[0m
          Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is
          therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.                 
          Details: https://sg.run/ydYx                                                                     
                                                                                                           
           [32m▶▶┆ Autofix ▶ [0msha256()
          295┆ salt = os.urandom(sha1().digest_size)
            ⋮┆----------------------------------------
           [32m▶▶┆ Autofix ▶ [0msha256()
          300┆ assert len(salt) == sha1().digest_size
                                         
  [36m[22m[24m  paramiko/kex_group1.py[0m
    ❯❱ [1mpython.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1[0m
          Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is
          therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.                 
          Details: https://sg.run/ydYx                                                                     
                                                                                                           
           [32m▶▶┆ Autofix ▶ [0msha256(hm.asbytes())
          112┆ self.transport._set_K_H(K, sha1(hm.asbytes()).digest())
            ⋮┆----------------------------------------
           [32m▶▶┆ Autofix ▶ [0msha256(hm.asbytes())
          132┆ H = sha1(hm.asbytes()).digest()
                                      
  [36m[22m[24m  paramiko/kex_gss.py[0m
    ❯❱ [1mpython.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1[0m
          Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is
          therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.                 
          Details: https://sg.run/ydYx                                                                     
                                                                                                           
           [32m▶▶┆ Autofix ▶ [0msha256(str(hm))
          210┆ self.transport._set_K_H(K, sha1(str(hm)).digest())
            ⋮┆----------------------------------------
           [32m▶▶┆ Autofix ▶ [0msha256(hm.asbytes())
          244┆ H = sha1(hm.asbytes()).digest()
            ⋮┆----------------------------------------
           [32m▶▶┆ Autofix ▶ [0msha256(hm.asbytes())
          487┆ H = sha1(hm.asbytes()).digest()
            ⋮┆----------------------------------------
           [32m▶▶┆ Autofix ▶ [0msha256(hm.asbytes())
          580┆ H = sha1(hm.asbytes()).digest()
                                     
  [36m[22m[24m  paramiko/rsakey.py[0m
    ❯❱ [1mpython.cryptography.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1[0m
          Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is
          therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.                 
          Details: https://sg.run/J9Qy                                                                     
                                                                                                           
           [32m▶▶┆ Autofix ▶ [0mSHA256
          110┆ algorithm=hashes.SHA1(),
            ⋮┆----------------------------------------
           [32m▶▶┆ Autofix ▶ [0mSHA256
          130┆ algorithm=hashes.SHA1(),
                           
  [36m[22m[24m  setup.py[0m
    ❯❱ [1mpython.lang.security.audit.exec-detected.exec-detected[0m
          Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this 
          content can be input from outside the program, this may be a code injection vulnerability. Ensure
          evaluated content is not definable by external sources.                                          
          Details: https://sg.run/ndRX                                                                     
                                                                                                           
           44┆ exec(fp.read(), None, _locals)
