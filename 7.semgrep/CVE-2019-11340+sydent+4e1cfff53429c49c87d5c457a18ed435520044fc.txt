                   
                   
┌─────────────────┐
│ 4 Code Findings │
└─────────────────┘
                                        
  [36m[22m[24m  sydent/db/sqlitedb.py[0m
    ❯❱ [1mpython.lang.security.audit.formatted-sql-query.formatted-sql-query[0m
          Detected possible formatted SQL query. Use parameterized queries instead.
          Details: https://sg.run/EkWw                                             
                                                                                   
          146┆ res = cur.execute("PRAGMA user_version = %d" % (ver,));
   
   ❯❯❱ [1mpython.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query[0m
          Avoiding SQL string concatenation: untrusted input concatenated with raw SQL query can result in SQL
          Injection. In order to execute raw query safely, prepared statement should be used. SQLAlchemy      
          provides TextualSQL to easily used prepared statement with named parameters. For complex SQL        
          composition, use SQL Expression Language or Schema Definition Language. In most cases, SQLAlchemy   
          ORM will be a better option.                                                                        
          Details: https://sg.run/2b1L                                                                        
                                                                                                              
          146┆ res = cur.execute("PRAGMA user_version = %d" % (ver,));
                                          
  [36m[22m[24m  sydent/db/valsession.py[0m
   ❯❯❱ [1mpython.sqlalchemy.security.sqlalchemy-execute-raw-query.sqlalchemy-execute-raw-query[0m
          Avoiding SQL string concatenation: untrusted input concatenated with raw SQL query can result in SQL
          Injection. In order to execute raw query safely, prepared statement should be used. SQLAlchemy      
          provides TextualSQL to easily used prepared statement with named parameters. For complex SQL        
          composition, use SQL Expression Language or Schema Definition Language. In most cases, SQLAlchemy   
          ORM will be a better option.                                                                        
          Details: https://sg.run/2b1L                                                                        
                                                                                                              
           59┆ cur.execute("insert into threepid_validation_sessions ('medium', 'address', 'clientSecret',
               'mtime')" +                                                                                
           60┆     " values (?, ?, ?, ?)", (medium, address, clientSecret, mtime))
            ⋮┆----------------------------------------
           86┆ cur.execute("select id, medium, address, clientSecret, validated, mtime from "+
           87┆     "threepid_validation_sessions where id = ?", (sid,))
